{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tyler\\\\Downloads\\\\PrecisionTracker-v4-wired\\\\PrecisionTracker\\\\mobile\\\\App.js\";\nimport React, { useEffect, useState, createContext, useContext, useRef, useCallback, useMemo } from 'react';\nimport { NavigationContainer, useFocusEffect } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport * as ImagePicker from 'expo-image-picker';\nimport * as FileSystem from 'expo-file-system';\nimport * as SQLite from 'expo-sqlite';\nimport Svg, { Path } from 'react-native-svg';\nimport ViewShot from 'react-native-view-shot';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"react-native-web/dist/exports/View\";\nimport * as SecureStore from 'expo-secure-store';\nimport DateTimePicker, { DateTimePickerAndroid } from '@react-native-community/datetimepicker';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.EXPO_PUBLIC_API_URL || 'http://localhost:4000';\nfunction initOfflineTables(database) {\n  try {\n    if (!database || typeof database.transaction !== 'function') return;\n    database.transaction(tx => {\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS queue (id INTEGER PRIMARY KEY AUTOINCREMENT, type TEXT, payload TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS uploads (id INTEGER PRIMARY KEY AUTOINCREMENT, dataUrl TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS leads_cache (id INTEGER PRIMARY KEY, description TEXT, status TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS jobs_cache (id INTEGER PRIMARY KEY, name TEXT, status TEXT, startDate TEXT, endDate TEXT, notes TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS tasks_cache (id INTEGER PRIMARY KEY, jobId INTEGER, title TEXT, status TEXT, dueDate TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS calendar_cache (id INTEGER PRIMARY KEY, jobId INTEGER, title TEXT, startAt TEXT, endAt TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS estimates_cache (id INTEGER PRIMARY KEY, leadId INTEGER, subtotal REAL, taxRate REAL, total REAL, status TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS estimate_items_cache (id INTEGER PRIMARY KEY, estimateId INTEGER, description TEXT, qty REAL, unitPrice REAL);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS change_orders_cache (id INTEGER PRIMARY KEY, jobId INTEGER, title TEXT, amountDelta REAL, status TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS users_cache (id INTEGER PRIMARY KEY, email TEXT, fullName TEXT, role TEXT);');\n    });\n  } catch (e) {}\n}\nlet db;\nexport function getDb() {\n  if (db) return db;\n  if (Platform.OS === 'web') {\n    db = {\n      transaction: fn => fn({\n        executeSql: () => {}\n      }),\n      execAsync: async () => {},\n      runAsync: async () => {}\n    };\n    return db;\n  }\n  if ('openDatabaseSync' in SQLite) {\n    db = SQLite.openDatabaseSync('offline.db');\n    return db;\n  }\n  if ('openDatabaseAsync' in SQLite) {\n    db = {\n      transaction: fn => fn({\n        executeSql: () => {}\n      }),\n      execAsync: async () => {},\n      runAsync: async () => {}\n    };\n    return db;\n  }\n  db = {\n    transaction: fn => fn({\n      executeSql: () => {}\n    }),\n    execAsync: async () => {},\n    runAsync: async () => {}\n  };\n  return db;\n}\nconst dbHandle = getDb();\ninitOfflineTables(dbHandle);\nconst normalizeRole = role => {\n  if (!role) return 'TECH';\n  const r = String(role).toUpperCase();\n  if (['ADMIN', 'ESTIMATOR', 'SUPERVISOR', 'TECH'].includes(r)) return r;\n  if (r === 'STANDARD' || r === 'USER') return 'TECH';\n  return r;\n};\nconst AuthContext = createContext(null);\nfunction useAuth() {\n  return useContext(AuthContext);\n}\nasync function api(path, method = 'GET', body, token) {\n  const headers = Object.assign({}, token ? {\n    Authorization: `Bearer ${token}`\n  } : {}, body ? {\n    'Content-Type': 'application/json'\n  } : {});\n  let response;\n  try {\n    response = await fetch(`${API_URL}${path}`, {\n      method,\n      headers,\n      body: body ? JSON.stringify(body) : undefined\n    });\n  } catch (networkError) {\n    throw new Error(networkError?.message || 'Network request failed');\n  }\n  const contentType = response.headers.get('content-type') || '';\n  const rawBody = await response.text();\n  let data = null;\n  if (rawBody) {\n    if (contentType.includes('application/json')) {\n      try {\n        data = JSON.parse(rawBody);\n      } catch {\n        data = rawBody;\n      }\n    } else {\n      data = rawBody;\n    }\n  }\n  if (!response.ok) {\n    const message = data && typeof data === 'object' && (data.error || data.message) || (typeof data === 'string' ? data : 'Request failed');\n    throw new Error(message);\n  }\n  return data;\n}\nconst palette = {\n  background: '#f4f6f8',\n  surface: '#ffffff',\n  surfaceMuted: '#f1f5f9',\n  border: '#e2e8f0',\n  text: '#0f172a',\n  muted: '#5f6b7d',\n  primary: '#2c8a7d',\n  primaryStrong: '#1f6a60',\n  success: '#219653',\n  warning: '#f59e0b',\n  danger: '#d14343',\n  info: '#2563eb'\n};\nconst spacing = (step = 1) => step * 8;\nconst typography = {\n  h1: 24,\n  h2: 18,\n  body: 15,\n  small: 12\n};\nconst floatingShadow = Platform.select({\n  ios: {\n    shadowColor: '#0f172a',\n    shadowOpacity: 0.08,\n    shadowRadius: 14,\n    shadowOffset: {\n      width: 0,\n      height: 6\n    }\n  },\n  android: {\n    elevation: 2\n  },\n  default: {}\n});\nconst pillTone = {\n  NEW: {\n    fg: palette.info,\n    bg: '#e6eeff',\n    label: 'New'\n  },\n  CONTACTED: {\n    fg: palette.primary,\n    bg: '#e6f4f2',\n    label: 'Contacted'\n  },\n  ESTIMATING: {\n    fg: palette.warning,\n    bg: '#fdf1d6',\n    label: 'Estimating'\n  },\n  CONVERTED: {\n    fg: palette.success,\n    bg: '#e6f6ec',\n    label: 'Converted'\n  },\n  CLOSED_LOST: {\n    fg: palette.muted,\n    bg: '#e2e8f0',\n    label: 'Lost'\n  },\n  SCHEDULED: {\n    fg: palette.primary,\n    bg: '#e6f4f2',\n    label: 'Scheduled'\n  },\n  IN_PROGRESS: {\n    fg: palette.info,\n    bg: '#e6eeff',\n    label: 'In progress'\n  },\n  COMPLETE: {\n    fg: palette.success,\n    bg: '#e6f6ec',\n    label: 'Complete'\n  },\n  DONE: {\n    fg: palette.success,\n    bg: '#e6f6ec',\n    label: 'Complete'\n  },\n  ON_HOLD: {\n    fg: palette.warning,\n    bg: '#fdf1d6',\n    label: 'On hold'\n  },\n  CANCELLED: {\n    fg: palette.muted,\n    bg: '#e2e8f0',\n    label: 'Cancelled'\n  },\n  DRAFT: {\n    fg: palette.muted,\n    bg: '#e2e8f0',\n    label: 'Draft'\n  },\n  SENT: {\n    fg: palette.info,\n    bg: '#e6eeff',\n    label: 'Sent'\n  },\n  PART_PAID: {\n    fg: palette.warning,\n    bg: '#fdf1d6',\n    label: 'Part paid'\n  },\n  PAID: {\n    fg: palette.success,\n    bg: '#e6f6ec',\n    label: 'Paid'\n  },\n  VOID: {\n    fg: palette.muted,\n    bg: '#f1f5f9',\n    label: 'Void'\n  }\n};\nconst toneMap = {\n  primary: {\n    fg: palette.primaryStrong,\n    bg: '#e0f3f0'\n  },\n  success: {\n    fg: palette.success,\n    bg: '#e6f6ec'\n  },\n  warning: {\n    fg: palette.warning,\n    bg: '#fdf1d6'\n  },\n  danger: {\n    fg: palette.danger,\n    bg: '#fde4e4'\n  },\n  info: {\n    fg: palette.info,\n    bg: '#e6eeff'\n  }\n};\nconst formInputBaseStyle = {\n  borderWidth: 1,\n  borderColor: palette.border,\n  borderRadius: 12,\n  paddingVertical: spacing(1.5),\n  paddingHorizontal: spacing(2),\n  color: palette.text,\n  backgroundColor: palette.surfaceMuted,\n  fontSize: typography.body,\n  marginBottom: spacing(1.5)\n};\nconst FormInput = React.forwardRef((props, ref) => _jsxDEV(TextInput, Object.assign({\n  ref: ref,\n  placeholderTextColor: palette.muted\n}, props, {\n  style: [formInputBaseStyle, props.style]\n}), void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 216,\n  columnNumber: 3\n}, this));\nFormInput.displayName = 'FormInput';\nconst formatCurrency = value => {\n  const amount = Number(value || 0);\n  if (Number.isNaN(amount)) return '$0';\n  return `$${amount.toLocaleString(undefined, {\n    minimumFractionDigits: amount % 1 ? 2 : 0,\n    maximumFractionDigits: 2\n  })}`;\n};\nconst formatDate = value => {\n  if (!value) return null;\n  const d = new Date(value);\n  if (Number.isNaN(d.getTime())) return value;\n  return d.toLocaleDateString(undefined, {\n    month: 'short',\n    day: 'numeric'\n  });\n};\nconst isTaskCompleted = status => {\n  if (!status) return false;\n  const key = String(status).toUpperCase();\n  return key === 'DONE' || key === 'COMPLETE';\n};\nfunction SurfaceCard({\n  children,\n  style,\n  onPress\n}) {\n  const content = _jsxDEV(View, {\n    style: [{\n      backgroundColor: palette.surface,\n      borderRadius: 16,\n      borderWidth: 1,\n      borderColor: palette.border,\n      padding: spacing(2)\n    }, floatingShadow, style],\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 246,\n    columnNumber: 5\n  }, this);\n  if (!onPress) return content;\n  return _jsxDEV(TouchableOpacity, {\n    activeOpacity: 0.85,\n    onPress: onPress,\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 5\n  }, this);\n}\nfunction StatusPill({\n  status\n}) {\n  if (!status) return null;\n  const key = String(status).toUpperCase();\n  const cfg = pillTone[key] || {\n    fg: palette.muted,\n    bg: '#e2e8f0',\n    label: status\n  };\n  return _jsxDEV(View, {\n    style: {\n      backgroundColor: cfg.bg,\n      borderRadius: 999,\n      paddingHorizontal: spacing(1.5),\n      paddingVertical: spacing(0.5)\n    },\n    children: _jsxDEV(Text, {\n      style: {\n        color: cfg.fg,\n        fontSize: typography.small,\n        fontWeight: '600'\n      },\n      children: cfg.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 269,\n    columnNumber: 5\n  }, this);\n}\nfunction SummaryCard({\n  title,\n  value,\n  subtitle,\n  tone = 'primary',\n  onPress\n}) {\n  const colors = toneMap[tone] || toneMap.primary;\n  return _jsxDEV(SurfaceCard, {\n    onPress: onPress,\n    style: {\n      backgroundColor: colors.bg,\n      borderColor: 'transparent',\n      padding: spacing(2.5)\n    },\n    children: [_jsxDEV(Text, {\n      style: {\n        color: palette.muted,\n        fontSize: typography.small,\n        textTransform: 'uppercase',\n        fontWeight: '700'\n      },\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this), _jsxDEV(Text, {\n      style: {\n        color: colors.fg,\n        fontSize: 28,\n        fontWeight: '800',\n        marginTop: spacing(0.5)\n      },\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), subtitle ? _jsxDEV(Text, {\n      style: {\n        color: palette.muted,\n        fontSize: typography.small,\n        marginTop: spacing(0.5)\n      },\n      children: subtitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 19\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 278,\n    columnNumber: 5\n  }, this);\n}\nfunction StatusCard({\n  label,\n  value,\n  description,\n  tone = 'primary'\n}) {\n  const colors = toneMap[tone] || toneMap.primary;\n  return _jsxDEV(SurfaceCard, {\n    style: {\n      backgroundColor: colors.bg,\n      borderColor: colors.fg,\n      borderWidth: 1,\n      paddingVertical: spacing(2),\n      paddingHorizontal: spacing(2.5),\n      flexGrow: 1,\n      flexBasis: '48%'\n    },\n    children: [_jsxDEV(Text, {\n      style: {\n        color: colors.fg,\n        fontSize: typography.small,\n        fontWeight: '700',\n        textTransform: 'uppercase'\n      },\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this), _jsxDEV(Text, {\n      style: {\n        color: palette.text,\n        fontSize: 24,\n        fontWeight: '700',\n        marginTop: spacing(0.5)\n      },\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this), description ? _jsxDEV(Text, {\n      style: {\n        color: palette.muted,\n        fontSize: typography.small,\n        marginTop: spacing(0.5)\n      },\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 22\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 292,\n    columnNumber: 5\n  }, this);\n}\nfunction TagInput({\n  value = [],\n  onChange,\n  placeholder = 'Add tag'\n}) {\n  const [draft, setDraft] = useState('');\n  const tags = useMemo(() => {\n    if (!Array.isArray(value)) return [];\n    return value.filter(Boolean).map(tag => String(tag));\n  }, [value]);\n  const cleanTag = useCallback(input => {\n    if (!input) return null;\n    const cleaned = String(input).replace(/[#]/g, '').trim();\n    if (!cleaned) return null;\n    return cleaned.replace(/\\s+/g, ' ');\n  }, []);\n  const handleChangeText = useCallback(text => {\n    if (text.includes(',')) {\n      const segments = text.split(',');\n      const pending = segments.pop() ?? '';\n      const nextTags = [...tags];\n      segments.forEach(segment => {\n        const cleaned = cleanTag(segment);\n        if (!cleaned) return;\n        const exists = nextTags.some(existing => existing.toLowerCase() === cleaned.toLowerCase());\n        if (!exists) nextTags.push(cleaned);\n      });\n      if (nextTags.length !== tags.length) {\n        onChange && onChange(nextTags);\n      }\n      setDraft(pending);\n    } else {\n      setDraft(text);\n    }\n  }, [tags, cleanTag, onChange]);\n  const handleAdd = useCallback(() => {\n    const cleaned = cleanTag(draft);\n    if (!cleaned) {\n      setDraft('');\n      return;\n    }\n    const exists = tags.some(existing => existing.toLowerCase() === cleaned.toLowerCase());\n    if (exists) {\n      setDraft('');\n      return;\n    }\n    onChange && onChange([...tags, cleaned]);\n    setDraft('');\n  }, [draft, tags, cleanTag, onChange]);\n  const handleSubmit = useCallback(() => {\n    handleAdd();\n  }, [handleAdd]);\n  const handleRemove = useCallback(tag => {\n    const next = tags.filter(entry => entry !== tag);\n    onChange && onChange(next);\n  }, [tags, onChange]);\n  return _jsxDEV(View, {\n    children: [tags.length ? _jsxDEV(View, {\n      style: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        columnGap: spacing(1),\n        rowGap: spacing(1),\n        marginBottom: spacing(1)\n      },\n      children: tags.map(tag => _jsxDEV(TouchableOpacity, {\n        onPress: () => handleRemove(tag),\n        activeOpacity: 0.8,\n        style: {\n          flexDirection: 'row',\n          alignItems: 'center',\n          backgroundColor: '#d9f2ed',\n          borderRadius: 999,\n          paddingHorizontal: spacing(1.5),\n          paddingVertical: spacing(0.5)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.primaryStrong,\n            fontWeight: '600',\n            fontSize: typography.small\n          },\n          children: `#${tag}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 15\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.primaryStrong,\n            marginLeft: spacing(0.5),\n            fontSize: typography.small\n          },\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 15\n        }, this)]\n      }, tag, true, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 9\n    }, this) : null, _jsxDEV(View, {\n      style: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        columnGap: spacing(1)\n      },\n      children: [_jsxDEV(TextInput, {\n        value: draft,\n        onChangeText: handleChangeText,\n        onSubmitEditing: handleSubmit,\n        placeholder: placeholder,\n        placeholderTextColor: palette.muted,\n        style: [formInputBaseStyle, {\n          flex: 1,\n          marginBottom: 0\n        }],\n        autoCapitalize: \"none\",\n        autoCorrect: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this), _jsxDEV(QuickAction, {\n        label: \"Add\",\n        onPress: handleAdd,\n        tone: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 363,\n    columnNumber: 5\n  }, this);\n}\nfunction SectionHeader({\n  title,\n  actionLabel,\n  onAction\n}) {\n  return _jsxDEV(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      marginBottom: spacing(1.5)\n    },\n    children: [_jsxDEV(Text, {\n      style: {\n        color: palette.text,\n        fontSize: typography.h2,\n        fontWeight: '700'\n      },\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 7\n    }, this), actionLabel && onAction ? _jsxDEV(TouchableOpacity, {\n      onPress: onAction,\n      style: {\n        paddingHorizontal: spacing(1),\n        paddingVertical: spacing(0.5)\n      },\n      children: _jsxDEV(Text, {\n        style: {\n          color: palette.primary,\n          fontWeight: '600',\n          fontSize: typography.small\n        },\n        children: actionLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 405,\n    columnNumber: 5\n  }, this);\n}\nfunction QuickAction({\n  label,\n  onPress,\n  tone = 'primary'\n}) {\n  const toneStyles = (() => {\n    switch (tone) {\n      case 'danger':\n        return {\n          borderColor: '#fecdd3',\n          backgroundColor: '#fee2e2',\n          textColor: palette.danger\n        };\n      case 'success':\n        return {\n          borderColor: '#bbf7d0',\n          backgroundColor: '#dcfce7',\n          textColor: palette.success\n        };\n      case 'warning':\n        return {\n          borderColor: '#fde68a',\n          backgroundColor: '#fef3c7',\n          textColor: palette.warning\n        };\n      case 'muted':\n        return {\n          borderColor: palette.border,\n          backgroundColor: palette.surface,\n          textColor: palette.muted\n        };\n      default:\n        return {\n          borderColor: palette.border,\n          backgroundColor: palette.surfaceMuted,\n          textColor: palette.primary\n        };\n    }\n  })();\n  return _jsxDEV(TouchableOpacity, {\n    onPress: onPress,\n    activeOpacity: 0.85,\n    style: {\n      borderRadius: 10,\n      paddingHorizontal: spacing(1.5),\n      paddingVertical: spacing(0.75),\n      borderWidth: 1,\n      borderColor: toneStyles.borderColor,\n      backgroundColor: toneStyles.backgroundColor\n    },\n    children: _jsxDEV(Text, {\n      style: {\n        color: toneStyles.textColor,\n        fontWeight: '600',\n        fontSize: typography.small\n      },\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 432,\n    columnNumber: 5\n  }, this);\n}\nconst toInputDate = dateValue => {\n  const d = dateValue instanceof Date ? dateValue : new Date(dateValue);\n  if (Number.isNaN(d.getTime())) return '';\n  const yyyy = d.getFullYear();\n  const mm = String(d.getMonth() + 1).padStart(2, '0');\n  const dd = String(d.getDate()).padStart(2, '0');\n  return `${yyyy}-${mm}-${dd}`;\n};\nconst parseInputDate = value => {\n  if (!value) return null;\n  const parsed = new Date(value);\n  if (Number.isNaN(parsed.getTime())) return null;\n  return parsed;\n};\nconst deriveLeadTitle = lead => {\n  if (!lead) return 'Untitled lead';\n  const customerName = lead.Customer?.name;\n  if (customerName && customerName.trim()) return customerName.trim();\n  if (lead.description && lead.description.trim()) {\n    const firstLine = lead.description.trim().split('\\n')[0];\n    return firstLine.length > 60 ? `${firstLine.slice(0, 57)}...` : firstLine;\n  }\n  return `Lead ${lead.id}`;\n};\nfunction DateInputField({\n  value,\n  onChange,\n  placeholder = 'Select date',\n  minimumDate,\n  maximumDate,\n  style\n}) {\n  const [iosPickerVisible, setIosPickerVisible] = useState(false);\n  const isWeb = Platform.OS === 'web';\n  const toDateOnly = input => {\n    if (!input) return '';\n    if (input instanceof Date) return toInputDate(input);\n    if (typeof input === 'string') {\n      const [datePart] = input.split('T');\n      return datePart;\n    }\n    return '';\n  };\n  const normalizedValue = toDateOnly(value);\n  const minDateString = minimumDate ? toDateOnly(minimumDate) : undefined;\n  const maxDateString = maximumDate ? toDateOnly(maximumDate) : undefined;\n  const parsed = parseInputDate(normalizedValue) || new Date();\n  const displayLabel = value ? formatDate(value) || normalizedValue : '';\n  const applyDate = selectedDate => {\n    if (!selectedDate) return;\n    onChange(toInputDate(selectedDate));\n  };\n  const handleManualChange = text => {\n    if (!text) {\n      onChange('');\n      return;\n    }\n    onChange(text);\n  };\n  const openPicker = () => {\n    if (isWeb) return;\n    const baseDate = parseInputDate(normalizedValue) || new Date();\n    if (Platform.OS === 'android') {\n      DateTimePickerAndroid.open({\n        value: baseDate,\n        mode: 'date',\n        minimumDate: minimumDate ? parseInputDate(minimumDate) || undefined : undefined,\n        maximumDate: maximumDate ? parseInputDate(maximumDate) || undefined : undefined,\n        onChange: (event, selected) => {\n          if (event.type === 'set' && selected) applyDate(selected);\n        }\n      });\n    } else {\n      setIosPickerVisible(true);\n    }\n  };\n  const containerStyle = [{\n    marginBottom: spacing(1.5)\n  }, style];\n  if (isWeb) {\n    return _jsxDEV(View, {\n      style: containerStyle,\n      children: _jsxDEV(TextInput, {\n        value: normalizedValue,\n        placeholder: placeholder,\n        placeholderTextColor: palette.muted,\n        onChangeText: handleManualChange,\n        onChange: event => handleManualChange(event?.nativeEvent?.text ?? event?.target?.value ?? ''),\n        style: [formInputBaseStyle, {\n          marginBottom: 0\n        }],\n        type: \"date\",\n        min: minDateString,\n        max: maxDateString\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 7\n    }, this);\n  }\n  return _jsxDEV(View, {\n    style: containerStyle,\n    children: [_jsxDEV(TouchableOpacity, {\n      onPress: openPicker,\n      activeOpacity: 0.85,\n      style: {\n        borderWidth: 1,\n        borderColor: palette.border,\n        borderRadius: 12,\n        backgroundColor: palette.surfaceMuted,\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(1.5)\n      },\n      children: [_jsxDEV(Text, {\n        style: {\n          flex: 1,\n          color: displayLabel ? palette.text : palette.muted,\n          fontSize: typography.body\n        },\n        children: displayLabel || placeholder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: {\n          fontSize: typography.h2 - 6,\n          color: palette.muted\n        },\n        children: \"CAL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 7\n    }, this), Platform.OS === 'ios' && iosPickerVisible ? _jsxDEV(DateTimePicker, {\n      value: parsed,\n      mode: \"date\",\n      display: \"inline\",\n      onChange: (event, selected) => {\n        if (event.type === 'set' && selected) {\n          applyDate(selected);\n        }\n        if (event.type === 'dismissed') {\n          setIosPickerVisible(false);\n          return;\n        }\n        setIosPickerVisible(false);\n      },\n      style: {\n        marginTop: spacing(1)\n      },\n      minimumDate: minimumDate ? parseInputDate(minimumDate) || undefined : undefined,\n      maximumDate: maximumDate ? parseInputDate(maximumDate) || undefined : undefined\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 551,\n    columnNumber: 5\n  }, this);\n}\nconst TECH_ASSIGN_ROLES = ['TECH', 'SUPERVISOR', 'ESTIMATOR'];\nfunction TechSelector({\n  team = [],\n  value,\n  onSelect,\n  label,\n  allowAllRoles,\n  allowClear\n}) {\n  const options = useMemo(() => {\n    const normalized = team.map(member => Object.assign({}, member, {\n      role: normalizeRole(member.role)\n    }));\n    if (allowAllRoles) return normalized;\n    return normalized.filter(member => TECH_ASSIGN_ROLES.includes(member.role));\n  }, [team, allowAllRoles]);\n  if (!options.length) return null;\n  const renderLabel = label ? _jsxDEV(Text, {\n    style: {\n      color: palette.muted,\n      fontSize: typography.small,\n      marginBottom: spacing(1)\n    },\n    children: label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 610,\n    columnNumber: 5\n  }, this) : null;\n  return _jsxDEV(View, {\n    style: {\n      marginTop: spacing(1.5)\n    },\n    children: [renderLabel, _jsxDEV(View, {\n      style: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        columnGap: spacing(1),\n        rowGap: spacing(1)\n      },\n      children: [options.map(member => {\n        const selected = member.id === value;\n        const displayName = member.fullName || member.email;\n        const shortLabel = displayName.length > 22 ? `${displayName.slice(0, 21)}…` : displayName;\n        return _jsxDEV(QuickAction, {\n          label: shortLabel,\n          tone: selected ? 'primary' : 'muted',\n          onPress: () => onSelect(member.id)\n        }, member.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 13\n        }, this);\n      }), allowClear ? _jsxDEV(QuickAction, {\n        label: \"Clear\",\n        tone: \"muted\",\n        onPress: () => onSelect(null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 23\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 616,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 614,\n    columnNumber: 5\n  }, this);\n}\nfunction DashboardScreen({\n  navigation\n}) {\n  const {\n    token,\n    user\n  } = useAuth();\n  const [loading, setLoading] = useState(true);\n  const [refreshing, setRefreshing] = useState(false);\n  const [leads, setLeads] = useState([]);\n  const [jobs, setJobs] = useState([]);\n  const [tasks, setTasks] = useState([]);\n  const [invoiceSummary, setInvoiceSummary] = useState(null);\n  const [lastUpdated, setLastUpdated] = useState(null);\n  const isAdmin = (user?.role || '').toUpperCase() === 'ADMIN';\n  const jobLookup = useMemo(() => {\n    const map = {};\n    for (const job of jobs) {\n      if (job?.id != null) {\n        map[job.id] = job;\n      }\n    }\n    return map;\n  }, [jobs]);\n  const loadData = useCallback(async (isPullRefresh = false) => {\n    if (!token) return;\n    isPullRefresh ? setRefreshing(true) : setLoading(true);\n    const fetchLeads = async () => {\n      try {\n        const data = await api('/leads', 'GET', null, token);\n        setLeads(data);\n        db.transaction(tx => {\n          tx.executeSql && tx.executeSql('DELETE FROM leads_cache;');\n          data.forEach(l => tx.executeSql && tx.executeSql('INSERT OR REPLACE INTO leads_cache (id, description, status) VALUES (?,?,?)', [l.id, l.description || '', l.status || 'NEW']));\n        });\n        return data;\n      } catch (e) {\n        return await new Promise(resolve => {\n          db.transaction(tx => tx.executeSql && tx.executeSql('SELECT id, description, status FROM leads_cache', [], (_, {\n            rows\n          }) => {\n            const fallback = rows?._array || [];\n            setLeads(fallback);\n            resolve(fallback);\n          }));\n        });\n      }\n    };\n    const fetchJobs = async () => {\n      try {\n        const data = await api('/jobs', 'GET', null, token);\n        setJobs(data);\n        db.transaction(tx => {\n          tx.executeSql && tx.executeSql('DELETE FROM jobs_cache;');\n          data.forEach(j => tx.executeSql && tx.executeSql('INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)', [j.id, j.name || '', j.status || 'SCHEDULED', j.startDate || '', j.endDate || '', j.notes || '']));\n        });\n        return data;\n      } catch (e) {\n        return await new Promise(resolve => {\n          db.transaction(tx => tx.executeSql && tx.executeSql('SELECT id, name, status, startDate, endDate, notes FROM jobs_cache', [], (_, {\n            rows\n          }) => {\n            const fallback = rows?._array || [];\n            setJobs(fallback);\n            resolve(fallback);\n          }));\n        });\n      }\n    };\n    const fetchTasks = async () => {\n      try {\n        const data = await api('/tasks', 'GET', null, token);\n        setTasks(data);\n        db.transaction(tx => {\n          data.forEach(t => tx.executeSql && tx.executeSql('INSERT OR REPLACE INTO tasks_cache (id, jobId, title, status, dueDate) VALUES (?,?,?,?,?)', [t.id, t.jobId || null, t.title || '', t.status || 'TODO', t.dueDate || '']));\n        });\n        return data;\n      } catch (e) {\n        return await new Promise(resolve => {\n          db.transaction(tx => tx.executeSql && tx.executeSql('SELECT id, jobId, title, status, dueDate FROM tasks_cache ORDER BY id DESC', [], (_, {\n            rows\n          }) => {\n            const fallback = rows?._array || [];\n            setTasks(fallback);\n            resolve(fallback);\n          }));\n        });\n      }\n    };\n    const fetchInvoiceSummary = async () => {\n      try {\n        const data = await api('/invoices/summary', 'GET', null, token);\n        setInvoiceSummary(data);\n        return data;\n      } catch (e) {\n        return null;\n      }\n    };\n    try {\n      await Promise.all([fetchLeads(), fetchJobs(), fetchTasks(), fetchInvoiceSummary()]);\n      setLastUpdated(new Date());\n    } finally {\n      isPullRefresh ? setRefreshing(false) : setLoading(false);\n    }\n  }, [token]);\n  useFocusEffect(useCallback(() => {\n    loadData(false);\n  }, [loadData]));\n  const onRefresh = useCallback(() => loadData(true), [loadData]);\n  const newLeads = leads.filter(l => (l.status || '').toUpperCase() === 'NEW').length;\n  const activeJobs = jobs.filter(j => ['SCHEDULED', 'IN_PROGRESS'].includes((j.status || '').toUpperCase())).length;\n  const openTasks = tasks.filter(t => !isTaskCompleted(t.status)).length;\n  const outstandingValue = invoiceSummary?.outstanding || 0;\n  const collectedValue = invoiceSummary?.collected || 0;\n  const overdueCount = invoiceSummary?.overdueCount || 0;\n  const overdueTasks = useMemo(() => {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    return tasks.filter(task => {\n      if (!task?.dueDate || isTaskCompleted(task.status)) return false;\n      const due = new Date(task.dueDate);\n      if (Number.isNaN(due.getTime())) return false;\n      return due < today;\n    }).length;\n  }, [tasks]);\n  const statusCards = useMemo(() => [{\n    label: 'Active',\n    value: String(activeJobs),\n    description: 'Jobs in progress or scheduled',\n    tone: 'primary'\n  }, {\n    label: 'Pending',\n    value: formatCurrency(outstandingValue),\n    description: 'Unpaid invoices',\n    tone: 'warning'\n  }, {\n    label: 'Paid',\n    value: formatCurrency(collectedValue),\n    description: 'Collected to date',\n    tone: 'success'\n  }, {\n    label: 'Overdue',\n    value: String(overdueTasks),\n    description: `Tasks overdue; ${overdueCount} invoices late`,\n    tone: 'danger'\n  }], [activeJobs, outstandingValue, collectedValue, overdueTasks, overdueCount]);\n  const topLeads = leads.slice(0, 3);\n  const topJobs = jobs.slice(0, 3);\n  const nextTasks = tasks.filter(t => !isTaskCompleted(t.status)).slice(0, 3);\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(5)\n      },\n      refreshControl: _jsxDEV(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh,\n        tintColor: palette.primary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 830,\n        columnNumber: 25\n      }, this),\n      children: [_jsxDEV(Text, {\n        style: {\n          color: palette.text,\n          fontSize: typography.h1,\n          fontWeight: '700',\n          marginBottom: spacing(2)\n        },\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 832,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          columnGap: spacing(1.5),\n          rowGap: spacing(1.5),\n          marginBottom: spacing(2)\n        },\n        children: [_jsxDEV(QuickAction, {\n          label: \"New job\",\n          onPress: () => navigation.navigate('Jobs', {\n            focus: 'create-job'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 835,\n          columnNumber: 11\n        }, this), _jsxDEV(QuickAction, {\n          label: \"New lead\",\n          onPress: () => navigation.navigate('NewLead')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 836,\n          columnNumber: 11\n        }, this), isAdmin ? _jsxDEV(QuickAction, {\n          label: \"Create invoice\",\n          tone: \"success\",\n          onPress: () => navigation.navigate('Invoices')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 837,\n          columnNumber: 22\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 834,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          columnGap: spacing(1.5),\n          rowGap: spacing(1.5),\n          marginBottom: spacing(3)\n        },\n        children: statusCards.map(card => _jsxDEV(StatusCard, {\n          label: card.label,\n          value: card.value,\n          description: card.description,\n          tone: card.tone\n        }, card.label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 842,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 840,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          columnGap: spacing(1.5),\n          rowGap: spacing(1.5)\n        },\n        children: [_jsxDEV(View, {\n          style: {\n            flexBasis: '48%',\n            minWidth: 160\n          },\n          children: _jsxDEV(SummaryCard, {\n            title: \"Leads\",\n            value: leads.length,\n            subtitle: `${newLeads} new to triage`,\n            tone: \"info\",\n            onPress: () => navigation.navigate('Leads')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 854,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 853,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexBasis: '48%',\n            minWidth: 160\n          },\n          children: _jsxDEV(SummaryCard, {\n            title: \"Jobs\",\n            value: jobs.length,\n            subtitle: `${activeJobs} active`,\n            tone: \"primary\",\n            onPress: () => navigation.navigate('Jobs')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 863,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 862,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexBasis: '48%',\n            minWidth: 160\n          },\n          children: _jsxDEV(SummaryCard, {\n            title: \"Tasks\",\n            value: openTasks,\n            subtitle: `${overdueTasks} overdue • ${tasks.length} total`,\n            tone: \"warning\",\n            onPress: () => navigation.navigate('Jobs')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 872,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 871,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexBasis: '48%',\n            minWidth: 160\n          },\n          children: _jsxDEV(SummaryCard, {\n            title: \"Invoices\",\n            value: formatCurrency(outstandingValue),\n            subtitle: `${overdueCount} overdue | ${formatCurrency(collectedValue)} collected`,\n            tone: \"success\",\n            onPress: () => navigation.navigate('Invoices')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 881,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 880,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 852,\n        columnNumber: 9\n      }, this), loading && !refreshing ? _jsxDEV(SurfaceCard, {\n        style: {\n          alignItems: 'center',\n          justifyContent: 'center',\n          paddingVertical: spacing(6)\n        },\n        children: [_jsxDEV(ActivityIndicator, {\n          color: palette.primary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 893,\n          columnNumber: 13\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(1.5)\n          },\n          children: \"Loading summary...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 894,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 892,\n        columnNumber: 11\n      }, this) : null, _jsxDEV(SectionHeader, {\n        title: \"Next Jobs\",\n        actionLabel: \"View all\",\n        onAction: () => navigation.navigate('Jobs')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 898,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: topJobs.length === 0 ? _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: \"No jobs yet. Create one from the Jobs tab.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 901,\n          columnNumber: 13\n        }, this) : topJobs.map((job, idx) => {\n          const startLabel = job.startDate ? `Start ${formatDate(job.startDate)}` : null;\n          const endLabel = job.endDate ? `Due ${formatDate(job.endDate)}` : null;\n          return _jsxDEV(View, {\n            style: {\n              marginBottom: idx === topJobs.length - 1 ? 0 : spacing(2.5)\n            },\n            children: [_jsxDEV(View, {\n              style: {\n                flexDirection: 'row',\n                justifyContent: 'space-between',\n                alignItems: 'center'\n              },\n              children: [_jsxDEV(Text, {\n                style: {\n                  color: palette.text,\n                  fontSize: typography.h2,\n                  fontWeight: '600'\n                },\n                children: job.name || `Job #${job.id}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 909,\n                columnNumber: 21\n              }, this), _jsxDEV(StatusPill, {\n                status: job.status || 'SCHEDULED'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 910,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 908,\n              columnNumber: 19\n            }, this), startLabel || endLabel ? _jsxDEV(Text, {\n              style: {\n                color: palette.muted,\n                marginTop: spacing(0.5)\n              },\n              children: [startLabel, endLabel].filter(Boolean).join(' - ')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 913,\n              columnNumber: 21\n            }, this) : null, job.notes ? _jsxDEV(Text, {\n              style: {\n                color: palette.muted,\n                marginTop: spacing(1)\n              },\n              numberOfLines: 2,\n              children: job.notes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 918,\n              columnNumber: 21\n            }, this) : null, _jsxDEV(View, {\n              style: {\n                flexDirection: 'row',\n                columnGap: spacing(1.5),\n                marginTop: spacing(1.5)\n              },\n              children: [_jsxDEV(QuickAction, {\n                label: \"Open job\",\n                onPress: () => navigation.navigate('JobDetail', {\n                  jobId: job.id\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 921,\n                columnNumber: 21\n              }, this), _jsxDEV(QuickAction, {\n                label: \"Tasks\",\n                onPress: () => navigation.navigate('JobDetail', {\n                  jobId: job.id,\n                  tab: 'tasks'\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 922,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 920,\n              columnNumber: 19\n            }, this)]\n          }, job.id || idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 907,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 899,\n        columnNumber: 9\n      }, this), _jsxDEV(SectionHeader, {\n        title: \"Hot Leads\",\n        actionLabel: \"Leads\",\n        onAction: () => navigation.navigate('Leads')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 930,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: topLeads.length === 0 ? _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: \"No leads yet. Capture leads to keep the funnel full.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 933,\n          columnNumber: 13\n        }, this) : topLeads.map((lead, idx) => _jsxDEV(View, {\n          style: {\n            marginBottom: idx === topLeads.length - 1 ? 0 : spacing(2)\n          },\n          children: [_jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center'\n            },\n            children: [_jsxDEV(Text, {\n              style: {\n                color: palette.text,\n                fontWeight: '600',\n                fontSize: typography.h2\n              },\n              children: deriveLeadTitle(lead)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 938,\n              columnNumber: 17\n            }, this), _jsxDEV(StatusPill, {\n              status: lead.status || 'NEW'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 939,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 937,\n            columnNumber: 15\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.5)\n            },\n            numberOfLines: 3,\n            children: lead.description || 'No scope captured yet.'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 941,\n            columnNumber: 15\n          }, this), _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              columnGap: spacing(1.5),\n              marginTop: spacing(1.5)\n            },\n            children: [_jsxDEV(QuickAction, {\n              label: \"Follow up\",\n              onPress: () => navigation.navigate('EstimateEditor', {\n                leadId: lead.id\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 945,\n              columnNumber: 19\n            }, this), _jsxDEV(QuickAction, {\n              label: \"Convert\",\n              onPress: () => navigation.navigate('Jobs')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 946,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 944,\n            columnNumber: 17\n          }, this)]\n        }, lead.id || idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 936,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 931,\n        columnNumber: 9\n      }, this), _jsxDEV(SectionHeader, {\n        title: \"Open Tasks\",\n        actionLabel: \"Jobs\",\n        onAction: () => navigation.navigate('Jobs')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 953,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        children: nextTasks.length === 0 ? _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: \"All clear. Add tasks from a job to keep crews aligned.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 956,\n          columnNumber: 13\n        }, this) : nextTasks.map((task, idx) => _jsxDEV(View, {\n          style: {\n            marginBottom: idx === nextTasks.length - 1 ? 0 : spacing(2)\n          },\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.text,\n              fontWeight: '600'\n            },\n            children: task.title || 'Task'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 960,\n            columnNumber: 17\n          }, this), task.jobId ? _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.25)\n            },\n            children: jobLookup[task.jobId]?.name || `Job #${task.jobId}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 962,\n            columnNumber: 19\n          }, this) : _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.25)\n            },\n            children: \"Unassigned job\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 966,\n            columnNumber: 19\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.5)\n            },\n            children: task.dueDate ? `Due ${formatDate(task.dueDate)}` : 'No due date'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 968,\n            columnNumber: 17\n          }, this), _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              columnGap: spacing(1.5),\n              marginTop: spacing(1.5)\n            },\n            children: [_jsxDEV(QuickAction, {\n              label: \"Mark done\",\n              onPress: () => navigation.navigate('JobDetail', {\n                jobId: task.jobId\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 972,\n              columnNumber: 19\n            }, this), _jsxDEV(QuickAction, {\n              label: \"View job\",\n              onPress: () => navigation.navigate('JobDetail', {\n                jobId: task.jobId\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 976,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 971,\n            columnNumber: 17\n          }, this)]\n        }, task.id || idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 959,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 954,\n        columnNumber: 9\n      }, this), lastUpdated ? _jsxDEV(Text, {\n        style: {\n          color: palette.muted,\n          fontSize: typography.small,\n          marginTop: spacing(2),\n          textAlign: 'center'\n        },\n        children: [\"Updated \", lastUpdated.toLocaleTimeString([], {\n          hour: 'numeric',\n          minute: '2-digit'\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 987,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 828,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 827,\n    columnNumber: 5\n  }, this);\n}\nfunction SignaturePad({\n  onCapturePng\n}) {\n  const [points, setPoints] = useState([]);\n  const [path, setPath] = useState('');\n  const shotRef = useRef(null);\n  return _jsxDEV(ViewShot, {\n    ref: shotRef,\n    options: {\n      format: 'png',\n      quality: 0.9,\n      result: 'base64'\n    },\n    style: {\n      height: 220,\n      borderWidth: 1,\n      backgroundColor: '#fff'\n    },\n    children: _jsxDEV(View, {\n      onStartShouldSetResponder: () => true,\n      onResponderMove: e => {\n        const x = e.nativeEvent.locationX,\n          y = e.nativeEvent.locationY;\n        setPath(p => p + (p ? ` L ${x} ${y}` : ` M ${x} ${y}`));\n      },\n      onResponderRelease: async () => {\n        const base64 = await shotRef.current.capture();\n        onCapturePng && onCapturePng('data:image/png;base64,' + base64);\n      },\n      style: {\n        flex: 1\n      },\n      children: _jsxDEV(Svg, {\n        height: \"100%\",\n        width: \"100%\",\n        children: _jsxDEV(Path, {\n          d: path,\n          stroke: \"black\",\n          strokeWidth: \"2\",\n          fill: \"none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1015,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1015,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1003,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1002,\n    columnNumber: 5\n  }, this);\n}\nfunction SignatureScreen({\n  route,\n  navigation\n}) {\n  const {\n    token\n  } = useAuth();\n  const {\n    estimateId\n  } = route.params;\n  const [sigPng, setSigPng] = useState(null);\n  const save = async () => {\n    if (!sigPng) {\n      Alert.alert('Please sign first');\n      return;\n    }\n    const resp = await api(`/estimates/${estimateId}/approve`, 'POST', {\n      signaturePngUrl: sigPng\n    }, token);\n    Alert.alert('Approved', `Payment link:\n${resp && resp.paymentLink ? resp.paymentLink : 'Unavailable'}`);\n    navigation.goBack();\n  };\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      padding: 16\n    },\n    children: [_jsxDEV(Text, {\n      style: {\n        fontSize: 18,\n        marginBottom: 8\n      },\n      children: [\"Sign Estimate #\", estimateId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1033,\n      columnNumber: 7\n    }, this), _jsxDEV(SignaturePad, {\n      onCapturePng: setSigPng\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1034,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: {\n        height: 12\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1035,\n      columnNumber: 7\n    }, this), _jsxDEV(Button, {\n      title: \"Save Signature\",\n      onPress: save\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1036,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1032,\n    columnNumber: 5\n  }, this);\n}\nconst userRoleOptions = [{\n  label: 'Admin',\n  value: 'ADMIN'\n}, {\n  label: 'Estimator',\n  value: 'ESTIMATOR'\n}, {\n  label: 'Supervisor',\n  value: 'SUPERVISOR'\n}, {\n  label: 'Tech',\n  value: 'TECH'\n}];\nconst invoiceStatusOptions = [{\n  value: 'DRAFT',\n  label: 'Draft'\n}, {\n  value: 'SENT',\n  label: 'Sent'\n}, {\n  value: 'PART_PAID',\n  label: 'Part paid'\n}, {\n  value: 'PAID',\n  label: 'Paid'\n}, {\n  value: 'VOID',\n  label: 'Void'\n}];\nfunction UsersAdminScreen() {\n  const {\n    token\n  } = useAuth();\n  const [users, setUsers] = useState([]);\n  const [email, setEmail] = useState('');\n  const [fullName, setFullName] = useState('');\n  const [role, setRole] = useState('TECH');\n  const [inviting, setInviting] = useState(false);\n  const [refreshing, setRefreshing] = useState(false);\n  const load = useCallback(async () => {\n    try {\n      const response = await api('/users', 'GET', null, token);\n      setUsers(Array.isArray(response) ? response : []);\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to load users.');\n    }\n  }, [token]);\n  useEffect(() => {\n    load();\n  }, [load]);\n  const resetForm = () => {\n    setEmail('');\n    setFullName('');\n    setRole('TECH');\n  };\n  const invite = async () => {\n    const trimmedEmail = email.trim().toLowerCase();\n    const trimmedName = fullName.trim();\n    if (!trimmedEmail) {\n      Alert.alert('Missing email', 'Enter an email address to invite a user.');\n      return;\n    }\n    try {\n      setInviting(true);\n      await api('/users', 'POST', {\n        email: trimmedEmail,\n        fullName: trimmedName || undefined,\n        role: normalizeRole(role)\n      }, token);\n      resetForm();\n      await load();\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to send invite.');\n    } finally {\n      setInviting(false);\n    }\n  };\n  const promote = async (id, newRole) => {\n    try {\n      await api(`/users/${id}`, 'PATCH', {\n        role: normalizeRole(newRole)\n      }, token);\n      await load();\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to update role.');\n    }\n  };\n  const remove = id => {\n    Alert.alert('Remove user', 'Are you sure you want to remove this person?', [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Remove',\n      style: 'destructive',\n      onPress: async () => {\n        try {\n          await api(`/users/${id}`, 'DELETE', null, token);\n          await load();\n        } catch (e) {\n          Alert.alert('Error', e.message || 'Unable to delete user.');\n        }\n      }\n    }]);\n  };\n  const onRefresh = useCallback(async () => {\n    setRefreshing(true);\n    try {\n      await load();\n    } finally {\n      setRefreshing(false);\n    }\n  }, [load]);\n  const renderRolePill = value => {\n    const roleCfg = userRoleOptions.find(option => option.value === normalizeRole(value));\n    const label = roleCfg ? roleCfg.label : normalizeRole(value);\n    return _jsxDEV(View, {\n      style: {\n        backgroundColor: '#e0f3f0',\n        paddingHorizontal: spacing(1.5),\n        paddingVertical: spacing(0.5),\n        borderRadius: 999\n      },\n      children: _jsxDEV(Text, {\n        style: {\n          color: palette.primaryStrong,\n          fontWeight: '600',\n          fontSize: typography.small\n        },\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1143,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1142,\n      columnNumber: 7\n    }, this);\n  };\n  const renderRoleSelector = (selectedRole, onSelect) => _jsxDEV(View, {\n    style: {\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      columnGap: spacing(1),\n      rowGap: spacing(1)\n    },\n    children: userRoleOptions.map(option => {\n      const selected = selectedRole === option.value;\n      return _jsxDEV(TouchableOpacity, {\n        onPress: () => onSelect(option.value),\n        activeOpacity: 0.85,\n        style: {\n          paddingHorizontal: spacing(2),\n          paddingVertical: spacing(1),\n          borderRadius: 999,\n          borderWidth: 1,\n          borderColor: selected ? palette.primary : palette.border,\n          backgroundColor: selected ? '#d9f2ed' : palette.surface\n        },\n        children: _jsxDEV(Text, {\n          style: {\n            color: selected ? palette.primaryStrong : palette.muted,\n            fontWeight: '600',\n            fontSize: typography.small\n          },\n          children: option.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1166,\n          columnNumber: 13\n        }, this)\n      }, option.value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1153,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1149,\n    columnNumber: 5\n  }, this);\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(FlatList, {\n      data: users,\n      keyExtractor: u => String(u.id),\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(6)\n      },\n      refreshControl: _jsxDEV(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh,\n        tintColor: palette.primary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1181,\n        columnNumber: 25\n      }, this),\n      ListHeaderComponent: _jsxDEV(View, {\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontSize: typography.h1,\n            fontWeight: '700',\n            marginBottom: spacing(2)\n          },\n          children: \"Team management\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1184,\n          columnNumber: 13\n        }, this), _jsxDEV(SurfaceCard, {\n          style: {\n            padding: spacing(2.5),\n            marginBottom: spacing(3)\n          },\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.text,\n              fontSize: typography.h2,\n              fontWeight: '700'\n            },\n            children: \"Invite teammate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1186,\n            columnNumber: 15\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.5),\n              marginBottom: spacing(2)\n            },\n            children: \"Send an invite email and choose what they can access.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1187,\n            columnNumber: 15\n          }, this), _jsxDEV(FormInput, {\n            placeholder: \"Full name (optional)\",\n            value: fullName,\n            onChangeText: setFullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1190,\n            columnNumber: 15\n          }, this), _jsxDEV(FormInput, {\n            placeholder: \"Work email\",\n            autoCapitalize: \"none\",\n            keyboardType: \"email-address\",\n            value: email,\n            onChangeText: setEmail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1195,\n            columnNumber: 15\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              fontWeight: '600',\n              fontSize: typography.small,\n              textTransform: 'uppercase',\n              marginBottom: spacing(1)\n            },\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1202,\n            columnNumber: 15\n          }, this), renderRoleSelector(role, setRole), _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              marginTop: spacing(2)\n            },\n            children: [_jsxDEV(QuickAction, {\n              label: \"Clear\",\n              tone: \"muted\",\n              onPress: resetForm\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1205,\n              columnNumber: 17\n            }, this), _jsxDEV(TouchableOpacity, {\n              onPress: invite,\n              activeOpacity: 0.85,\n              disabled: inviting,\n              style: {\n                backgroundColor: palette.primary,\n                paddingHorizontal: spacing(2.5),\n                paddingVertical: spacing(1.5),\n                borderRadius: 12,\n                opacity: inviting ? 0.6 : 1\n              },\n              children: _jsxDEV(Text, {\n                style: {\n                  color: '#fff',\n                  fontWeight: '700'\n                },\n                children: inviting ? 'Sending...' : 'Send invite'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1218,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1206,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1204,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1185,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1183,\n        columnNumber: 11\n      }, this),\n      ListEmptyComponent: _jsxDEV(SurfaceCard, {\n        children: _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: \"Invite your first teammate to collaborate on jobs.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1226,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1225,\n        columnNumber: 11\n      }, this),\n      renderItem: ({\n        item\n      }) => {\n        const normalizedRole = normalizeRole(item.role);\n        return _jsxDEV(SurfaceCard, {\n          style: {\n            marginBottom: spacing(2),\n            padding: spacing(2.5)\n          },\n          children: [_jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              marginBottom: spacing(1.5)\n            },\n            children: [_jsxDEV(View, {\n              children: [_jsxDEV(Text, {\n                style: {\n                  color: palette.text,\n                  fontSize: typography.h2,\n                  fontWeight: '600'\n                },\n                children: item.fullName || item.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1235,\n                columnNumber: 19\n              }, this), _jsxDEV(Text, {\n                style: {\n                  color: palette.muted,\n                  marginTop: spacing(0.5)\n                },\n                children: item.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1236,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1234,\n              columnNumber: 17\n            }, this), renderRolePill(normalizedRole)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1233,\n            columnNumber: 15\n          }, this), _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              flexWrap: 'wrap',\n              columnGap: spacing(1),\n              rowGap: spacing(1)\n            },\n            children: [userRoleOptions.map(option => {\n              const selected = normalizedRole === option.value;\n              return _jsxDEV(TouchableOpacity, {\n                onPress: () => promote(item.id, option.value),\n                disabled: selected,\n                activeOpacity: 0.85,\n                style: {\n                  paddingHorizontal: spacing(1.75),\n                  paddingVertical: spacing(0.75),\n                  borderRadius: 999,\n                  borderWidth: 1,\n                  borderColor: selected ? palette.primary : palette.border,\n                  backgroundColor: selected ? '#d9f2ed' : palette.surface,\n                  opacity: selected ? 0.7 : 1\n                },\n                children: _jsxDEV(Text, {\n                  style: {\n                    color: selected ? palette.primaryStrong : palette.muted,\n                    fontWeight: '600',\n                    fontSize: typography.small\n                  },\n                  children: option.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1259,\n                  columnNumber: 23\n                }, this)\n              }, option.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1244,\n                columnNumber: 21\n              }, this);\n            }), _jsxDEV(TouchableOpacity, {\n              onPress: () => remove(item.id),\n              activeOpacity: 0.85,\n              style: {\n                paddingHorizontal: spacing(1.75),\n                paddingVertical: spacing(0.75),\n                borderRadius: 999,\n                borderWidth: 1,\n                borderColor: '#fecdd3',\n                backgroundColor: '#fee2e2'\n              },\n              children: _jsxDEV(Text, {\n                style: {\n                  color: palette.danger,\n                  fontWeight: '600',\n                  fontSize: typography.small\n                },\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1277,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1265,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1240,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1232,\n          columnNumber: 13\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1177,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1176,\n    columnNumber: 5\n  }, this);\n}\nfunction InvoicesScreen({\n  navigation\n}) {\n  const {\n    token,\n    user\n  } = useAuth();\n  const [loading, setLoading] = useState(true);\n  const [refreshing, setRefreshing] = useState(false);\n  const [summary, setSummary] = useState(null);\n  const [invoices, setInvoices] = useState([]);\n  const [filter, setFilter] = useState('ALL');\n  const [newInvoiceJobId, setNewInvoiceJobId] = useState('');\n  const [newInvoiceAmount, setNewInvoiceAmount] = useState('');\n  const [newInvoiceIssuedAt, setNewInvoiceIssuedAt] = useState('');\n  const [newInvoiceDueAt, setNewInvoiceDueAt] = useState('');\n  const [newInvoiceStatus, setNewInvoiceStatus] = useState('DRAFT');\n  const [creatingInvoice, setCreatingInvoice] = useState(false);\n  const load = useCallback(async (isRefresh = false) => {\n    if (!token) return;\n    isRefresh ? setRefreshing(true) : setLoading(true);\n    try {\n      const [summaryData, list] = await Promise.all([api('/invoices/summary', 'GET', null, token), api('/invoices', 'GET', null, token)]);\n      setSummary(summaryData);\n      setInvoices(list);\n    } catch (e) {} finally {\n      isRefresh ? setRefreshing(false) : setLoading(false);\n    }\n  }, [token]);\n  useFocusEffect(useCallback(() => {\n    if (user?.role === 'ADMIN') {\n      load(false);\n    }\n  }, [load, user?.role]));\n  const onRefresh = useCallback(() => load(true), [load]);\n  const nextInvoiceNumber = useMemo(() => {\n    if (!Array.isArray(invoices) || invoices.length === 0) {\n      return 'INV-0001';\n    }\n    const maxNumber = invoices.reduce((acc, inv) => {\n      const match = String(inv.number || '').match(/(\\d+)$/);\n      if (match) {\n        return Math.max(acc, parseInt(match[1], 10));\n      }\n      if (inv.id) {\n        return Math.max(acc, Number(inv.id));\n      }\n      return acc;\n    }, 0);\n    const next = maxNumber + 1;\n    return `INV-${String(next).padStart(4, '0')}`;\n  }, [invoices]);\n  const resetInvoiceForm = useCallback(() => {\n    setNewInvoiceJobId('');\n    setNewInvoiceAmount('');\n    setNewInvoiceIssuedAt('');\n    setNewInvoiceDueAt('');\n    setNewInvoiceStatus('DRAFT');\n  }, []);\n  const createInvoice = useCallback(async () => {\n    const amountValue = parseFloat(newInvoiceAmount);\n    if (Number.isNaN(amountValue) || amountValue <= 0) {\n      Alert.alert('Missing amount', 'Enter a valid invoice amount.');\n      return;\n    }\n    const jobIdTrimmed = newInvoiceJobId.trim();\n    const jobIdValue = jobIdTrimmed ? parseInt(jobIdTrimmed, 10) : null;\n    if (jobIdTrimmed && Number.isNaN(jobIdValue)) {\n      Alert.alert('Invalid job', 'Job ID must be a number.');\n      return;\n    }\n    const payload = {\n      amount: amountValue,\n      status: newInvoiceStatus,\n      number: nextInvoiceNumber || undefined,\n      jobId: jobIdValue || undefined,\n      issuedAt: newInvoiceIssuedAt || null,\n      dueAt: newInvoiceDueAt || null\n    };\n    try {\n      setCreatingInvoice(true);\n      const created = await api('/invoices', 'POST', payload, token);\n      resetInvoiceForm();\n      await load(false);\n      Alert.alert('Invoice created', `${created?.number || payload.number || 'Invoice'} saved.`);\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to create invoice.');\n    } finally {\n      setCreatingInvoice(false);\n    }\n  }, [newInvoiceAmount, newInvoiceStatus, newInvoiceJobId, newInvoiceIssuedAt, newInvoiceDueAt, token, load, resetInvoiceForm, nextInvoiceNumber]);\n  const deleteInvoice = useCallback(invoice => {\n    Alert.alert('Delete invoice', `Delete invoice #${invoice.number || invoice.id}?`, [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Delete',\n      style: 'destructive',\n      onPress: async () => {\n        try {\n          await api(`/invoices/${invoice.id}`, 'DELETE', null, token);\n          await load(false);\n        } catch (e) {\n          Alert.alert('Error', e.message || 'Unable to delete invoice.');\n        }\n      }\n    }]);\n  }, [token, load]);\n  if (user?.role !== 'ADMIN') {\n    return _jsxDEV(SafeAreaView, {\n      style: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: palette.background\n      },\n      children: _jsxDEV(Text, {\n        style: {\n          color: palette.muted\n        },\n        children: \"Invoices are only available to admin users.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1417,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1416,\n      columnNumber: 7\n    }, this);\n  }\n  const filters = [{\n    key: 'ALL',\n    label: 'All'\n  }, {\n    key: 'OUTSTANDING',\n    label: 'Outstanding'\n  }, {\n    key: 'PAID',\n    label: 'Paid'\n  }];\n  const filteredInvoices = invoices.filter(inv => {\n    if (filter === 'ALL') return true;\n    const status = (inv.status || 'DRAFT').toUpperCase();\n    if (filter === 'PAID') return status === 'PAID';\n    return !['PAID', 'VOID'].includes(status);\n  });\n  const outstanding = formatCurrency(summary?.outstanding || 0);\n  const collected = formatCurrency(summary?.collected || 0);\n  const drafts = formatCurrency(summary?.draftAmount || 0);\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(6)\n      },\n      refreshControl: _jsxDEV(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh,\n        tintColor: palette.primary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1443,\n        columnNumber: 25\n      }, this),\n      children: [_jsxDEV(Text, {\n        style: {\n          color: palette.text,\n          fontSize: typography.h1,\n          fontWeight: '700',\n          marginBottom: spacing(2)\n        },\n        children: \"Invoices\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1445,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: {\n          color: palette.muted,\n          marginBottom: spacing(2)\n        },\n        children: \"Track billing health and spot overdue balances.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1446,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          padding: spacing(2.5),\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontSize: typography.h2,\n            fontWeight: '700'\n          },\n          children: \"Create invoice\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1448,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(0.5),\n            marginBottom: spacing(2)\n          },\n          children: \"Capture billing details and keep your accounts current.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1449,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            marginBottom: spacing(1.5)\n          },\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              fontSize: typography.small,\n              fontWeight: '700',\n              textTransform: 'uppercase'\n            },\n            children: \"Invoice number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1453,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.text,\n              fontSize: typography.h2,\n              fontWeight: '700',\n              marginTop: spacing(0.5)\n            },\n            children: nextInvoiceNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1454,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1452,\n          columnNumber: 11\n        }, this), _jsxDEV(FormInput, {\n          placeholder: \"Job ID (optional)\",\n          value: newInvoiceJobId,\n          onChangeText: setNewInvoiceJobId,\n          keyboardType: \"number-pad\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1456,\n          columnNumber: 11\n        }, this), _jsxDEV(FormInput, {\n          placeholder: \"Amount $\",\n          value: newInvoiceAmount,\n          onChangeText: setNewInvoiceAmount,\n          keyboardType: \"decimal-pad\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1462,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            columnGap: spacing(1.5)\n          },\n          children: [_jsxDEV(View, {\n            style: {\n              flex: 1\n            },\n            children: _jsxDEV(DateInputField, {\n              value: newInvoiceIssuedAt,\n              onChange: setNewInvoiceIssuedAt,\n              placeholder: \"Issued date\",\n              style: {\n                marginBottom: 0\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1470,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1469,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: {\n              flex: 1\n            },\n            children: _jsxDEV(DateInputField, {\n              value: newInvoiceDueAt,\n              onChange: setNewInvoiceDueAt,\n              placeholder: \"Due date (optional)\",\n              style: {\n                marginBottom: 0\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1473,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1472,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1468,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontSize: typography.small,\n            fontWeight: '700',\n            textTransform: 'uppercase',\n            marginTop: spacing(2),\n            marginBottom: spacing(1)\n          },\n          children: \"Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1476,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            columnGap: spacing(1),\n            rowGap: spacing(1)\n          },\n          children: invoiceStatusOptions.map(option => {\n            const selected = option.value === newInvoiceStatus;\n            return _jsxDEV(TouchableOpacity, {\n              onPress: () => setNewInvoiceStatus(option.value),\n              activeOpacity: 0.85,\n              style: {\n                paddingHorizontal: spacing(2),\n                paddingVertical: spacing(1),\n                borderRadius: 999,\n                borderWidth: 1,\n                borderColor: selected ? palette.primary : palette.border,\n                backgroundColor: selected ? '#d9f2ed' : palette.surface\n              },\n              children: _jsxDEV(Text, {\n                style: {\n                  color: selected ? palette.primaryStrong : palette.muted,\n                  fontWeight: '600',\n                  fontSize: typography.small\n                },\n                children: option.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1494,\n                columnNumber: 19\n              }, this)\n            }, option.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1481,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1477,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginTop: spacing(2)\n          },\n          children: [_jsxDEV(QuickAction, {\n            label: \"Reset\",\n            tone: \"muted\",\n            onPress: resetInvoiceForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1502,\n            columnNumber: 13\n          }, this), _jsxDEV(TouchableOpacity, {\n            onPress: createInvoice,\n            activeOpacity: 0.85,\n            disabled: creatingInvoice,\n            style: {\n              backgroundColor: palette.primary,\n              paddingHorizontal: spacing(2.5),\n              paddingVertical: spacing(1.5),\n              borderRadius: 12,\n              opacity: creatingInvoice ? 0.6 : 1\n            },\n            children: _jsxDEV(Text, {\n              style: {\n                color: '#fff',\n                fontWeight: '700'\n              },\n              children: creatingInvoice ? 'Saving...' : 'Create invoice'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1515,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1503,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1501,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1447,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          columnGap: spacing(2),\n          rowGap: spacing(2),\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(View, {\n          style: {\n            flexBasis: '48%',\n            minWidth: 160\n          },\n          children: _jsxDEV(SummaryCard, {\n            title: \"Outstanding\",\n            value: outstanding,\n            subtitle: `${summary?.overdueCount || 0} overdue`,\n            tone: \"warning\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1522,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1521,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexBasis: '48%',\n            minWidth: 160\n          },\n          children: _jsxDEV(SummaryCard, {\n            title: \"Collected\",\n            value: collected,\n            subtitle: \"All payments to date\",\n            tone: \"success\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1525,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1524,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexBasis: '48%',\n            minWidth: 160\n          },\n          children: _jsxDEV(SummaryCard, {\n            title: \"Drafts\",\n            value: drafts,\n            subtitle: `${summary?.totalCount || 0} total invoices`,\n            tone: \"info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1528,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1527,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1520,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          columnGap: spacing(1),\n          rowGap: spacing(1),\n          marginBottom: spacing(2)\n        },\n        children: filters.map(f => {\n          const selected = f.key === filter;\n          return _jsxDEV(TouchableOpacity, {\n            onPress: () => setFilter(f.key),\n            activeOpacity: 0.85,\n            style: {\n              paddingHorizontal: spacing(2),\n              paddingVertical: spacing(1),\n              borderRadius: 999,\n              borderWidth: 1,\n              borderColor: selected ? palette.primary : palette.border,\n              backgroundColor: selected ? '#d9f2ed' : palette.surface\n            },\n            children: _jsxDEV(Text, {\n              style: {\n                color: selected ? palette.primaryStrong : palette.muted,\n                fontWeight: '600',\n                fontSize: typography.small\n              },\n              children: f.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1549,\n              columnNumber: 17\n            }, this)\n          }, f.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1536,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1532,\n        columnNumber: 9\n      }, this), loading ? _jsxDEV(SurfaceCard, {\n        style: {\n          alignItems: 'center',\n          paddingVertical: spacing(6)\n        },\n        children: [_jsxDEV(ActivityIndicator, {\n          color: palette.primary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1557,\n          columnNumber: 13\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(1.5)\n          },\n          children: \"Loading invoices...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1558,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1556,\n        columnNumber: 11\n      }, this) : filteredInvoices.length === 0 ? _jsxDEV(SurfaceCard, {\n        children: _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: \"No invoices match this filter.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1562,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1561,\n        columnNumber: 11\n      }, this) : filteredInvoices.map(inv => {\n        const payments = (inv.Payments || []).reduce((sum, p) => sum + Number(p.amount || 0), 0);\n        const amount = Number(inv.amount || 0);\n        const balance = Math.max(amount - payments, 0);\n        const statusKey = (inv.status || 'DRAFT').toUpperCase();\n        return _jsxDEV(SurfaceCard, {\n          children: [_jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center'\n            },\n            children: [_jsxDEV(View, {\n              children: [_jsxDEV(Text, {\n                style: {\n                  color: palette.text,\n                  fontSize: typography.h2,\n                  fontWeight: '600'\n                },\n                children: [\"Invoice #\", inv.number || inv.id]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1574,\n                columnNumber: 21\n              }, this), _jsxDEV(Text, {\n                style: {\n                  color: palette.muted,\n                  marginTop: spacing(0.5)\n                },\n                children: [\"Issued \", inv.issuedAt ? formatDate(inv.issuedAt) : 'TBD']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1575,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1573,\n              columnNumber: 19\n            }, this), _jsxDEV(StatusPill, {\n              status: statusKey\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1577,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1572,\n            columnNumber: 17\n          }, this), _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              marginTop: spacing(1.5)\n            },\n            children: [_jsxDEV(View, {\n              children: [_jsxDEV(Text, {\n                style: {\n                  color: palette.muted,\n                  fontSize: typography.small\n                },\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1581,\n                columnNumber: 21\n              }, this), _jsxDEV(Text, {\n                style: {\n                  color: palette.text,\n                  fontWeight: '600'\n                },\n                children: formatCurrency(amount)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1582,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1580,\n              columnNumber: 19\n            }, this), _jsxDEV(View, {\n              children: [_jsxDEV(Text, {\n                style: {\n                  color: palette.muted,\n                  fontSize: typography.small\n                },\n                children: \"Collected\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1585,\n                columnNumber: 21\n              }, this), _jsxDEV(Text, {\n                style: {\n                  color: palette.text\n                },\n                children: formatCurrency(payments)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1586,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1584,\n              columnNumber: 19\n            }, this), _jsxDEV(View, {\n              children: [_jsxDEV(Text, {\n                style: {\n                  color: palette.muted,\n                  fontSize: typography.small\n                },\n                children: \"Balance\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1589,\n                columnNumber: 21\n              }, this), _jsxDEV(Text, {\n                style: {\n                  color: balance > 0 ? palette.primaryStrong : palette.muted,\n                  fontWeight: '600'\n                },\n                children: formatCurrency(balance)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1590,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1588,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1579,\n            columnNumber: 17\n          }, this), inv.dueAt ? _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(1)\n            },\n            children: [\"Due \", formatDate(inv.dueAt)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1594,\n            columnNumber: 19\n          }, this) : null, _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              flexWrap: 'wrap',\n              columnGap: spacing(1),\n              rowGap: spacing(1),\n              marginTop: spacing(2)\n            },\n            children: [inv.jobId ? _jsxDEV(QuickAction, {\n              label: \"View job\",\n              onPress: () => navigation.navigate('JobDetail', {\n                jobId: inv.jobId\n              }),\n              tone: \"muted\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1597,\n              columnNumber: 32\n            }, this) : null, _jsxDEV(QuickAction, {\n              label: \"Record payment\",\n              tone: \"success\",\n              onPress: () => Alert.alert('Coming soon', 'Payment logging will land shortly.')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1598,\n              columnNumber: 19\n            }, this), _jsxDEV(QuickAction, {\n              label: \"Delete\",\n              tone: \"danger\",\n              onPress: () => deleteInvoice(inv)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1599,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1596,\n            columnNumber: 17\n          }, this)]\n        }, inv.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1571,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1441,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1440,\n    columnNumber: 5\n  }, this);\n}\nfunction JobsKanbanScreen({\n  navigation,\n  route\n}) {\n  const {\n    token\n  } = useAuth();\n  const [jobs, setJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [refreshing, setRefreshing] = useState(false);\n  const [newJobName, setNewJobName] = useState('');\n  const [newJobStartDate, setNewJobStartDate] = useState('');\n  const [newJobDueDate, setNewJobDueDate] = useState('');\n  const [newJobNotes, setNewJobNotes] = useState('');\n  const [newCustomerName, setNewCustomerName] = useState('');\n  const [newCustomerPhone, setNewCustomerPhone] = useState('');\n  const [newCustomerEmail, setNewCustomerEmail] = useState('');\n  const [newAddressLine1, setNewAddressLine1] = useState('');\n  const [newAddressLine2, setNewAddressLine2] = useState('');\n  const [newCity, setNewCity] = useState('');\n  const [newStateCode, setNewStateCode] = useState('');\n  const [newZip, setNewZip] = useState('');\n  const [newJobTags, setNewJobTags] = useState([]);\n  const [jobFormTab, setJobFormTab] = useState('BASICS');\n  const statusOrder = ['SCHEDULED', 'IN_PROGRESS', 'ON_HOLD', 'DONE', 'COMPLETE', 'CANCELLED'];\n  const scrollRef = useRef(null);\n  const [selectedTag, setSelectedTag] = useState(null);\n  const [selectedCity, setSelectedCity] = useState(null);\n  const [selectedUrgency, setSelectedUrgency] = useState('ALL');\n  const load = useCallback(async (isRefresh = false) => {\n    isRefresh ? setRefreshing(true) : setLoading(true);\n    try {\n      const data = await api('/jobs', 'GET', null, token);\n      setJobs(data);\n      db.transaction(tx => {\n        tx.executeSql && tx.executeSql('DELETE FROM jobs_cache;');\n        data.forEach(j => tx.executeSql && tx.executeSql('INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)', [j.id, j.name || '', j.status || 'SCHEDULED', j.startDate || '', j.endDate || '', j.notes || '']));\n      });\n    } catch (e) {\n      db.transaction(tx => tx.executeSql && tx.executeSql('SELECT id, name, status, startDate, endDate, notes FROM jobs_cache', [], (_, {\n        rows\n      }) => setJobs(rows._array || [])));\n    } finally {\n      isRefresh ? setRefreshing(false) : setLoading(false);\n    }\n  }, [token]);\n  useFocusEffect(useCallback(() => {\n    load(false);\n  }, [load]));\n  useEffect(() => {\n    if (route?.params?.focus === 'create-job') {\n      scrollRef.current?.scrollTo({\n        y: 0,\n        animated: true\n      });\n      setJobFormTab('BASICS');\n      if (navigation && typeof navigation.setParams === 'function') {\n        navigation.setParams({\n          focus: undefined\n        });\n      }\n    }\n  }, [route?.params?.focus, navigation]);\n  const availableTags = useMemo(() => {\n    const set = new Set();\n    jobs.forEach(job => {\n      const tags = Array.isArray(job.tags) ? job.tags : [];\n      tags.forEach(tag => {\n        if (tag) set.add(String(tag));\n      });\n    });\n    return Array.from(set).sort((a, b) => a.toLowerCase().localeCompare(b.toLowerCase()));\n  }, [jobs]);\n  const availableCities = useMemo(() => {\n    const set = new Set();\n    jobs.forEach(job => {\n      const city = job?.Jobsite?.city;\n      if (city) set.add(String(city).trim());\n    });\n    return Array.from(set).sort((a, b) => a.toLowerCase().localeCompare(b.toLowerCase()));\n  }, [jobs]);\n  const urgencyFilters = useMemo(() => [{\n    key: 'ALL',\n    label: 'All'\n  }, {\n    key: 'UPCOMING',\n    label: 'Starting soon'\n  }, {\n    key: 'OVERDUE',\n    label: 'Past due'\n  }], []);\n  const filteredJobsRaw = useMemo(() => {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    return jobs.filter(job => {\n      if (selectedTag) {\n        const tags = Array.isArray(job.tags) ? job.tags : [];\n        const hasTag = tags.some(tag => String(tag).toLowerCase() === selectedTag.toLowerCase());\n        if (!hasTag) return false;\n      }\n      if (selectedCity) {\n        const city = job?.Jobsite?.city ? String(job.Jobsite.city) : '';\n        if (city.toLowerCase() !== selectedCity.toLowerCase()) return false;\n      }\n      if (selectedUrgency === 'UPCOMING') {\n        if (!job.startDate) return false;\n        const start = new Date(job.startDate);\n        if (Number.isNaN(start.getTime())) return false;\n        const diff = Math.ceil((start - today) / (1000 * 60 * 60 * 24));\n        if (diff < 0 || diff > 3) return false;\n      } else if (selectedUrgency === 'OVERDUE') {\n        if (!job.endDate) return false;\n        const due = new Date(job.endDate);\n        if (Number.isNaN(due.getTime())) return false;\n        if (due >= today) return false;\n      }\n      return true;\n    });\n  }, [jobs, selectedTag, selectedCity, selectedUrgency]);\n  const hasFilters = useMemo(() => Boolean(selectedTag || selectedCity || selectedUrgency !== 'ALL'), [selectedTag, selectedCity, selectedUrgency]);\n  const clearFilters = useCallback(() => {\n    setSelectedTag(null);\n    setSelectedCity(null);\n    setSelectedUrgency('ALL');\n  }, []);\n  const onRefresh = useCallback(() => load(true), [load]);\n  const resetForm = () => {\n    setNewJobName('');\n    setNewJobStartDate('');\n    setNewJobDueDate('');\n    setNewJobNotes('');\n    setNewCustomerName('');\n    setNewCustomerPhone('');\n    setNewCustomerEmail('');\n    setNewAddressLine1('');\n    setNewAddressLine2('');\n    setNewCity('');\n    setNewStateCode('');\n    setNewZip('');\n    setNewJobTags([]);\n    setJobFormTab('BASICS');\n  };\n  const createJob = async () => {\n    if (!newJobName.trim()) {\n      Alert.alert('Missing info', 'Please add a job name.');\n      setJobFormTab('BASICS');\n      return;\n    }\n    const hasCustomer = [newCustomerName, newCustomerPhone, newCustomerEmail].some(v => v && v.trim());\n    const hasAddress = [newAddressLine1, newCity, newStateCode, newZip].some(v => v && v.trim());\n    const payload = {\n      name: newJobName.trim(),\n      status: 'SCHEDULED',\n      startDate: newJobStartDate || null,\n      endDate: newJobDueDate || null,\n      notes: newJobNotes.trim() || null,\n      tags: newJobTags.filter(Boolean)\n    };\n    if (hasCustomer) {\n      payload.customer = {\n        name: newCustomerName.trim(),\n        phone: newCustomerPhone.trim(),\n        email: newCustomerEmail.trim(),\n        billingAddress: newAddressLine1 ? `${newAddressLine1}${newAddressLine2 ? `\n${newAddressLine2}` : ''}${newCity ? `\n${newCity}, ${newStateCode} ${newZip}` : ''}` : null\n      };\n    }\n    if (hasAddress) {\n      payload.jobsite = {\n        addressLine1: newAddressLine1.trim(),\n        addressLine2: newAddressLine2.trim(),\n        city: newCity.trim(),\n        state: newStateCode.trim(),\n        zip: newZip.trim()\n      };\n    }\n    try {\n      const created = await api('/jobs', 'POST', payload, token);\n      setJobs(prev => [created, ...prev]);\n      db.transaction(tx => tx.executeSql && tx.executeSql('INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)', [created.id, created.name || '', created.status || 'SCHEDULED', created.startDate || '', created.endDate || '', created.notes || '']));\n      resetForm();\n      Alert.alert('Job created', `Job #${created.id} ready to schedule.`);\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to create job');\n    }\n  };\n  const updateJobStatus = async (id, status) => {\n    try {\n      const updated = await api(`/jobs/${id}`, 'PATCH', {\n        status\n      }, token);\n      setJobs(prev => prev.map(job => job.id === id ? updated : job));\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to update job status');\n    }\n  };\n  const removeJob = async id => {\n    Alert.alert('Delete Job', `Delete job #${id}?`, [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Delete',\n      style: 'destructive',\n      onPress: async () => {\n        try {\n          await api(`/jobs/${id}`, 'DELETE', null, token);\n          setJobs(prev => prev.filter(job => job.id !== id));\n          db.transaction(tx => tx.executeSql && tx.executeSql('DELETE FROM jobs_cache WHERE id=?', [id]));\n        } catch (e) {\n          Alert.alert('Error', e.message || 'Unable to delete job');\n        }\n      }\n    }]);\n  };\n  const sortedJobs = useMemo(() => {\n    const normalize = status => (status || 'SCHEDULED').toUpperCase();\n    const rank = status => {\n      const key = normalize(status);\n      const idx = statusOrder.indexOf(key);\n      return idx === -1 ? statusOrder.length : idx;\n    };\n    const parseDateSafe = value => {\n      if (!value) return null;\n      const d = new Date(value);\n      return Number.isNaN(d.getTime()) ? null : d;\n    };\n    return [...filteredJobsRaw].sort((a, b) => {\n      const statusDiff = rank(a.status) - rank(b.status);\n      if (statusDiff !== 0) return statusDiff;\n      const startA = parseDateSafe(a.startDate);\n      const startB = parseDateSafe(b.startDate);\n      if (startA && startB) return startA - startB;\n      if (startA) return -1;\n      if (startB) return 1;\n      return (b.id || 0) - (a.id || 0);\n    });\n  }, [filteredJobsRaw, statusOrder]);\n  const groupedJobs = useMemo(() => {\n    const groups = [];\n    let currentStatus = null;\n    sortedJobs.forEach(job => {\n      const statusKey = (job.status || 'SCHEDULED').toUpperCase();\n      if (statusKey !== currentStatus) {\n        groups.push({\n          status: statusKey,\n          jobs: [job]\n        });\n        currentStatus = statusKey;\n      } else {\n        groups[groups.length - 1].jobs.push(job);\n      }\n    });\n    return groups;\n  }, [sortedJobs]);\n  const statusLabel = status => {\n    const key = (status || 'SCHEDULED').toUpperCase();\n    return pillTone[key]?.label || key.charAt(0) + key.slice(1).toLowerCase();\n  };\n  const quickStatusActions = [{\n    label: 'Start job',\n    value: 'IN_PROGRESS',\n    tone: 'primary'\n  }, {\n    label: 'Pause',\n    value: 'ON_HOLD',\n    tone: 'warning'\n  }, {\n    label: 'Wrap up',\n    value: 'DONE',\n    tone: 'success'\n  }];\n  const inputStyle = {\n    borderWidth: 1,\n    borderColor: palette.border,\n    borderRadius: 12,\n    paddingHorizontal: spacing(1.5),\n    paddingVertical: spacing(1.25),\n    backgroundColor: palette.surfaceMuted,\n    color: palette.text,\n    fontSize: typography.body,\n    marginBottom: spacing(1.5)\n  };\n  const jobTabs = [{\n    key: 'BASICS',\n    label: 'Basics'\n  }, {\n    key: 'CUSTOMER',\n    label: 'Customer'\n  }, {\n    key: 'JOBSITE',\n    label: 'Jobsite'\n  }, {\n    key: 'NOTES',\n    label: 'Notes'\n  }];\n  const renderJobFormFields = () => {\n    if (jobFormTab === 'BASICS') {\n      return _jsxDEV(View, {\n        children: [_jsxDEV(TextInput, {\n          placeholder: \"Job name\",\n          placeholderTextColor: palette.muted,\n          value: newJobName,\n          onChangeText: setNewJobName,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1900,\n          columnNumber: 11\n        }, this), _jsxDEV(DateInputField, {\n          value: newJobStartDate,\n          onChange: setNewJobStartDate,\n          placeholder: \"Start date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1907,\n          columnNumber: 11\n        }, this), _jsxDEV(DateInputField, {\n          value: newJobDueDate,\n          onChange: setNewJobDueDate,\n          placeholder: \"Due date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1912,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            marginTop: spacing(1.5)\n          },\n          children: _jsxDEV(TagInput, {\n            value: newJobTags,\n            onChange: setNewJobTags,\n            placeholder: \"Add tags (e.g. HVAC, Urgent)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1918,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1917,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1899,\n        columnNumber: 9\n      }, this);\n    }\n    if (jobFormTab === 'CUSTOMER') {\n      return _jsxDEV(View, {\n        children: [_jsxDEV(TextInput, {\n          placeholder: \"Customer name\",\n          placeholderTextColor: palette.muted,\n          value: newCustomerName,\n          onChangeText: setNewCustomerName,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1926,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Phone\",\n          placeholderTextColor: palette.muted,\n          keyboardType: \"phone-pad\",\n          value: newCustomerPhone,\n          onChangeText: setNewCustomerPhone,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1933,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Email\",\n          placeholderTextColor: palette.muted,\n          keyboardType: \"email-address\",\n          autoCapitalize: \"none\",\n          value: newCustomerEmail,\n          onChangeText: setNewCustomerEmail,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1941,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1925,\n        columnNumber: 9\n      }, this);\n    }\n    if (jobFormTab === 'JOBSITE') {\n      return _jsxDEV(View, {\n        children: [_jsxDEV(TextInput, {\n          placeholder: \"Address line 1\",\n          placeholderTextColor: palette.muted,\n          value: newAddressLine1,\n          onChangeText: setNewAddressLine1,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1956,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Address line 2\",\n          placeholderTextColor: palette.muted,\n          value: newAddressLine2,\n          onChangeText: setNewAddressLine2,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1963,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            columnGap: spacing(1.5)\n          },\n          children: [_jsxDEV(View, {\n            style: {\n              flex: 1\n            },\n            children: _jsxDEV(TextInput, {\n              placeholder: \"City\",\n              placeholderTextColor: palette.muted,\n              value: newCity,\n              onChangeText: setNewCity,\n              style: [inputStyle, {\n                marginBottom: 0\n              }]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1972,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1971,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: {\n              width: 80\n            },\n            children: _jsxDEV(TextInput, {\n              placeholder: \"State\",\n              placeholderTextColor: palette.muted,\n              value: newStateCode,\n              onChangeText: setNewStateCode,\n              style: [inputStyle, {\n                marginBottom: 0\n              }]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1981,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1980,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: {\n              width: 100\n            },\n            children: _jsxDEV(TextInput, {\n              placeholder: \"ZIP\",\n              placeholderTextColor: palette.muted,\n              value: newZip,\n              onChangeText: setNewZip,\n              style: [inputStyle, {\n                marginBottom: 0\n              }]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1990,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1989,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1970,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1955,\n        columnNumber: 9\n      }, this);\n    }\n    return _jsxDEV(TextInput, {\n      placeholder: \"Internal notes\",\n      placeholderTextColor: palette.muted,\n      value: newJobNotes,\n      onChangeText: setNewJobNotes,\n      multiline: true,\n      style: [inputStyle, {\n        minHeight: 96,\n        textAlignVertical: 'top'\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2003,\n      columnNumber: 7\n    }, this);\n  };\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(ScrollView, {\n      ref: scrollRef,\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(4)\n      },\n      refreshControl: _jsxDEV(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh,\n        tintColor: palette.primary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2019,\n        columnNumber: 25\n      }, this),\n      children: [_jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3),\n          padding: spacing(2.5)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontSize: typography.h2,\n            fontWeight: '700',\n            marginBottom: spacing(2)\n          },\n          children: \"Create job\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2022,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            columnGap: spacing(1),\n            rowGap: spacing(1.5),\n            marginBottom: spacing(2)\n          },\n          children: jobTabs.map(tab => {\n            const selected = tab.key === jobFormTab;\n            return _jsxDEV(TouchableOpacity, {\n              onPress: () => setJobFormTab(tab.key),\n              activeOpacity: 0.85,\n              style: {\n                paddingHorizontal: spacing(2),\n                paddingVertical: spacing(1),\n                borderRadius: 999,\n                borderWidth: 1,\n                borderColor: selected ? palette.primary : palette.border,\n                backgroundColor: selected ? '#d9f2ed' : palette.surface\n              },\n              children: _jsxDEV(Text, {\n                style: {\n                  color: selected ? palette.primaryStrong : palette.muted,\n                  fontWeight: '600',\n                  fontSize: typography.small\n                },\n                children: tab.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2040,\n                columnNumber: 19\n              }, this)\n            }, tab.key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2027,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2023,\n          columnNumber: 11\n        }, this), renderJobFormFields(), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginTop: spacing(2)\n          },\n          children: [_jsxDEV(QuickAction, {\n            label: \"Reset\",\n            tone: \"muted\",\n            onPress: resetForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2049,\n            columnNumber: 13\n          }, this), _jsxDEV(TouchableOpacity, {\n            onPress: createJob,\n            activeOpacity: 0.85,\n            style: {\n              backgroundColor: palette.primary,\n              paddingHorizontal: spacing(2.5),\n              paddingVertical: spacing(1.5),\n              borderRadius: 12\n            },\n            children: _jsxDEV(Text, {\n              style: {\n                color: '#fff',\n                fontWeight: '700'\n              },\n              children: \"Create job\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2055,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2050,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2048,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2021,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3),\n          padding: spacing(2.5)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontSize: typography.h2,\n            fontWeight: '700',\n            marginBottom: spacing(1.5)\n          },\n          children: \"Filters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2061,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginBottom: spacing(1)\n          },\n          children: \"Urgency\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2062,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            columnGap: spacing(1),\n            rowGap: spacing(1),\n            marginBottom: spacing(1.5)\n          },\n          children: urgencyFilters.map(option => _jsxDEV(QuickAction, {\n            label: option.label,\n            tone: selectedUrgency === option.key ? 'primary' : 'muted',\n            onPress: () => setSelectedUrgency(option.key)\n          }, option.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2065,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2063,\n          columnNumber: 11\n        }, this), availableTags.length ? _jsxDEV(View, {\n          style: {\n            marginBottom: spacing(1.5)\n          },\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginBottom: spacing(1)\n            },\n            children: \"Tags\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2075,\n            columnNumber: 15\n          }, this), _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              flexWrap: 'wrap',\n              columnGap: spacing(1),\n              rowGap: spacing(1)\n            },\n            children: availableTags.map(tag => _jsxDEV(QuickAction, {\n              label: `#${tag}`,\n              tone: selectedTag === tag ? 'primary' : 'muted',\n              onPress: () => setSelectedTag(selectedTag === tag ? null : tag)\n            }, tag, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2078,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2076,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2074,\n          columnNumber: 13\n        }, this) : null, availableCities.length ? _jsxDEV(View, {\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginBottom: spacing(1)\n            },\n            children: \"Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2090,\n            columnNumber: 15\n          }, this), _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              flexWrap: 'wrap',\n              columnGap: spacing(1),\n              rowGap: spacing(1)\n            },\n            children: availableCities.map(city => _jsxDEV(QuickAction, {\n              label: city,\n              tone: selectedCity === city ? 'primary' : 'muted',\n              onPress: () => setSelectedCity(selectedCity === city ? null : city)\n            }, city, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2093,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2091,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2089,\n          columnNumber: 13\n        }, this) : null, selectedTag || selectedCity || selectedUrgency !== 'ALL' ? _jsxDEV(View, {\n          style: {\n            marginTop: spacing(2)\n          },\n          children: _jsxDEV(QuickAction, {\n            label: \"Clear filters\",\n            tone: \"muted\",\n            onPress: clearFilters\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2105,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2104,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2060,\n        columnNumber: 9\n      }, this), loading && !refreshing && jobs.length === 0 ? _jsxDEV(SurfaceCard, {\n        style: {\n          alignItems: 'center',\n          paddingVertical: spacing(6),\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(ActivityIndicator, {\n          color: palette.primary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2112,\n          columnNumber: 13\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(1.5)\n          },\n          children: \"Loading jobs...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2113,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2111,\n        columnNumber: 11\n      }, this) : null, groupedJobs.length === 0 ? _jsxDEV(SurfaceCard, {\n        children: _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: hasFilters ? 'No jobs match the current filters.' : 'No jobs yet. Convert a lead or add a job to get started.'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2119,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2118,\n        columnNumber: 11\n      }, this) : groupedJobs.map(group => _jsxDEV(View, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontWeight: '700',\n            fontSize: typography.small,\n            textTransform: 'uppercase',\n            marginBottom: spacing(1)\n          },\n          children: statusLabel(group.status)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2126,\n          columnNumber: 15\n        }, this), group.jobs.map(job => {\n          const customer = job.Customer || {};\n          const jobsite = job.Jobsite || {};\n          const addressParts = [jobsite.addressLine1, jobsite.addressLine2, [jobsite.city, jobsite.state].filter(Boolean).join(', '), jobsite.zip].filter(Boolean);\n          const address = addressParts.join(', ');\n          const statusKey = (job.status || 'SCHEDULED').toUpperCase();\n          return _jsxDEV(SurfaceCard, {\n            style: {\n              marginBottom: spacing(1.5)\n            },\n            children: [_jsxDEV(View, {\n              style: {\n                flexDirection: 'row',\n                justifyContent: 'space-between',\n                alignItems: 'center'\n              },\n              children: [_jsxDEV(Text, {\n                style: {\n                  color: palette.text,\n                  fontSize: typography.h2,\n                  fontWeight: '600'\n                },\n                children: job.name || `Job #${job.id}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2143,\n                columnNumber: 23\n              }, this), _jsxDEV(StatusPill, {\n                status: statusKey\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2144,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2142,\n              columnNumber: 21\n            }, this), job.startDate || job.endDate ? _jsxDEV(Text, {\n              style: {\n                color: palette.muted,\n                marginTop: spacing(0.75)\n              },\n              children: [job.startDate ? `Start ${formatDate(job.startDate)}` : null, job.endDate ? `Due ${formatDate(job.endDate)}` : null].filter(Boolean).join(' | ')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2147,\n              columnNumber: 23\n            }, this) : null, customer.name ? _jsxDEV(Text, {\n              style: {\n                color: palette.text,\n                fontWeight: '600',\n                marginTop: spacing(1)\n              },\n              children: customer.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2151,\n              columnNumber: 38\n            }, this) : null, customer.phone ? _jsxDEV(Text, {\n              style: {\n                color: palette.muted\n              },\n              children: customer.phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2152,\n              columnNumber: 39\n            }, this) : null, customer.email ? _jsxDEV(Text, {\n              style: {\n                color: palette.muted\n              },\n              children: customer.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2153,\n              columnNumber: 39\n            }, this) : null, address ? _jsxDEV(Text, {\n              style: {\n                color: palette.muted,\n                marginTop: spacing(1)\n              },\n              children: address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2154,\n              columnNumber: 32\n            }, this) : null, job.notes ? _jsxDEV(Text, {\n              style: {\n                color: palette.muted,\n                marginTop: spacing(1)\n              },\n              numberOfLines: 3,\n              children: job.notes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2155,\n              columnNumber: 34\n            }, this) : null, Array.isArray(job.tags) && job.tags.length ? _jsxDEV(View, {\n              style: {\n                flexDirection: 'row',\n                flexWrap: 'wrap',\n                columnGap: spacing(1),\n                rowGap: spacing(1),\n                marginTop: spacing(1)\n              },\n              children: job.tags.map(tag => _jsxDEV(View, {\n                style: {\n                  backgroundColor: '#e0f3f0',\n                  borderRadius: 999,\n                  paddingHorizontal: spacing(1.5),\n                  paddingVertical: spacing(0.5)\n                },\n                children: _jsxDEV(Text, {\n                  style: {\n                    color: palette.primaryStrong,\n                    fontWeight: '600',\n                    fontSize: typography.small\n                  },\n                  children: `#${tag}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2163,\n                  columnNumber: 29\n                }, this)\n              }, `${job.id}-${tag}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2159,\n                columnNumber: 27\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2157,\n              columnNumber: 23\n            }, this) : null, _jsxDEV(View, {\n              style: {\n                flexDirection: 'row',\n                flexWrap: 'wrap',\n                columnGap: spacing(1),\n                rowGap: spacing(1),\n                marginTop: spacing(2)\n              },\n              children: [_jsxDEV(QuickAction, {\n                label: \"View job\",\n                onPress: () => navigation.navigate('JobDetail', {\n                  jobId: job.id\n                }),\n                tone: \"muted\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2169,\n                columnNumber: 23\n              }, this), quickStatusActions.map(action => action.value === statusKey ? null : _jsxDEV(QuickAction, {\n                label: action.label,\n                tone: action.tone,\n                onPress: () => updateJobStatus(job.id, action.value)\n              }, action.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2172,\n                columnNumber: 27\n              }, this)), _jsxDEV(QuickAction, {\n                label: \"Delete\",\n                tone: \"danger\",\n                onPress: () => removeJob(job.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2180,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2168,\n              columnNumber: 21\n            }, this)]\n          }, job.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2141,\n            columnNumber: 19\n          }, this);\n        })]\n      }, group.status, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2125,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2016,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 2015,\n    columnNumber: 5\n  }, this);\n}\nfunction JobDetailScreen({\n  route,\n  navigation\n}) {\n  const {\n    jobId\n  } = route.params;\n  const {\n    token,\n    user\n  } = useAuth();\n  const [jobName, setJobName] = useState('');\n  const [jobStartDate, setJobStartDate] = useState('');\n  const [jobEndDate, setJobEndDate] = useState('');\n  const [jobNotes, setJobNotes] = useState('');\n  const [jobCustomerName, setJobCustomerName] = useState('');\n  const [jobCustomerPhone, setJobCustomerPhone] = useState('');\n  const [jobCustomerEmail, setJobCustomerEmail] = useState('');\n  const [jobAddressLine1, setJobAddressLine1] = useState('');\n  const [jobAddressLine2, setJobAddressLine2] = useState('');\n  const [jobCity, setJobCity] = useState('');\n  const [jobStateCode, setJobStateCode] = useState('');\n  const [jobZip, setJobZip] = useState('');\n  const [jobTags, setJobTags] = useState([]);\n  const [jobAttachments, setJobAttachments] = useState([]);\n  const [loadingAttachments, setLoadingAttachments] = useState(false);\n  const [uploadingAttachment, setUploadingAttachment] = useState(false);\n  const [jobActivity, setJobActivity] = useState([]);\n  const [newActivityNote, setNewActivityNote] = useState('');\n  const [addingActivity, setAddingActivity] = useState(false);\n  const [changeOrders, setCO] = useState([]);\n  const [title, setTitle] = useState('');\n  const [amountDelta, setAmountDelta] = useState('0');\n  const roleKey = normalizeRole(user?.role);\n  const canManageChangeOrders = ['ADMIN', 'SUPERVISOR', 'ESTIMATOR'].includes(roleKey);\n  const loadCO = useCallback(async () => {\n    setCO(await api(`/change-orders/job/${jobId}`, 'GET', null, token));\n  }, [jobId, token]);\n  const loadJob = useCallback(async () => {\n    try {\n      const j = await api(`/jobs/${jobId}`, 'GET', null, token);\n      setJobName(j.name || '');\n      setJobStartDate(j.startDate || '');\n      setJobEndDate(j.endDate || '');\n      setJobNotes(j.notes || '');\n      const customer = j.Customer || {};\n      const jobsite = j.Jobsite || {};\n      setJobCustomerName(customer.name || '');\n      setJobCustomerPhone(customer.phone || '');\n      setJobCustomerEmail(customer.email || '');\n      setJobAddressLine1(jobsite.addressLine1 || '');\n      setJobAddressLine2(jobsite.addressLine2 || '');\n      setJobCity(jobsite.city || '');\n      setJobStateCode(jobsite.state || '');\n      setJobZip(jobsite.zip || '');\n      setJobTags(Array.isArray(j.tags) ? j.tags : []);\n      setJobActivity(Array.isArray(j.activityLog) ? j.activityLog : []);\n    } catch (e) {}\n  }, [jobId, token]);\n  const loadAttachments = useCallback(async () => {\n    try {\n      setLoadingAttachments(true);\n      const response = await api(`/attachments?entityType=JOB&entityId=${jobId}`, 'GET', null, token);\n      setJobAttachments(Array.isArray(response) ? response : []);\n    } catch (e) {} finally {\n      setLoadingAttachments(false);\n    }\n  }, [jobId, token]);\n  useEffect(() => {\n    loadJob();\n    loadCO();\n    loadAttachments();\n  }, [loadJob, loadCO, loadAttachments]);\n  const addCO = async () => {\n    if (!title.trim()) {\n      Alert.alert('Missing info', 'Add a title for the change order.');\n      return;\n    }\n    await api(`/change-orders/job/${jobId}`, 'POST', {\n      title: title.trim(),\n      amountDelta: parseFloat(amountDelta) || 0\n    }, token);\n    setTitle('');\n    setAmountDelta('0');\n    loadCO();\n  };\n  const saveJobDetails = async () => {\n    try {\n      await api(`/jobs/${jobId}`, 'PATCH', {\n        name: jobName,\n        startDate: jobStartDate || null,\n        endDate: jobEndDate || null,\n        notes: jobNotes,\n        tags: Array.isArray(jobTags) ? jobTags.filter(Boolean) : [],\n        customer: {\n          name: jobCustomerName,\n          phone: jobCustomerPhone,\n          email: jobCustomerEmail,\n          billingAddress: jobAddressLine1 ? `${jobAddressLine1}${jobAddressLine2 ? `\n${jobAddressLine2}` : ''}${jobCity ? `\n${jobCity}, ${jobStateCode} ${jobZip}` : ''}` : null\n        },\n        jobsite: {\n          addressLine1: jobAddressLine1,\n          addressLine2: jobAddressLine2,\n          city: jobCity,\n          state: jobStateCode,\n          zip: jobZip\n        }\n      }, token);\n      Alert.alert('Saved', 'Job details updated.');\n      loadJob();\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to save job');\n    }\n  };\n  const deleteJob = () => {\n    Alert.alert('Delete job', `Delete job #${jobId}?`, [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Delete',\n      style: 'destructive',\n      onPress: async () => {\n        try {\n          await api(`/jobs/${jobId}`, 'DELETE', null, token);\n          db.transaction(tx => tx.executeSql('DELETE FROM jobs_cache WHERE id=?', [jobId]));\n          Alert.alert('Deleted', 'Job removed.');\n          navigation.navigate('Tabs', {\n            screen: 'Jobs'\n          });\n        } catch (e) {\n          Alert.alert('Error', e.message || 'Unable to delete job');\n        }\n      }\n    }]);\n  };\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(6)\n      },\n      children: [_jsxDEV(Text, {\n        style: {\n          color: palette.text,\n          fontSize: typography.h1,\n          fontWeight: '700'\n        },\n        children: [\"Job #\", jobId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2313,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: {\n          color: palette.muted,\n          marginTop: spacing(0.5),\n          marginBottom: spacing(3)\n        },\n        children: \"Keep job information up to date so the field team always has the latest context.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2314,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          padding: spacing(2.5),\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontSize: typography.small,\n            fontWeight: '700',\n            textTransform: 'uppercase',\n            marginBottom: spacing(1)\n          },\n          children: \"Basics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2319,\n          columnNumber: 11\n        }, this), _jsxDEV(FormInput, {\n          placeholder: \"Job name\",\n          value: jobName,\n          onChangeText: setJobName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2322,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            columnGap: spacing(1.5)\n          },\n          children: [_jsxDEV(View, {\n            style: {\n              flex: 1\n            },\n            children: _jsxDEV(DateInputField, {\n              value: jobStartDate,\n              onChange: setJobStartDate,\n              placeholder: \"Start date\",\n              style: {\n                marginBottom: 0\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2325,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2324,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: {\n              flex: 1\n            },\n            children: _jsxDEV(DateInputField, {\n              value: jobEndDate,\n              onChange: setJobEndDate,\n              placeholder: \"End date\",\n              style: {\n                marginBottom: 0\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2328,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2327,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2323,\n          columnNumber: 11\n        }, this), _jsxDEV(FormInput, {\n          placeholder: \"Notes / scope\",\n          value: jobNotes,\n          onChangeText: setJobNotes,\n          multiline: true,\n          style: {\n            minHeight: 112,\n            textAlignVertical: 'top'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2331,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontWeight: '600',\n            marginTop: spacing(1.5),\n            marginBottom: spacing(0.5)\n          },\n          children: \"Tags\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2338,\n          columnNumber: 11\n        }, this), _jsxDEV(TagInput, {\n          value: jobTags,\n          onChange: setJobTags,\n          placeholder: \"Add job tags (e.g. Roofing, Urgent)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2339,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginTop: spacing(2)\n          },\n          children: [_jsxDEV(QuickAction, {\n            label: \"Delete job\",\n            tone: \"danger\",\n            onPress: deleteJob\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2341,\n            columnNumber: 13\n          }, this), _jsxDEV(TouchableOpacity, {\n            onPress: saveJobDetails,\n            activeOpacity: 0.85,\n            style: {\n              backgroundColor: palette.primary,\n              paddingHorizontal: spacing(2.5),\n              paddingVertical: spacing(1.5),\n              borderRadius: 12\n            },\n            children: _jsxDEV(Text, {\n              style: {\n                color: '#fff',\n                fontWeight: '700'\n              },\n              children: \"Save changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2347,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2342,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2340,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2318,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          padding: spacing(2.5),\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontSize: typography.small,\n            fontWeight: '700',\n            textTransform: 'uppercase',\n            marginBottom: spacing(1)\n          },\n          children: \"Customer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2353,\n          columnNumber: 11\n        }, this), _jsxDEV(FormInput, {\n          placeholder: \"Name\",\n          value: jobCustomerName,\n          onChangeText: setJobCustomerName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2356,\n          columnNumber: 11\n        }, this), _jsxDEV(FormInput, {\n          placeholder: \"Phone\",\n          value: jobCustomerPhone,\n          onChangeText: setJobCustomerPhone,\n          keyboardType: \"phone-pad\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2357,\n          columnNumber: 11\n        }, this), _jsxDEV(FormInput, {\n          placeholder: \"Email\",\n          value: jobCustomerEmail,\n          onChangeText: setJobCustomerEmail,\n          keyboardType: \"email-address\",\n          autoCapitalize: \"none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2358,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2352,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          padding: spacing(2.5),\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontSize: typography.small,\n            fontWeight: '700',\n            textTransform: 'uppercase',\n            marginBottom: spacing(1)\n          },\n          children: \"Jobsite\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2368,\n          columnNumber: 11\n        }, this), _jsxDEV(FormInput, {\n          placeholder: \"Address line 1\",\n          value: jobAddressLine1,\n          onChangeText: setJobAddressLine1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2371,\n          columnNumber: 11\n        }, this), _jsxDEV(FormInput, {\n          placeholder: \"Address line 2\",\n          value: jobAddressLine2,\n          onChangeText: setJobAddressLine2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2372,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            columnGap: spacing(1.5)\n          },\n          children: [_jsxDEV(FormInput, {\n            placeholder: \"City\",\n            value: jobCity,\n            onChangeText: setJobCity,\n            style: {\n              flex: 1,\n              marginBottom: 0\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2374,\n            columnNumber: 13\n          }, this), _jsxDEV(FormInput, {\n            placeholder: \"State\",\n            value: jobStateCode,\n            onChangeText: setJobStateCode,\n            autoCapitalize: \"characters\",\n            style: {\n              width: 96,\n              marginBottom: 0\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2375,\n            columnNumber: 13\n          }, this), _jsxDEV(FormInput, {\n            placeholder: \"ZIP\",\n            value: jobZip,\n            onChangeText: setJobZip,\n            keyboardType: \"numeric\",\n            style: {\n              width: 112,\n              marginBottom: 0\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2382,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2373,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2367,\n        columnNumber: 9\n      }, this), canManageChangeOrders ? _jsxDEV(SurfaceCard, {\n        style: {\n          padding: spacing(2.5),\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontSize: typography.small,\n            fontWeight: '700',\n            textTransform: 'uppercase',\n            marginBottom: spacing(1)\n          },\n          children: \"New change order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2394,\n          columnNumber: 13\n        }, this), _jsxDEV(FormInput, {\n          placeholder: \"Title\",\n          value: title,\n          onChangeText: setTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2397,\n          columnNumber: 13\n        }, this), _jsxDEV(FormInput, {\n          placeholder: \"Amount $\",\n          value: amountDelta,\n          onChangeText: setAmountDelta,\n          keyboardType: \"decimal-pad\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2398,\n          columnNumber: 13\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'flex-end',\n            marginTop: spacing(2)\n          },\n          children: _jsxDEV(TouchableOpacity, {\n            onPress: addCO,\n            activeOpacity: 0.85,\n            style: {\n              backgroundColor: palette.primary,\n              paddingHorizontal: spacing(2.5),\n              paddingVertical: spacing(1.5),\n              borderRadius: 12\n            },\n            children: _jsxDEV(Text, {\n              style: {\n                color: '#fff',\n                fontWeight: '700'\n              },\n              children: \"Add change order\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2405,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2400,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2399,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2393,\n        columnNumber: 11\n      }, this) : null, _jsxDEV(View, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontSize: typography.h2,\n            fontWeight: '700',\n            marginBottom: spacing(1.5)\n          },\n          children: \"Change orders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2412,\n          columnNumber: 11\n        }, this), changeOrders.length === 0 ? _jsxDEV(SurfaceCard, {\n          children: _jsxDEV(Text, {\n            style: {\n              color: palette.muted\n            },\n            children: \"No change orders yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2415,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2414,\n          columnNumber: 13\n        }, this) : changeOrders.map(item => {\n          const statusKey = (item.status || 'PENDING').toUpperCase();\n          const statusTone = (() => {\n            if (statusKey === 'APPROVED') return {\n              bg: '#dcfce7',\n              fg: palette.success,\n              label: 'Approved'\n            };\n            if (statusKey === 'REJECTED') return {\n              bg: '#fee2e2',\n              fg: palette.danger,\n              label: 'Rejected'\n            };\n            return {\n              bg: '#e0f3f0',\n              fg: palette.primaryStrong,\n              label: 'Pending'\n            };\n          })();\n          const amountLabel = formatCurrency(item.amountDelta || 0);\n          return _jsxDEV(SurfaceCard, {\n            style: {\n              marginBottom: spacing(1.5),\n              padding: spacing(2.5)\n            },\n            children: [_jsxDEV(View, {\n              style: {\n                flexDirection: 'row',\n                justifyContent: 'space-between',\n                alignItems: 'center'\n              },\n              children: [_jsxDEV(Text, {\n                style: {\n                  color: palette.text,\n                  fontSize: typography.h2,\n                  fontWeight: '600'\n                },\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2428,\n                columnNumber: 19\n              }, this), _jsxDEV(View, {\n                style: {\n                  backgroundColor: statusTone.bg,\n                  borderRadius: 999,\n                  paddingHorizontal: spacing(1.5),\n                  paddingVertical: spacing(0.5)\n                },\n                children: _jsxDEV(Text, {\n                  style: {\n                    color: statusTone.fg,\n                    fontWeight: '600',\n                    fontSize: typography.small\n                  },\n                  children: statusTone.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2430,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2429,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2427,\n              columnNumber: 17\n            }, this), _jsxDEV(Text, {\n              style: {\n                color: palette.muted,\n                marginTop: spacing(0.5)\n              },\n              children: amountLabel\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2433,\n              columnNumber: 17\n            }, this), canManageChangeOrders ? _jsxDEV(View, {\n              style: {\n                flexDirection: 'row',\n                flexWrap: 'wrap',\n                columnGap: spacing(1),\n                rowGap: spacing(1),\n                marginTop: spacing(1.5)\n              },\n              children: [_jsxDEV(QuickAction, {\n                label: \"Approve\",\n                tone: \"success\",\n                onPress: async () => {\n                  await api(`/change-orders/${item.id}`, 'PATCH', {\n                    status: 'APPROVED'\n                  }, token);\n                  loadCO();\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2436,\n                columnNumber: 21\n              }, this), _jsxDEV(QuickAction, {\n                label: \"Reject\",\n                tone: \"danger\",\n                onPress: async () => {\n                  await api(`/change-orders/${item.id}`, 'PATCH', {\n                    status: 'REJECTED'\n                  }, token);\n                  loadCO();\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2441,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2435,\n              columnNumber: 19\n            }, this) : null]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2426,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2411,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: {\n          color: palette.text,\n          fontSize: typography.h2,\n          fontWeight: '700',\n          marginBottom: spacing(1.5)\n        },\n        children: \"Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2453,\n        columnNumber: 9\n      }, this), _jsxDEV(JobTasks, {\n        jobId: jobId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2454,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: {\n          color: palette.text,\n          fontSize: typography.h2,\n          fontWeight: '700',\n          marginTop: spacing(3),\n          marginBottom: spacing(1.5)\n        },\n        children: \"Schedule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2456,\n        columnNumber: 9\n      }, this), _jsxDEV(JobSchedule, {\n        jobId: jobId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2457,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2310,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 2309,\n    columnNumber: 5\n  }, this);\n}\nfunction JobTasks({\n  jobId\n}) {\n  const {\n    token\n  } = useAuth();\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState('');\n  const [dueDate, setDueDate] = useState('');\n  const load = async () => {\n    try {\n      const data = await api(`/tasks?jobId=${jobId}`, 'GET', null, token);\n      setTasks(data);\n      db.transaction(tx => {\n        tx.executeSql('DELETE FROM tasks_cache WHERE jobId=?', [jobId]);\n        data.forEach(t => tx.executeSql('INSERT OR REPLACE INTO tasks_cache (id, jobId, title, status, dueDate) VALUES (?,?,?,?,?)', [t.id, jobId, t.title || '', t.status || 'TODO', t.dueDate || '']));\n      });\n    } catch (e) {\n      db.transaction(tx => tx.executeSql('SELECT id, jobId, title, status, dueDate FROM tasks_cache WHERE jobId=?', [jobId], (_, {\n        rows\n      }) => setTasks(rows._array || [])));\n    }\n  };\n  useEffect(() => {\n    load();\n  }, []);\n  const add = async () => {\n    if (!title.trim()) return Alert.alert('Title required');\n    await api('/tasks', 'POST', {\n      title,\n      jobId,\n      dueDate\n    }, token);\n    setTitle('');\n    setDueDate('');\n    load();\n  };\n  const done = async id => {\n    await api(`/tasks/${id}`, 'PATCH', {\n      status: 'DONE'\n    }, token);\n    load();\n  };\n  const remove = id => {\n    Alert.alert('Delete task', 'Remove this task?', [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Delete',\n      style: 'destructive',\n      onPress: async () => {\n        await api(`/tasks/${id}`, 'DELETE', null, token);\n        load();\n      }\n    }]);\n  };\n  return _jsxDEV(View, {\n    children: [_jsxDEV(SurfaceCard, {\n      style: {\n        marginBottom: spacing(2)\n      },\n      children: [_jsxDEV(Text, {\n        style: {\n          color: palette.text,\n          fontSize: typography.h2,\n          fontWeight: '600',\n          marginBottom: spacing(1.5)\n        },\n        children: \"Add task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2496,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        placeholder: \"Task title\",\n        placeholderTextColor: palette.muted,\n        value: title,\n        onChangeText: setTitle,\n        style: {\n          borderWidth: 1,\n          borderColor: palette.border,\n          borderRadius: 12,\n          padding: spacing(2),\n          color: palette.text,\n          backgroundColor: palette.surfaceMuted,\n          marginBottom: spacing(1.5)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2497,\n        columnNumber: 9\n      }, this), _jsxDEV(DateInputField, {\n        value: dueDate,\n        onChange: setDueDate,\n        placeholder: \"Due date (optional)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2512,\n        columnNumber: 9\n      }, this), _jsxDEV(QuickAction, {\n        label: \"Add task\",\n        onPress: add\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2513,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2495,\n      columnNumber: 7\n    }, this), tasks.length === 0 ? _jsxDEV(SurfaceCard, {\n      children: _jsxDEV(Text, {\n        style: {\n          color: palette.muted\n        },\n        children: \"No tasks yet. Add one to start tracking progress.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2518,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2517,\n      columnNumber: 9\n    }, this) : tasks.map(t => _jsxDEV(SurfaceCard, {\n      style: {\n        marginBottom: spacing(1.5)\n      },\n      children: [_jsxDEV(Text, {\n        style: {\n          color: palette.text,\n          fontWeight: '600',\n          fontSize: typography.h2 - 2\n        },\n        children: t.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2523,\n        columnNumber: 13\n      }, this), _jsxDEV(Text, {\n        style: {\n          color: palette.muted,\n          marginTop: spacing(0.5)\n        },\n        children: [\"Status: \", t.status || 'TODO', t.dueDate ? ` - Due ${formatDate(t.dueDate)}` : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2524,\n        columnNumber: 13\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          columnGap: spacing(1),\n          rowGap: spacing(1),\n          marginTop: spacing(1.5)\n        },\n        children: [!isTaskCompleted(t.status) ? _jsxDEV(QuickAction, {\n          label: \"Mark done\",\n          tone: \"success\",\n          onPress: () => done(t.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2529,\n          columnNumber: 17\n        }, this) : null, _jsxDEV(QuickAction, {\n          label: \"Delete\",\n          tone: \"danger\",\n          onPress: () => remove(t.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2531,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2527,\n        columnNumber: 13\n      }, this)]\n    }, t.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2522,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 2494,\n    columnNumber: 5\n  }, this);\n}\nfunction JobSchedule({\n  jobId\n}) {\n  const {\n    token\n  } = useAuth();\n  const [events, setEvents] = useState([]);\n  const [title, setTitle] = useState('');\n  const [startAt, setStartAt] = useState('');\n  const [endAt, setEndAt] = useState('');\n  const load = async () => {\n    try {\n      const data = await api(`/calendar?jobId=${jobId}`, 'GET', null, token);\n      setEvents(data);\n      db.transaction(tx => {\n        tx.executeSql('DELETE FROM calendar_cache WHERE jobId=?', [jobId]);\n        data.forEach(ev => tx.executeSql('INSERT OR REPLACE INTO calendar_cache (id, jobId, title, startAt, endAt) VALUES (?,?,?,?,?)', [ev.id, jobId, ev.title || '', ev.startAt || '', ev.endAt || '']));\n      });\n    } catch (e) {\n      db.transaction(tx => tx.executeSql('SELECT id, jobId, title, startAt, endAt FROM calendar_cache WHERE jobId=?', [jobId], (_, {\n        rows\n      }) => setEvents(rows._array || [])));\n    }\n  };\n  useEffect(() => {\n    load();\n  }, []);\n  const add = async () => {\n    if (!title.trim() || !startAt) return Alert.alert('Title and start time required');\n    await api('/calendar', 'POST', {\n      title,\n      jobId,\n      startAt,\n      endAt\n    }, token);\n    setTitle('');\n    setStartAt('');\n    setEndAt('');\n    load();\n  };\n  const remove = id => {\n    Alert.alert('Delete event', 'Remove this schedule item?', [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Delete',\n      style: 'destructive',\n      onPress: async () => {\n        await api(`/calendar/${id}`, 'DELETE', null, token);\n        load();\n      }\n    }]);\n  };\n  return _jsxDEV(View, {\n    children: [_jsxDEV(SurfaceCard, {\n      style: {\n        marginBottom: spacing(2)\n      },\n      children: [_jsxDEV(Text, {\n        style: {\n          color: palette.text,\n          fontSize: typography.h2,\n          fontWeight: '600',\n          marginBottom: spacing(1.5)\n        },\n        children: \"Schedule event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2573,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        placeholder: \"Event title\",\n        placeholderTextColor: palette.muted,\n        value: title,\n        onChangeText: setTitle,\n        style: {\n          borderWidth: 1,\n          borderColor: palette.border,\n          borderRadius: 12,\n          padding: spacing(2),\n          color: palette.text,\n          backgroundColor: palette.surfaceMuted,\n          marginBottom: spacing(1.5)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2574,\n        columnNumber: 9\n      }, this), _jsxDEV(DateInputField, {\n        value: startAt,\n        onChange: date => {\n          const existing = startAt || '';\n          const timePartIndex = existing.indexOf('T');\n          const timePart = timePartIndex > -1 ? existing.substring(timePartIndex) : 'T08:00:00';\n          setStartAt(`${date}${timePart}`);\n        },\n        placeholder: \"Start date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2589,\n        columnNumber: 9\n      }, this), _jsxDEV(DateInputField, {\n        value: endAt,\n        onChange: date => {\n          if (!date) {\n            setEndAt('');\n            return;\n          }\n          const existing = endAt || '';\n          const timePartIndex = existing.indexOf('T');\n          const timePart = timePartIndex > -1 ? existing.substring(timePartIndex) : 'T17:00:00';\n          setEndAt(`${date}${timePart}`);\n        },\n        placeholder: \"End date (optional)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2599,\n        columnNumber: 9\n      }, this), _jsxDEV(QuickAction, {\n        label: \"Add event\",\n        onPress: add\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2613,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2572,\n      columnNumber: 7\n    }, this), events.length === 0 ? _jsxDEV(SurfaceCard, {\n      children: _jsxDEV(Text, {\n        style: {\n          color: palette.muted\n        },\n        children: \"No schedule entries yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2618,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2617,\n      columnNumber: 9\n    }, this) : events.map(ev => {\n      const startLabel = ev.startAt ? `Starts ${formatDate(ev.startAt)}` : 'No start date';\n      const endLabel = ev.endAt ? ` - Ends ${formatDate(ev.endAt)}` : '';\n      return _jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(1.5)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontWeight: '600',\n            fontSize: typography.h2 - 2\n          },\n          children: ev.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2626,\n          columnNumber: 15\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(0.5)\n          },\n          children: [startLabel, endLabel]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2627,\n          columnNumber: 15\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            columnGap: spacing(1),\n            marginTop: spacing(1.5)\n          },\n          children: _jsxDEV(QuickAction, {\n            label: \"Delete\",\n            tone: \"danger\",\n            onPress: () => remove(ev.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2631,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2630,\n          columnNumber: 15\n        }, this)]\n      }, ev.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2625,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 2571,\n    columnNumber: 5\n  }, this);\n}\nasync function processQueue(token) {\n  return new Promise(resolve => {\n    db.transaction(tx => {\n      tx.executeSql('SELECT * FROM queue', [], async (_, {\n        rows\n      }) => {\n        const items = rows._array || [];\n        for (const q of items) {\n          try {\n            const payload = JSON.parse(q.payload);\n            if (q.type === 'createLead') {\n              await api('/leads', 'POST', payload, token);\n            }\n            if (q.type === 'uploadPhoto') {\n              await api('/upload/image', 'POST', {\n                dataUrl: payload.dataUrl\n              }, token);\n            }\n            db.transaction(txx => txx.executeSql('DELETE FROM queue WHERE id=?', [q.id]));\n          } catch (e) {}\n        }\n        resolve();\n      });\n    });\n  });\n}\nfunction LeadsScreen({\n  navigation\n}) {\n  const {\n    token\n  } = useAuth();\n  const [leads, setLeads] = useState([]);\n  const [refreshing, setRefreshing] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const fetchLeads = useCallback(async () => {\n    setLoading(true);\n    try {\n      const data = await api('/leads', 'GET', null, token);\n      setLeads(data);\n      db.transaction(tx => {\n        tx.executeSql && tx.executeSql('DELETE FROM leads_cache;');\n        data.forEach(l => tx.executeSql && tx.executeSql('INSERT OR REPLACE INTO leads_cache (id, description, status) VALUES (?,?,?)', [l.id, l.description || '', l.status || 'NEW']));\n      });\n    } catch (e) {\n      db.transaction(tx => tx.executeSql && tx.executeSql('SELECT id, description, status FROM leads_cache', [], (_, {\n        rows\n      }) => setLeads(rows._array || [])));\n    } finally {\n      setLoading(false);\n    }\n  }, [token]);\n  useFocusEffect(useCallback(() => {\n    fetchLeads();\n  }, [fetchLeads]));\n  const onRefresh = useCallback(async () => {\n    setRefreshing(true);\n    await fetchLeads();\n    setRefreshing(false);\n  }, [fetchLeads]);\n  const deleteLead = useCallback(lead => {\n    const title = deriveLeadTitle(lead);\n    Alert.alert('Delete lead', `Remove \"${title}\"?`, [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Delete',\n      style: 'destructive',\n      onPress: async () => {\n        try {\n          await api(`/leads/${lead.id}`, 'DELETE', null, token);\n          setLeads(prev => prev.filter(l => l.id !== lead.id));\n          db.transaction(tx => tx.executeSql && tx.executeSql('DELETE FROM leads_cache WHERE id=?', [lead.id]));\n        } catch (err) {\n          Alert.alert('Error', err.message || 'Unable to delete lead');\n        }\n      }\n    }]);\n  }, [token]);\n  const newLeadsCount = leads.filter(l => (l.status || '').toUpperCase() === 'NEW').length;\n  const renderLeadCard = lead => {\n    const customer = lead.Customer || {};\n    const title = deriveLeadTitle(lead);\n    const subtitle = customer.name && customer.name.trim() && customer.name.trim() !== title ? customer.name : null;\n    const jobsite = lead.Jobsite || {};\n    const addressParts = [jobsite.addressLine1, jobsite.addressLine2, [jobsite.city, jobsite.state].filter(Boolean).join(', '), jobsite.zip].filter(Boolean);\n    const address = addressParts.join(', ');\n    const statusKey = (lead.status || 'NEW').toUpperCase();\n    return _jsxDEV(SurfaceCard, {\n      children: [_jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        children: [_jsxDEV(View, {\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.text,\n              fontSize: typography.h2,\n              fontWeight: '600'\n            },\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2734,\n            columnNumber: 13\n          }, this), subtitle ? _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.5)\n            },\n            children: subtitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2735,\n            columnNumber: 25\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2733,\n          columnNumber: 11\n        }, this), _jsxDEV(StatusPill, {\n          status: statusKey\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2737,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2732,\n        columnNumber: 9\n      }, this), customer.phone ? _jsxDEV(Text, {\n        style: {\n          color: palette.muted,\n          marginTop: spacing(0.5)\n        },\n        children: customer.phone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2739,\n        columnNumber: 27\n      }, this) : null, customer.email ? _jsxDEV(Text, {\n        style: {\n          color: palette.muted\n        },\n        children: customer.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2740,\n        columnNumber: 27\n      }, this) : null, address ? _jsxDEV(Text, {\n        style: {\n          color: palette.muted,\n          marginTop: spacing(1)\n        },\n        children: address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2741,\n        columnNumber: 20\n      }, this) : null, _jsxDEV(Text, {\n        numberOfLines: 3,\n        style: {\n          color: palette.text,\n          marginTop: spacing(1.5)\n        },\n        children: lead.description || 'No scope captured yet.'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2742,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          columnGap: spacing(1),\n          rowGap: spacing(1),\n          marginTop: spacing(2)\n        },\n        children: [_jsxDEV(QuickAction, {\n          label: \"Open\",\n          onPress: () => navigation.navigate('EstimateEditor', {\n            leadId: lead.id\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2744,\n          columnNumber: 11\n        }, this), _jsxDEV(QuickAction, {\n          label: \"Convert\",\n          tone: \"success\",\n          onPress: () => navigation.navigate('Jobs')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2745,\n          columnNumber: 11\n        }, this), _jsxDEV(QuickAction, {\n          label: \"Delete\",\n          tone: \"danger\",\n          onPress: () => deleteLead(lead)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2746,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2743,\n        columnNumber: 9\n      }, this)]\n    }, lead.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2731,\n      columnNumber: 7\n    }, this);\n  };\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(FlatList, {\n      data: leads,\n      keyExtractor: item => String(item.id),\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(4)\n      },\n      refreshControl: _jsxDEV(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh,\n        tintColor: palette.primary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2758,\n        columnNumber: 25\n      }, this),\n      ListHeaderComponent: _jsxDEV(View, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginBottom: spacing(2)\n          },\n          children: [_jsxDEV(View, {\n            children: [_jsxDEV(Text, {\n              style: {\n                color: palette.text,\n                fontSize: typography.h1,\n                fontWeight: '700'\n              },\n              children: \"Leads\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2763,\n              columnNumber: 17\n            }, this), _jsxDEV(Text, {\n              style: {\n                color: palette.muted,\n                marginTop: spacing(0.5)\n              },\n              children: \"Keep the funnel moving\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2764,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2762,\n            columnNumber: 15\n          }, this), _jsxDEV(QuickAction, {\n            label: \"New lead\",\n            onPress: () => navigation.navigate('NewLead')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2766,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2761,\n          columnNumber: 13\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            columnGap: spacing(2),\n            rowGap: spacing(2)\n          },\n          children: [_jsxDEV(View, {\n            style: {\n              flexBasis: '48%',\n              minWidth: 160\n            },\n            children: _jsxDEV(SummaryCard, {\n              title: \"Total\",\n              value: leads.length,\n              subtitle: `${newLeadsCount} new`,\n              tone: \"info\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2770,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2769,\n            columnNumber: 15\n          }, this), _jsxDEV(View, {\n            style: {\n              flexBasis: '48%',\n              minWidth: 160\n            },\n            children: _jsxDEV(SummaryCard, {\n              title: \"Outstanding\",\n              value: newLeadsCount,\n              subtitle: \"Require follow up\",\n              tone: \"warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2773,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2772,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2768,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2760,\n        columnNumber: 11\n      }, this),\n      renderItem: ({\n        item\n      }) => renderLeadCard(item),\n      ListEmptyComponent: loading ? _jsxDEV(SurfaceCard, {\n        style: {\n          alignItems: 'center',\n          paddingVertical: spacing(4)\n        },\n        children: [_jsxDEV(ActivityIndicator, {\n          color: palette.primary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2782,\n          columnNumber: 15\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(1)\n          },\n          children: \"Loading leads...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2783,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2781,\n        columnNumber: 13\n      }, this) : _jsxDEV(SurfaceCard, {\n        children: _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: \"No leads yet. Capture a lead to get started.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2787,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2786,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2754,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 2753,\n    columnNumber: 5\n  }, this);\n}\nfunction NewLeadScreen({\n  navigation\n}) {\n  const {\n    token\n  } = useAuth();\n  const [description, setDescription] = useState('');\n  const [status, setStatus] = useState('NEW');\n  const [customerName, setCustomerName] = useState('');\n  const [customerPhone, setCustomerPhone] = useState('');\n  const [customerEmail, setCustomerEmail] = useState('');\n  const [addressLine1, setAddressLine1] = useState('');\n  const [addressLine2, setAddressLine2] = useState('');\n  const [city, setCity] = useState('');\n  const [stateCode, setStateCode] = useState('');\n  const [zip, setZip] = useState('');\n  const [showCustomerSection, setShowCustomerSection] = useState(false);\n  const [showJobsiteSection, setShowJobsiteSection] = useState(false);\n  const statuses = ['NEW', 'CONTACTED', 'ESTIMATING', 'CONVERTED', 'CLOSED_LOST'];\n  const buildPayload = () => {\n    const customer = [customerName, customerPhone, customerEmail].some(v => v && v.trim()) ? {\n      name: customerName.trim(),\n      phone: customerPhone.trim(),\n      email: customerEmail.trim()\n    } : null;\n    const jobsite = [addressLine1, addressLine2, city, stateCode, zip].some(v => v && v.trim()) ? {\n      addressLine1: addressLine1.trim(),\n      addressLine2: addressLine2.trim(),\n      city: city.trim(),\n      state: stateCode.trim(),\n      zip: zip.trim()\n    } : null;\n    return {\n      description,\n      status,\n      customer,\n      jobsite\n    };\n  };\n  const createLeadOnline = async () => {\n    const payload = buildPayload();\n    const created = await api('/leads', 'POST', payload, token);\n    navigation.replace('EstimateEditor', {\n      leadId: created.id\n    });\n    const title = deriveLeadTitle(created);\n    Alert.alert('Lead created', `\"${title}\" is ready to estimate.`);\n  };\n  const queueLead = () => {\n    const payload = buildPayload();\n    db.transaction(tx => tx.executeSql('INSERT INTO queue (type, payload) VALUES (?,?)', ['createLead', JSON.stringify(payload)]));\n    Alert.alert('Saved offline', 'We will submit this lead when you reconnect.');\n    navigation.goBack();\n  };\n  const submit = async () => {\n    if (!description.trim()) {\n      Alert.alert('Missing scope', 'Please describe the job or scope of work.');\n      return;\n    }\n    try {\n      await createLeadOnline();\n    } catch (e) {\n      queueLead();\n    }\n  };\n  const chipStyle = active => ({\n    paddingHorizontal: spacing(2),\n    paddingVertical: spacing(1),\n    borderRadius: 999,\n    borderWidth: 1,\n    borderColor: active ? palette.primary : palette.border,\n    backgroundColor: active ? '#d9f2ed' : palette.surface\n  });\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(6)\n      },\n      children: [_jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontSize: typography.h1,\n            fontWeight: '700',\n            marginBottom: spacing(2)\n          },\n          children: \"New lead\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2876,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontWeight: '600',\n            marginBottom: spacing(1)\n          },\n          children: \"Scope\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2877,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Describe the job...\",\n          placeholderTextColor: palette.muted,\n          value: description,\n          onChangeText: setDescription,\n          multiline: true,\n          style: {\n            borderWidth: 1,\n            borderColor: palette.border,\n            borderRadius: 12,\n            padding: spacing(2),\n            minHeight: 120,\n            color: palette.text,\n            backgroundColor: palette.surfaceMuted,\n            textAlignVertical: 'top'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2878,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontWeight: '600',\n            marginTop: spacing(2),\n            marginBottom: spacing(1)\n          },\n          children: \"Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2895,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            columnGap: spacing(1),\n            rowGap: spacing(1)\n          },\n          children: statuses.map(s => {\n            const active = status === s;\n            return _jsxDEV(TouchableOpacity, {\n              onPress: () => setStatus(s),\n              activeOpacity: 0.85,\n              style: chipStyle(active),\n              children: _jsxDEV(Text, {\n                style: {\n                  color: active ? palette.primaryStrong : palette.muted,\n                  fontWeight: '600',\n                  fontSize: typography.small\n                },\n                children: s.replace('_', ' ')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2901,\n                columnNumber: 19\n              }, this)\n            }, s, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2900,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2896,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginTop: spacing(3)\n          },\n          children: [_jsxDEV(QuickAction, {\n            label: \"Save offline\",\n            tone: \"muted\",\n            onPress: queueLead\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2907,\n            columnNumber: 13\n          }, this), _jsxDEV(TouchableOpacity, {\n            onPress: submit,\n            activeOpacity: 0.85,\n            style: {\n              backgroundColor: palette.primary,\n              paddingHorizontal: spacing(3),\n              paddingVertical: spacing(1.5),\n              borderRadius: 12\n            },\n            children: _jsxDEV(Text, {\n              style: {\n                color: '#fff',\n                fontWeight: '700'\n              },\n              children: \"Create lead\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2913,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2908,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2906,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2875,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(TouchableOpacity, {\n          onPress: () => setShowCustomerSection(v => !v),\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n          },\n          activeOpacity: 0.8,\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.text,\n              fontSize: typography.h2,\n              fontWeight: '600'\n            },\n            children: \"Customer details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2924,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.primary,\n              fontWeight: '600'\n            },\n            children: showCustomerSection ? 'Hide' : 'Add'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2925,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2919,\n          columnNumber: 11\n        }, this), showCustomerSection ? _jsxDEV(View, {\n          style: {\n            marginTop: spacing(2)\n          },\n          children: [_jsxDEV(TextInput, {\n            placeholder: \"Name\",\n            placeholderTextColor: palette.muted,\n            value: customerName,\n            onChangeText: setCustomerName,\n            style: {\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted,\n              marginBottom: spacing(1.5)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2929,\n            columnNumber: 15\n          }, this), _jsxDEV(TextInput, {\n            placeholder: \"Phone\",\n            placeholderTextColor: palette.muted,\n            keyboardType: \"phone-pad\",\n            value: customerPhone,\n            onChangeText: setCustomerPhone,\n            style: {\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted,\n              marginBottom: spacing(1.5)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2944,\n            columnNumber: 15\n          }, this), _jsxDEV(TextInput, {\n            placeholder: \"Email\",\n            placeholderTextColor: palette.muted,\n            keyboardType: \"email-address\",\n            autoCapitalize: \"none\",\n            value: customerEmail,\n            onChangeText: setCustomerEmail,\n            style: {\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2960,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2928,\n          columnNumber: 13\n        }, this) : _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(1.5)\n          },\n          children: \"Add contact details to help follow up faster.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2978,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2918,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        children: [_jsxDEV(TouchableOpacity, {\n          onPress: () => setShowJobsiteSection(v => !v),\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n          },\n          activeOpacity: 0.8,\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.text,\n              fontSize: typography.h2,\n              fontWeight: '600'\n            },\n            children: \"Jobsite address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2988,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.primary,\n              fontWeight: '600'\n            },\n            children: showJobsiteSection ? 'Hide' : 'Add'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2989,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2983,\n          columnNumber: 11\n        }, this), showJobsiteSection ? _jsxDEV(View, {\n          style: {\n            marginTop: spacing(2)\n          },\n          children: [_jsxDEV(TextInput, {\n            placeholder: \"Address line 1\",\n            placeholderTextColor: palette.muted,\n            value: addressLine1,\n            onChangeText: setAddressLine1,\n            style: {\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted,\n              marginBottom: spacing(1.5)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2993,\n            columnNumber: 15\n          }, this), _jsxDEV(TextInput, {\n            placeholder: \"Address line 2\",\n            placeholderTextColor: palette.muted,\n            value: addressLine2,\n            onChangeText: setAddressLine2,\n            style: {\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted,\n              marginBottom: spacing(1.5)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3008,\n            columnNumber: 15\n          }, this), _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              columnGap: spacing(1.5)\n            },\n            children: [_jsxDEV(View, {\n              style: {\n                flex: 1\n              },\n              children: _jsxDEV(TextInput, {\n                placeholder: \"City\",\n                placeholderTextColor: palette.muted,\n                value: city,\n                onChangeText: setCity,\n                style: {\n                  borderWidth: 1,\n                  borderColor: palette.border,\n                  borderRadius: 12,\n                  padding: spacing(2),\n                  color: palette.text,\n                  backgroundColor: palette.surfaceMuted,\n                  marginBottom: spacing(1.5)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3025,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3024,\n              columnNumber: 17\n            }, this), _jsxDEV(View, {\n              style: {\n                width: 80\n              },\n              children: _jsxDEV(TextInput, {\n                placeholder: \"State\",\n                placeholderTextColor: palette.muted,\n                value: stateCode,\n                onChangeText: setStateCode,\n                style: {\n                  borderWidth: 1,\n                  borderColor: palette.border,\n                  borderRadius: 12,\n                  padding: spacing(2),\n                  color: palette.text,\n                  backgroundColor: palette.surfaceMuted,\n                  marginBottom: spacing(1.5)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3042,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3041,\n              columnNumber: 17\n            }, this), _jsxDEV(View, {\n              style: {\n                width: 100\n              },\n              children: _jsxDEV(TextInput, {\n                placeholder: \"ZIP\",\n                placeholderTextColor: palette.muted,\n                value: zip,\n                onChangeText: setZip,\n                style: {\n                  borderWidth: 1,\n                  borderColor: palette.border,\n                  borderRadius: 12,\n                  padding: spacing(2),\n                  color: palette.text,\n                  backgroundColor: palette.surfaceMuted,\n                  marginBottom: spacing(1.5)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3059,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3058,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3023,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2992,\n          columnNumber: 13\n        }, this) : _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(1.5)\n          },\n          children: \"Add a jobsite to keep crews aligned.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3078,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2982,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2874,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 2873,\n    columnNumber: 5\n  }, this);\n}\nfunction EstimateEditorScreen({\n  route,\n  navigation\n}) {\n  const {\n    token,\n    user\n  } = useAuth();\n  const {\n    leadId\n  } = route.params || {};\n  const [estimateId, setEstimateId] = useState(null);\n  const [items, setItems] = useState([]);\n  const [desc, setDesc] = useState('');\n  const [qty, setQty] = useState('1');\n  const [price, setPrice] = useState('0');\n  const [notes, setNotes] = useState('');\n  const [photoUrl, setPhotoUrl] = useState(null);\n  const [subtotal, setSubtotal] = useState(0);\n  const [taxRate, setTaxRate] = useState('7');\n  const [tax, setTax] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [leadDetails, setLeadDetails] = useState(null);\n  const [leadStatus, setLeadStatus] = useState('NEW');\n  const [leadScope, setLeadScope] = useState('');\n  const [leadCustomerName, setLeadCustomerName] = useState('');\n  const [leadCustomerPhone, setLeadCustomerPhone] = useState('');\n  const [leadCustomerEmail, setLeadCustomerEmail] = useState('');\n  const [leadAddressLine1, setLeadAddressLine1] = useState('');\n  const [leadAddressLine2, setLeadAddressLine2] = useState('');\n  const [leadCity, setLeadCity] = useState('');\n  const [leadStateCode, setLeadStateCode] = useState('');\n  const [leadZip, setLeadZip] = useState('');\n  const leadStatuses = ['NEW', 'CONTACTED', 'ESTIMATING', 'CONVERTED', 'CLOSED_LOST'];\n  const loadLead = useCallback(async () => {\n    if (!leadId) return;\n    try {\n      const data = await api(`/leads/${leadId}`, 'GET', null, token);\n      setLeadDetails(data);\n      setLeadStatus(data.status || 'NEW');\n      setLeadScope(data.description || '');\n      const customer = data.Customer || {};\n      const jobsite = data.Jobsite || {};\n      setLeadCustomerName(customer.name || '');\n      setLeadCustomerPhone(customer.phone || '');\n      setLeadCustomerEmail(customer.email || '');\n      setLeadAddressLine1(jobsite.addressLine1 || '');\n      setLeadAddressLine2(jobsite.addressLine2 || '');\n      setLeadCity(jobsite.city || '');\n      setLeadStateCode(jobsite.state || '');\n      setLeadZip(jobsite.zip || '');\n    } catch (e) {}\n  }, [leadId, token]);\n  useEffect(() => {\n    loadLead();\n  }, [loadLead]);\n  const createEstimate = async () => {\n    const est = await api('/estimates', 'POST', {\n      leadId,\n      customerId: leadDetails?.customerId ?? null,\n      jobsiteId: leadDetails?.jobsiteId ?? null,\n      subtotal: 0,\n      taxRate: parseFloat(taxRate) || 0,\n      total: 0\n    }, token);\n    setEstimateId(est.id);\n    return est;\n  };\n  const ensureEstimate = useCallback(async () => {\n    if (estimateId) return estimateId;\n    const created = await createEstimate();\n    setEstimateId(created.id);\n    return created.id;\n  }, [estimateId, createEstimate]);\n  useEffect(() => {\n    const rate = parseFloat(taxRate) || 0;\n    const newSubtotal = items.reduce((sum, item) => sum + parseFloat(item.qty || 0) * parseFloat(item.unitPrice || 0), 0);\n    const newTax = newSubtotal * (rate / 100);\n    setSubtotal(newSubtotal);\n    setTax(newTax);\n    setTotal(newSubtotal + newTax);\n  }, [items, taxRate]);\n  const addItem = async () => {\n    if (!desc.trim()) {\n      Alert.alert('Line item', 'Please add a description.');\n      return;\n    }\n    try {\n      const targetId = await ensureEstimate();\n      const payload = {\n        description: desc.trim(),\n        qty: parseFloat(qty) || 1,\n        unitPrice: parseFloat(price) || 0\n      };\n      const item = await api(`/estimates/${targetId}/items`, 'POST', payload, token);\n      setItems(prev => [item, ...prev]);\n      setDesc('');\n      setQty('1');\n      setPrice('0');\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to add line item');\n    }\n  };\n  const saveLeadDetails = async () => {\n    if (!leadId) return;\n    const customerPayload = [leadCustomerName, leadCustomerPhone, leadCustomerEmail].some(v => v && v.trim()) ? {\n      name: leadCustomerName.trim(),\n      phone: leadCustomerPhone.trim(),\n      email: leadCustomerEmail.trim()\n    } : null;\n    const jobsitePayload = [leadAddressLine1, leadAddressLine2, leadCity, leadStateCode, leadZip].some(v => v && v.trim()) ? {\n      addressLine1: leadAddressLine1.trim(),\n      addressLine2: leadAddressLine2.trim(),\n      city: leadCity.trim(),\n      state: leadStateCode.trim(),\n      zip: leadZip.trim()\n    } : null;\n    try {\n      await api(`/leads/${leadId}`, 'PATCH', {\n        description: leadScope,\n        status: leadStatus,\n        customer: customerPayload,\n        jobsite: jobsitePayload\n      }, token);\n      Alert.alert('Saved', 'Lead details updated.');\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to save lead details');\n    }\n  };\n  const pickPhoto = async () => {\n    const result = await ImagePicker.launchImageLibraryAsync({\n      allowsEditing: false,\n      quality: 0.6\n    });\n    if (!result.canceled && result.assets?.length) {\n      setPhotoUrl(result.assets[0].uri);\n    }\n  };\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(6)\n      },\n      children: [_jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontSize: typography.h2,\n            fontWeight: '700',\n            marginBottom: spacing(1.5)\n          },\n          children: \"Lead summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3228,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            columnGap: spacing(1),\n            rowGap: spacing(1.5),\n            marginBottom: spacing(2)\n          },\n          children: leadStatuses.map(s => {\n            const selected = leadStatus === s;\n            return _jsxDEV(QuickAction, {\n              label: s.replace('_', ' '),\n              tone: selected ? 'primary' : 'muted',\n              onPress: () => setLeadStatus(s)\n            }, s, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3233,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3229,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Scope / project notes\",\n          placeholderTextColor: palette.muted,\n          value: leadScope,\n          onChangeText: setLeadScope,\n          multiline: true,\n          style: {\n            borderWidth: 1,\n            borderColor: palette.border,\n            borderRadius: 12,\n            padding: spacing(2),\n            minHeight: 120,\n            color: palette.text,\n            backgroundColor: palette.surfaceMuted,\n            textAlignVertical: 'top'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3242,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'flex-end',\n            marginTop: spacing(2)\n          },\n          children: _jsxDEV(QuickAction, {\n            label: \"Save lead\",\n            onPress: saveLeadDetails\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3260,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3259,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3227,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontSize: typography.h2,\n            fontWeight: '700',\n            marginBottom: spacing(1.5)\n          },\n          children: \"Line items\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3265,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Describe the work or material\",\n          placeholderTextColor: palette.muted,\n          value: desc,\n          onChangeText: setDesc,\n          style: {\n            borderWidth: 1,\n            borderColor: palette.border,\n            borderRadius: 12,\n            padding: spacing(2),\n            color: palette.text,\n            backgroundColor: palette.surfaceMuted,\n            marginBottom: spacing(1.5)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3266,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            columnGap: spacing(1.5),\n            marginBottom: spacing(1.5)\n          },\n          children: [_jsxDEV(TextInput, {\n            placeholder: \"Qty\",\n            placeholderTextColor: palette.muted,\n            value: qty,\n            onChangeText: setQty,\n            keyboardType: \"numeric\",\n            style: {\n              flex: 1,\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3282,\n            columnNumber: 13\n          }, this), _jsxDEV(TextInput, {\n            placeholder: \"Unit price\",\n            placeholderTextColor: palette.muted,\n            value: price,\n            onChangeText: setPrice,\n            keyboardType: \"numeric\",\n            style: {\n              flex: 1,\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3298,\n            columnNumber: 13\n          }, this), _jsxDEV(QuickAction, {\n            label: \"Add\",\n            onPress: addItem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3314,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3281,\n          columnNumber: 11\n        }, this), items.length === 0 ? _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: \"No line items yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3317,\n          columnNumber: 13\n        }, this) : items.map((item, idx) => _jsxDEV(SurfaceCard, {\n          style: {\n            marginBottom: spacing(1.5)\n          },\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.text,\n              fontWeight: '600'\n            },\n            children: item.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3321,\n            columnNumber: 17\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.5)\n            },\n            children: [\"Qty \", item.qty, \" x $\", parseFloat(item.unitPrice || 0).toFixed(2), \" = \", (parseFloat(item.qty || 0) * parseFloat(item.unitPrice || 0)).toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3322,\n            columnNumber: 17\n          }, this)]\n        }, item.id || idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3320,\n          columnNumber: 15\n        }, this)), _jsxDEV(View, {\n          style: {\n            marginTop: spacing(2),\n            borderTopWidth: 1,\n            borderTopColor: palette.border,\n            paddingTop: spacing(2)\n          },\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.muted\n            },\n            children: \"Tax rate (%)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3329,\n            columnNumber: 13\n          }, this), _jsxDEV(TextInput, {\n            value: String(taxRate),\n            onChangeText: setTaxRate,\n            keyboardType: \"numeric\",\n            placeholderTextColor: palette.muted,\n            style: {\n              marginTop: spacing(1),\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3330,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: {\n              marginTop: spacing(2)\n            },\n            children: [_jsxDEV(Text, {\n              style: {\n                color: palette.text\n              },\n              children: [\"Subtotal: $\", subtotal.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3346,\n              columnNumber: 15\n            }, this), _jsxDEV(Text, {\n              style: {\n                color: palette.text\n              },\n              children: [\"Tax: $\", tax.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3347,\n              columnNumber: 15\n            }, this), _jsxDEV(Text, {\n              style: {\n                color: palette.text,\n                fontWeight: '700'\n              },\n              children: [\"Total: $\", total.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3348,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3345,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3328,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3264,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontSize: typography.h2,\n            fontWeight: '700',\n            marginBottom: spacing(1.5)\n          },\n          children: \"Attachments & notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3354,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Internal notes\",\n          placeholderTextColor: palette.muted,\n          value: notes,\n          onChangeText: setNotes,\n          multiline: true,\n          style: {\n            borderWidth: 1,\n            borderColor: palette.border,\n            borderRadius: 12,\n            padding: spacing(2),\n            minHeight: 100,\n            color: palette.text,\n            backgroundColor: palette.surfaceMuted,\n            textAlignVertical: 'top'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3355,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            columnGap: spacing(1.5),\n            marginTop: spacing(1.5)\n          },\n          children: _jsxDEV(QuickAction, {\n            label: \"Add photo\",\n            onPress: pickPhoto\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3373,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3372,\n          columnNumber: 11\n        }, this), photoUrl ? _jsxDEV(Image, {\n          source: {\n            uri: photoUrl\n          },\n          style: {\n            height: 160,\n            borderRadius: 12,\n            marginTop: spacing(2)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3376,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3353,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 3226,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3225,\n    columnNumber: 5\n  }, this);\n}\nfunction ScheduleScreen({\n  navigation\n}) {\n  const {\n    token\n  } = useAuth();\n  const [jobs, setJobs] = useState([]);\n  const [filter, setFilter] = useState('ALL');\n  const [queueCount, setQueueCount] = useState(0);\n  const [syncing, setSyncing] = useState(false);\n  const loadQueueCount = useCallback(() => {\n    db.transaction(tx => tx.executeSql('SELECT COUNT(*) as c FROM queue', [], (_, {\n      rows\n    }) => setQueueCount(rows._array?.[0]?.c || 0)));\n  }, []);\n  const load = useCallback(async () => {\n    try {\n      const data = await api('/jobs', 'GET', null, token);\n      setJobs(data);\n      db.transaction(tx => {\n        tx.executeSql('DELETE FROM jobs_cache;');\n        data.forEach(j => tx.executeSql('INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)', [j.id, j.name || '', j.status || 'SCHEDULED', j.startDate || '', j.endDate || '', j.notes || '']));\n      });\n    } catch (e) {\n      db.transaction(tx => tx.executeSql('SELECT id, name, status, startDate, endDate, notes FROM jobs_cache', [], (_, {\n        rows\n      }) => setJobs(rows._array || [])));\n    }\n  }, [token]);\n  useEffect(() => {\n    load();\n    loadQueueCount();\n  }, [load, loadQueueCount]);\n  const filters = [{\n    key: 'ALL',\n    label: 'All'\n  }, {\n    key: 'TODAY',\n    label: 'Today'\n  }, {\n    key: 'WEEK',\n    label: 'This week'\n  }];\n  const inRange = useCallback(dateValue => {\n    if (filter === 'ALL') return true;\n    if (!dateValue) return false;\n    const today = new Date();\n    const dt = new Date(dateValue);\n    if (Number.isNaN(dt.getTime())) return false;\n    if (filter === 'TODAY') {\n      return dt.getFullYear() === today.getFullYear() && dt.getMonth() === today.getMonth() && dt.getDate() === today.getDate();\n    }\n    const start = new Date(today);\n    start.setHours(0, 0, 0, 0);\n    start.setDate(today.getDate() - today.getDay());\n    const end = new Date(start);\n    end.setDate(start.getDate() + 6);\n    return dt >= start && dt <= end;\n  }, [filter]);\n  const filteredJobs = useMemo(() => jobs.filter(job => inRange(job.startDate)).sort((a, b) => new Date(a.startDate || 0) - new Date(b.startDate || 0)), [jobs, inRange]);\n  const handleSync = useCallback(async () => {\n    setSyncing(true);\n    try {\n      await processQueue(token);\n      await load();\n      loadQueueCount();\n    } finally {\n      setSyncing(false);\n    }\n  }, [token, load, loadQueueCount]);\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(6)\n      },\n      children: [_jsxDEV(Text, {\n        style: {\n          color: palette.text,\n          fontSize: typography.h1,\n          fontWeight: '700',\n          marginBottom: spacing(2)\n        },\n        children: \"Schedule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3456,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          columnGap: spacing(1),\n          rowGap: spacing(1.5),\n          marginBottom: spacing(2)\n        },\n        children: filters.map(option => _jsxDEV(QuickAction, {\n          label: option.label,\n          tone: filter === option.key ? 'primary' : 'muted',\n          onPress: () => setFilter(option.key)\n        }, option.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3459,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3457,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3),\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        children: [_jsxDEV(View, {\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.text,\n              fontWeight: '600'\n            },\n            children: \"Offline queue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3469,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.5)\n            },\n            children: [queueCount, \" items waiting to sync\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3470,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3468,\n          columnNumber: 11\n        }, this), _jsxDEV(QuickAction, {\n          label: syncing ? 'Syncing...' : 'Sync now',\n          tone: syncing ? 'muted' : 'primary',\n          onPress: syncing ? undefined : handleSync\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3472,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3467,\n        columnNumber: 9\n      }, this), filteredJobs.length === 0 ? _jsxDEV(SurfaceCard, {\n        children: _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: [\"No jobs \", filter !== 'ALL' ? 'in this range' : 'scheduled yet', \". Convert a lead or create a job to populate your schedule.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3477,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3476,\n        columnNumber: 11\n      }, this) : filteredJobs.map(job => {\n        const jobsite = job.Jobsite || {};\n        const addressParts = [jobsite.addressLine1, jobsite.addressLine2, [jobsite.city, jobsite.state].filter(Boolean).join(', '), jobsite.zip].filter(Boolean);\n        const address = addressParts.join(', ');\n        const startLabel = job.startDate ? `Starts ${formatDate(job.startDate)}` : 'No start date';\n        const endLabel = job.endDate ? ` - Due ${formatDate(job.endDate)}` : '';\n        return _jsxDEV(SurfaceCard, {\n          style: {\n            marginBottom: spacing(2)\n          },\n          children: [_jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center'\n            },\n            children: [_jsxDEV(Text, {\n              style: {\n                color: palette.text,\n                fontSize: typography.h2,\n                fontWeight: '600'\n              },\n              children: job.name || `Job #${job.id}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3494,\n              columnNumber: 19\n            }, this), _jsxDEV(StatusPill, {\n              status: job.status || 'SCHEDULED'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3495,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3493,\n            columnNumber: 17\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.5)\n            },\n            children: [startLabel, endLabel]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3497,\n            columnNumber: 17\n          }, this), address ? _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(1)\n            },\n            children: address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3500,\n            columnNumber: 28\n          }, this) : null, job.notes ? _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(1)\n            },\n            children: job.notes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3501,\n            columnNumber: 30\n          }, this) : null, _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              flexWrap: 'wrap',\n              columnGap: spacing(1),\n              rowGap: spacing(1),\n              marginTop: spacing(2)\n            },\n            children: [_jsxDEV(QuickAction, {\n              label: \"Open job\",\n              onPress: () => navigation.navigate('JobDetail', {\n                jobId: job.id\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3503,\n              columnNumber: 19\n            }, this), _jsxDEV(QuickAction, {\n              label: \"View tasks\",\n              onPress: () => navigation.navigate('JobDetail', {\n                jobId: job.id,\n                tab: 'tasks'\n              }),\n              tone: \"muted\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3504,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3502,\n            columnNumber: 17\n          }, this)]\n        }, job.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3492,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 3455,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3454,\n    columnNumber: 5\n  }, this);\n}\nfunction ProfileScreen({\n  navigation\n}) {\n  const {\n    setToken,\n    user\n  } = useAuth();\n  const isAdmin = (user?.role || '').toUpperCase() === 'ADMIN';\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(6)\n      },\n      children: [_jsxDEV(Text, {\n        style: {\n          color: palette.text,\n          fontSize: typography.h1,\n          fontWeight: '700',\n          marginBottom: spacing(2)\n        },\n        children: \"Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3520,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontSize: typography.small,\n            textTransform: 'uppercase',\n            fontWeight: '600'\n          },\n          children: \"Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3522,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontSize: typography.h2,\n            fontWeight: '700',\n            marginTop: spacing(1)\n          },\n          children: user?.name || user?.fullName || 'Team member'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3523,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(0.5)\n          },\n          children: user?.email || 'No email on file'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3524,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(0.5)\n          },\n          children: [\"Role: \", user?.role || 'TECH']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3525,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3521,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontSize: typography.small,\n            textTransform: 'uppercase',\n            fontWeight: '600',\n            marginBottom: spacing(1.5)\n          },\n          children: \"Actions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3529,\n          columnNumber: 11\n        }, this), isAdmin ? _jsxDEV(View, {\n          style: {\n            marginBottom: spacing(1.5)\n          },\n          children: _jsxDEV(QuickAction, {\n            label: \"Manage users\",\n            onPress: () => navigation.navigate('UsersAdmin')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3532,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3531,\n          columnNumber: 13\n        }, this) : null, _jsxDEV(QuickAction, {\n          label: \"Sign out\",\n          tone: \"danger\",\n          onPress: () => setToken(null)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3535,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3528,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 3519,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3518,\n    columnNumber: 5\n  }, this);\n}\nconst Stack = createNativeStackNavigator();\nconst Tabs = createBottomTabNavigator();\nfunction TabsNav() {\n  const {\n    user\n  } = useAuth();\n  const isAdmin = (user?.role || '').toUpperCase() === 'ADMIN';\n  const {\n    width\n  } = useWindowDimensions();\n  const isCompact = Platform.OS !== 'web' ? true : width < 768;\n  const hideTabs = isCompact;\n  return _jsxDEV(Tabs.Navigator, {\n    screenOptions: {\n      headerShown: false,\n      tabBarActiveTintColor: palette.primary,\n      tabBarStyle: {\n        backgroundColor: '#fff',\n        display: hideTabs ? 'none' : 'flex'\n      }\n    },\n    children: [_jsxDEV(Tabs.Screen, {\n      name: \"Dashboard\",\n      component: DashboardScreen,\n      options: {\n        title: 'Home'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3558,\n      columnNumber: 7\n    }, this), _jsxDEV(Tabs.Screen, {\n      name: \"Leads\",\n      component: LeadsScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3559,\n      columnNumber: 7\n    }, this), _jsxDEV(Tabs.Screen, {\n      name: \"Jobs\",\n      component: JobsKanbanScreen,\n      options: {\n        title: 'Jobs'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3560,\n      columnNumber: 7\n    }, this), isAdmin ? _jsxDEV(Tabs.Screen, {\n      name: \"Invoices\",\n      component: InvoicesScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3561,\n      columnNumber: 18\n    }, this) : null, _jsxDEV(Tabs.Screen, {\n      name: \"Schedule\",\n      component: ScheduleScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3562,\n      columnNumber: 7\n    }, this), _jsxDEV(Tabs.Screen, {\n      name: \"Profile\",\n      component: ProfileScreen,\n      options: {\n        title: \"Profile\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3563,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 3551,\n    columnNumber: 5\n  }, this);\n}\nfunction MobileHeader({\n  currentRoute,\n  onNavigate,\n  isAdmin\n}) {\n  const [menuVisible, setMenuVisible] = useState(false);\n  const activeRoute = useMemo(() => {\n    if (currentRoute === 'JobDetail') return 'Jobs';\n    return currentRoute;\n  }, [currentRoute]);\n  const menuItems = useMemo(() => {\n    const items = [{\n      label: 'Dashboard',\n      route: 'Dashboard'\n    }, {\n      label: 'Leads',\n      route: 'Leads'\n    }, {\n      label: 'Jobs',\n      route: 'Jobs'\n    }];\n    if (isAdmin) {\n      items.push({\n        label: 'Invoices',\n        route: 'Invoices'\n      });\n    }\n    items.push({\n      label: 'Schedule',\n      route: 'Schedule'\n    }, {\n      label: 'Profile',\n      route: 'Profile'\n    });\n    if (isAdmin) {\n      items.push({\n        label: 'Manage users',\n        route: 'UsersAdmin'\n      });\n    }\n    return items;\n  }, [isAdmin]);\n  const handleSelect = useCallback(route => {\n    setMenuVisible(false);\n    onNavigate(route);\n  }, [onNavigate]);\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(SafeAreaView, {\n      style: {\n        backgroundColor: '#0B0C10'\n      },\n      children: _jsxDEV(View, {\n        style: {\n          paddingHorizontal: spacing(2),\n          paddingVertical: spacing(1.5),\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'space-between'\n        },\n        children: [_jsxDEV(TouchableOpacity, {\n          onPress: () => setMenuVisible(true),\n          accessibilityLabel: \"Open navigation menu\",\n          accessibilityRole: \"button\",\n          style: {\n            padding: spacing(1)\n          },\n          children: [_jsxDEV(View, {\n            style: {\n              width: 24,\n              height: 2,\n              backgroundColor: '#fff',\n              borderRadius: 999,\n              marginBottom: 4\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3609,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: {\n              width: 24,\n              height: 2,\n              backgroundColor: '#fff',\n              borderRadius: 999,\n              marginBottom: 4\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3610,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: {\n              width: 24,\n              height: 2,\n              backgroundColor: '#fff',\n              borderRadius: 999\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3611,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3603,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: '#fff',\n            fontSize: typography.h1,\n            fontWeight: '700'\n          },\n          children: \"Precision Tracker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3613,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            width: 24\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3614,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3602,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3601,\n      columnNumber: 7\n    }, this), _jsxDEV(Modal, {\n      visible: menuVisible,\n      animationType: \"fade\",\n      transparent: true,\n      onRequestClose: () => setMenuVisible(false),\n      children: _jsxDEV(View, {\n        style: {\n          flex: 1,\n          backgroundColor: 'rgba(15,23,42,0.6)',\n          justifyContent: 'flex-start',\n          padding: spacing(3)\n        },\n        children: _jsxDEV(View, {\n          style: {\n            backgroundColor: palette.surface,\n            borderRadius: 16,\n            padding: spacing(2.5)\n          },\n          children: [_jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              marginBottom: spacing(2)\n            },\n            children: [_jsxDEV(Text, {\n              style: {\n                color: palette.text,\n                fontSize: typography.h2,\n                fontWeight: '700'\n              },\n              children: \"Navigate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3626,\n              columnNumber: 15\n            }, this), _jsxDEV(TouchableOpacity, {\n              onPress: () => setMenuVisible(false),\n              accessibilityRole: \"button\",\n              accessibilityLabel: \"Close menu\",\n              children: _jsxDEV(Text, {\n                style: {\n                  color: palette.muted,\n                  fontWeight: '600'\n                },\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3628,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3627,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3625,\n            columnNumber: 13\n          }, this), menuItems.map(item => {\n            const selected = activeRoute === item.route;\n            return _jsxDEV(TouchableOpacity, {\n              onPress: () => handleSelect(item.route),\n              activeOpacity: 0.85,\n              style: {\n                paddingVertical: spacing(1.25),\n                paddingHorizontal: spacing(1.5),\n                borderRadius: 12,\n                backgroundColor: selected ? '#d9f2ed' : palette.surfaceMuted,\n                marginBottom: spacing(1)\n              },\n              children: _jsxDEV(Text, {\n                style: {\n                  color: selected ? palette.primaryStrong : palette.text,\n                  fontWeight: '600',\n                  fontSize: typography.body\n                },\n                children: item.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3646,\n                columnNumber: 19\n              }, this)\n            }, item.route, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3634,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3624,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3623,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3617,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\nfunction LoginScreen() {\n  const [email, setEmail] = useState('admin@example.com');\n  const [password, setPassword] = useState('test123');\n  const [busy, setBusy] = useState(false);\n  const {\n    setToken,\n    setUser\n  } = useAuth();\n  async function login() {\n    try {\n      setBusy(true);\n      const res = await fetch(`${API_URL}/auth/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await res.json();\n      if (!res.ok) throw new Error(data?.message || data?.error || 'Login failed');\n      const tok = data.token || data.accessToken;\n      if (!tok) throw new Error('No token returned from server');\n      const normalizedUser = data.user ? Object.assign({}, data.user, {\n        role: normalizeRole(data.user.role)\n      }) : {\n        email,\n        role: 'ADMIN',\n        name: 'Admin'\n      };\n      setToken(tok);\n      setUser(normalizedUser);\n      try {\n        await SecureStore.setItemAsync('auth_token', tok);\n        await SecureStore.setItemAsync('auth_user', JSON.stringify(normalizedUser));\n      } catch {}\n      Alert.alert('Welcome', 'Logged in');\n    } catch (e) {\n      Alert.alert('Error', e.message);\n    } finally {\n      setBusy(false);\n    }\n  }\n  return _jsxDEV(View, {\n    style: {\n      flex: 1,\n      padding: 20,\n      justifyContent: 'center'\n    },\n    children: [_jsxDEV(Text, {\n      style: {\n        fontSize: 24,\n        marginBottom: 16\n      },\n      children: \"PrecisionTracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3703,\n      columnNumber: 7\n    }, this), _jsxDEV(TextInput, {\n      placeholder: \"Email\",\n      autoCapitalize: \"none\",\n      value: email,\n      onChangeText: setEmail,\n      style: {\n        borderWidth: 1,\n        padding: 12,\n        marginBottom: 12\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3704,\n      columnNumber: 7\n    }, this), _jsxDEV(TextInput, {\n      placeholder: \"Password\",\n      secureTextEntry: true,\n      value: password,\n      onChangeText: setPassword,\n      style: {\n        borderWidth: 1,\n        padding: 12,\n        marginBottom: 12\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3711,\n      columnNumber: 7\n    }, this), _jsxDEV(Button, {\n      title: busy ? 'Signing in...' : 'Sign in',\n      onPress: login,\n      disabled: busy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3718,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 3702,\n    columnNumber: 5\n  }, this);\n}\nexport default function App() {\n  const [token, setToken] = useState(null);\n  const [user, setUser] = useState(null);\n  const [booting, setBooting] = useState(true);\n  const navigationRef = useRef(null);\n  const [currentRoute, setCurrentRoute] = useState('Dashboard');\n  const {\n    width\n  } = useWindowDimensions();\n  const isCompactLayout = Platform.OS !== 'web' ? true : width < 768;\n  useEffect(() => {\n    let mounted = true;\n    (async () => {\n      try {\n        const [tok, usr] = await Promise.all([SecureStore.getItemAsync('auth_token'), SecureStore.getItemAsync('auth_user')]);\n        if (mounted && tok) {\n          setToken(tok);\n          if (usr) {\n            const parsed = JSON.parse(usr);\n            parsed.role = normalizeRole(parsed.role);\n            setUser(parsed);\n          }\n        }\n      } catch {} finally {\n        if (mounted) setBooting(false);\n      }\n    })();\n    return () => {\n      mounted = false;\n    };\n  }, []);\n  const authValue = {\n    token,\n    setToken: t => {\n      setToken(t);\n      if (!t) {\n        try {\n          SecureStore.deleteItemAsync('auth_token');\n          SecureStore.deleteItemAsync('auth_user');\n        } catch {}\n      }\n    },\n    user,\n    setUser\n  };\n  const updateCurrentRoute = useCallback(() => {\n    if (!navigationRef.current) return;\n    const current = navigationRef.current.getCurrentRoute();\n    if (!current) return;\n    let name = current.name;\n    let state = current.state;\n    while (state && typeof state.index === 'number' && state.routes && state.routes[state.index]) {\n      const nested = state.routes[state.index];\n      name = nested.name;\n      state = nested.state;\n    }\n    if (name) setCurrentRoute(name);\n  }, []);\n  const handleNavigate = useCallback(routeName => {\n    if (!navigationRef.current) return;\n    const tabRoutes = ['Dashboard', 'Leads', 'Jobs', 'Invoices', 'Schedule', 'Profile'];\n    if (tabRoutes.includes(routeName)) {\n      navigationRef.current.navigate('Tabs', {\n        screen: routeName\n      });\n    } else {\n      navigationRef.current.navigate(routeName);\n    }\n  }, []);\n  if (booting) {\n    return _jsxDEV(SafeAreaView, {\n      style: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: _jsxDEV(Text, {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3792,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3791,\n      columnNumber: 7\n    }, this);\n  }\n  return _jsxDEV(AuthContext.Provider, {\n    value: authValue,\n    children: _jsxDEV(View, {\n      style: {\n        flex: 1,\n        backgroundColor: palette.background\n      },\n      children: [isCompactLayout && token ? _jsxDEV(MobileHeader, {\n        currentRoute: currentRoute,\n        onNavigate: handleNavigate,\n        isAdmin: (user?.role || '').toUpperCase() === 'ADMIN'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3801,\n        columnNumber: 11\n      }, this) : null, _jsxDEV(View, {\n        style: {\n          flex: 1\n        },\n        children: _jsxDEV(NavigationContainer, {\n          ref: navigationRef,\n          onReady: updateCurrentRoute,\n          onStateChange: updateCurrentRoute,\n          children: !token ? _jsxDEV(Stack.Navigator, {\n            children: _jsxDEV(Stack.Screen, {\n              name: \"Login\",\n              component: LoginScreen\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3815,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3814,\n            columnNumber: 15\n          }, this) : _jsxDEV(Stack.Navigator, {\n            children: [_jsxDEV(Stack.Screen, {\n              name: \"Tabs\",\n              component: TabsNav,\n              options: {\n                headerShown: false\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3819,\n              columnNumber: 17\n            }, this), _jsxDEV(Stack.Screen, {\n              name: \"NewLead\",\n              component: NewLeadScreen,\n              options: {\n                title: 'New Lead'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3820,\n              columnNumber: 17\n            }, this), _jsxDEV(Stack.Screen, {\n              name: \"EstimateEditor\",\n              component: EstimateEditorScreen,\n              options: {\n                title: 'Estimate'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3821,\n              columnNumber: 17\n            }, this), _jsxDEV(Stack.Screen, {\n              name: \"Signature\",\n              component: SignatureScreen,\n              options: {\n                title: 'Signature'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3822,\n              columnNumber: 17\n            }, this), _jsxDEV(Stack.Screen, {\n              name: \"UsersAdmin\",\n              component: UsersAdminScreen,\n              options: {\n                title: 'Users (Admin)'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3823,\n              columnNumber: 17\n            }, this), _jsxDEV(Stack.Screen, {\n              name: \"JobDetail\",\n              component: JobDetailScreen,\n              options: {\n                title: 'Job'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3824,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3818,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3808,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3807,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 3799,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3798,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"names":["React","useEffect","useState","createContext","useContext","useRef","useCallback","useMemo","NavigationContainer","useFocusEffect","createNativeStackNavigator","createBottomTabNavigator","Text","TextInput","Button","FlatList","TouchableOpacity","SafeAreaView","Alert","Image","ScrollView","RefreshControl","ActivityIndicator","Modal","useWindowDimensions","ImagePicker","FileSystem","SQLite","Svg","Path","ViewShot","Platform","View","SecureStore","DateTimePicker","DateTimePickerAndroid","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","process","env","EXPO_PUBLIC_API_URL","initOfflineTables","database","transaction","tx","executeSql","e","db","getDb","OS","fn","execAsync","runAsync","openDatabaseSync","dbHandle","normalizeRole","role","r","String","toUpperCase","includes","AuthContext","useAuth","api","path","method","body","token","headers","Object","assign","Authorization","response","fetch","JSON","stringify","undefined","networkError","Error","message","contentType","get","rawBody","text","data","parse","ok","error","palette","background","surface","surfaceMuted","border","muted","primary","primaryStrong","success","warning","danger","info","spacing","step","typography","h1","h2","small","floatingShadow","select","ios","shadowColor","shadowOpacity","shadowRadius","shadowOffset","width","height","android","elevation","default","pillTone","NEW","fg","bg","label","CONTACTED","ESTIMATING","CONVERTED","CLOSED_LOST","SCHEDULED","IN_PROGRESS","COMPLETE","DONE","ON_HOLD","CANCELLED","DRAFT","SENT","PART_PAID","PAID","VOID","toneMap","formInputBaseStyle","borderWidth","borderColor","borderRadius","paddingVertical","paddingHorizontal","color","backgroundColor","fontSize","marginBottom","FormInput","forwardRef","props","ref","placeholderTextColor","style","fileName","_jsxFileName","lineNumber","columnNumber","displayName","formatCurrency","value","amount","Number","isNaN","toLocaleString","minimumFractionDigits","maximumFractionDigits","formatDate","d","Date","getTime","toLocaleDateString","month","day","isTaskCompleted","status","key","SurfaceCard","children","onPress","content","padding","activeOpacity","StatusPill","cfg","fontWeight","SummaryCard","title","subtitle","tone","colors","textTransform","marginTop","StatusCard","description","flexGrow","flexBasis","TagInput","onChange","placeholder","draft","setDraft","tags","Array","isArray","filter","Boolean","map","tag","cleanTag","input","cleaned","replace","trim","handleChangeText","segments","split","pending","pop","nextTags","forEach","segment","exists","some","existing","toLowerCase","push","length","handleAdd","handleSubmit","handleRemove","next","entry","flexDirection","flexWrap","columnGap","rowGap","alignItems","marginLeft","onChangeText","onSubmitEditing","flex","autoCapitalize","autoCorrect","QuickAction","SectionHeader","actionLabel","onAction","justifyContent","toneStyles","textColor","toInputDate","dateValue","yyyy","getFullYear","mm","getMonth","padStart","dd","getDate","parseInputDate","parsed","deriveLeadTitle","lead","customerName","Customer","name","firstLine","slice","id","DateInputField","minimumDate","maximumDate","iosPickerVisible","setIosPickerVisible","isWeb","toDateOnly","datePart","normalizedValue","minDateString","maxDateString","displayLabel","applyDate","selectedDate","handleManualChange","openPicker","baseDate","open","mode","event","selected","type","containerStyle","nativeEvent","target","min","max","display","TECH_ASSIGN_ROLES","TechSelector","team","onSelect","allowAllRoles","allowClear","options","normalized","member","renderLabel","fullName","email","shortLabel","DashboardScreen","navigation","user","loading","setLoading","refreshing","setRefreshing","leads","setLeads","jobs","setJobs","tasks","setTasks","invoiceSummary","setInvoiceSummary","lastUpdated","setLastUpdated","isAdmin","jobLookup","job","loadData","isPullRefresh","fetchLeads","l","Promise","resolve","_","rows","fallback","_array","fetchJobs","j","startDate","endDate","notes","fetchTasks","t","jobId","dueDate","fetchInvoiceSummary","all","onRefresh","newLeads","activeJobs","openTasks","outstandingValue","outstanding","collectedValue","collected","overdueCount","overdueTasks","today","setHours","task","due","statusCards","topLeads","topJobs","nextTasks","contentContainerStyle","paddingBottom","refreshControl","tintColor","navigate","focus","card","minWidth","idx","startLabel","endLabel","join","numberOfLines","tab","leadId","textAlign","toLocaleTimeString","hour","minute","SignaturePad","onCapturePng","points","setPoints","setPath","shotRef","format","quality","result","onStartShouldSetResponder","onResponderMove","x","locationX","y","locationY","p","onResponderRelease","base64","current","capture","stroke","strokeWidth","fill","SignatureScreen","route","estimateId","params","sigPng","setSigPng","save","alert","resp","signaturePngUrl","paymentLink","goBack","userRoleOptions","invoiceStatusOptions","UsersAdminScreen","users","setUsers","setEmail","setFullName","setRole","inviting","setInviting","load","resetForm","invite","trimmedEmail","trimmedName","promote","newRole","remove","renderRolePill","roleCfg","find","option","renderRoleSelector","selectedRole","keyExtractor","u","ListHeaderComponent","keyboardType","disabled","opacity","ListEmptyComponent","renderItem","item","normalizedRole","InvoicesScreen","summary","setSummary","invoices","setInvoices","setFilter","newInvoiceJobId","setNewInvoiceJobId","newInvoiceAmount","setNewInvoiceAmount","newInvoiceIssuedAt","setNewInvoiceIssuedAt","newInvoiceDueAt","setNewInvoiceDueAt","newInvoiceStatus","setNewInvoiceStatus","creatingInvoice","setCreatingInvoice","isRefresh","summaryData","list","nextInvoiceNumber","maxNumber","reduce","acc","inv","match","number","Math","parseInt","resetInvoiceForm","createInvoice","amountValue","parseFloat","jobIdTrimmed","jobIdValue","payload","issuedAt","dueAt","created","deleteInvoice","invoice","filters","filteredInvoices","drafts","draftAmount","totalCount","f","payments","Payments","sum","balance","statusKey","JobsKanbanScreen","newJobName","setNewJobName","newJobStartDate","setNewJobStartDate","newJobDueDate","setNewJobDueDate","newJobNotes","setNewJobNotes","newCustomerName","setNewCustomerName","newCustomerPhone","setNewCustomerPhone","newCustomerEmail","setNewCustomerEmail","newAddressLine1","setNewAddressLine1","newAddressLine2","setNewAddressLine2","newCity","setNewCity","newStateCode","setNewStateCode","newZip","setNewZip","newJobTags","setNewJobTags","jobFormTab","setJobFormTab","statusOrder","scrollRef","selectedTag","setSelectedTag","selectedCity","setSelectedCity","selectedUrgency","setSelectedUrgency","scrollTo","animated","setParams","availableTags","set","Set","add","from","sort","a","b","localeCompare","availableCities","city","Jobsite","urgencyFilters","filteredJobsRaw","hasTag","start","diff","ceil","hasFilters","clearFilters","createJob","hasCustomer","v","hasAddress","customer","phone","billingAddress","jobsite","addressLine1","addressLine2","state","zip","prev","updateJobStatus","updated","removeJob","sortedJobs","normalize","rank","indexOf","parseDateSafe","statusDiff","startA","startB","groupedJobs","groups","currentStatus","statusLabel","charAt","quickStatusActions","inputStyle","jobTabs","renderJobFormFields","multiline","minHeight","textAlignVertical","group","addressParts","address","action","JobDetailScreen","jobName","setJobName","jobStartDate","setJobStartDate","jobEndDate","setJobEndDate","jobNotes","setJobNotes","jobCustomerName","setJobCustomerName","jobCustomerPhone","setJobCustomerPhone","jobCustomerEmail","setJobCustomerEmail","jobAddressLine1","setJobAddressLine1","jobAddressLine2","setJobAddressLine2","jobCity","setJobCity","jobStateCode","setJobStateCode","jobZip","setJobZip","jobTags","setJobTags","jobAttachments","setJobAttachments","loadingAttachments","setLoadingAttachments","uploadingAttachment","setUploadingAttachment","jobActivity","setJobActivity","newActivityNote","setNewActivityNote","addingActivity","setAddingActivity","changeOrders","setCO","setTitle","amountDelta","setAmountDelta","roleKey","canManageChangeOrders","loadCO","loadJob","activityLog","loadAttachments","addCO","saveJobDetails","deleteJob","screen","statusTone","amountLabel","JobTasks","JobSchedule","setDueDate","done","events","setEvents","startAt","setStartAt","endAt","setEndAt","ev","date","timePartIndex","timePart","substring","processQueue","items","q","dataUrl","txx","LeadsScreen","deleteLead","err","newLeadsCount","renderLeadCard","NewLeadScreen","setDescription","setStatus","setCustomerName","customerPhone","setCustomerPhone","customerEmail","setCustomerEmail","setAddressLine1","setAddressLine2","setCity","stateCode","setStateCode","setZip","showCustomerSection","setShowCustomerSection","showJobsiteSection","setShowJobsiteSection","statuses","buildPayload","createLeadOnline","queueLead","submit","chipStyle","active","s","EstimateEditorScreen","setEstimateId","setItems","desc","setDesc","qty","setQty","price","setPrice","setNotes","photoUrl","setPhotoUrl","subtotal","setSubtotal","taxRate","setTaxRate","tax","setTax","total","setTotal","leadDetails","setLeadDetails","leadStatus","setLeadStatus","leadScope","setLeadScope","leadCustomerName","setLeadCustomerName","leadCustomerPhone","setLeadCustomerPhone","leadCustomerEmail","setLeadCustomerEmail","leadAddressLine1","setLeadAddressLine1","leadAddressLine2","setLeadAddressLine2","leadCity","setLeadCity","leadStateCode","setLeadStateCode","leadZip","setLeadZip","leadStatuses","loadLead","createEstimate","est","customerId","jobsiteId","ensureEstimate","rate","newSubtotal","unitPrice","newTax","addItem","targetId","saveLeadDetails","customerPayload","jobsitePayload","pickPhoto","launchImageLibraryAsync","allowsEditing","canceled","assets","uri","toFixed","borderTopWidth","borderTopColor","paddingTop","source","ScheduleScreen","queueCount","setQueueCount","syncing","setSyncing","loadQueueCount","c","inRange","dt","setDate","getDay","end","filteredJobs","handleSync","ProfileScreen","setToken","Stack","Tabs","TabsNav","isCompact","hideTabs","Navigator","screenOptions","headerShown","tabBarActiveTintColor","tabBarStyle","Screen","component","MobileHeader","currentRoute","onNavigate","menuVisible","setMenuVisible","activeRoute","menuItems","handleSelect","accessibilityLabel","accessibilityRole","visible","animationType","transparent","onRequestClose","LoginScreen","password","setPassword","busy","setBusy","setUser","login","res","json","tok","accessToken","normalizedUser","setItemAsync","secureTextEntry","App","booting","setBooting","navigationRef","setCurrentRoute","isCompactLayout","mounted","usr","getItemAsync","authValue","deleteItemAsync","updateCurrentRoute","getCurrentRoute","index","routes","nested","handleNavigate","routeName","tabRoutes","Provider","onReady","onStateChange"],"sources":["C:/Users/Tyler/Downloads/PrecisionTracker-v4-wired/PrecisionTracker/mobile/App.js"],"sourcesContent":["\r\nimport React, { useEffect, useState, createContext, useContext, useRef, useCallback, useMemo } from 'react';\r\nimport { NavigationContainer, useFocusEffect } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport {Text, TextInput, Button, FlatList, TouchableOpacity, SafeAreaView, Alert, Image, ScrollView, RefreshControl, ActivityIndicator, Modal, useWindowDimensions } from 'react-native';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport * as FileSystem from 'expo-file-system';\r\nimport * as SQLite from 'expo-sqlite';\r\nimport Svg, { Path } from 'react-native-svg';\r\nimport ViewShot from 'react-native-view-shot';\r\nimport { Platform, View } from 'react-native';\r\nimport * as SecureStore from 'expo-secure-store';\r\nimport DateTimePicker, { DateTimePickerAndroid } from '@react-native-community/datetimepicker';\r\n// import * as SQLite from 'expo-sqlite';\r\n\r\n\r\nconst API_URL = process.env.EXPO_PUBLIC_API_URL || 'http://localhost:4000';\r\n// const db = SQLite.openDatabase('offline.db');\r\n\r\n// function initDB(){\r\n//   db.transaction(tx => {\r\n//     tx.executeSql('CREATE TABLE IF NOT EXISTS queue (id INTEGER PRIMARY KEY AUTOINCREMENT, type TEXT, payload TEXT);');\r\n//     tx.executeSql('CREATE TABLE IF NOT EXISTS uploads (id INTEGER PRIMARY KEY AUTOINCREMENT, dataUrl TEXT);');\r\n//     tx.executeSql('CREATE TABLE IF NOT EXISTS leads_cache (id INTEGER PRIMARY KEY, description TEXT, status TEXT);');\r\n//   });\r\n// }\r\n\r\nfunction initOfflineTables(database){\r\n  try {\r\n    if (!database || typeof database.transaction !== 'function') return;\r\n    database.transaction(tx => {\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS queue (id INTEGER PRIMARY KEY AUTOINCREMENT, type TEXT, payload TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS uploads (id INTEGER PRIMARY KEY AUTOINCREMENT, dataUrl TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS leads_cache (id INTEGER PRIMARY KEY, description TEXT, status TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS jobs_cache (id INTEGER PRIMARY KEY, name TEXT, status TEXT, startDate TEXT, endDate TEXT, notes TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS tasks_cache (id INTEGER PRIMARY KEY, jobId INTEGER, title TEXT, status TEXT, dueDate TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS calendar_cache (id INTEGER PRIMARY KEY, jobId INTEGER, title TEXT, startAt TEXT, endAt TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS estimates_cache (id INTEGER PRIMARY KEY, leadId INTEGER, subtotal REAL, taxRate REAL, total REAL, status TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS estimate_items_cache (id INTEGER PRIMARY KEY, estimateId INTEGER, description TEXT, qty REAL, unitPrice REAL);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS change_orders_cache (id INTEGER PRIMARY KEY, jobId INTEGER, title TEXT, amountDelta REAL, status TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS users_cache (id INTEGER PRIMARY KEY, email TEXT, fullName TEXT, role TEXT);');\r\n    });\r\n  } catch (e) {\r\n    // best-effort; avoid noisy alerts in offline mode\r\n  }\r\n}\r\n\r\nlet db;\r\nexport function getDb() {\r\n  if (db) return db;\r\n\r\n  // Web: safe no-op DB\r\n  if (Platform.OS === 'web') {\r\n    db = {\r\n      transaction: (fn) => fn({ executeSql: () => {} }),\r\n      execAsync: async () => {},\r\n      runAsync: async () => {},\r\n    };\r\n    return db;\r\n  }\r\n\r\n  // SDK 51+: prefer sync, then async; DO NOT reference openDatabase (removed)\r\n  if ('openDatabaseSync' in SQLite) {\r\n    db = SQLite.openDatabaseSync('offline.db');\r\n    return db;\r\n  }\r\n\r\n  if ('openDatabaseAsync' in SQLite) {\r\n    // Minimal adapter so existing code won't crash; refactor later if needed\r\n    db = {\r\n      transaction: (fn) => fn({ executeSql: () => {} }),\r\n      execAsync: async () => {},\r\n      runAsync: async () => {},\r\n    };\r\n    return db;\r\n  }\r\n\r\n  // Safety fallback\r\n  db = {\r\n    transaction: (fn) => fn({ executeSql: () => {} }),\r\n    execAsync: async () => {},\r\n    runAsync: async () => {},\r\n  };\r\n  return db;\r\n}\r\n\r\n// DB handle\r\nconst dbHandle = getDb();\r\ninitOfflineTables(dbHandle);\r\n\r\n// ---------- Helpers ----------\r\nconst normalizeRole = (role) => {\r\n  if (!role) return 'TECH';\r\n  const r = String(role).toUpperCase();\r\n  if (['ADMIN','ESTIMATOR','SUPERVISOR','TECH'].includes(r)) return r;\r\n  if (r === 'STANDARD' || r === 'USER') return 'TECH';\r\n  return r;\r\n};\r\n\r\nconst AuthContext = createContext(null);\r\nfunction useAuth(){ return useContext(AuthContext); }\r\nasync function api(path, method='GET', body, token){\r\n  const headers = {\r\n    ...(token ? { Authorization: `Bearer ${token}` } : {}),\r\n    ...(body ? { 'Content-Type': 'application/json' } : {}),\r\n  };\r\n  let response;\r\n  try {\r\n    response = await fetch(`${API_URL}${path}`, {\r\n      method,\r\n      headers,\r\n      body: body ? JSON.stringify(body) : undefined,\r\n    });\r\n  } catch (networkError) {\r\n    throw new Error(networkError?.message || 'Network request failed');\r\n  }\r\n\r\n  const contentType = response.headers.get('content-type') || '';\r\n  const rawBody = await response.text();\r\n  let data = null;\r\n\r\n  if (rawBody) {\r\n    if (contentType.includes('application/json')) {\r\n      try {\r\n        data = JSON.parse(rawBody);\r\n      } catch {\r\n        data = rawBody;\r\n      }\r\n    } else {\r\n      data = rawBody;\r\n    }\r\n  }\r\n\r\n  if (!response.ok) {\r\n    const message =\r\n      (data && typeof data === 'object' && (data.error || data.message)) ||\r\n      (typeof data === 'string' ? data : 'Request failed');\r\n    throw new Error(message);\r\n  }\r\n\r\n  return data;\r\n}\r\n\r\n// ---------- Design tokens ----------\r\nconst palette = {\r\n  background: '#f4f6f8',\r\n  surface: '#ffffff',\r\n  surfaceMuted: '#f1f5f9',\r\n  border: '#e2e8f0',\r\n  text: '#0f172a',\r\n  muted: '#5f6b7d',\r\n  primary: '#2c8a7d',\r\n  primaryStrong: '#1f6a60',\r\n  success: '#219653',\r\n  warning: '#f59e0b',\r\n  danger: '#d14343',\r\n  info: '#2563eb',\r\n};\r\n\r\nconst spacing = (step = 1) => step * 8;\r\n\r\nconst typography = {\r\n  h1: 24,\r\n  h2: 18,\r\n  body: 15,\r\n  small: 12,\r\n};\r\n\r\nconst floatingShadow = Platform.select({\r\n  ios: { shadowColor: '#0f172a', shadowOpacity: 0.08, shadowRadius: 14, shadowOffset: { width: 0, height: 6 } },\r\n  android: { elevation: 2 },\r\n  default: {},\r\n});\r\n\r\nconst pillTone = {\r\n  NEW: { fg: palette.info, bg: '#e6eeff', label: 'New' },\r\n  CONTACTED: { fg: palette.primary, bg: '#e6f4f2', label: 'Contacted' },\r\n  ESTIMATING: { fg: palette.warning, bg: '#fdf1d6', label: 'Estimating' },\r\n  CONVERTED: { fg: palette.success, bg: '#e6f6ec', label: 'Converted' },\r\n  CLOSED_LOST: { fg: palette.muted, bg: '#e2e8f0', label: 'Lost' },\r\n  SCHEDULED: { fg: palette.primary, bg: '#e6f4f2', label: 'Scheduled' },\r\n  IN_PROGRESS: { fg: palette.info, bg: '#e6eeff', label: 'In progress' },\r\n  COMPLETE: { fg: palette.success, bg: '#e6f6ec', label: 'Complete' },\r\n  DONE: { fg: palette.success, bg: '#e6f6ec', label: 'Complete' },\r\n  ON_HOLD: { fg: palette.warning, bg: '#fdf1d6', label: 'On hold' },\r\n  CANCELLED: { fg: palette.muted, bg: '#e2e8f0', label: 'Cancelled' },\r\n  DRAFT: { fg: palette.muted, bg: '#e2e8f0', label: 'Draft' },\r\n  SENT: { fg: palette.info, bg: '#e6eeff', label: 'Sent' },\r\n  PART_PAID: { fg: palette.warning, bg: '#fdf1d6', label: 'Part paid' },\r\n  PAID: { fg: palette.success, bg: '#e6f6ec', label: 'Paid' },\r\n  VOID: { fg: palette.muted, bg: '#f1f5f9', label: 'Void' },\r\n};\r\n\r\nconst toneMap = {\r\n  primary: { fg: palette.primaryStrong, bg: '#e0f3f0' },\r\n  success: { fg: palette.success, bg: '#e6f6ec' },\r\n  warning: { fg: palette.warning, bg: '#fdf1d6' },\r\n  danger: { fg: palette.danger, bg: '#fde4e4' },\r\n  info: { fg: palette.info, bg: '#e6eeff' },\r\n};\r\n\r\nconst formInputBaseStyle = {\r\n  borderWidth: 1,\r\n  borderColor: palette.border,\r\n  borderRadius: 12,\r\n  paddingVertical: spacing(1.5),\r\n  paddingHorizontal: spacing(2),\r\n  color: palette.text,\r\n  backgroundColor: palette.surfaceMuted,\r\n  fontSize: typography.body,\r\n  marginBottom: spacing(1.5),\r\n};\r\n\r\nconst FormInput = React.forwardRef((props, ref) => (\r\n  <TextInput\r\n    ref={ref}\r\n    placeholderTextColor={palette.muted}\r\n    {...props}\r\n    style={[formInputBaseStyle, props.style]}\r\n  />\r\n));\r\nFormInput.displayName = 'FormInput';\r\n\r\nconst formatCurrency = (value) => {\r\n  const amount = Number(value || 0);\r\n  if (Number.isNaN(amount)) return '$0';\r\n  return `$${amount.toLocaleString(undefined, { minimumFractionDigits: amount % 1 ? 2 : 0, maximumFractionDigits: 2 })}`;\r\n};\r\n\r\nconst formatDate = (value) => {\r\n  if (!value) return null;\r\n  const d = new Date(value);\r\n  if (Number.isNaN(d.getTime())) return value;\r\n  return d.toLocaleDateString(undefined, { month: 'short', day: 'numeric' });\r\n};\r\n\r\nconst isTaskCompleted = (status) => {\r\n  if (!status) return false;\r\n  const key = String(status).toUpperCase();\r\n  return key === 'DONE' || key === 'COMPLETE';\r\n};\r\n\r\nfunction SurfaceCard({ children, style, onPress }) {\r\n  const content = (\r\n    <View\r\n      style={[\r\n        { backgroundColor: palette.surface, borderRadius: 16, borderWidth: 1, borderColor: palette.border, padding: spacing(2) },\r\n        floatingShadow,\r\n        style,\r\n      ]}\r\n    >\r\n      {children}\r\n    </View>\r\n  );\r\n  if (!onPress) return content;\r\n  return (\r\n    <TouchableOpacity activeOpacity={0.85} onPress={onPress}>\r\n      {content}\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n\r\nfunction StatusPill({ status }) {\r\n  if (!status) return null;\r\n  const key = String(status).toUpperCase();\r\n  const cfg = pillTone[key] || { fg: palette.muted, bg: '#e2e8f0', label: status };\r\n  return (\r\n    <View style={{ backgroundColor: cfg.bg, borderRadius: 999, paddingHorizontal: spacing(1.5), paddingVertical: spacing(0.5) }}>\r\n      <Text style={{ color: cfg.fg, fontSize: typography.small, fontWeight: '600' }}>{cfg.label}</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction SummaryCard({ title, value, subtitle, tone = 'primary', onPress }) {\n  const colors = toneMap[tone] || toneMap.primary;\n  return (\n    <SurfaceCard\n      onPress={onPress}\n      style={{ backgroundColor: colors.bg, borderColor: 'transparent', padding: spacing(2.5) }}\n    >\n      <Text style={{ color: palette.muted, fontSize: typography.small, textTransform: 'uppercase', fontWeight: '700' }}>{title}</Text>\n      <Text style={{ color: colors.fg, fontSize: 28, fontWeight: '800', marginTop: spacing(0.5) }}>{value}</Text>\n      {subtitle ? <Text style={{ color: palette.muted, fontSize: typography.small, marginTop: spacing(0.5) }}>{subtitle}</Text> : null}\n    </SurfaceCard>\n  );\n}\n\nfunction StatusCard({ label, value, description, tone = 'primary' }) {\n  const colors = toneMap[tone] || toneMap.primary;\n  return (\n    <SurfaceCard\n      style={{\n        backgroundColor: colors.bg,\n        borderColor: colors.fg,\n        borderWidth: 1,\n        paddingVertical: spacing(2),\n        paddingHorizontal: spacing(2.5),\n        flexGrow: 1,\n        flexBasis: '48%',\n      }}\n    >\n      <Text style={{ color: colors.fg, fontSize: typography.small, fontWeight: '700', textTransform: 'uppercase' }}>{label}</Text>\n      <Text style={{ color: palette.text, fontSize: 24, fontWeight: '700', marginTop: spacing(0.5) }}>{value}</Text>\n      {description ? <Text style={{ color: palette.muted, fontSize: typography.small, marginTop: spacing(0.5) }}>{description}</Text> : null}\n    </SurfaceCard>\n  );\n}\n\nfunction TagInput({ value = [], onChange, placeholder = 'Add tag' }) {\n  const [draft, setDraft] = useState('');\n  const tags = useMemo(() => {\n    if (!Array.isArray(value)) return [];\n    return value.filter(Boolean).map(tag => String(tag));\n  }, [value]);\n  const cleanTag = useCallback((input) => {\n    if (!input) return null;\n    const cleaned = String(input).replace(/[#]/g, '').trim();\n    if (!cleaned) return null;\n    return cleaned.replace(/\\s+/g, ' ');\n  }, []);\n  const handleChangeText = useCallback((text) => {\n    if (text.includes(',')) {\n      const segments = text.split(',');\n      const pending = segments.pop() ?? '';\n      const nextTags = [...tags];\n      segments.forEach(segment => {\n        const cleaned = cleanTag(segment);\n        if (!cleaned) return;\n        const exists = nextTags.some(existing => existing.toLowerCase() === cleaned.toLowerCase());\n        if (!exists) nextTags.push(cleaned);\n      });\n      if (nextTags.length !== tags.length) {\n        onChange && onChange(nextTags);\n      }\n      setDraft(pending);\n    } else {\n      setDraft(text);\n    }\n  }, [tags, cleanTag, onChange]);\n  const handleAdd = useCallback(() => {\n    const cleaned = cleanTag(draft);\n    if (!cleaned) {\n      setDraft('');\n      return;\n    }\n    const exists = tags.some(existing => existing.toLowerCase() === cleaned.toLowerCase());\n    if (exists) {\n      setDraft('');\n      return;\n    }\n    onChange && onChange([...tags, cleaned]);\n    setDraft('');\n  }, [draft, tags, cleanTag, onChange]);\n  const handleSubmit = useCallback(() => {\n    handleAdd();\n  }, [handleAdd]);\n  const handleRemove = useCallback((tag) => {\n    const next = tags.filter(entry => entry !== tag);\n    onChange && onChange(next);\n  }, [tags, onChange]);\n  return (\n    <View>\n      {tags.length ? (\n        <View style={{ flexDirection: 'row', flexWrap: 'wrap', columnGap: spacing(1), rowGap: spacing(1), marginBottom: spacing(1) }}>\n          {tags.map(tag => (\n            <TouchableOpacity\n              key={tag}\n              onPress={() => handleRemove(tag)}\n              activeOpacity={0.8}\n              style={{\n                flexDirection: 'row',\n                alignItems: 'center',\n                backgroundColor: '#d9f2ed',\n                borderRadius: 999,\n                paddingHorizontal: spacing(1.5),\n                paddingVertical: spacing(0.5),\n              }}\n            >\n              <Text style={{ color: palette.primaryStrong, fontWeight: '600', fontSize: typography.small }}>{`#${tag}`}</Text>\n              <Text style={{ color: palette.primaryStrong, marginLeft: spacing(0.5), fontSize: typography.small }}>×</Text>\n            </TouchableOpacity>\n          ))}\n        </View>\n      ) : null}\n      <View style={{ flexDirection: 'row', alignItems: 'center', columnGap: spacing(1) }}>\n        <TextInput\n          value={draft}\n          onChangeText={handleChangeText}\n          onSubmitEditing={handleSubmit}\n          placeholder={placeholder}\n          placeholderTextColor={palette.muted}\n          style={[formInputBaseStyle, { flex: 1, marginBottom: 0 }]}\n          autoCapitalize=\"none\"\n          autoCorrect={false}\n        />\n        <QuickAction label=\"Add\" onPress={handleAdd} tone=\"primary\" />\n      </View>\n    </View>\n  );\n}\n\r\nfunction SectionHeader({ title, actionLabel, onAction }) {\r\n  return (\r\n    <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', marginBottom: spacing(1.5) }}>\r\n      <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight: '700' }}>{title}</Text>\r\n      {actionLabel && onAction ? (\r\n        <TouchableOpacity onPress={onAction} style={{ paddingHorizontal: spacing(1), paddingVertical: spacing(0.5) }}>\r\n          <Text style={{ color: palette.primary, fontWeight: '600', fontSize: typography.small }}>{actionLabel}</Text>\r\n        </TouchableOpacity>\r\n      ) : null}\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction QuickAction({ label, onPress, tone = 'primary' }) {\r\n  const toneStyles = (() => {\r\n    switch (tone) {\r\n      case 'danger':\r\n        return { borderColor: '#fecdd3', backgroundColor: '#fee2e2', textColor: palette.danger };\r\n      case 'success':\r\n        return { borderColor: '#bbf7d0', backgroundColor: '#dcfce7', textColor: palette.success };\r\n      case 'warning':\r\n        return { borderColor: '#fde68a', backgroundColor: '#fef3c7', textColor: palette.warning };\r\n      case 'muted':\r\n        return { borderColor: palette.border, backgroundColor: palette.surface, textColor: palette.muted };\r\n      default:\r\n        return { borderColor: palette.border, backgroundColor: palette.surfaceMuted, textColor: palette.primary };\r\n    }\r\n  })();\r\n  return (\r\n    <TouchableOpacity\r\n      onPress={onPress}\r\n      activeOpacity={0.85}\r\n      style={{\r\n        borderRadius: 10,\r\n        paddingHorizontal: spacing(1.5),\r\n        paddingVertical: spacing(0.75),\r\n        borderWidth: 1,\r\n        borderColor: toneStyles.borderColor,\r\n        backgroundColor: toneStyles.backgroundColor,\r\n      }}\r\n    >\r\n      <Text style={{ color: toneStyles.textColor, fontWeight: '600', fontSize: typography.small }}>{label}</Text>\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n\r\nconst toInputDate = (dateValue) => {\r\n  const d = dateValue instanceof Date ? dateValue : new Date(dateValue);\r\n  if (Number.isNaN(d.getTime())) return '';\r\n  const yyyy = d.getFullYear();\r\n  const mm = String(d.getMonth() + 1).padStart(2, '0');\r\n  const dd = String(d.getDate()).padStart(2, '0');\r\n  return `${yyyy}-${mm}-${dd}`;\r\n};\r\n\r\nconst parseInputDate = (value) => {\r\n  if (!value) return null;\r\n  const parsed = new Date(value);\r\n  if (Number.isNaN(parsed.getTime())) return null;\r\n  return parsed;\r\n};\r\n\r\nconst deriveLeadTitle = (lead) => {\r\n  if (!lead) return 'Untitled lead';\r\n  const customerName = lead.Customer?.name;\r\n  if (customerName && customerName.trim()) return customerName.trim();\r\n  if (lead.description && lead.description.trim()) {\r\n    const firstLine = lead.description.trim().split('\\n')[0];\r\n    return firstLine.length > 60 ? `${firstLine.slice(0, 57)}...` : firstLine;\r\n  }\r\n  return `Lead ${lead.id}`;\r\n};\r\n\r\nfunction DateInputField({ value, onChange, placeholder = 'Select date', minimumDate, maximumDate, style }) {\r\n  const [iosPickerVisible, setIosPickerVisible] = useState(false);\r\n  const isWeb = Platform.OS === 'web';\r\n\r\n  const toDateOnly = (input) => {\r\n    if (!input) return '';\r\n    if (input instanceof Date) return toInputDate(input);\r\n    if (typeof input === 'string') {\r\n      const [datePart] = input.split('T');\r\n      return datePart;\r\n    }\r\n    return '';\r\n  };\r\n\r\n  const normalizedValue = toDateOnly(value);\r\n  const minDateString = minimumDate ? toDateOnly(minimumDate) : undefined;\r\n  const maxDateString = maximumDate ? toDateOnly(maximumDate) : undefined;\r\n  const parsed = parseInputDate(normalizedValue) || new Date();\r\n  const displayLabel = value ? (formatDate(value) || normalizedValue) : '';\r\n\r\n  const applyDate = (selectedDate) => {\r\n    if (!selectedDate) return;\r\n    onChange(toInputDate(selectedDate));\r\n  };\r\n\r\n  const handleManualChange = (text) => {\r\n    if (!text) {\r\n      onChange('');\r\n      return;\r\n    }\r\n    onChange(text);\r\n  };\r\n\r\n  const openPicker = () => {\r\n    if (isWeb) return;\r\n    const baseDate = parseInputDate(normalizedValue) || new Date();\r\n    if (Platform.OS === 'android') {\r\n      DateTimePickerAndroid.open({\r\n        value: baseDate,\r\n        mode: 'date',\r\n        minimumDate: minimumDate ? parseInputDate(minimumDate) || undefined : undefined,\r\n        maximumDate: maximumDate ? parseInputDate(maximumDate) || undefined : undefined,\r\n        onChange: (event, selected) => {\r\n          if (event.type === 'set' && selected) applyDate(selected);\r\n        },\r\n      });\r\n    } else {\r\n      setIosPickerVisible(true);\r\n    }\r\n  };\r\n\r\n  const containerStyle = [\r\n    { marginBottom: spacing(1.5) },\r\n    style,\r\n  ];\r\n\r\n  if (isWeb) {\r\n    return (\r\n      <View style={containerStyle}>\r\n        <TextInput\r\n          value={normalizedValue}\r\n          placeholder={placeholder}\r\n          placeholderTextColor={palette.muted}\r\n          onChangeText={handleManualChange}\r\n          onChange={event => handleManualChange(event?.nativeEvent?.text ?? event?.target?.value ?? '')}\r\n          style={[formInputBaseStyle, { marginBottom: 0 }]}\r\n          type=\"date\"\r\n          min={minDateString}\r\n          max={maxDateString}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <View style={containerStyle}>\r\n      <TouchableOpacity\r\n        onPress={openPicker}\r\n        activeOpacity={0.85}\r\n        style={{\r\n          borderWidth: 1,\r\n          borderColor: palette.border,\r\n          borderRadius: 12,\r\n          backgroundColor: palette.surfaceMuted,\r\n          flexDirection: 'row',\r\n          alignItems: 'center',\r\n          paddingHorizontal: spacing(2),\r\n          paddingVertical: spacing(1.5),\r\n        }}\r\n      >\r\n        <Text style={{ flex: 1, color: displayLabel ? palette.text : palette.muted, fontSize: typography.body }}>\r\n          {displayLabel || placeholder}\r\n        </Text>\r\n        <Text style={{ fontSize: typography.h2 - 6, color: palette.muted }}>CAL</Text>\r\n      </TouchableOpacity>\r\n      {Platform.OS === 'ios' && iosPickerVisible ? (\r\n        <DateTimePicker\r\n          value={parsed}\r\n          mode=\"date\"\r\n          display=\"inline\"\r\n          onChange={(event, selected) => {\r\n            if (event.type === 'set' && selected) {\r\n              applyDate(selected);\r\n            }\r\n            if (event.type === 'dismissed') {\r\n              setIosPickerVisible(false);\r\n              return;\r\n            }\r\n            setIosPickerVisible(false);\r\n          }}\r\n          style={{ marginTop: spacing(1) }}\r\n          minimumDate={minimumDate ? parseInputDate(minimumDate) || undefined : undefined}\r\n          maximumDate={maximumDate ? parseInputDate(maximumDate) || undefined : undefined}\r\n        />\r\n      ) : null}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst TECH_ASSIGN_ROLES = ['TECH','SUPERVISOR','ESTIMATOR'];\r\n\r\nfunction TechSelector({ team = [], value, onSelect, label, allowAllRoles, allowClear }) {\r\n  const options = useMemo(() => {\r\n    const normalized = team.map(member => ({\r\n      ...member,\r\n      role: normalizeRole(member.role),\r\n    }));\r\n    if (allowAllRoles) return normalized;\r\n    return normalized.filter(member => TECH_ASSIGN_ROLES.includes(member.role));\r\n  }, [team, allowAllRoles]);\r\n\r\n  if (!options.length) return null;\r\n\r\n  const renderLabel = label ? (\r\n    <Text style={{ color: palette.muted, fontSize: typography.small, marginBottom: spacing(1) }}>{label}</Text>\r\n  ) : null;\r\n\r\n  return (\r\n    <View style={{ marginTop: spacing(1.5) }}>\r\n      {renderLabel}\r\n      <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1) }}>\r\n        {options.map(member => {\r\n          const selected = member.id === value;\r\n          const displayName = member.fullName || member.email;\r\n          const shortLabel = displayName.length > 22 ? `${displayName.slice(0, 21)}…` : displayName;\r\n          return (\r\n            <QuickAction\r\n              key={member.id}\r\n              label={shortLabel}\r\n              tone={selected ? 'primary' : 'muted'}\r\n              onPress={() => onSelect(member.id)}\r\n            />\r\n          );\r\n        })}\r\n        {allowClear ? <QuickAction label=\"Clear\" tone=\"muted\" onPress={() => onSelect(null)} /> : null}\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction DashboardScreen({ navigation }) {\n  const { token, user } = useAuth();\n  const [loading, setLoading] = useState(true);\n  const [refreshing, setRefreshing] = useState(false);\n  const [leads, setLeads] = useState([]);\n  const [jobs, setJobs] = useState([]);\n  const [tasks, setTasks] = useState([]);\n  const [invoiceSummary, setInvoiceSummary] = useState(null);\n  const [lastUpdated, setLastUpdated] = useState(null);\n  const isAdmin = (user?.role || '').toUpperCase() === 'ADMIN';\n\r\n  const jobLookup = useMemo(() => {\r\n    const map = {};\r\n    for (const job of jobs) {\r\n      if (job?.id != null) {\r\n        map[job.id] = job;\r\n      }\r\n    }\r\n    return map;\r\n  }, [jobs]);\r\n\r\n  const loadData = useCallback(async (isPullRefresh = false) => {\r\n    if (!token) return;\r\n    isPullRefresh ? setRefreshing(true) : setLoading(true);\r\n\r\n    const fetchLeads = async () => {\r\n      try {\r\n        const data = await api('/leads', 'GET', null, token);\r\n        setLeads(data);\r\n        db.transaction(tx => {\r\n          tx.executeSql && tx.executeSql('DELETE FROM leads_cache;');\r\n          data.forEach(l =>\r\n            tx.executeSql && tx.executeSql(\r\n              'INSERT OR REPLACE INTO leads_cache (id, description, status) VALUES (?,?,?)',\r\n              [l.id, l.description || '', l.status || 'NEW']\r\n            )\r\n          );\r\n        });\r\n        return data;\r\n      } catch (e) {\r\n        return await new Promise(resolve => {\r\n          db.transaction(tx =>\r\n            tx.executeSql && tx.executeSql(\r\n              'SELECT id, description, status FROM leads_cache',\r\n              [],\r\n              (_, { rows }) => {\r\n                const fallback = rows?._array || [];\r\n                setLeads(fallback);\r\n                resolve(fallback);\r\n              }\r\n            )\r\n          );\r\n        });\r\n      }\r\n    };\r\n\r\n    const fetchJobs = async () => {\r\n      try {\r\n        const data = await api('/jobs', 'GET', null, token);\r\n        setJobs(data);\r\n        db.transaction(tx => {\r\n          tx.executeSql && tx.executeSql('DELETE FROM jobs_cache;');\r\n          data.forEach(j =>\r\n            tx.executeSql && tx.executeSql(\r\n              'INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)',\r\n              [j.id, j.name || '', j.status || 'SCHEDULED', j.startDate || '', j.endDate || '', j.notes || '']\r\n            )\r\n          );\r\n        });\r\n        return data;\r\n      } catch (e) {\r\n        return await new Promise(resolve => {\r\n          db.transaction(tx =>\r\n            tx.executeSql && tx.executeSql(\r\n              'SELECT id, name, status, startDate, endDate, notes FROM jobs_cache',\r\n              [],\r\n              (_, { rows }) => {\r\n                const fallback = rows?._array || [];\r\n                setJobs(fallback);\r\n                resolve(fallback);\r\n              }\r\n            )\r\n          );\r\n        });\r\n      }\r\n    };\r\n\r\n    const fetchTasks = async () => {\r\n      try {\r\n        const data = await api('/tasks', 'GET', null, token);\r\n        setTasks(data);\r\n        db.transaction(tx => {\r\n          data.forEach(t =>\r\n            tx.executeSql && tx.executeSql(\r\n              'INSERT OR REPLACE INTO tasks_cache (id, jobId, title, status, dueDate) VALUES (?,?,?,?,?)',\r\n              [t.id, t.jobId || null, t.title || '', t.status || 'TODO', t.dueDate || '']\r\n            )\r\n          );\r\n        });\r\n        return data;\r\n      } catch (e) {\r\n        return await new Promise(resolve => {\r\n          db.transaction(tx =>\r\n            tx.executeSql && tx.executeSql(\r\n              'SELECT id, jobId, title, status, dueDate FROM tasks_cache ORDER BY id DESC',\r\n              [],\r\n              (_, { rows }) => {\r\n                const fallback = rows?._array || [];\r\n                setTasks(fallback);\r\n                resolve(fallback);\r\n              }\r\n            )\r\n          );\r\n        });\r\n      }\r\n    };\r\n\r\n    const fetchInvoiceSummary = async () => {\r\n      try {\r\n        const data = await api('/invoices/summary', 'GET', null, token);\r\n        setInvoiceSummary(data);\r\n        return data;\r\n      } catch (e) {\r\n        return null;\r\n      }\r\n    };\r\n\r\n    try {\r\n      await Promise.all([fetchLeads(), fetchJobs(), fetchTasks(), fetchInvoiceSummary()]);\r\n      setLastUpdated(new Date());\r\n    } finally {\r\n      isPullRefresh ? setRefreshing(false) : setLoading(false);\r\n    }\r\n  }, [token]);\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      loadData(false);\r\n    }, [loadData])\r\n  );\r\n\r\n  const onRefresh = useCallback(() => loadData(true), [loadData]);\r\n\r\n  const newLeads = leads.filter(l => (l.status || '').toUpperCase() === 'NEW').length;\n  const activeJobs = jobs.filter(j => ['SCHEDULED', 'IN_PROGRESS'].includes((j.status || '').toUpperCase())).length;\n  const openTasks = tasks.filter(t => !isTaskCompleted(t.status)).length;\n  const outstandingValue = invoiceSummary?.outstanding || 0;\n  const collectedValue = invoiceSummary?.collected || 0;\n  const overdueCount = invoiceSummary?.overdueCount || 0;\n  const overdueTasks = useMemo(() => {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    return tasks.filter(task => {\n      if (!task?.dueDate || isTaskCompleted(task.status)) return false;\n      const due = new Date(task.dueDate);\n      if (Number.isNaN(due.getTime())) return false;\n      return due < today;\n    }).length;\n  }, [tasks]);\n  const statusCards = useMemo(() => [\n    {\n      label: 'Active',\n      value: String(activeJobs),\n      description: 'Jobs in progress or scheduled',\n      tone: 'primary',\n    },\n    {\n      label: 'Pending',\n      value: formatCurrency(outstandingValue),\n      description: 'Unpaid invoices',\n      tone: 'warning',\n    },\n    {\n      label: 'Paid',\n      value: formatCurrency(collectedValue),\n      description: 'Collected to date',\n      tone: 'success',\n    },\n    {\n      label: 'Overdue',\n      value: String(overdueTasks),\n      description: `Tasks overdue; ${overdueCount} invoices late`,\n      tone: 'danger',\n    },\n  ], [activeJobs, outstandingValue, collectedValue, overdueTasks, overdueCount]);\n\n  const topLeads = leads.slice(0, 3);\n  const topJobs = jobs.slice(0, 3);\n  const nextTasks = tasks.filter(t => !isTaskCompleted(t.status)).slice(0, 3);\n\r\n  return (\n    <SafeAreaView style={{ flex: 1, backgroundColor: palette.background }}>\n      <ScrollView\n        contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(5) }}\n        refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} tintColor={palette.primary} />}\n      >\n        <Text style={{ color: palette.text, fontSize: typography.h1, fontWeight: '700', marginBottom: spacing(2) }}>Dashboard</Text>\n\n        <View style={{ flexDirection: 'row', flexWrap: 'wrap', columnGap: spacing(1.5), rowGap: spacing(1.5), marginBottom: spacing(2) }}>\n          <QuickAction label=\"New job\" onPress={() => navigation.navigate('Jobs', { focus: 'create-job' })} />\n          <QuickAction label=\"New lead\" onPress={() => navigation.navigate('NewLead')} />\n          {isAdmin ? <QuickAction label=\"Create invoice\" tone=\"success\" onPress={() => navigation.navigate('Invoices')} /> : null}\n        </View>\n\n        <View style={{ flexDirection: 'row', flexWrap: 'wrap', columnGap: spacing(1.5), rowGap: spacing(1.5), marginBottom: spacing(3) }}>\n          {statusCards.map(card => (\n            <StatusCard\n              key={card.label}\n              label={card.label}\n              value={card.value}\n              description={card.description}\n              tone={card.tone}\n            />\n          ))}\n        </View>\n\n        <View style={{ flexDirection: 'row', flexWrap: 'wrap', columnGap: spacing(1.5), rowGap: spacing(1.5) }}>\n          <View style={{ flexBasis: '48%', minWidth: 160 }}>\n            <SummaryCard\n              title=\"Leads\"\n              value={leads.length}\n              subtitle={`${newLeads} new to triage`}\n              tone=\"info\"\n              onPress={() => navigation.navigate('Leads')}\n            />\n          </View>\n          <View style={{ flexBasis: '48%', minWidth: 160 }}>\n            <SummaryCard\n              title=\"Jobs\"\n              value={jobs.length}\n              subtitle={`${activeJobs} active`}\n              tone=\"primary\"\n              onPress={() => navigation.navigate('Jobs')}\n            />\n          </View>\n          <View style={{ flexBasis: '48%', minWidth: 160 }}>\n            <SummaryCard\n              title=\"Tasks\"\n              value={openTasks}\n              subtitle={`${overdueTasks} overdue • ${tasks.length} total`}\n              tone=\"warning\"\n              onPress={() => navigation.navigate('Jobs')}\n            />\n          </View>\n          <View style={{ flexBasis: '48%', minWidth: 160 }}>\n            <SummaryCard\n              title=\"Invoices\"\n              value={formatCurrency(outstandingValue)}\n              subtitle={`${overdueCount} overdue | ${formatCurrency(collectedValue)} collected`}\n              tone=\"success\"\n              onPress={() => navigation.navigate('Invoices')}\r\n            />\r\n          </View>\r\n        </View>\r\n\r\n        {loading && !refreshing ? (\r\n          <SurfaceCard style={{ alignItems: 'center', justifyContent: 'center', paddingVertical: spacing(6) }}>\r\n            <ActivityIndicator color={palette.primary} />\r\n            <Text style={{ color: palette.muted, marginTop: spacing(1.5) }}>Loading summary...</Text>\r\n          </SurfaceCard>\r\n        ) : null}\r\n\r\n        <SectionHeader title=\"Next Jobs\" actionLabel=\"View all\" onAction={() => navigation.navigate('Jobs')} />\r\n        <SurfaceCard style={{ marginBottom: spacing(3) }}>\r\n          {topJobs.length === 0 ? (\r\n            <Text style={{ color: palette.muted }}>No jobs yet. Create one from the Jobs tab.</Text>\r\n          ) : (\r\n            topJobs.map((job, idx) => {\r\n              const startLabel = job.startDate ? `Start ${formatDate(job.startDate)}` : null;\r\n              const endLabel = job.endDate ? `Due ${formatDate(job.endDate)}` : null;\r\n              return (\r\n                <View key={job.id || idx} style={{ marginBottom: idx === topJobs.length - 1 ? 0 : spacing(2.5) }}>\r\n                  <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                    <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight: '600' }}>{job.name || `Job #${job.id}`}</Text>\r\n                    <StatusPill status={job.status || 'SCHEDULED'} />\r\n                  </View>\r\n                  {startLabel || endLabel ? (\r\n                    <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>\r\n                      {[startLabel, endLabel].filter(Boolean).join(' - ')}\r\n                    </Text>\r\n                  ) : null}\r\n                  {job.notes ? (\r\n                    <Text style={{ color: palette.muted, marginTop: spacing(1) }} numberOfLines={2}>{job.notes}</Text>\r\n                  ) : null}\r\n                  <View style={{ flexDirection: 'row', columnGap: spacing(1.5), marginTop: spacing(1.5) }}>\r\n                    <QuickAction label=\"Open job\" onPress={() => navigation.navigate('JobDetail', { jobId: job.id })} />\r\n                    <QuickAction label=\"Tasks\" onPress={() => navigation.navigate('JobDetail', { jobId: job.id, tab: 'tasks' })} />\r\n                  </View>\r\n                </View>\r\n              );\r\n            })\r\n          )}\r\n        </SurfaceCard>\r\n\r\n        <SectionHeader title=\"Hot Leads\" actionLabel=\"Leads\" onAction={() => navigation.navigate('Leads')} />\r\n        <SurfaceCard style={{ marginBottom: spacing(3) }}>\r\n          {topLeads.length === 0 ? (\r\n            <Text style={{ color: palette.muted }}>No leads yet. Capture leads to keep the funnel full.</Text>\r\n        ) : (\r\n          topLeads.map((lead, idx) => (\r\n            <View key={lead.id || idx} style={{ marginBottom: idx === topLeads.length - 1 ? 0 : spacing(2) }}>\r\n              <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                <Text style={{ color: palette.text, fontWeight: '600', fontSize: typography.h2 }}>{deriveLeadTitle(lead)}</Text>\r\n                <StatusPill status={lead.status || 'NEW'} />\r\n              </View>\r\n              <Text style={{ color: palette.muted, marginTop: spacing(0.5) }} numberOfLines={3}>\r\n                {lead.description || 'No scope captured yet.'}\r\n              </Text>\r\n                <View style={{ flexDirection: 'row', columnGap: spacing(1.5), marginTop: spacing(1.5) }}>\r\n                  <QuickAction label=\"Follow up\" onPress={() => navigation.navigate('EstimateEditor', { leadId: lead.id })} />\r\n                  <QuickAction label=\"Convert\" onPress={() => navigation.navigate('Jobs')} />\r\n                </View>\r\n              </View>\r\n            ))\r\n          )}\r\n        </SurfaceCard>\r\n\r\n        <SectionHeader title=\"Open Tasks\" actionLabel=\"Jobs\" onAction={() => navigation.navigate('Jobs')} />\r\n        <SurfaceCard>\r\n          {nextTasks.length === 0 ? (\r\n            <Text style={{ color: palette.muted }}>All clear. Add tasks from a job to keep crews aligned.</Text>\r\n          ) : (\r\n            nextTasks.map((task, idx) => (\r\n              <View key={task.id || idx} style={{ marginBottom: idx === nextTasks.length - 1 ? 0 : spacing(2) }}>\r\n                <Text style={{ color: palette.text, fontWeight: '600' }}>{task.title || 'Task'}</Text>\r\n                {task.jobId ? (\r\n                  <Text style={{ color: palette.muted, marginTop: spacing(0.25) }}>\r\n                    {jobLookup[task.jobId]?.name || `Job #${task.jobId}`}\r\n                  </Text>\r\n                ) : (\r\n                  <Text style={{ color: palette.muted, marginTop: spacing(0.25) }}>Unassigned job</Text>\r\n                )}\r\n                <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>\r\n                  {task.dueDate ? `Due ${formatDate(task.dueDate)}` : 'No due date'}\r\n                </Text>\r\n                <View style={{ flexDirection: 'row', columnGap: spacing(1.5), marginTop: spacing(1.5) }}>\r\n                  <QuickAction\r\n                    label=\"Mark done\"\r\n                    onPress={() => navigation.navigate('JobDetail', { jobId: task.jobId })}\r\n                  />\r\n                  <QuickAction\r\n                    label=\"View job\"\r\n                    onPress={() => navigation.navigate('JobDetail', { jobId: task.jobId })}\r\n                  />\r\n                </View>\r\n              </View>\r\n            ))\r\n          )}\r\n        </SurfaceCard>\r\n\r\n        {lastUpdated ? (\r\n          <Text style={{ color: palette.muted, fontSize: typography.small, marginTop: spacing(2), textAlign: 'center' }}>\r\n            Updated {lastUpdated.toLocaleTimeString([], { hour: 'numeric', minute: '2-digit' })}\r\n          </Text>\r\n        ) : null}\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\n// ---------- Signature Pad to PNG ----------\r\nfunction SignaturePad({ onCapturePng }){\r\n  const [points, setPoints] = useState([]);\r\n  const [path, setPath] = useState('');\r\n  const shotRef = useRef(null);\r\n  return (\r\n    <ViewShot ref={shotRef} options={{ format: 'png', quality: 0.9, result: 'base64' }} style={{ height:220, borderWidth:1, backgroundColor:'#fff' }}>\r\n      <View\r\n        onStartShouldSetResponder={()=>true}\r\n        onResponderMove={(e)=>{\r\n          const x = e.nativeEvent.locationX, y = e.nativeEvent.locationY;\r\n          setPath(p => p + (p ? ` L ${x} ${y}` : ` M ${x} ${y}`));\r\n        }}\r\n        onResponderRelease={async ()=>{\r\n          const base64 = await shotRef.current.capture();\r\n          onCapturePng && onCapturePng('data:image/png;base64,' + base64);\r\n        }}\r\n        style={{ flex:1 }}\r\n      >\r\n        <Svg height=\"100%\" width=\"100%\"><Path d={path} stroke=\"black\" strokeWidth=\"2\" fill=\"none\" /></Svg>\r\n      </View>\r\n    </ViewShot>\r\n  );\r\n}\r\n\r\nfunction SignatureScreen({ route, navigation }){\r\n  const { token } = useAuth();\r\n  const { estimateId } = route.params;\r\n  const [sigPng, setSigPng] = useState(null);\r\n  const save = async () => {\r\n    if(!sigPng){ Alert.alert('Please sign first'); return; }\r\n    const resp = await api(`/estimates/${estimateId}/approve`, 'POST', { signaturePngUrl: sigPng }, token);\r\n    Alert.alert('Approved', `Payment link:\r\n${(resp && resp.paymentLink) ? resp.paymentLink : 'Unavailable'}`); navigation.goBack();\r\n  };\r\n  return (\r\n    <SafeAreaView style={{ padding:16 }}>\r\n      <Text style={{ fontSize:18, marginBottom:8 }}>Sign Estimate #{estimateId}</Text>\r\n      <SignaturePad onCapturePng={setSigPng} />\r\n      <View style={{ height:12 }} />\r\n      <Button title=\"Save Signature\" onPress={save} />\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\n// ---------- Admin: Users ----------\r\nconst userRoleOptions = [\r\n  { label: 'Admin', value: 'ADMIN' },\r\n  { label: 'Estimator', value: 'ESTIMATOR' },\r\n  { label: 'Supervisor', value: 'SUPERVISOR' },\r\n  { label: 'Tech', value: 'TECH' },\r\n];\r\n\r\nconst invoiceStatusOptions = [\r\n  { value: 'DRAFT', label: 'Draft' },\r\n  { value: 'SENT', label: 'Sent' },\r\n  { value: 'PART_PAID', label: 'Part paid' },\r\n  { value: 'PAID', label: 'Paid' },\r\n  { value: 'VOID', label: 'Void' },\r\n];\r\n\r\nfunction UsersAdminScreen(){\r\n  const { token } = useAuth();\r\n  const [users, setUsers] = useState([]);\r\n  const [email, setEmail] = useState('');\r\n  const [fullName, setFullName] = useState('');\r\n  const [role, setRole] = useState('TECH');\r\n  const [inviting, setInviting] = useState(false);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n\r\n  const load = useCallback(async () => {\r\n    try {\r\n      const response = await api('/users','GET',null,token);\r\n      setUsers(Array.isArray(response) ? response : []);\r\n    } catch (e) {\r\n      Alert.alert('Error', e.message || 'Unable to load users.');\r\n    }\r\n  }, [token]);\r\n\r\n  useEffect(() => { load(); }, [load]);\r\n\r\n  const resetForm = () => {\r\n    setEmail('');\r\n    setFullName('');\r\n    setRole('TECH');\r\n  };\r\n\r\n  const invite = async ()=>{\r\n    const trimmedEmail = email.trim().toLowerCase();\r\n    const trimmedName = fullName.trim();\r\n    if (!trimmedEmail) {\r\n      Alert.alert('Missing email', 'Enter an email address to invite a user.');\r\n      return;\r\n    }\r\n    try {\r\n      setInviting(true);\r\n      await api('/users','POST', { email: trimmedEmail, fullName: trimmedName || undefined, role: normalizeRole(role) }, token);\r\n      resetForm();\r\n      await load();\r\n    } catch (e) {\r\n      Alert.alert('Error', e.message || 'Unable to send invite.');\r\n    } finally {\r\n      setInviting(false);\r\n    }\r\n  };\r\n\r\n  const promote = async (id, newRole)=>{\r\n    try {\r\n      await api(`/users/${id}`,'PATCH',{ role: normalizeRole(newRole) }, token);\r\n      await load();\r\n    } catch (e) {\r\n      Alert.alert('Error', e.message || 'Unable to update role.');\r\n    }\r\n  };\r\n\r\n  const remove = (id) => {\r\n    Alert.alert('Remove user', 'Are you sure you want to remove this person?', [\r\n      { text: 'Cancel', style: 'cancel' },\r\n      {\r\n        text: 'Remove',\r\n        style: 'destructive',\r\n        onPress: async () => {\r\n          try {\r\n            await api(`/users/${id}`,'DELETE',null,token);\r\n            await load();\r\n          } catch (e) {\r\n            Alert.alert('Error', e.message || 'Unable to delete user.');\r\n          }\r\n        }\r\n      }\r\n    ]);\r\n  };\r\n\r\n  const onRefresh = useCallback(async () => {\r\n    setRefreshing(true);\r\n    try {\r\n      await load();\r\n    } finally {\r\n      setRefreshing(false);\r\n    }\r\n  }, [load]);\r\n\r\n  const renderRolePill = (value) => {\r\n    const roleCfg = userRoleOptions.find(option => option.value === normalizeRole(value));\r\n    const label = roleCfg ? roleCfg.label : normalizeRole(value);\r\n    return (\r\n      <View style={{ backgroundColor: '#e0f3f0', paddingHorizontal: spacing(1.5), paddingVertical: spacing(0.5), borderRadius: 999 }}>\r\n        <Text style={{ color: palette.primaryStrong, fontWeight:'600', fontSize: typography.small }}>{label}</Text>\r\n      </View>\r\n    );\r\n  };\r\n\r\n  const renderRoleSelector = (selectedRole, onSelect) => (\r\n    <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1) }}>\r\n      {userRoleOptions.map(option => {\r\n        const selected = selectedRole === option.value;\r\n        return (\r\n          <TouchableOpacity\r\n            key={option.value}\r\n            onPress={() => onSelect(option.value)}\r\n            activeOpacity={0.85}\r\n            style={{\r\n              paddingHorizontal: spacing(2),\r\n              paddingVertical: spacing(1),\r\n              borderRadius: 999,\r\n              borderWidth: 1,\r\n              borderColor: selected ? palette.primary : palette.border,\r\n              backgroundColor: selected ? '#d9f2ed' : palette.surface,\r\n            }}\r\n          >\r\n            <Text style={{ color: selected ? palette.primaryStrong : palette.muted, fontWeight:'600', fontSize: typography.small }}>\r\n              {option.label}\r\n            </Text>\r\n          </TouchableOpacity>\r\n        );\r\n      })}\r\n    </View>\r\n  );\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\r\n      <FlatList\r\n        data={users}\r\n        keyExtractor={u=>String(u.id)}\r\n        contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(6) }}\r\n        refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} tintColor={palette.primary} />}\r\n        ListHeaderComponent={(\r\n          <View>\r\n            <Text style={{ color: palette.text, fontSize: typography.h1, fontWeight:'700', marginBottom: spacing(2) }}>Team management</Text>\r\n            <SurfaceCard style={{ padding: spacing(2.5), marginBottom: spacing(3) }}>\r\n              <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700' }}>Invite teammate</Text>\r\n              <Text style={{ color: palette.muted, marginTop: spacing(0.5), marginBottom: spacing(2) }}>\r\n                Send an invite email and choose what they can access.\r\n              </Text>\r\n              <FormInput\r\n                placeholder=\"Full name (optional)\"\r\n                value={fullName}\r\n                onChangeText={setFullName}\r\n              />\r\n              <FormInput\r\n                placeholder=\"Work email\"\r\n                autoCapitalize=\"none\"\r\n                keyboardType=\"email-address\"\r\n                value={email}\r\n                onChangeText={setEmail}\r\n              />\r\n              <Text style={{ color: palette.muted, fontWeight:'600', fontSize: typography.small, textTransform:'uppercase', marginBottom: spacing(1) }}>Role</Text>\r\n              {renderRoleSelector(role, setRole)}\r\n              <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center', marginTop: spacing(2) }}>\r\n                <QuickAction label=\"Clear\" tone=\"muted\" onPress={resetForm} />\r\n                <TouchableOpacity\r\n                  onPress={invite}\r\n                  activeOpacity={0.85}\r\n                  disabled={inviting}\r\n                  style={{\r\n                    backgroundColor: palette.primary,\r\n                    paddingHorizontal: spacing(2.5),\r\n                    paddingVertical: spacing(1.5),\r\n                    borderRadius: 12,\r\n                    opacity: inviting ? 0.6 : 1,\r\n                  }}\r\n                >\r\n                  <Text style={{ color:'#fff', fontWeight:'700' }}>{inviting ? 'Sending...' : 'Send invite'}</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </SurfaceCard>\r\n          </View>\r\n        )}\r\n        ListEmptyComponent={(\r\n          <SurfaceCard>\r\n            <Text style={{ color: palette.muted }}>Invite your first teammate to collaborate on jobs.</Text>\r\n          </SurfaceCard>\r\n        )}\r\n        renderItem={({item}) => {\r\n          const normalizedRole = normalizeRole(item.role);\r\n          return (\r\n            <SurfaceCard style={{ marginBottom: spacing(2), padding: spacing(2.5) }}>\r\n              <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center', marginBottom: spacing(1.5) }}>\r\n                <View>\r\n                  <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600' }}>{item.fullName || item.email}</Text>\r\n                  <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>{item.email}</Text>\r\n                </View>\r\n                {renderRolePill(normalizedRole)}\r\n              </View>\r\n              <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1) }}>\r\n                {userRoleOptions.map(option => {\r\n                  const selected = normalizedRole === option.value;\r\n                  return (\r\n                    <TouchableOpacity\r\n                      key={option.value}\r\n                      onPress={() => promote(item.id, option.value)}\r\n                      disabled={selected}\r\n                      activeOpacity={0.85}\r\n                      style={{\r\n                        paddingHorizontal: spacing(1.75),\r\n                        paddingVertical: spacing(0.75),\r\n                        borderRadius: 999,\r\n                        borderWidth: 1,\r\n                        borderColor: selected ? palette.primary : palette.border,\r\n                        backgroundColor: selected ? '#d9f2ed' : palette.surface,\r\n                        opacity: selected ? 0.7 : 1,\r\n                      }}\r\n                    >\r\n                      <Text style={{ color: selected ? palette.primaryStrong : palette.muted, fontWeight:'600', fontSize: typography.small }}>\r\n                        {option.label}\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  );\r\n                })}\r\n                <TouchableOpacity\r\n                  onPress={() => remove(item.id)}\r\n                  activeOpacity={0.85}\r\n                  style={{\r\n                    paddingHorizontal: spacing(1.75),\r\n                    paddingVertical: spacing(0.75),\r\n                    borderRadius: 999,\r\n                    borderWidth: 1,\r\n                    borderColor: '#fecdd3',\r\n                    backgroundColor: '#fee2e2',\r\n                  }}\r\n                >\r\n                  <Text style={{ color: palette.danger, fontWeight:'600', fontSize: typography.small }}>Remove</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </SurfaceCard>\r\n          );\r\n        }}\r\n      />\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\n// ---------- Jobs Kanban + Change Orders ----------\r\nfunction InvoicesScreen({ navigation }){\r\n  const { token, user } = useAuth();\r\n  const [loading, setLoading] = useState(true);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [summary, setSummary] = useState(null);\r\n  const [invoices, setInvoices] = useState([]);\r\n  const [filter, setFilter] = useState('ALL');\r\n  const [newInvoiceJobId, setNewInvoiceJobId] = useState('');\r\n  const [newInvoiceAmount, setNewInvoiceAmount] = useState('');\r\n  const [newInvoiceIssuedAt, setNewInvoiceIssuedAt] = useState('');\r\n  const [newInvoiceDueAt, setNewInvoiceDueAt] = useState('');\r\n  const [newInvoiceStatus, setNewInvoiceStatus] = useState('DRAFT');\r\n  const [creatingInvoice, setCreatingInvoice] = useState(false);\r\n\r\n  const load = useCallback(async (isRefresh = false) => {\r\n    if (!token) return;\r\n    isRefresh ? setRefreshing(true) : setLoading(true);\r\n    try {\r\n      const [summaryData, list] = await Promise.all([\r\n        api('/invoices/summary', 'GET', null, token),\r\n        api('/invoices', 'GET', null, token),\r\n      ]);\r\n      setSummary(summaryData);\r\n      setInvoices(list);\r\n    } catch (e) {\r\n      // keep prior data on failure\r\n    } finally {\r\n      isRefresh ? setRefreshing(false) : setLoading(false);\r\n    }\r\n  }, [token]);\r\n\r\n  useFocusEffect(useCallback(() => {\r\n    if (user?.role === 'ADMIN') {\r\n      load(false);\r\n    }\r\n  }, [load, user?.role]));\r\n\r\n  const onRefresh = useCallback(() => load(true), [load]);\r\n  const nextInvoiceNumber = useMemo(() => {\r\n    if (!Array.isArray(invoices) || invoices.length === 0) {\r\n      return 'INV-0001';\r\n    }\r\n    const maxNumber = invoices.reduce((acc, inv) => {\r\n      const match = String(inv.number || '').match(/(\\d+)$/);\r\n      if (match) {\r\n        return Math.max(acc, parseInt(match[1], 10));\r\n      }\r\n      if (inv.id) {\r\n        return Math.max(acc, Number(inv.id));\r\n      }\r\n      return acc;\r\n    }, 0);\r\n    const next = maxNumber + 1;\r\n    return `INV-${String(next).padStart(4, '0')}`;\r\n  }, [invoices]);\r\n\r\n  const resetInvoiceForm = useCallback(() => {\r\n    setNewInvoiceJobId('');\r\n    setNewInvoiceAmount('');\r\n    setNewInvoiceIssuedAt('');\r\n    setNewInvoiceDueAt('');\r\n    setNewInvoiceStatus('DRAFT');\r\n  }, []);\r\n\r\n  const createInvoice = useCallback(async () => {\r\n    const amountValue = parseFloat(newInvoiceAmount);\r\n    if (Number.isNaN(amountValue) || amountValue <= 0) {\r\n      Alert.alert('Missing amount', 'Enter a valid invoice amount.');\r\n      return;\r\n    }\r\n    const jobIdTrimmed = newInvoiceJobId.trim();\r\n    const jobIdValue = jobIdTrimmed ? parseInt(jobIdTrimmed, 10) : null;\r\n    if (jobIdTrimmed && Number.isNaN(jobIdValue)) {\r\n      Alert.alert('Invalid job', 'Job ID must be a number.');\r\n      return;\r\n    }\r\n    const payload = {\r\n      amount: amountValue,\r\n      status: newInvoiceStatus,\r\n      number: nextInvoiceNumber || undefined,\r\n      jobId: jobIdValue || undefined,\r\n      issuedAt: newInvoiceIssuedAt || null,\r\n      dueAt: newInvoiceDueAt || null,\r\n    };\r\n    try {\r\n      setCreatingInvoice(true);\r\n      const created = await api('/invoices', 'POST', payload, token);\r\n      resetInvoiceForm();\r\n      await load(false);\r\n      Alert.alert('Invoice created', `${created?.number || payload.number || 'Invoice'} saved.`);\r\n    } catch (e) {\r\n      Alert.alert('Error', e.message || 'Unable to create invoice.');\r\n    } finally {\r\n      setCreatingInvoice(false);\r\n    }\r\n  }, [\r\n    newInvoiceAmount,\r\n    newInvoiceStatus,\r\n    newInvoiceJobId,\r\n    newInvoiceIssuedAt,\r\n    newInvoiceDueAt,\r\n    token,\r\n    load,\r\n    resetInvoiceForm,\r\n    nextInvoiceNumber,\r\n  ]);\r\n\r\n  const deleteInvoice = useCallback((invoice) => {\r\n    Alert.alert('Delete invoice', `Delete invoice #${invoice.number || invoice.id}?`, [\r\n      { text:'Cancel', style:'cancel' },\r\n      {\r\n        text:'Delete',\r\n        style:'destructive',\r\n        onPress: async () => {\r\n          try {\r\n            await api(`/invoices/${invoice.id}`, 'DELETE', null, token);\r\n            await load(false);\r\n          } catch (e) {\r\n            Alert.alert('Error', e.message || 'Unable to delete invoice.');\r\n          }\r\n        }\r\n      }\r\n    ]);\r\n  }, [token, load]);\r\n\r\n  if (user?.role !== 'ADMIN') {\r\n    return (\r\n      <SafeAreaView style={{ flex:1, alignItems:'center', justifyContent:'center', backgroundColor: palette.background }}>\r\n        <Text style={{ color: palette.muted }}>Invoices are only available to admin users.</Text>\r\n      </SafeAreaView>\r\n    );\r\n  }\r\n\r\n  const filters = [\r\n    { key:'ALL', label:'All' },\r\n    { key:'OUTSTANDING', label:'Outstanding' },\r\n    { key:'PAID', label:'Paid' },\r\n  ];\r\n\r\n  const filteredInvoices = invoices.filter(inv => {\r\n    if (filter === 'ALL') return true;\r\n    const status = (inv.status || 'DRAFT').toUpperCase();\r\n    if (filter === 'PAID') return status === 'PAID';\r\n    return !['PAID','VOID'].includes(status);\r\n  });\r\n\r\n  const outstanding = formatCurrency(summary?.outstanding || 0);\r\n  const collected = formatCurrency(summary?.collected || 0);\r\n  const drafts = formatCurrency(summary?.draftAmount || 0);\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\r\n      <ScrollView\r\n        contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(6) }}\r\n        refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} tintColor={palette.primary} />}\r\n      >\r\n        <Text style={{ color: palette.text, fontSize: typography.h1, fontWeight:'700', marginBottom: spacing(2) }}>Invoices</Text>\r\n        <Text style={{ color: palette.muted, marginBottom: spacing(2) }}>Track billing health and spot overdue balances.</Text>\r\n        <SurfaceCard style={{ padding: spacing(2.5), marginBottom: spacing(3) }}>\r\n          <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700' }}>Create invoice</Text>\r\n          <Text style={{ color: palette.muted, marginTop: spacing(0.5), marginBottom: spacing(2) }}>\r\n            Capture billing details and keep your accounts current.\r\n          </Text>\r\n          <View style={{ marginBottom: spacing(1.5) }}>\r\n            <Text style={{ color: palette.muted, fontSize: typography.small, fontWeight:'700', textTransform:'uppercase' }}>Invoice number</Text>\r\n            <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700', marginTop: spacing(0.5) }}>{nextInvoiceNumber}</Text>\r\n          </View>\r\n          <FormInput\r\n            placeholder=\"Job ID (optional)\"\r\n            value={newInvoiceJobId}\r\n            onChangeText={setNewInvoiceJobId}\r\n            keyboardType=\"number-pad\"\r\n          />\r\n          <FormInput\r\n            placeholder=\"Amount $\"\r\n            value={newInvoiceAmount}\r\n            onChangeText={setNewInvoiceAmount}\r\n            keyboardType=\"decimal-pad\"\r\n          />\r\n          <View style={{ flexDirection:'row', columnGap: spacing(1.5) }}>\r\n            <View style={{ flex:1 }}>\r\n              <DateInputField value={newInvoiceIssuedAt} onChange={setNewInvoiceIssuedAt} placeholder=\"Issued date\" style={{ marginBottom: 0 }} />\r\n            </View>\r\n            <View style={{ flex:1 }}>\r\n              <DateInputField value={newInvoiceDueAt} onChange={setNewInvoiceDueAt} placeholder=\"Due date (optional)\" style={{ marginBottom: 0 }} />\r\n            </View>\r\n          </View>\r\n          <Text style={{ color: palette.muted, fontSize: typography.small, fontWeight:'700', textTransform:'uppercase', marginTop: spacing(2), marginBottom: spacing(1) }}>Status</Text>\r\n          <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1) }}>\r\n            {invoiceStatusOptions.map(option => {\r\n              const selected = option.value === newInvoiceStatus;\r\n              return (\r\n                <TouchableOpacity\r\n                  key={option.value}\r\n                  onPress={() => setNewInvoiceStatus(option.value)}\r\n                  activeOpacity={0.85}\r\n                  style={{\r\n                    paddingHorizontal: spacing(2),\r\n                    paddingVertical: spacing(1),\r\n                    borderRadius: 999,\r\n                    borderWidth: 1,\r\n                    borderColor: selected ? palette.primary : palette.border,\r\n                    backgroundColor: selected ? '#d9f2ed' : palette.surface,\r\n                  }}\r\n                >\r\n                  <Text style={{ color: selected ? palette.primaryStrong : palette.muted, fontWeight:'600', fontSize: typography.small }}>\r\n                    {option.label}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              );\r\n            })}\r\n          </View>\r\n          <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center', marginTop: spacing(2) }}>\r\n            <QuickAction label=\"Reset\" tone=\"muted\" onPress={resetInvoiceForm} />\r\n            <TouchableOpacity\r\n              onPress={createInvoice}\r\n              activeOpacity={0.85}\r\n              disabled={creatingInvoice}\r\n              style={{\r\n                backgroundColor: palette.primary,\r\n                paddingHorizontal: spacing(2.5),\r\n                paddingVertical: spacing(1.5),\r\n                borderRadius: 12,\r\n                opacity: creatingInvoice ? 0.6 : 1,\r\n              }}\r\n            >\r\n              <Text style={{ color:'#fff', fontWeight:'700' }}>{creatingInvoice ? 'Saving...' : 'Create invoice'}</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </SurfaceCard>\r\n\r\n        <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(2), rowGap: spacing(2), marginBottom: spacing(3) }}>\r\n          <View style={{ flexBasis:'48%', minWidth: 160 }}>\r\n            <SummaryCard title=\"Outstanding\" value={outstanding} subtitle={`${summary?.overdueCount || 0} overdue`} tone=\"warning\" />\r\n          </View>\r\n          <View style={{ flexBasis:'48%', minWidth: 160 }}>\r\n            <SummaryCard title=\"Collected\" value={collected} subtitle=\"All payments to date\" tone=\"success\" />\r\n          </View>\r\n          <View style={{ flexBasis:'48%', minWidth: 160 }}>\r\n            <SummaryCard title=\"Drafts\" value={drafts} subtitle={`${summary?.totalCount || 0} total invoices`} tone=\"info\" />\r\n          </View>\r\n        </View>\r\n\r\n        <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginBottom: spacing(2) }}>\r\n          {filters.map(f => {\r\n            const selected = f.key === filter;\r\n            return (\r\n              <TouchableOpacity\r\n                key={f.key}\r\n                onPress={() => setFilter(f.key)}\r\n                activeOpacity={0.85}\r\n                style={{\r\n                  paddingHorizontal: spacing(2),\r\n                  paddingVertical: spacing(1),\r\n                  borderRadius: 999,\r\n                  borderWidth: 1,\r\n                  borderColor: selected ? palette.primary : palette.border,\r\n                  backgroundColor: selected ? '#d9f2ed' : palette.surface,\r\n                }}\r\n              >\r\n                <Text style={{ color: selected ? palette.primaryStrong : palette.muted, fontWeight:'600', fontSize: typography.small }}>{f.label}</Text>\r\n              </TouchableOpacity>\r\n            );\r\n          })}\r\n        </View>\r\n\r\n        {loading ? (\r\n          <SurfaceCard style={{ alignItems:'center', paddingVertical: spacing(6) }}>\r\n            <ActivityIndicator color={palette.primary} />\r\n            <Text style={{ color: palette.muted, marginTop: spacing(1.5) }}>Loading invoices...</Text>\r\n          </SurfaceCard>\r\n        ) : filteredInvoices.length === 0 ? (\r\n          <SurfaceCard>\r\n            <Text style={{ color: palette.muted }}>No invoices match this filter.</Text>\r\n          </SurfaceCard>\r\n        ) : (\r\n          filteredInvoices.map(inv => {\r\n            const payments = (inv.Payments || []).reduce((sum, p) => sum + Number(p.amount || 0), 0);\r\n            const amount = Number(inv.amount || 0);\r\n            const balance = Math.max(amount - payments, 0);\r\n            const statusKey = (inv.status || 'DRAFT').toUpperCase();\r\n            return (\r\n              <SurfaceCard key={inv.id}>\r\n                <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center' }}>\r\n                  <View>\r\n                    <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600' }}>Invoice #{inv.number || inv.id}</Text>\r\n                    <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>Issued {inv.issuedAt ? formatDate(inv.issuedAt) : 'TBD'}</Text>\r\n                  </View>\r\n                  <StatusPill status={statusKey} />\r\n                </View>\r\n                <View style={{ flexDirection:'row', justifyContent:'space-between', marginTop: spacing(1.5) }}>\r\n                  <View>\r\n                    <Text style={{ color: palette.muted, fontSize: typography.small }}>Amount</Text>\r\n                    <Text style={{ color: palette.text, fontWeight:'600' }}>{formatCurrency(amount)}</Text>\r\n                  </View>\r\n                  <View>\r\n                    <Text style={{ color: palette.muted, fontSize: typography.small }}>Collected</Text>\r\n                    <Text style={{ color: palette.text }}>{formatCurrency(payments)}</Text>\r\n                  </View>\r\n                  <View>\r\n                    <Text style={{ color: palette.muted, fontSize: typography.small }}>Balance</Text>\r\n                    <Text style={{ color: balance > 0 ? palette.primaryStrong : palette.muted, fontWeight:'600' }}>{formatCurrency(balance)}</Text>\r\n                  </View>\r\n                </View>\r\n                {inv.dueAt ? (\r\n                  <Text style={{ color: palette.muted, marginTop: spacing(1) }}>Due {formatDate(inv.dueAt)}</Text>\r\n                ) : null}\r\n                <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginTop: spacing(2) }}>\r\n                  {inv.jobId ? <QuickAction label=\"View job\" onPress={() => navigation.navigate('JobDetail', { jobId: inv.jobId })} tone=\"muted\" /> : null}\r\n                  <QuickAction label=\"Record payment\" tone=\"success\" onPress={() => Alert.alert('Coming soon', 'Payment logging will land shortly.')} />\r\n                  <QuickAction label=\"Delete\" tone=\"danger\" onPress={() => deleteInvoice(inv)} />\r\n                </View>\r\n              </SurfaceCard>\r\n            );\r\n          })\r\n        )}\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\nfunction JobsKanbanScreen({ navigation, route }){\n  const { token } = useAuth();\n  const [jobs, setJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [refreshing, setRefreshing] = useState(false);\n  const [newJobName, setNewJobName] = useState('');\n  const [newJobStartDate, setNewJobStartDate] = useState('');\r\n  const [newJobDueDate, setNewJobDueDate] = useState('');\r\n  const [newJobNotes, setNewJobNotes] = useState('');\r\n  const [newCustomerName, setNewCustomerName] = useState('');\r\n  const [newCustomerPhone, setNewCustomerPhone] = useState('');\r\n  const [newCustomerEmail, setNewCustomerEmail] = useState('');\n  const [newAddressLine1, setNewAddressLine1] = useState('');\n  const [newAddressLine2, setNewAddressLine2] = useState('');\n  const [newCity, setNewCity] = useState('');\n  const [newStateCode, setNewStateCode] = useState('');\n  const [newZip, setNewZip] = useState('');\n  const [newJobTags, setNewJobTags] = useState([]);\n  const [jobFormTab, setJobFormTab] = useState('BASICS');\n  const statusOrder = ['SCHEDULED','IN_PROGRESS','ON_HOLD','DONE','COMPLETE','CANCELLED'];\n  const scrollRef = useRef(null);\n  const [selectedTag, setSelectedTag] = useState(null);\n  const [selectedCity, setSelectedCity] = useState(null);\n  const [selectedUrgency, setSelectedUrgency] = useState('ALL');\n\r\n  const load = useCallback(async (isRefresh = false) => {\r\n    isRefresh ? setRefreshing(true) : setLoading(true);\r\n    try {\r\n      const data = await api('/jobs','GET',null,token);\r\n      setJobs(data);\r\n      db.transaction(tx => {\r\n        tx.executeSql && tx.executeSql('DELETE FROM jobs_cache;');\r\n        data.forEach(j => tx.executeSql && tx.executeSql(\r\n          'INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)',\r\n          [j.id, j.name||'', j.status||'SCHEDULED', j.startDate||'', j.endDate||'', j.notes||'']\r\n        ));\r\n      });\r\n    } catch(e) {\r\n      db.transaction(tx =>\r\n        tx.executeSql && tx.executeSql(\r\n          'SELECT id, name, status, startDate, endDate, notes FROM jobs_cache',\r\n          [],\r\n          (_, { rows }) => setJobs(rows._array || [])\r\n        )\r\n      );\r\n    } finally {\r\n      isRefresh ? setRefreshing(false) : setLoading(false);\r\n    }\r\n  }, [token]);\r\n\r\n  useFocusEffect(\n    useCallback(() => {\n      load(false);\n    }, [load])\n  );\n  useEffect(() => {\n    if (route?.params?.focus === 'create-job') {\n      scrollRef.current?.scrollTo({ y: 0, animated: true });\n      setJobFormTab('BASICS');\n      if (navigation && typeof navigation.setParams === 'function') {\n        navigation.setParams({ focus: undefined });\n      }\n    }\n  }, [route?.params?.focus, navigation]);\n  const availableTags = useMemo(() => {\n    const set = new Set();\n    jobs.forEach(job => {\n      const tags = Array.isArray(job.tags) ? job.tags : [];\n      tags.forEach(tag => {\n        if (tag) set.add(String(tag));\n      });\n    });\n    return Array.from(set).sort((a, b) => a.toLowerCase().localeCompare(b.toLowerCase()));\n  }, [jobs]);\n  const availableCities = useMemo(() => {\n    const set = new Set();\n    jobs.forEach(job => {\n      const city = job?.Jobsite?.city;\n      if (city) set.add(String(city).trim());\n    });\n    return Array.from(set).sort((a, b) => a.toLowerCase().localeCompare(b.toLowerCase()));\n  }, [jobs]);\n  const urgencyFilters = useMemo(() => ([\n    { key: 'ALL', label: 'All' },\n    { key: 'UPCOMING', label: 'Starting soon' },\n    { key: 'OVERDUE', label: 'Past due' },\n  ]), []);\n  const filteredJobsRaw = useMemo(() => {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    return jobs.filter(job => {\n      if (selectedTag) {\n        const tags = Array.isArray(job.tags) ? job.tags : [];\n        const hasTag = tags.some(tag => String(tag).toLowerCase() === selectedTag.toLowerCase());\n        if (!hasTag) return false;\n      }\n      if (selectedCity) {\n        const city = job?.Jobsite?.city ? String(job.Jobsite.city) : '';\n        if (city.toLowerCase() !== selectedCity.toLowerCase()) return false;\n      }\n      if (selectedUrgency === 'UPCOMING') {\n        if (!job.startDate) return false;\n        const start = new Date(job.startDate);\n        if (Number.isNaN(start.getTime())) return false;\n        const diff = Math.ceil((start - today) / (1000 * 60 * 60 * 24));\n        if (diff < 0 || diff > 3) return false;\n      } else if (selectedUrgency === 'OVERDUE') {\n        if (!job.endDate) return false;\n        const due = new Date(job.endDate);\n        if (Number.isNaN(due.getTime())) return false;\n        if (due >= today) return false;\n      }\n      return true;\n    });\n  }, [jobs, selectedTag, selectedCity, selectedUrgency]);\n  const hasFilters = useMemo(() => Boolean(selectedTag || selectedCity || selectedUrgency !== 'ALL'), [selectedTag, selectedCity, selectedUrgency]);\n  const clearFilters = useCallback(() => {\n    setSelectedTag(null);\n    setSelectedCity(null);\n    setSelectedUrgency('ALL');\n  }, []);\n\r\n  const onRefresh = useCallback(() => load(true), [load]);\r\n\r\n  const resetForm = () => {\n    setNewJobName('');\n    setNewJobStartDate('');\n    setNewJobDueDate('');\n    setNewJobNotes('');\n    setNewCustomerName('');\r\n    setNewCustomerPhone('');\r\n    setNewCustomerEmail('');\r\n    setNewAddressLine1('');\r\n    setNewAddressLine2('');\r\n    setNewCity('');\n    setNewStateCode('');\n    setNewZip('');\n    setNewJobTags([]);\n    setJobFormTab('BASICS');\n  };\n\r\n  const createJob = async () => {\r\n    if(!newJobName.trim()){\r\n      Alert.alert('Missing info', 'Please add a job name.');\r\n      setJobFormTab('BASICS');\r\n      return;\r\n    }\r\n    const hasCustomer = [newCustomerName, newCustomerPhone, newCustomerEmail].some(v => v && v.trim());\r\n    const hasAddress = [newAddressLine1, newCity, newStateCode, newZip].some(v => v && v.trim());\r\n    const payload = {\n      name: newJobName.trim(),\n      status: 'SCHEDULED',\n      startDate: newJobStartDate || null,\n      endDate: newJobDueDate || null,\n      notes: newJobNotes.trim() || null,\n      tags: newJobTags.filter(Boolean),\n    };\n    if (hasCustomer) {\r\n      payload.customer = {\r\n        name: newCustomerName.trim(),\r\n        phone: newCustomerPhone.trim(),\r\n        email: newCustomerEmail.trim(),\r\n        billingAddress: newAddressLine1\r\n          ? `${newAddressLine1}${newAddressLine2 ? `\r\n${newAddressLine2}` : ''}${newCity ? `\r\n${newCity}, ${newStateCode} ${newZip}` : ''}`\r\n          : null,\r\n      };\r\n    }\r\n    if (hasAddress) {\r\n      payload.jobsite = {\r\n        addressLine1: newAddressLine1.trim(),\r\n        addressLine2: newAddressLine2.trim(),\r\n        city: newCity.trim(),\r\n        state: newStateCode.trim(),\r\n        zip: newZip.trim(),\r\n      };\r\n    }\r\n    try {\r\n      const created = await api('/jobs','POST', payload, token);\r\n      setJobs(prev => [created, ...prev]);\r\n      db.transaction(tx =>\r\n        tx.executeSql && tx.executeSql(\r\n          'INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)',\r\n          [created.id, created.name||'', created.status||'SCHEDULED', created.startDate||'', created.endDate||'', created.notes||'']\r\n        )\r\n      );\r\n      resetForm();\r\n      Alert.alert('Job created', `Job #${created.id} ready to schedule.`);\r\n    } catch(e) {\r\n      Alert.alert('Error', e.message || 'Unable to create job');\r\n    }\r\n  };\r\n\r\n  const updateJobStatus = async (id, status) => {\r\n    try {\r\n      const updated = await api(`/jobs/${id}`,'PATCH',{ status }, token);\r\n      setJobs(prev => prev.map(job => job.id === id ? updated : job));\r\n    } catch(e) {\r\n      Alert.alert('Error', e.message || 'Unable to update job status');\r\n    }\r\n  };\r\n\r\n  const removeJob = async (id) => {\r\n    Alert.alert('Delete Job', `Delete job #${id}?`, [\r\n      { text:'Cancel', style:'cancel' },\r\n      { text:'Delete', style:'destructive', onPress: async () => {\r\n        try {\r\n          await api(`/jobs/${id}`,'DELETE',null,token);\r\n          setJobs(prev => prev.filter(job => job.id !== id));\r\n          db.transaction(tx => tx.executeSql && tx.executeSql('DELETE FROM jobs_cache WHERE id=?', [id]));\r\n        } catch(e) {\r\n          Alert.alert('Error', e.message || 'Unable to delete job');\r\n        }\r\n      } }\r\n    ]);\r\n  };\r\n\r\n  const sortedJobs = useMemo(() => {\n    const normalize = (status) => (status || 'SCHEDULED').toUpperCase();\n    const rank = (status) => {\n      const key = normalize(status);\n      const idx = statusOrder.indexOf(key);\n      return idx === -1 ? statusOrder.length : idx;\n    };\r\n    const parseDateSafe = (value) => {\r\n      if (!value) return null;\r\n      const d = new Date(value);\r\n      return Number.isNaN(d.getTime()) ? null : d;\r\n    };\r\n    return [...filteredJobsRaw].sort((a, b) => {\n      const statusDiff = rank(a.status) - rank(b.status);\n      if (statusDiff !== 0) return statusDiff;\n      const startA = parseDateSafe(a.startDate);\n      const startB = parseDateSafe(b.startDate);\n      if (startA && startB) return startA - startB;\n      if (startA) return -1;\n      if (startB) return 1;\n      return (b.id || 0) - (a.id || 0);\n    });\n  }, [filteredJobsRaw, statusOrder]);\n\r\n  const groupedJobs = useMemo(() => {\r\n    const groups = [];\r\n    let currentStatus = null;\r\n    sortedJobs.forEach(job => {\r\n      const statusKey = (job.status || 'SCHEDULED').toUpperCase();\r\n      if (statusKey !== currentStatus) {\r\n        groups.push({ status: statusKey, jobs: [job] });\r\n        currentStatus = statusKey;\r\n      } else {\r\n        groups[groups.length - 1].jobs.push(job);\r\n      }\r\n    });\r\n    return groups;\r\n  }, [sortedJobs]);\r\n\r\n  const statusLabel = (status) => {\r\n    const key = (status || 'SCHEDULED').toUpperCase();\r\n    return pillTone[key]?.label || key.charAt(0) + key.slice(1).toLowerCase();\r\n  };\r\n\r\n  const quickStatusActions = [\r\n    { label:'Start job', value:'IN_PROGRESS', tone:'primary' },\r\n    { label:'Pause', value:'ON_HOLD', tone:'warning' },\r\n    { label:'Wrap up', value:'DONE', tone:'success' },\r\n  ];\r\n\r\n  const inputStyle = {\r\n    borderWidth: 1,\r\n    borderColor: palette.border,\r\n    borderRadius: 12,\r\n    paddingHorizontal: spacing(1.5),\r\n    paddingVertical: spacing(1.25),\r\n    backgroundColor: palette.surfaceMuted,\r\n    color: palette.text,\r\n    fontSize: typography.body,\r\n    marginBottom: spacing(1.5),\r\n  };\r\n\r\n  const jobTabs = [\r\n    { key:'BASICS', label:'Basics' },\r\n    { key:'CUSTOMER', label:'Customer' },\r\n    { key:'JOBSITE', label:'Jobsite' },\r\n    { key:'NOTES', label:'Notes' },\r\n  ];\r\n\r\n  const renderJobFormFields = () => {\r\n    if (jobFormTab === 'BASICS') {\n      return (\n        <View>\n          <TextInput\n            placeholder=\"Job name\"\n            placeholderTextColor={palette.muted}\r\n            value={newJobName}\r\n            onChangeText={setNewJobName}\r\n            style={inputStyle}\r\n          />\r\n          <DateInputField\r\n            value={newJobStartDate}\r\n            onChange={setNewJobStartDate}\r\n            placeholder=\"Start date\"\r\n          />\n          <DateInputField\n            value={newJobDueDate}\n            onChange={setNewJobDueDate}\n            placeholder=\"Due date\"\n          />\n          <View style={{ marginTop: spacing(1.5) }}>\n            <TagInput value={newJobTags} onChange={setNewJobTags} placeholder=\"Add tags (e.g. HVAC, Urgent)\" />\n          </View>\n        </View>\n      );\n    }\n    if (jobFormTab === 'CUSTOMER') {\r\n      return (\r\n        <View>\r\n          <TextInput\r\n            placeholder=\"Customer name\"\r\n            placeholderTextColor={palette.muted}\r\n            value={newCustomerName}\r\n            onChangeText={setNewCustomerName}\r\n            style={inputStyle}\r\n          />\r\n          <TextInput\r\n            placeholder=\"Phone\"\r\n            placeholderTextColor={palette.muted}\r\n            keyboardType=\"phone-pad\"\r\n            value={newCustomerPhone}\r\n            onChangeText={setNewCustomerPhone}\r\n            style={inputStyle}\r\n          />\r\n          <TextInput\r\n            placeholder=\"Email\"\r\n            placeholderTextColor={palette.muted}\r\n            keyboardType=\"email-address\"\r\n            autoCapitalize=\"none\"\r\n            value={newCustomerEmail}\r\n            onChangeText={setNewCustomerEmail}\r\n            style={inputStyle}\r\n          />\r\n        </View>\r\n      );\r\n    }\r\n    if (jobFormTab === 'JOBSITE') {\r\n      return (\r\n        <View>\r\n          <TextInput\r\n            placeholder=\"Address line 1\"\r\n            placeholderTextColor={palette.muted}\r\n            value={newAddressLine1}\r\n            onChangeText={setNewAddressLine1}\r\n            style={inputStyle}\r\n          />\r\n          <TextInput\r\n            placeholder=\"Address line 2\"\r\n            placeholderTextColor={palette.muted}\r\n            value={newAddressLine2}\r\n            onChangeText={setNewAddressLine2}\r\n            style={inputStyle}\r\n          />\r\n          <View style={{ flexDirection:'row', columnGap: spacing(1.5) }}>\r\n            <View style={{ flex:1 }}>\r\n              <TextInput\r\n                placeholder=\"City\"\r\n                placeholderTextColor={palette.muted}\r\n                value={newCity}\r\n                onChangeText={setNewCity}\r\n                style={[inputStyle, { marginBottom: 0 }]}\r\n              />\r\n            </View>\r\n            <View style={{ width: 80 }}>\r\n              <TextInput\r\n                placeholder=\"State\"\r\n                placeholderTextColor={palette.muted}\r\n                value={newStateCode}\r\n                onChangeText={setNewStateCode}\r\n                style={[inputStyle, { marginBottom: 0 }]}\r\n              />\r\n            </View>\r\n            <View style={{ width: 100 }}>\r\n              <TextInput\r\n                placeholder=\"ZIP\"\r\n                placeholderTextColor={palette.muted}\r\n                value={newZip}\r\n                onChangeText={setNewZip}\r\n                style={[inputStyle, { marginBottom: 0 }]}\r\n              />\r\n            </View>\r\n          </View>\r\n        </View>\r\n      );\r\n    }\r\n    return (\r\n      <TextInput\r\n        placeholder=\"Internal notes\"\r\n        placeholderTextColor={palette.muted}\r\n        value={newJobNotes}\r\n        onChangeText={setNewJobNotes}\r\n        multiline\r\n        style={[inputStyle, { minHeight: 96, textAlignVertical: 'top' }]}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\n      <ScrollView\n        ref={scrollRef}\n        contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(4) }}\n        refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} tintColor={palette.primary} />}\n      >\n        <SurfaceCard style={{ marginBottom: spacing(3), padding: spacing(2.5) }}>\r\n          <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700', marginBottom: spacing(2) }}>Create job</Text>\r\n          <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1.5), marginBottom: spacing(2) }}>\r\n            {jobTabs.map(tab => {\r\n              const selected = tab.key === jobFormTab;\r\n              return (\r\n                <TouchableOpacity\r\n                  key={tab.key}\r\n                  onPress={() => setJobFormTab(tab.key)}\r\n                  activeOpacity={0.85}\r\n                  style={{\r\n                    paddingHorizontal: spacing(2),\r\n                    paddingVertical: spacing(1),\r\n                    borderRadius: 999,\r\n                    borderWidth: 1,\r\n                    borderColor: selected ? palette.primary : palette.border,\r\n                    backgroundColor: selected ? '#d9f2ed' : palette.surface,\r\n                  }}\r\n                >\r\n                  <Text style={{ color: selected ? palette.primaryStrong : palette.muted, fontWeight:'600', fontSize: typography.small }}>\r\n                    {tab.label}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              );\r\n            })}\r\n          </View>\r\n          {renderJobFormFields()}\r\n          <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center', marginTop: spacing(2) }}>\r\n            <QuickAction label=\"Reset\" tone=\"muted\" onPress={resetForm} />\r\n            <TouchableOpacity\r\n              onPress={createJob}\r\n              activeOpacity={0.85}\r\n              style={{ backgroundColor: palette.primary, paddingHorizontal: spacing(2.5), paddingVertical: spacing(1.5), borderRadius: 12 }}\r\n            >\r\n              <Text style={{ color:'#fff', fontWeight:'700' }}>Create job</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </SurfaceCard>\n\n        <SurfaceCard style={{ marginBottom: spacing(3), padding: spacing(2.5) }}>\n          <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700', marginBottom: spacing(1.5) }}>Filters</Text>\n          <Text style={{ color: palette.muted, marginBottom: spacing(1) }}>Urgency</Text>\n          <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginBottom: spacing(1.5) }}>\n            {urgencyFilters.map(option => (\n              <QuickAction\n                key={option.key}\n                label={option.label}\n                tone={selectedUrgency === option.key ? 'primary' : 'muted'}\n                onPress={() => setSelectedUrgency(option.key)}\n              />\n            ))}\n          </View>\n          {availableTags.length ? (\n            <View style={{ marginBottom: spacing(1.5) }}>\n              <Text style={{ color: palette.muted, marginBottom: spacing(1) }}>Tags</Text>\n              <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1) }}>\n                {availableTags.map(tag => (\n                  <QuickAction\n                    key={tag}\n                    label={`#${tag}`}\n                    tone={selectedTag === tag ? 'primary' : 'muted'}\n                    onPress={() => setSelectedTag(selectedTag === tag ? null : tag)}\n                  />\n                ))}\n              </View>\n            </View>\n          ) : null}\n          {availableCities.length ? (\n            <View>\n              <Text style={{ color: palette.muted, marginBottom: spacing(1) }}>Location</Text>\n              <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1) }}>\n                {availableCities.map(city => (\n                  <QuickAction\n                    key={city}\n                    label={city}\n                    tone={selectedCity === city ? 'primary' : 'muted'}\n                    onPress={() => setSelectedCity(selectedCity === city ? null : city)}\n                  />\n                ))}\n              </View>\n            </View>\n          ) : null}\n          {(selectedTag || selectedCity || selectedUrgency !== 'ALL') ? (\n            <View style={{ marginTop: spacing(2) }}>\n              <QuickAction label=\"Clear filters\" tone=\"muted\" onPress={clearFilters} />\n            </View>\n          ) : null}\n        </SurfaceCard>\n\n        {loading && !refreshing && jobs.length === 0 ? (\n          <SurfaceCard style={{ alignItems:'center', paddingVertical: spacing(6), marginBottom: spacing(3) }}>\n            <ActivityIndicator color={palette.primary} />\n            <Text style={{ color: palette.muted, marginTop: spacing(1.5) }}>Loading jobs...</Text>\n          </SurfaceCard>\n        ) : null}\r\n\r\n        {groupedJobs.length === 0 ? (\n          <SurfaceCard>\n            <Text style={{ color: palette.muted }}>\n              {hasFilters ? 'No jobs match the current filters.' : 'No jobs yet. Convert a lead or add a job to get started.'}\n            </Text>\n          </SurfaceCard>\n        ) : (\n          groupedJobs.map(group => (\r\n            <View key={group.status} style={{ marginBottom: spacing(3) }}>\r\n              <Text style={{ color: palette.muted, fontWeight:'700', fontSize: typography.small, textTransform:'uppercase', marginBottom: spacing(1) }}>\r\n                {statusLabel(group.status)}\r\n              </Text>\r\n              {group.jobs.map(job => {\r\n                const customer = job.Customer || {};\r\n                const jobsite = job.Jobsite || {};\r\n                const addressParts = [\r\n                  jobsite.addressLine1,\r\n                  jobsite.addressLine2,\r\n                  [jobsite.city, jobsite.state].filter(Boolean).join(', '),\r\n                  jobsite.zip\r\n                ].filter(Boolean);\r\n                const address = addressParts.join(', ');\r\n                const statusKey = (job.status || 'SCHEDULED').toUpperCase();\r\n                return (\r\n                  <SurfaceCard key={job.id} style={{ marginBottom: spacing(1.5) }}>\r\n                    <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center' }}>\r\n                      <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600' }}>{job.name || `Job #${job.id}`}</Text>\r\n                      <StatusPill status={statusKey} />\r\n                    </View>\r\n                    {(job.startDate || job.endDate) ? (\r\n                      <Text style={{ color: palette.muted, marginTop: spacing(0.75) }}>\r\n                        {[job.startDate ? `Start ${formatDate(job.startDate)}` : null, job.endDate ? `Due ${formatDate(job.endDate)}` : null].filter(Boolean).join(' | ')}\r\n                      </Text>\r\n                    ) : null}\r\n                    {customer.name ? <Text style={{ color: palette.text, fontWeight:'600', marginTop: spacing(1) }}>{customer.name}</Text> : null}\r\n                    {customer.phone ? <Text style={{ color: palette.muted }}>{customer.phone}</Text> : null}\r\n                    {customer.email ? <Text style={{ color: palette.muted }}>{customer.email}</Text> : null}\n                    {address ? <Text style={{ color: palette.muted, marginTop: spacing(1) }}>{address}</Text> : null}\n                    {job.notes ? <Text style={{ color: palette.muted, marginTop: spacing(1) }} numberOfLines={3}>{job.notes}</Text> : null}\n                    {Array.isArray(job.tags) && job.tags.length ? (\n                      <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginTop: spacing(1) }}>\n                        {job.tags.map(tag => (\n                          <View\n                            key={`${job.id}-${tag}`}\n                            style={{ backgroundColor: '#e0f3f0', borderRadius: 999, paddingHorizontal: spacing(1.5), paddingVertical: spacing(0.5) }}\n                          >\n                            <Text style={{ color: palette.primaryStrong, fontWeight:'600', fontSize: typography.small }}>{`#${tag}`}</Text>\n                          </View>\n                        ))}\n                      </View>\n                    ) : null}\n                    <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginTop: spacing(2) }}>\n                      <QuickAction label=\"View job\" onPress={() => navigation.navigate('JobDetail', { jobId: job.id })} tone=\"muted\" />\n                      {quickStatusActions.map(action => (\r\n                        action.value === statusKey ? null : (\r\n                          <QuickAction\r\n                            key={action.value}\r\n                            label={action.label}\r\n                            tone={action.tone}\r\n                            onPress={() => updateJobStatus(job.id, action.value)}\r\n                          />\r\n                        )\r\n                      ))}\r\n                      <QuickAction label=\"Delete\" tone=\"danger\" onPress={() => removeJob(job.id)} />\r\n                    </View>\r\n                  </SurfaceCard>\r\n                );\r\n              })}\r\n            </View>\r\n          ))\r\n        )}\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\nfunction JobDetailScreen({ route, navigation }){\r\n  const { jobId } = route.params;\r\n  const { token, user } = useAuth();\r\n  const [jobName, setJobName] = useState('');\r\n  const [jobStartDate, setJobStartDate] = useState('');\r\n  const [jobEndDate, setJobEndDate] = useState('');\r\n  const [jobNotes, setJobNotes] = useState('');\r\n  const [jobCustomerName, setJobCustomerName] = useState('');\r\n  const [jobCustomerPhone, setJobCustomerPhone] = useState('');\r\n  const [jobCustomerEmail, setJobCustomerEmail] = useState('');\r\n  const [jobAddressLine1, setJobAddressLine1] = useState('');\r\n  const [jobAddressLine2, setJobAddressLine2] = useState('');\r\n  const [jobCity, setJobCity] = useState('');\n  const [jobStateCode, setJobStateCode] = useState('');\n  const [jobZip, setJobZip] = useState('');\n  const [jobTags, setJobTags] = useState([]);\n  const [jobAttachments, setJobAttachments] = useState([]);\n  const [loadingAttachments, setLoadingAttachments] = useState(false);\n  const [uploadingAttachment, setUploadingAttachment] = useState(false);\n  const [jobActivity, setJobActivity] = useState([]);\n  const [newActivityNote, setNewActivityNote] = useState('');\n  const [addingActivity, setAddingActivity] = useState(false);\n  const [changeOrders, setCO] = useState([]);\n  const [title, setTitle] = useState('');\r\n  const [amountDelta, setAmountDelta] = useState('0');\r\n  const roleKey = normalizeRole(user?.role);\r\n  const canManageChangeOrders = ['ADMIN','SUPERVISOR','ESTIMATOR'].includes(roleKey);\r\n  const loadCO = useCallback(async () => {\r\n    setCO(await api(`/change-orders/job/${jobId}`,'GET',null,token));\r\n  }, [jobId, token]);\r\n  const loadJob = useCallback(async () => {\n    try {\n      const j = await api(`/jobs/${jobId}`,'GET',null,token);\n      setJobName(j.name||'');\n      setJobStartDate(j.startDate||'');\r\n      setJobEndDate(j.endDate||'');\r\n      setJobNotes(j.notes||'');\r\n      const customer = j.Customer || {};\r\n      const jobsite = j.Jobsite || {};\r\n      setJobCustomerName(customer.name || '');\r\n      setJobCustomerPhone(customer.phone || '');\r\n      setJobCustomerEmail(customer.email || '');\r\n      setJobAddressLine1(jobsite.addressLine1 || '');\n      setJobAddressLine2(jobsite.addressLine2 || '');\n      setJobCity(jobsite.city || '');\n      setJobStateCode(jobsite.state || '');\n      setJobZip(jobsite.zip || '');\n      setJobTags(Array.isArray(j.tags) ? j.tags : []);\n      setJobActivity(Array.isArray(j.activityLog) ? j.activityLog : []);\n    } catch(e) { }\n  }, [jobId, token]);\n  const loadAttachments = useCallback(async () => {\n    try {\n      setLoadingAttachments(true);\n      const response = await api(`/attachments?entityType=JOB&entityId=${jobId}`,'GET',null,token);\n      setJobAttachments(Array.isArray(response) ? response : []);\n    } catch (e) {\n      // ignore best effort offline\n    } finally {\n      setLoadingAttachments(false);\n    }\n  }, [jobId, token]);\n  useEffect(()=>{ loadJob(); loadCO(); loadAttachments(); },[loadJob, loadCO, loadAttachments]);\n  const addCO = async ()=>{\r\n    if(!title.trim()){\r\n      Alert.alert('Missing info', 'Add a title for the change order.');\r\n      return;\r\n    }\r\n    await api(`/change-orders/job/${jobId}`,'POST',{ title: title.trim(), amountDelta: parseFloat(amountDelta) || 0 }, token);\r\n    setTitle(''); setAmountDelta('0'); loadCO();\r\n  };\r\n  const saveJobDetails = async () => {\r\n    try {\r\n      await api(`/jobs/${jobId}`,'PATCH',{\n        name: jobName,\n        startDate: jobStartDate || null,\n        endDate: jobEndDate || null,\n        notes: jobNotes,\n        tags: Array.isArray(jobTags) ? jobTags.filter(Boolean) : [],\n        customer: {\n          name: jobCustomerName,\n          phone: jobCustomerPhone,\n          email: jobCustomerEmail,\r\n          billingAddress: jobAddressLine1 ? `${jobAddressLine1}${jobAddressLine2 ? `\r\n${jobAddressLine2}` : ''}${jobCity ? `\r\n${jobCity}, ${jobStateCode} ${jobZip}` : ''}` : null,\r\n        },\r\n        jobsite: {\r\n          addressLine1: jobAddressLine1,\r\n          addressLine2: jobAddressLine2,\r\n          city: jobCity,\r\n          state: jobStateCode,\r\n          zip: jobZip,\r\n        },\r\n      }, token);\r\n      Alert.alert('Saved', 'Job details updated.');\r\n      loadJob();\r\n    } catch(e) {\r\n      Alert.alert('Error', e.message || 'Unable to save job');\r\n    }\r\n  };\r\n  const deleteJob = () => {\r\n    Alert.alert('Delete job', `Delete job #${jobId}?`, [\r\n      { text:'Cancel', style:'cancel' },\r\n      { text:'Delete', style:'destructive', onPress: async ()=>{\r\n        try{\r\n          await api(`/jobs/${jobId}`,'DELETE',null,token);\r\n          db.transaction(tx => tx.executeSql('DELETE FROM jobs_cache WHERE id=?', [jobId]));\r\n          Alert.alert('Deleted', 'Job removed.');\r\n          navigation.navigate('Tabs', { screen:'Jobs' });\r\n        }catch(e){\r\n          Alert.alert('Error', e.message || 'Unable to delete job');\r\n        }\r\n      }}\r\n    ]);\r\n  };\r\n  return (\r\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\r\n      <ScrollView\r\n        contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(6) }}\r\n      >\r\n        <Text style={{ color: palette.text, fontSize: typography.h1, fontWeight:'700' }}>Job #{jobId}</Text>\r\n        <Text style={{ color: palette.muted, marginTop: spacing(0.5), marginBottom: spacing(3) }}>\r\n          Keep job information up to date so the field team always has the latest context.\r\n        </Text>\r\n\r\n        <SurfaceCard style={{ padding: spacing(2.5), marginBottom: spacing(3) }}>\r\n          <Text style={{ color: palette.muted, fontSize: typography.small, fontWeight:'700', textTransform:'uppercase', marginBottom: spacing(1) }}>\r\n            Basics\r\n          </Text>\r\n          <FormInput placeholder=\"Job name\" value={jobName} onChangeText={setJobName} />\r\n          <View style={{ flexDirection:'row', columnGap: spacing(1.5) }}>\r\n            <View style={{ flex:1 }}>\r\n              <DateInputField value={jobStartDate} onChange={setJobStartDate} placeholder=\"Start date\" style={{ marginBottom: 0 }} />\r\n            </View>\r\n            <View style={{ flex:1 }}>\r\n              <DateInputField value={jobEndDate} onChange={setJobEndDate} placeholder=\"End date\" style={{ marginBottom: 0 }} />\r\n            </View>\r\n          </View>\r\n          <FormInput\n            placeholder=\"Notes / scope\"\n            value={jobNotes}\n            onChangeText={setJobNotes}\n            multiline\n            style={{ minHeight: 112, textAlignVertical: 'top' }}\n          />\n          <Text style={{ color: palette.muted, fontWeight:'600', marginTop: spacing(1.5), marginBottom: spacing(0.5) }}>Tags</Text>\n          <TagInput value={jobTags} onChange={setJobTags} placeholder=\"Add job tags (e.g. Roofing, Urgent)\" />\n          <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center', marginTop: spacing(2) }}>\n            <QuickAction label=\"Delete job\" tone=\"danger\" onPress={deleteJob} />\n            <TouchableOpacity\r\n              onPress={saveJobDetails}\r\n              activeOpacity={0.85}\r\n              style={{ backgroundColor: palette.primary, paddingHorizontal: spacing(2.5), paddingVertical: spacing(1.5), borderRadius: 12 }}\r\n            >\r\n              <Text style={{ color:'#fff', fontWeight:'700' }}>Save changes</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </SurfaceCard>\r\n\r\n        <SurfaceCard style={{ padding: spacing(2.5), marginBottom: spacing(3) }}>\r\n          <Text style={{ color: palette.muted, fontSize: typography.small, fontWeight:'700', textTransform:'uppercase', marginBottom: spacing(1) }}>\r\n            Customer\r\n          </Text>\r\n          <FormInput placeholder=\"Name\" value={jobCustomerName} onChangeText={setJobCustomerName} />\r\n          <FormInput placeholder=\"Phone\" value={jobCustomerPhone} onChangeText={setJobCustomerPhone} keyboardType=\"phone-pad\" />\r\n          <FormInput\r\n            placeholder=\"Email\"\r\n            value={jobCustomerEmail}\r\n            onChangeText={setJobCustomerEmail}\r\n            keyboardType=\"email-address\"\r\n            autoCapitalize=\"none\"\r\n          />\r\n        </SurfaceCard>\r\n\r\n        <SurfaceCard style={{ padding: spacing(2.5), marginBottom: spacing(3) }}>\r\n          <Text style={{ color: palette.muted, fontSize: typography.small, fontWeight:'700', textTransform:'uppercase', marginBottom: spacing(1) }}>\r\n            Jobsite\r\n          </Text>\r\n          <FormInput placeholder=\"Address line 1\" value={jobAddressLine1} onChangeText={setJobAddressLine1} />\r\n          <FormInput placeholder=\"Address line 2\" value={jobAddressLine2} onChangeText={setJobAddressLine2} />\r\n          <View style={{ flexDirection:'row', columnGap: spacing(1.5) }}>\r\n            <FormInput placeholder=\"City\" value={jobCity} onChangeText={setJobCity} style={{ flex:1, marginBottom: 0 }} />\r\n            <FormInput\r\n              placeholder=\"State\"\r\n              value={jobStateCode}\r\n              onChangeText={setJobStateCode}\r\n              autoCapitalize=\"characters\"\r\n              style={{ width: 96, marginBottom: 0 }}\r\n            />\r\n            <FormInput\r\n              placeholder=\"ZIP\"\r\n              value={jobZip}\r\n              onChangeText={setJobZip}\r\n              keyboardType=\"numeric\"\r\n              style={{ width: 112, marginBottom: 0 }}\r\n            />\r\n          </View>\r\n        </SurfaceCard>\r\n\r\n        {canManageChangeOrders ? (\r\n          <SurfaceCard style={{ padding: spacing(2.5), marginBottom: spacing(3) }}>\r\n            <Text style={{ color: palette.muted, fontSize: typography.small, fontWeight:'700', textTransform:'uppercase', marginBottom: spacing(1) }}>\r\n              New change order\r\n            </Text>\r\n            <FormInput placeholder=\"Title\" value={title} onChangeText={setTitle} />\r\n            <FormInput placeholder=\"Amount $\" value={amountDelta} onChangeText={setAmountDelta} keyboardType=\"decimal-pad\" />\r\n            <View style={{ flexDirection:'row', justifyContent:'flex-end', marginTop: spacing(2) }}>\r\n              <TouchableOpacity\r\n                onPress={addCO}\r\n                activeOpacity={0.85}\r\n                style={{ backgroundColor: palette.primary, paddingHorizontal: spacing(2.5), paddingVertical: spacing(1.5), borderRadius: 12 }}\r\n              >\r\n                <Text style={{ color:'#fff', fontWeight:'700' }}>Add change order</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </SurfaceCard>\r\n        ) : null}\r\n\r\n        <View style={{ marginBottom: spacing(3) }}>\r\n          <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700', marginBottom: spacing(1.5) }}>Change orders</Text>\r\n          {changeOrders.length === 0 ? (\r\n            <SurfaceCard>\r\n              <Text style={{ color: palette.muted }}>No change orders yet.</Text>\r\n            </SurfaceCard>\r\n          ) : changeOrders.map(item => {\r\n            const statusKey = (item.status || 'PENDING').toUpperCase();\r\n            const statusTone = (() => {\r\n              if (statusKey === 'APPROVED') return { bg: '#dcfce7', fg: palette.success, label: 'Approved' };\r\n              if (statusKey === 'REJECTED') return { bg: '#fee2e2', fg: palette.danger, label: 'Rejected' };\r\n              return { bg: '#e0f3f0', fg: palette.primaryStrong, label: 'Pending' };\r\n            })();\r\n            const amountLabel = formatCurrency(item.amountDelta || 0);\r\n            return (\r\n              <SurfaceCard key={item.id} style={{ marginBottom: spacing(1.5), padding: spacing(2.5) }}>\r\n                <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center' }}>\r\n                  <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600' }}>{item.title}</Text>\r\n                  <View style={{ backgroundColor: statusTone.bg, borderRadius: 999, paddingHorizontal: spacing(1.5), paddingVertical: spacing(0.5) }}>\r\n                    <Text style={{ color: statusTone.fg, fontWeight:'600', fontSize: typography.small }}>{statusTone.label}</Text>\r\n                  </View>\r\n                </View>\r\n                <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>{amountLabel}</Text>\r\n                {canManageChangeOrders ? (\r\n                  <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginTop: spacing(1.5) }}>\r\n                    <QuickAction\r\n                      label=\"Approve\"\r\n                      tone=\"success\"\r\n                      onPress={async ()=>{ await api(`/change-orders/${item.id}`,'PATCH',{ status:'APPROVED' }, token); loadCO(); }}\r\n                    />\r\n                    <QuickAction\r\n                      label=\"Reject\"\r\n                      tone=\"danger\"\r\n                      onPress={async ()=>{ await api(`/change-orders/${item.id}`,'PATCH',{ status:'REJECTED' }, token); loadCO(); }}\r\n                    />\r\n                  </View>\r\n                ) : null}\r\n              </SurfaceCard>\r\n            );\r\n          })}\r\n        </View>\r\n\r\n        <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700', marginBottom: spacing(1.5) }}>Tasks</Text>\r\n        <JobTasks jobId={jobId} />\r\n\r\n        <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700', marginTop: spacing(3), marginBottom: spacing(1.5) }}>Schedule</Text>\r\n        <JobSchedule jobId={jobId} />\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nfunction JobTasks({ jobId }){\r\n  const { token } = useAuth();\r\n  const [tasks, setTasks] = useState([]);\r\n  const [title, setTitle] = useState('');\r\n  const [dueDate, setDueDate] = useState('');\r\n  const load = async()=> {\r\n    try {\r\n      const data = await api(`/tasks?jobId=${jobId}`,'GET',null,token);\r\n      setTasks(data);\r\n      db.transaction(tx => {\r\n        tx.executeSql('DELETE FROM tasks_cache WHERE jobId=?', [jobId]);\r\n        data.forEach(t => tx.executeSql('INSERT OR REPLACE INTO tasks_cache (id, jobId, title, status, dueDate) VALUES (?,?,?,?,?)', [t.id, jobId, t.title||'', t.status||'TODO', t.dueDate||'']));\r\n      });\r\n    } catch(e) {\r\n      db.transaction(tx => tx.executeSql('SELECT id, jobId, title, status, dueDate FROM tasks_cache WHERE jobId=?', [jobId], (_, { rows }) => setTasks(rows._array || [])));\r\n    }\r\n  };\r\n  useEffect(()=>{ load(); },[]);\r\n  const add = async()=>{\r\n    if(!title.trim()) return Alert.alert('Title required');\r\n    await api('/tasks','POST',{ title, jobId, dueDate }, token);\r\n    setTitle(''); setDueDate(''); load();\r\n  };\r\n  const done = async(id)=>{ await api(`/tasks/${id}`,'PATCH',{ status:'DONE' }, token); load(); };\r\n  const remove = (id)=>{\r\n    Alert.alert('Delete task', 'Remove this task?', [\r\n      { text:'Cancel', style:'cancel' },\r\n      { text:'Delete', style:'destructive', onPress: async ()=>{ await api(`/tasks/${id}`,'DELETE',null,token); load(); } },\r\n    ]);\r\n  };\r\n  return (\r\n    <View>\r\n      <SurfaceCard style={{ marginBottom: spacing(2) }}>\r\n        <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600', marginBottom: spacing(1.5) }}>Add task</Text>\r\n        <TextInput\r\n          placeholder=\"Task title\"\r\n          placeholderTextColor={palette.muted}\r\n          value={title}\r\n          onChangeText={setTitle}\r\n          style={{\r\n            borderWidth:1,\r\n            borderColor: palette.border,\r\n            borderRadius: 12,\r\n            padding: spacing(2),\r\n            color: palette.text,\r\n            backgroundColor: palette.surfaceMuted,\r\n            marginBottom: spacing(1.5),\r\n          }}\r\n        />\r\n        <DateInputField value={dueDate} onChange={setDueDate} placeholder=\"Due date (optional)\" />\r\n        <QuickAction label=\"Add task\" onPress={add} />\r\n      </SurfaceCard>\r\n\r\n      {tasks.length === 0 ? (\r\n        <SurfaceCard>\r\n          <Text style={{ color: palette.muted }}>No tasks yet. Add one to start tracking progress.</Text>\r\n        </SurfaceCard>\r\n      ) : (\r\n        tasks.map(t => (\r\n          <SurfaceCard key={t.id} style={{ marginBottom: spacing(1.5) }}>\r\n            <Text style={{ color: palette.text, fontWeight:'600', fontSize: typography.h2 - 2 }}>{t.title}</Text>\r\n            <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>\r\n              Status: {t.status || 'TODO'}{t.dueDate ? ` - Due ${formatDate(t.dueDate)}` : ''}\r\n            </Text>\r\n            <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginTop: spacing(1.5) }}>\r\n              {!isTaskCompleted(t.status) ? (\r\n                <QuickAction label=\"Mark done\" tone=\"success\" onPress={() => done(t.id)} />\r\n              ) : null}\r\n              <QuickAction label=\"Delete\" tone=\"danger\" onPress={() => remove(t.id)} />\r\n            </View>\r\n          </SurfaceCard>\r\n        ))\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction JobSchedule({ jobId }){\r\n  const { token } = useAuth();\r\n  const [events, setEvents] = useState([]);\r\n  const [title, setTitle] = useState('');\r\n  const [startAt, setStartAt] = useState('');\r\n  const [endAt, setEndAt] = useState('');\r\n  const load = async()=> {\r\n    try {\r\n      const data = await api(`/calendar?jobId=${jobId}`,'GET',null,token);\r\n      setEvents(data);\r\n      db.transaction(tx => {\r\n        tx.executeSql('DELETE FROM calendar_cache WHERE jobId=?', [jobId]);\r\n        data.forEach(ev => tx.executeSql('INSERT OR REPLACE INTO calendar_cache (id, jobId, title, startAt, endAt) VALUES (?,?,?,?,?)', [ev.id, jobId, ev.title||'', ev.startAt||'', ev.endAt||'']));\r\n      });\r\n    } catch(e) {\r\n      db.transaction(tx => tx.executeSql('SELECT id, jobId, title, startAt, endAt FROM calendar_cache WHERE jobId=?', [jobId], (_, { rows }) => setEvents(rows._array || [])));\r\n    }\r\n  };\r\n  useEffect(()=>{ load(); },[]);\r\n  const add = async()=>{\r\n    if(!title.trim() || !startAt) return Alert.alert('Title and start time required');\r\n    await api('/calendar','POST',{ title, jobId, startAt, endAt }, token);\r\n    setTitle(''); setStartAt(''); setEndAt(''); load();\r\n  };\r\n  const remove = (id)=>{\r\n    Alert.alert('Delete event', 'Remove this schedule item?', [\r\n      { text:'Cancel', style:'cancel' },\r\n      { text:'Delete', style:'destructive', onPress: async ()=>{ await api(`/calendar/${id}`,'DELETE',null,token); load(); } },\r\n    ]);\r\n  };\r\n  return (\r\n    <View>\r\n      <SurfaceCard style={{ marginBottom: spacing(2) }}>\r\n        <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600', marginBottom: spacing(1.5) }}>Schedule event</Text>\r\n        <TextInput\r\n          placeholder=\"Event title\"\r\n          placeholderTextColor={palette.muted}\r\n          value={title}\r\n          onChangeText={setTitle}\r\n          style={{\r\n            borderWidth:1,\r\n            borderColor: palette.border,\r\n            borderRadius: 12,\r\n            padding: spacing(2),\r\n            color: palette.text,\r\n            backgroundColor: palette.surfaceMuted,\r\n            marginBottom: spacing(1.5),\r\n          }}\r\n        />\r\n        <DateInputField\r\n          value={startAt}\r\n          onChange={(date) => {\r\n            const existing = startAt || '';\r\n            const timePartIndex = existing.indexOf('T');\r\n            const timePart = timePartIndex > -1 ? existing.substring(timePartIndex) : 'T08:00:00';\r\n            setStartAt(`${date}${timePart}`);\r\n          }}\r\n          placeholder=\"Start date\"\r\n        />\r\n        <DateInputField\r\n          value={endAt}\r\n          onChange={(date) => {\r\n            if (!date) {\r\n              setEndAt('');\r\n              return;\r\n            }\r\n            const existing = endAt || '';\r\n            const timePartIndex = existing.indexOf('T');\r\n            const timePart = timePartIndex > -1 ? existing.substring(timePartIndex) : 'T17:00:00';\r\n            setEndAt(`${date}${timePart}`);\r\n          }}\r\n          placeholder=\"End date (optional)\"\r\n        />\r\n        <QuickAction label=\"Add event\" onPress={add} />\r\n      </SurfaceCard>\r\n\r\n      {events.length === 0 ? (\r\n        <SurfaceCard>\r\n          <Text style={{ color: palette.muted }}>No schedule entries yet.</Text>\r\n        </SurfaceCard>\r\n      ) : (\r\n        events.map(ev => {\r\n          const startLabel = ev.startAt ? `Starts ${formatDate(ev.startAt)}` : 'No start date';\r\n          const endLabel = ev.endAt ? ` - Ends ${formatDate(ev.endAt)}` : '';\r\n          return (\r\n            <SurfaceCard key={ev.id} style={{ marginBottom: spacing(1.5) }}>\r\n              <Text style={{ color: palette.text, fontWeight:'600', fontSize: typography.h2 - 2 }}>{ev.title}</Text>\r\n              <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>\r\n                {startLabel}{endLabel}\r\n              </Text>\r\n              <View style={{ flexDirection:'row', columnGap: spacing(1), marginTop: spacing(1.5) }}>\r\n                <QuickAction label=\"Delete\" tone=\"danger\" onPress={()=>remove(ev.id)} />\r\n              </View>\r\n            </SurfaceCard>\r\n          );\r\n        })\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n\r\n// ---------- Leads / Estimates (with photo queue) ----------\r\nasync function processQueue(token){\r\n  return new Promise(resolve => {\r\n    db.transaction(tx => {\r\n      tx.executeSql('SELECT * FROM queue', [], async (_, { rows }) => {\r\n        const items = rows._array || [];\r\n        for(const q of items){\r\n          try{\r\n            const payload = JSON.parse(q.payload);\r\n            if(q.type === 'createLead'){ await api('/leads', 'POST', payload, token); }\r\n            if(q.type === 'uploadPhoto'){ await api('/upload/image', 'POST', { dataUrl: payload.dataUrl }, token); }\r\n            db.transaction(txx => txx.executeSql('DELETE FROM queue WHERE id=?', [q.id]));\r\n          }catch(e){ /* keep for later */ }\r\n        }\r\n        resolve();\r\n      });\r\n    });\r\n  });\r\n}\r\n\r\nfunction LeadsScreen({ navigation }){\r\n  const { token } = useAuth();\r\n  const [leads, setLeads] = useState([]);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const fetchLeads = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n      const data = await api('/leads', 'GET', null, token);\r\n      setLeads(data);\r\n      db.transaction(tx => {\r\n        tx.executeSql && tx.executeSql('DELETE FROM leads_cache;');\r\n        data.forEach(l => tx.executeSql && tx.executeSql(\r\n          'INSERT OR REPLACE INTO leads_cache (id, description, status) VALUES (?,?,?)',\r\n          [l.id, l.description || '', l.status || 'NEW']\r\n        ));\r\n      });\r\n    } catch(e){\r\n      db.transaction(tx =>\r\n        tx.executeSql && tx.executeSql('SELECT id, description, status FROM leads_cache', [], (_, { rows }) => setLeads(rows._array || []))\r\n      );\r\n    }\r\n    finally {\r\n      setLoading(false);\r\n    }\r\n  }, [token]);\r\n\r\n  useFocusEffect(useCallback(() => {\r\n    fetchLeads();\r\n  }, [fetchLeads]));\r\n\r\n  const onRefresh = useCallback(async () => {\r\n    setRefreshing(true);\r\n    await fetchLeads();\r\n    setRefreshing(false);\r\n  }, [fetchLeads]);\r\n\r\n  const deleteLead = useCallback((lead) => {\r\n    const title = deriveLeadTitle(lead);\r\n    Alert.alert('Delete lead', `Remove \"${title}\"?`, [\r\n      { text:'Cancel', style:'cancel' },\r\n      { text:'Delete', style:'destructive', onPress: async () => {\r\n        try {\r\n          await api(`/leads/${lead.id}`,'DELETE',null,token);\r\n          setLeads(prev => prev.filter(l => l.id !== lead.id));\r\n          db.transaction(tx => tx.executeSql && tx.executeSql('DELETE FROM leads_cache WHERE id=?', [lead.id]));\r\n        } catch(err) {\r\n          Alert.alert('Error', err.message || 'Unable to delete lead');\r\n        }\r\n      }}\r\n    ]);\r\n  }, [token]);\r\n\r\n  const newLeadsCount = leads.filter(l => (l.status || '').toUpperCase() === 'NEW').length;\r\n\r\n  const renderLeadCard = (lead) => {\r\n    const customer = lead.Customer || {};\r\n    const title = deriveLeadTitle(lead);\r\n    const subtitle = customer.name && customer.name.trim() && customer.name.trim() !== title ? customer.name : null;\r\n    const jobsite = lead.Jobsite || {};\r\n    const addressParts = [\r\n      jobsite.addressLine1,\r\n      jobsite.addressLine2,\r\n      [jobsite.city, jobsite.state].filter(Boolean).join(', '),\r\n      jobsite.zip\r\n    ].filter(Boolean);\r\n    const address = addressParts.join(', ');\r\n    const statusKey = (lead.status || 'NEW').toUpperCase();\r\n    return (\r\n      <SurfaceCard key={lead.id}>\r\n        <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center' }}>\r\n          <View>\r\n            <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600' }}>{title}</Text>\r\n            {subtitle ? <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>{subtitle}</Text> : null}\r\n          </View>\r\n          <StatusPill status={statusKey} />\r\n        </View>\r\n        {customer.phone ? <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>{customer.phone}</Text> : null}\r\n        {customer.email ? <Text style={{ color: palette.muted }}>{customer.email}</Text> : null}\r\n        {address ? <Text style={{ color: palette.muted, marginTop: spacing(1) }}>{address}</Text> : null}\r\n        <Text numberOfLines={3} style={{ color: palette.text, marginTop: spacing(1.5) }}>{lead.description || 'No scope captured yet.'}</Text>\r\n        <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginTop: spacing(2) }}>\r\n          <QuickAction label=\"Open\" onPress={() => navigation.navigate('EstimateEditor', { leadId: lead.id })} />\r\n          <QuickAction label=\"Convert\" tone=\"success\" onPress={() => navigation.navigate('Jobs')} />\r\n          <QuickAction label=\"Delete\" tone=\"danger\" onPress={() => deleteLead(lead)} />\r\n        </View>\r\n      </SurfaceCard>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\r\n      <FlatList\r\n        data={leads}\r\n        keyExtractor={item => String(item.id)}\r\n        contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(4) }}\r\n        refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} tintColor={palette.primary} />}\r\n        ListHeaderComponent={\r\n          <View style={{ marginBottom: spacing(3) }}>\r\n            <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center', marginBottom: spacing(2) }}>\r\n              <View>\r\n                <Text style={{ color: palette.text, fontSize: typography.h1, fontWeight:'700' }}>Leads</Text>\r\n                <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>Keep the funnel moving</Text>\r\n              </View>\r\n              <QuickAction label=\"New lead\" onPress={() => navigation.navigate('NewLead')} />\r\n            </View>\r\n            <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(2), rowGap: spacing(2) }}>\r\n              <View style={{ flexBasis:'48%', minWidth: 160 }}>\r\n                <SummaryCard title=\"Total\" value={leads.length} subtitle={`${newLeadsCount} new`} tone=\"info\" />\r\n              </View>\r\n              <View style={{ flexBasis:'48%', minWidth: 160 }}>\r\n                <SummaryCard title=\"Outstanding\" value={newLeadsCount} subtitle=\"Require follow up\" tone=\"warning\" />\r\n              </View>\r\n            </View>\r\n          </View>\r\n        }\r\n        renderItem={({ item }) => renderLeadCard(item)}\r\n        ListEmptyComponent={\r\n          loading ? (\r\n            <SurfaceCard style={{ alignItems:'center', paddingVertical: spacing(4) }}>\r\n              <ActivityIndicator color={palette.primary} />\r\n              <Text style={{ color: palette.muted, marginTop: spacing(1) }}>Loading leads...</Text>\r\n            </SurfaceCard>\r\n          ) : (\r\n            <SurfaceCard>\r\n              <Text style={{ color: palette.muted }}>No leads yet. Capture a lead to get started.</Text>\r\n            </SurfaceCard>\r\n          )\r\n        }\r\n      />\r\n    </SafeAreaView>\r\n  );\r\n}\r\nfunction NewLeadScreen({ navigation }){\r\n  const { token } = useAuth();\r\n  const [description, setDescription] = useState('');\r\n  const [status, setStatus] = useState('NEW');\r\n  const [customerName, setCustomerName] = useState('');\r\n  const [customerPhone, setCustomerPhone] = useState('');\r\n  const [customerEmail, setCustomerEmail] = useState('');\r\n  const [addressLine1, setAddressLine1] = useState('');\r\n  const [addressLine2, setAddressLine2] = useState('');\r\n  const [city, setCity] = useState('');\r\n  const [stateCode, setStateCode] = useState('');\r\n  const [zip, setZip] = useState('');\r\n  const [showCustomerSection, setShowCustomerSection] = useState(false);\r\n  const [showJobsiteSection, setShowJobsiteSection] = useState(false);\r\n  const statuses = ['NEW','CONTACTED','ESTIMATING','CONVERTED','CLOSED_LOST'];\r\n\r\n  const buildPayload = () => {\r\n    const customer = [customerName, customerPhone, customerEmail].some(v => v && v.trim())\r\n      ? {\r\n          name: customerName.trim(),\r\n          phone: customerPhone.trim(),\r\n          email: customerEmail.trim(),\r\n        }\r\n      : null;\r\n    const jobsite = [addressLine1, addressLine2, city, stateCode, zip].some(v => v && v.trim())\r\n      ? {\r\n          addressLine1: addressLine1.trim(),\r\n          addressLine2: addressLine2.trim(),\r\n          city: city.trim(),\r\n          state: stateCode.trim(),\r\n          zip: zip.trim(),\r\n        }\r\n      : null;\r\n    return {\r\n      description,\r\n      status,\r\n      customer,\r\n      jobsite,\r\n    };\r\n  };\r\n\r\n  const createLeadOnline = async () => {\r\n    const payload = buildPayload();\r\n    const created = await api('/leads', 'POST', payload, token);\r\n    navigation.replace('EstimateEditor', { leadId: created.id });\r\n    const title = deriveLeadTitle(created);\r\n    Alert.alert('Lead created', `\"${title}\" is ready to estimate.`);\r\n  };\r\n\r\n  const queueLead = () => {\r\n    const payload = buildPayload();\r\n    db.transaction(tx => tx.executeSql('INSERT INTO queue (type, payload) VALUES (?,?)', ['createLead', JSON.stringify(payload)]));\r\n    Alert.alert('Saved offline', 'We will submit this lead when you reconnect.');\r\n    navigation.goBack();\r\n  };\r\n\r\n  const submit = async () => {\r\n    if(!description.trim()){\r\n      Alert.alert('Missing scope', 'Please describe the job or scope of work.');\r\n      return;\r\n    }\r\n    try {\r\n      await createLeadOnline();\r\n    } catch(e){\r\n      queueLead();\r\n    }\r\n  };\r\n\r\n  const chipStyle = (active) => ({\r\n    paddingHorizontal: spacing(2),\r\n    paddingVertical: spacing(1),\r\n    borderRadius: 999,\r\n    borderWidth: 1,\r\n    borderColor: active ? palette.primary : palette.border,\r\n    backgroundColor: active ? '#d9f2ed' : palette.surface,\r\n  });\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\r\n      <ScrollView contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(6) }}>\r\n        <SurfaceCard style={{ marginBottom: spacing(3) }}>\r\n          <Text style={{ color: palette.text, fontSize: typography.h1, fontWeight:'700', marginBottom: spacing(2) }}>New lead</Text>\r\n          <Text style={{ color: palette.muted, fontWeight:'600', marginBottom: spacing(1) }}>Scope</Text>\r\n          <TextInput\r\n            placeholder=\"Describe the job...\"\r\n            placeholderTextColor={palette.muted}\r\n            value={description}\r\n            onChangeText={setDescription}\r\n            multiline\r\n            style={{\r\n              borderWidth: 1,\r\n              borderColor: palette.border,\r\n              borderRadius: 12,\r\n              padding: spacing(2),\r\n              minHeight: 120,\r\n              color: palette.text,\r\n              backgroundColor: palette.surfaceMuted,\r\n              textAlignVertical: 'top',\r\n            }}\r\n          />\r\n          <Text style={{ color: palette.muted, fontWeight:'600', marginTop: spacing(2), marginBottom: spacing(1) }}>Status</Text>\r\n          <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1) }}>\r\n            {statuses.map(s => {\r\n              const active = status === s;\r\n              return (\r\n                <TouchableOpacity key={s} onPress={() => setStatus(s)} activeOpacity={0.85} style={chipStyle(active)}>\r\n                  <Text style={{ color: active ? palette.primaryStrong : palette.muted, fontWeight:'600', fontSize: typography.small }}>{s.replace('_',' ')}</Text>\r\n                </TouchableOpacity>\r\n              );\r\n            })}\r\n          </View>\r\n          <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center', marginTop: spacing(3) }}>\r\n            <QuickAction label=\"Save offline\" tone=\"muted\" onPress={queueLead} />\r\n            <TouchableOpacity\r\n              onPress={submit}\r\n              activeOpacity={0.85}\r\n              style={{ backgroundColor: palette.primary, paddingHorizontal: spacing(3), paddingVertical: spacing(1.5), borderRadius: 12 }}\r\n            >\r\n              <Text style={{ color:'#fff', fontWeight:'700' }}>Create lead</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </SurfaceCard>\r\n\r\n        <SurfaceCard style={{ marginBottom: spacing(3) }}>\r\n          <TouchableOpacity\r\n            onPress={() => setShowCustomerSection(v => !v)}\r\n            style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center' }}\r\n            activeOpacity={0.8}\r\n          >\r\n            <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600' }}>Customer details</Text>\r\n            <Text style={{ color: palette.primary, fontWeight:'600' }}>{showCustomerSection ? 'Hide' : 'Add'}</Text>\r\n          </TouchableOpacity>\r\n          {showCustomerSection ? (\r\n            <View style={{ marginTop: spacing(2) }}>\r\n              <TextInput\r\n                placeholder=\"Name\"\r\n                placeholderTextColor={palette.muted}\r\n                value={customerName}\r\n                onChangeText={setCustomerName}\r\n                style={{\r\n                  borderWidth: 1,\r\n                  borderColor: palette.border,\r\n                  borderRadius: 12,\r\n                  padding: spacing(2),\r\n                  color: palette.text,\r\n                  backgroundColor: palette.surfaceMuted,\r\n                  marginBottom: spacing(1.5),\r\n                }}\r\n              />\r\n              <TextInput\r\n                placeholder=\"Phone\"\r\n                placeholderTextColor={palette.muted}\r\n                keyboardType=\"phone-pad\"\r\n                value={customerPhone}\r\n                onChangeText={setCustomerPhone}\r\n                style={{\r\n                  borderWidth: 1,\r\n                  borderColor: palette.border,\r\n                  borderRadius: 12,\r\n                  padding: spacing(2),\r\n                  color: palette.text,\r\n                  backgroundColor: palette.surfaceMuted,\r\n                  marginBottom: spacing(1.5),\r\n                }}\r\n              />\r\n              <TextInput\r\n                placeholder=\"Email\"\r\n                placeholderTextColor={palette.muted}\r\n                keyboardType=\"email-address\"\r\n                autoCapitalize=\"none\"\r\n                value={customerEmail}\r\n                onChangeText={setCustomerEmail}\r\n                style={{\r\n                  borderWidth: 1,\r\n                  borderColor: palette.border,\r\n                  borderRadius: 12,\r\n                  padding: spacing(2),\r\n                  color: palette.text,\r\n                  backgroundColor: palette.surfaceMuted,\r\n                }}\r\n              />\r\n            </View>\r\n          ) : (\r\n            <Text style={{ color: palette.muted, marginTop: spacing(1.5) }}>Add contact details to help follow up faster.</Text>\r\n          )}\r\n        </SurfaceCard>\r\n\r\n        <SurfaceCard>\r\n          <TouchableOpacity\r\n            onPress={() => setShowJobsiteSection(v => !v)}\r\n            style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center' }}\r\n            activeOpacity={0.8}\r\n          >\r\n            <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600' }}>Jobsite address</Text>\r\n            <Text style={{ color: palette.primary, fontWeight:'600' }}>{showJobsiteSection ? 'Hide' : 'Add'}</Text>\r\n          </TouchableOpacity>\r\n          {showJobsiteSection ? (\r\n            <View style={{ marginTop: spacing(2) }}>\r\n              <TextInput\r\n                placeholder=\"Address line 1\"\r\n                placeholderTextColor={palette.muted}\r\n                value={addressLine1}\r\n                onChangeText={setAddressLine1}\r\n                style={{\r\n                  borderWidth: 1,\r\n                  borderColor: palette.border,\r\n                  borderRadius: 12,\r\n                  padding: spacing(2),\r\n                  color: palette.text,\r\n                  backgroundColor: palette.surfaceMuted,\r\n                  marginBottom: spacing(1.5),\r\n                }}\r\n              />\r\n              <TextInput\r\n                placeholder=\"Address line 2\"\r\n                placeholderTextColor={palette.muted}\r\n                value={addressLine2}\r\n                onChangeText={setAddressLine2}\r\n                style={{\r\n                  borderWidth: 1,\r\n                  borderColor: palette.border,\r\n                  borderRadius: 12,\r\n                  padding: spacing(2),\r\n                  color: palette.text,\r\n                  backgroundColor: palette.surfaceMuted,\r\n                  marginBottom: spacing(1.5),\r\n                }}\r\n              />\r\n              <View style={{ flexDirection:'row', columnGap: spacing(1.5) }}>\r\n                <View style={{ flex:1 }}>\r\n                  <TextInput\r\n                    placeholder=\"City\"\r\n                    placeholderTextColor={palette.muted}\r\n                    value={city}\r\n                    onChangeText={setCity}\r\n                    style={{\r\n                      borderWidth: 1,\r\n                      borderColor: palette.border,\r\n                      borderRadius: 12,\r\n                      padding: spacing(2),\r\n                      color: palette.text,\r\n                      backgroundColor: palette.surfaceMuted,\r\n                      marginBottom: spacing(1.5),\r\n                    }}\r\n                  />\r\n                </View>\r\n                <View style={{ width: 80 }}>\r\n                  <TextInput\r\n                    placeholder=\"State\"\r\n                    placeholderTextColor={palette.muted}\r\n                    value={stateCode}\r\n                    onChangeText={setStateCode}\r\n                    style={{\r\n                      borderWidth: 1,\r\n                      borderColor: palette.border,\r\n                      borderRadius: 12,\r\n                      padding: spacing(2),\r\n                      color: palette.text,\r\n                      backgroundColor: palette.surfaceMuted,\r\n                      marginBottom: spacing(1.5),\r\n                    }}\r\n                  />\r\n                </View>\r\n                <View style={{ width: 100 }}>\r\n                  <TextInput\r\n                    placeholder=\"ZIP\"\r\n                    placeholderTextColor={palette.muted}\r\n                    value={zip}\r\n                    onChangeText={setZip}\r\n                    style={{\r\n                      borderWidth: 1,\r\n                      borderColor: palette.border,\r\n                      borderRadius: 12,\r\n                      padding: spacing(2),\r\n                      color: palette.text,\r\n                      backgroundColor: palette.surfaceMuted,\r\n                      marginBottom: spacing(1.5),\r\n                    }}\r\n                  />\r\n                </View>\r\n              </View>\r\n            </View>\r\n          ) : (\r\n            <Text style={{ color: palette.muted, marginTop: spacing(1.5) }}>Add a jobsite to keep crews aligned.</Text>\r\n          )}\r\n        </SurfaceCard>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\nfunction EstimateEditorScreen({ route, navigation }){\r\n  const { token, user } = useAuth();\r\n  const { leadId } = route.params || {};\r\n  const [estimateId, setEstimateId] = useState(null);\r\n  const [items, setItems] = useState([]);\r\n  const [desc, setDesc] = useState('');\r\n  const [qty, setQty] = useState('1');\r\n  const [price, setPrice] = useState('0');\r\n  const [notes, setNotes] = useState('');\r\n  const [photoUrl, setPhotoUrl] = useState(null);\r\n  const [subtotal, setSubtotal] = useState(0);\r\n  const [taxRate, setTaxRate] = useState('7');\r\n  const [tax, setTax] = useState(0);\r\n  const [total, setTotal] = useState(0);\r\n  const [leadDetails, setLeadDetails] = useState(null);\r\n  const [leadStatus, setLeadStatus] = useState('NEW');\r\n  const [leadScope, setLeadScope] = useState('');\r\n  const [leadCustomerName, setLeadCustomerName] = useState('');\r\n  const [leadCustomerPhone, setLeadCustomerPhone] = useState('');\r\n  const [leadCustomerEmail, setLeadCustomerEmail] = useState('');\r\n  const [leadAddressLine1, setLeadAddressLine1] = useState('');\r\n  const [leadAddressLine2, setLeadAddressLine2] = useState('');\r\n  const [leadCity, setLeadCity] = useState('');\r\n  const [leadStateCode, setLeadStateCode] = useState('');\r\n  const [leadZip, setLeadZip] = useState('');\r\n  const leadStatuses = ['NEW','CONTACTED','ESTIMATING','CONVERTED','CLOSED_LOST'];\r\n\r\n  const loadLead = useCallback(async () => {\r\n    if (!leadId) return;\r\n    try {\r\n      const data = await api(`/leads/${leadId}`,'GET',null,token);\r\n      setLeadDetails(data);\r\n      setLeadStatus(data.status || 'NEW');\r\n      setLeadScope(data.description || '');\r\n      const customer = data.Customer || {};\r\n      const jobsite = data.Jobsite || {};\r\n      setLeadCustomerName(customer.name || '');\r\n      setLeadCustomerPhone(customer.phone || '');\r\n      setLeadCustomerEmail(customer.email || '');\r\n      setLeadAddressLine1(jobsite.addressLine1 || '');\r\n      setLeadAddressLine2(jobsite.addressLine2 || '');\r\n      setLeadCity(jobsite.city || '');\r\n      setLeadStateCode(jobsite.state || '');\r\n      setLeadZip(jobsite.zip || '');\r\n    } catch(e) { }\r\n  }, [leadId, token]);\r\n\r\n  useEffect(() => {\r\n    loadLead();\r\n  }, [loadLead]);\r\n\r\n  const createEstimate = async () => {\r\n    const est = await api('/estimates', 'POST', {\r\n      leadId,\r\n      customerId: leadDetails?.customerId ?? null,\r\n      jobsiteId: leadDetails?.jobsiteId ?? null,\r\n      subtotal: 0,\r\n      taxRate: parseFloat(taxRate) || 0,\r\n      total: 0\r\n    }, token);\r\n    setEstimateId(est.id);\r\n    return est;\r\n  };\r\n\r\n  const ensureEstimate = useCallback(async () => {\r\n    if (estimateId) return estimateId;\r\n    const created = await createEstimate();\r\n    setEstimateId(created.id);\r\n    return created.id;\r\n  }, [estimateId, createEstimate]);\r\n\r\n  useEffect(() => {\r\n    const rate = parseFloat(taxRate) || 0;\r\n    const newSubtotal = items.reduce((sum, item) => sum + (parseFloat(item.qty || 0) * parseFloat(item.unitPrice || 0)), 0);\r\n    const newTax = newSubtotal * (rate / 100);\r\n    setSubtotal(newSubtotal);\r\n    setTax(newTax);\r\n    setTotal(newSubtotal + newTax);\r\n  }, [items, taxRate]);\r\n\r\n  const addItem = async () => {\r\n    if (!desc.trim()) {\r\n      Alert.alert('Line item', 'Please add a description.');\r\n      return;\r\n    }\r\n    try {\r\n      const targetId = await ensureEstimate();\r\n      const payload = {\r\n        description: desc.trim(),\r\n        qty: parseFloat(qty) || 1,\r\n        unitPrice: parseFloat(price) || 0,\r\n      };\r\n      const item = await api(`/estimates/${targetId}/items`, 'POST', payload, token);\r\n      setItems(prev => [item, ...prev]);\r\n      setDesc('');\r\n      setQty('1');\r\n      setPrice('0');\r\n    } catch (e) {\r\n      Alert.alert('Error', e.message || 'Unable to add line item');\r\n    }\r\n  };\r\n\r\n  const saveLeadDetails = async () => {\r\n    if (!leadId) return;\r\n    const customerPayload = [leadCustomerName, leadCustomerPhone, leadCustomerEmail].some(v => v && v.trim()) ? {\r\n      name: leadCustomerName.trim(),\r\n      phone: leadCustomerPhone.trim(),\r\n      email: leadCustomerEmail.trim(),\r\n    } : null;\r\n    const jobsitePayload = [leadAddressLine1, leadAddressLine2, leadCity, leadStateCode, leadZip].some(v => v && v.trim()) ? {\r\n      addressLine1: leadAddressLine1.trim(),\r\n      addressLine2: leadAddressLine2.trim(),\r\n      city: leadCity.trim(),\r\n      state: leadStateCode.trim(),\r\n      zip: leadZip.trim(),\r\n    } : null;\r\n    try {\r\n      await api(`/leads/${leadId}`,'PATCH',{\r\n        description: leadScope,\r\n        status: leadStatus,\r\n        customer: customerPayload,\r\n        jobsite: jobsitePayload,\r\n      }, token);\r\n      Alert.alert('Saved', 'Lead details updated.');\r\n    } catch (e) {\r\n      Alert.alert('Error', e.message || 'Unable to save lead details');\r\n    }\r\n  };\r\n\r\n  const pickPhoto = async () => {\r\n    const result = await ImagePicker.launchImageLibraryAsync({\r\n      allowsEditing: false,\r\n      quality: 0.6,\r\n    });\r\n    if (!result.canceled && result.assets?.length) {\r\n      setPhotoUrl(result.assets[0].uri);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\r\n      <ScrollView contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(6) }}>\r\n        <SurfaceCard style={{ marginBottom: spacing(3) }}>\r\n          <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700', marginBottom: spacing(1.5) }}>Lead summary</Text>\r\n          <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1.5), marginBottom: spacing(2) }}>\r\n            {leadStatuses.map(s => {\r\n              const selected = leadStatus === s;\r\n              return (\r\n                <QuickAction\r\n                  key={s}\r\n                  label={s.replace('_',' ')}\r\n                  tone={selected ? 'primary' : 'muted'}\r\n                  onPress={() => setLeadStatus(s)}\r\n                />\r\n              );\r\n            })}\r\n          </View>\r\n          <TextInput\r\n            placeholder=\"Scope / project notes\"\r\n            placeholderTextColor={palette.muted}\r\n            value={leadScope}\r\n            onChangeText={setLeadScope}\r\n            multiline\r\n            style={{\r\n              borderWidth:1,\r\n              borderColor: palette.border,\r\n              borderRadius: 12,\r\n              padding: spacing(2),\r\n              minHeight: 120,\r\n              color: palette.text,\r\n              backgroundColor: palette.surfaceMuted,\r\n              textAlignVertical: 'top',\r\n            }}\r\n          />\r\n          <View style={{ flexDirection:'row', justifyContent:'flex-end', marginTop: spacing(2) }}>\r\n            <QuickAction label=\"Save lead\" onPress={saveLeadDetails} />\r\n          </View>\r\n        </SurfaceCard>\r\n\r\n        <SurfaceCard style={{ marginBottom: spacing(3) }}>\r\n          <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700', marginBottom: spacing(1.5) }}>Line items</Text>\r\n          <TextInput\r\n            placeholder=\"Describe the work or material\"\r\n            placeholderTextColor={palette.muted}\r\n            value={desc}\r\n            onChangeText={setDesc}\r\n            style={{\r\n              borderWidth:1,\r\n              borderColor: palette.border,\r\n              borderRadius: 12,\r\n              padding: spacing(2),\r\n              color: palette.text,\r\n              backgroundColor: palette.surfaceMuted,\r\n              marginBottom: spacing(1.5),\r\n            }}\r\n          />\r\n          <View style={{ flexDirection:'row', columnGap: spacing(1.5), marginBottom: spacing(1.5) }}>\r\n            <TextInput\r\n              placeholder=\"Qty\"\r\n              placeholderTextColor={palette.muted}\r\n              value={qty}\r\n              onChangeText={setQty}\r\n              keyboardType=\"numeric\"\r\n              style={{\r\n                flex:1,\r\n                borderWidth:1,\r\n                borderColor: palette.border,\r\n                borderRadius: 12,\r\n                padding: spacing(2),\r\n                color: palette.text,\r\n                backgroundColor: palette.surfaceMuted,\r\n              }}\r\n            />\r\n            <TextInput\r\n              placeholder=\"Unit price\"\r\n              placeholderTextColor={palette.muted}\r\n              value={price}\r\n              onChangeText={setPrice}\r\n              keyboardType=\"numeric\"\r\n              style={{\r\n                flex:1,\r\n                borderWidth:1,\r\n                borderColor: palette.border,\r\n                borderRadius: 12,\r\n                padding: spacing(2),\r\n                color: palette.text,\r\n                backgroundColor: palette.surfaceMuted,\r\n              }}\r\n            />\r\n            <QuickAction label=\"Add\" onPress={addItem} />\r\n          </View>\r\n          {items.length === 0 ? (\r\n            <Text style={{ color: palette.muted }}>No line items yet.</Text>\r\n          ) : (\r\n            items.map((item, idx) => (\r\n              <SurfaceCard key={item.id || idx} style={{ marginBottom: spacing(1.5) }}>\r\n                <Text style={{ color: palette.text, fontWeight:'600' }}>{item.description}</Text>\r\n                <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>\r\n                  Qty {item.qty} x ${parseFloat(item.unitPrice || 0).toFixed(2)} = {(parseFloat(item.qty || 0) * parseFloat(item.unitPrice || 0)).toFixed(2)}\r\n                </Text>\r\n              </SurfaceCard>\r\n            ))\r\n          )}\r\n          <View style={{ marginTop: spacing(2), borderTopWidth:1, borderTopColor: palette.border, paddingTop: spacing(2) }}>\r\n            <Text style={{ color: palette.muted }}>Tax rate (%)</Text>\r\n            <TextInput\r\n              value={String(taxRate)}\r\n              onChangeText={setTaxRate}\r\n              keyboardType=\"numeric\"\r\n              placeholderTextColor={palette.muted}\r\n              style={{\r\n                marginTop: spacing(1),\r\n                borderWidth:1,\r\n                borderColor: palette.border,\r\n                borderRadius: 12,\r\n                padding: spacing(2),\r\n                color: palette.text,\r\n                backgroundColor: palette.surfaceMuted,\r\n              }}\r\n            />\r\n            <View style={{ marginTop: spacing(2) }}>\r\n              <Text style={{ color: palette.text }}>Subtotal: ${subtotal.toFixed(2)}</Text>\r\n              <Text style={{ color: palette.text }}>Tax: ${tax.toFixed(2)}</Text>\r\n              <Text style={{ color: palette.text, fontWeight:'700' }}>Total: ${total.toFixed(2)}</Text>\r\n            </View>\r\n          </View>\r\n        </SurfaceCard>\r\n\r\n        <SurfaceCard>\r\n          <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700', marginBottom: spacing(1.5) }}>Attachments & notes</Text>\r\n          <TextInput\r\n            placeholder=\"Internal notes\"\r\n            placeholderTextColor={palette.muted}\r\n            value={notes}\r\n            onChangeText={setNotes}\r\n            multiline\r\n            style={{\r\n              borderWidth:1,\r\n              borderColor: palette.border,\r\n              borderRadius: 12,\r\n              padding: spacing(2),\r\n              minHeight: 100,\r\n              color: palette.text,\r\n              backgroundColor: palette.surfaceMuted,\r\n              textAlignVertical: 'top',\r\n            }}\r\n          />\r\n          <View style={{ flexDirection:'row', columnGap: spacing(1.5), marginTop: spacing(1.5) }}>\r\n            <QuickAction label=\"Add photo\" onPress={pickPhoto} />\r\n          </View>\r\n          {photoUrl ? (\r\n            <Image source={{ uri: photoUrl }} style={{ height: 160, borderRadius: 12, marginTop: spacing(2) }} />\r\n          ) : null}\r\n        </SurfaceCard>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nfunction ScheduleScreen({ navigation }){\r\n  const { token } = useAuth();\r\n  const [jobs, setJobs] = useState([]);\r\n  const [filter, setFilter] = useState('ALL');\r\n  const [queueCount, setQueueCount] = useState(0);\r\n  const [syncing, setSyncing] = useState(false);\r\n\r\n  const loadQueueCount = useCallback(() => {\r\n    db.transaction(tx => tx.executeSql('SELECT COUNT(*) as c FROM queue', [], (_, { rows }) => setQueueCount((rows._array?.[0]?.c)||0)));\r\n  }, []);\r\n\r\n  const load = useCallback(async () => {\r\n    try {\r\n      const data = await api('/jobs','GET',null,token);\r\n      setJobs(data);\r\n      db.transaction(tx => {\r\n        tx.executeSql('DELETE FROM jobs_cache;');\r\n        data.forEach(j => tx.executeSql('INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)', [j.id, j.name||'', j.status||'SCHEDULED', j.startDate||'', j.endDate||'', j.notes||'']));\r\n      });\r\n    } catch(e) {\r\n      db.transaction(tx => tx.executeSql('SELECT id, name, status, startDate, endDate, notes FROM jobs_cache', [], (_, { rows }) => setJobs(rows._array || [])));\r\n    }\r\n  }, [token]);\r\n\r\n  useEffect(() => {\r\n    load();\r\n    loadQueueCount();\r\n  }, [load, loadQueueCount]);\r\n\r\n  const filters = [\r\n    { key:'ALL', label:'All' },\r\n    { key:'TODAY', label:'Today' },\r\n    { key:'WEEK', label:'This week' },\r\n  ];\r\n\r\n  const inRange = useCallback((dateValue) => {\r\n    if (filter === 'ALL') return true;\r\n    if (!dateValue) return false;\r\n    const today = new Date();\r\n    const dt = new Date(dateValue);\r\n    if (Number.isNaN(dt.getTime())) return false;\r\n    if (filter === 'TODAY') {\r\n      return dt.getFullYear() === today.getFullYear() && dt.getMonth() === today.getMonth() && dt.getDate() === today.getDate();\r\n    }\r\n    const start = new Date(today);\r\n    start.setHours(0, 0, 0, 0);\r\n    start.setDate(today.getDate() - today.getDay());\r\n    const end = new Date(start);\r\n    end.setDate(start.getDate() + 6);\r\n    return dt >= start && dt <= end;\r\n  }, [filter]);\r\n\r\n  const filteredJobs = useMemo(() => (\r\n    jobs\r\n      .filter(job => inRange(job.startDate))\r\n      .sort((a, b) => new Date(a.startDate || 0) - new Date(b.startDate || 0))\r\n  ), [jobs, inRange]);\r\n\r\n  const handleSync = useCallback(async () => {\r\n    setSyncing(true);\r\n    try {\r\n      await processQueue(token);\r\n      await load();\r\n      loadQueueCount();\r\n    } finally {\r\n      setSyncing(false);\r\n    }\r\n  }, [token, load, loadQueueCount]);\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\r\n      <ScrollView contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(6) }}>\r\n        <Text style={{ color: palette.text, fontSize: typography.h1, fontWeight:'700', marginBottom: spacing(2) }}>Schedule</Text>\r\n        <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1.5), marginBottom: spacing(2) }}>\r\n          {filters.map(option => (\r\n            <QuickAction\r\n              key={option.key}\r\n              label={option.label}\r\n              tone={filter === option.key ? 'primary' : 'muted'}\r\n              onPress={() => setFilter(option.key)}\r\n            />\r\n          ))}\r\n        </View>\r\n        <SurfaceCard style={{ marginBottom: spacing(3), flexDirection:'row', justifyContent:'space-between', alignItems:'center' }}>\r\n          <View>\r\n            <Text style={{ color: palette.text, fontWeight:'600' }}>Offline queue</Text>\r\n            <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>{queueCount} items waiting to sync</Text>\r\n          </View>\r\n          <QuickAction label={syncing ? 'Syncing...' : 'Sync now'} tone={syncing ? 'muted' : 'primary'} onPress={syncing ? undefined : handleSync} />\r\n        </SurfaceCard>\r\n\r\n        {filteredJobs.length === 0 ? (\r\n          <SurfaceCard>\r\n            <Text style={{ color: palette.muted }}>No jobs {filter !== 'ALL' ? 'in this range' : 'scheduled yet'}. Convert a lead or create a job to populate your schedule.</Text>\r\n          </SurfaceCard>\r\n        ) : (\r\n          filteredJobs.map(job => {\r\n            const jobsite = job.Jobsite || {};\r\n            const addressParts = [\r\n              jobsite.addressLine1,\r\n              jobsite.addressLine2,\r\n              [jobsite.city, jobsite.state].filter(Boolean).join(', '),\r\n              jobsite.zip,\r\n            ].filter(Boolean);\r\n            const address = addressParts.join(', ');\r\n            const startLabel = job.startDate ? `Starts ${formatDate(job.startDate)}` : 'No start date';\r\n            const endLabel = job.endDate ? ` - Due ${formatDate(job.endDate)}` : '';\r\n            return (\r\n              <SurfaceCard key={job.id} style={{ marginBottom: spacing(2) }}>\r\n                <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center' }}>\r\n                  <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600' }}>{job.name || `Job #${job.id}`}</Text>\r\n                  <StatusPill status={job.status || 'SCHEDULED'} />\r\n                </View>\r\n                <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>\r\n                  {startLabel}{endLabel}\r\n                </Text>\r\n                {address ? <Text style={{ color: palette.muted, marginTop: spacing(1) }}>{address}</Text> : null}\r\n                {job.notes ? <Text style={{ color: palette.muted, marginTop: spacing(1) }}>{job.notes}</Text> : null}\r\n                <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginTop: spacing(2) }}>\r\n                  <QuickAction label=\"Open job\" onPress={() => navigation.navigate('JobDetail', { jobId: job.id })} />\r\n                  <QuickAction label=\"View tasks\" onPress={() => navigation.navigate('JobDetail', { jobId: job.id, tab: 'tasks' })} tone=\"muted\" />\r\n                </View>\r\n              </SurfaceCard>\r\n            );\r\n          })\r\n        )}\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\nfunction ProfileScreen({ navigation }){\r\n  const { setToken, user } = useAuth();\r\n  const isAdmin = (user?.role || '').toUpperCase() === 'ADMIN';\r\n  return (\r\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\r\n      <ScrollView contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(6) }}>\r\n        <Text style={{ color: palette.text, fontSize: typography.h1, fontWeight:'700', marginBottom: spacing(2) }}>Profile</Text>\r\n        <SurfaceCard style={{ marginBottom: spacing(3) }}>\r\n          <Text style={{ color: palette.muted, fontSize: typography.small, textTransform:'uppercase', fontWeight:'600' }}>Account</Text>\r\n          <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700', marginTop: spacing(1) }}>{user?.name || user?.fullName || 'Team member'}</Text>\r\n          <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>{user?.email || 'No email on file'}</Text>\r\n          <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>Role: {user?.role || 'TECH'}</Text>\r\n        </SurfaceCard>\r\n\r\n        <SurfaceCard>\r\n          <Text style={{ color: palette.muted, fontSize: typography.small, textTransform:'uppercase', fontWeight:'600', marginBottom: spacing(1.5) }}>Actions</Text>\r\n          {isAdmin ? (\r\n            <View style={{ marginBottom: spacing(1.5) }}>\r\n              <QuickAction label=\"Manage users\" onPress={() => navigation.navigate('UsersAdmin')} />\r\n            </View>\r\n          ) : null}\r\n          <QuickAction label=\"Sign out\" tone=\"danger\" onPress={() => setToken(null)} />\r\n        </SurfaceCard>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\nconst Stack = createNativeStackNavigator();\r\nconst Tabs = createBottomTabNavigator();\r\n\r\nfunction TabsNav(){\r\n  const { user } = useAuth();\r\n  const isAdmin = (user?.role || '').toUpperCase() === 'ADMIN';\r\n  const { width } = useWindowDimensions();\r\n  const isCompact = Platform.OS !== 'web' ? true : width < 768;\r\n  const hideTabs = isCompact;\r\n  return (\r\n    <Tabs.Navigator\r\n      screenOptions={{\r\n        headerShown: false,\r\n        tabBarActiveTintColor: palette.primary,\r\n        tabBarStyle: { backgroundColor: '#fff', display: hideTabs ? 'none' : 'flex' },\r\n      }}\r\n    >\r\n      <Tabs.Screen name=\"Dashboard\" component={DashboardScreen} options={{ title: 'Home' }} />\r\n      <Tabs.Screen name=\"Leads\" component={LeadsScreen} />\r\n      <Tabs.Screen name=\"Jobs\" component={JobsKanbanScreen} options={{ title:'Jobs' }} />\r\n      {isAdmin ? <Tabs.Screen name=\"Invoices\" component={InvoicesScreen} /> : null}\r\n      <Tabs.Screen name=\"Schedule\" component={ScheduleScreen} />\r\n      <Tabs.Screen name=\"Profile\" component={ProfileScreen} options={{ title:\"Profile\" }} />\r\n    </Tabs.Navigator>\r\n  );\r\n}\r\n\r\nfunction MobileHeader({ currentRoute, onNavigate, isAdmin }){\r\n  const [menuVisible, setMenuVisible] = useState(false);\r\n  const activeRoute = useMemo(() => {\r\n    if (currentRoute === 'JobDetail') return 'Jobs';\r\n    return currentRoute;\r\n  }, [currentRoute]);\r\n\r\n  const menuItems = useMemo(() => {\r\n    const items = [\r\n      { label: 'Dashboard', route: 'Dashboard' },\r\n      { label: 'Leads', route: 'Leads' },\r\n      { label: 'Jobs', route: 'Jobs' },\r\n    ];\r\n    if (isAdmin) {\r\n      items.push({ label: 'Invoices', route: 'Invoices' });\r\n    }\r\n    items.push(\r\n      { label: 'Schedule', route: 'Schedule' },\r\n      { label: 'Profile', route: 'Profile' },\r\n    );\r\n    if (isAdmin) {\r\n      items.push({ label: 'Manage users', route: 'UsersAdmin' });\r\n    }\r\n    return items;\r\n  }, [isAdmin]);\r\n\r\n  const handleSelect = useCallback((route) => {\r\n    setMenuVisible(false);\r\n    onNavigate(route);\r\n  }, [onNavigate]);\r\n\r\n  return (\r\n    <>\r\n      <SafeAreaView style={{ backgroundColor: '#0B0C10' }}>\r\n        <View style={{ paddingHorizontal: spacing(2), paddingVertical: spacing(1.5), flexDirection:'row', alignItems:'center', justifyContent:'space-between' }}>\r\n          <TouchableOpacity\r\n            onPress={() => setMenuVisible(true)}\r\n            accessibilityLabel=\"Open navigation menu\"\r\n            accessibilityRole=\"button\"\r\n            style={{ padding: spacing(1) }}\r\n          >\r\n            <View style={{ width: 24, height: 2, backgroundColor: '#fff', borderRadius: 999, marginBottom: 4 }} />\r\n            <View style={{ width: 24, height: 2, backgroundColor: '#fff', borderRadius: 999, marginBottom: 4 }} />\r\n            <View style={{ width: 24, height: 2, backgroundColor: '#fff', borderRadius: 999 }} />\r\n          </TouchableOpacity>\r\n          <Text style={{ color:'#fff', fontSize: typography.h1, fontWeight:'700' }}>Precision Tracker</Text>\r\n          <View style={{ width: 24 }} />\r\n        </View>\r\n      </SafeAreaView>\r\n      <Modal\r\n        visible={menuVisible}\r\n        animationType=\"fade\"\r\n        transparent\r\n        onRequestClose={() => setMenuVisible(false)}\r\n      >\r\n        <View style={{ flex:1, backgroundColor:'rgba(15,23,42,0.6)', justifyContent:'flex-start', padding: spacing(3) }}>\r\n          <View style={{ backgroundColor: palette.surface, borderRadius: 16, padding: spacing(2.5) }}>\r\n            <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center', marginBottom: spacing(2) }}>\r\n              <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700' }}>Navigate</Text>\r\n              <TouchableOpacity onPress={() => setMenuVisible(false)} accessibilityRole=\"button\" accessibilityLabel=\"Close menu\">\r\n                <Text style={{ color: palette.muted, fontWeight:'600' }}>Close</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n            {menuItems.map(item => {\r\n              const selected = activeRoute === item.route;\r\n              return (\r\n                <TouchableOpacity\r\n                  key={item.route}\r\n                  onPress={() => handleSelect(item.route)}\r\n                  activeOpacity={0.85}\r\n                  style={{\r\n                    paddingVertical: spacing(1.25),\r\n                    paddingHorizontal: spacing(1.5),\r\n                    borderRadius: 12,\r\n                    backgroundColor: selected ? '#d9f2ed' : palette.surfaceMuted,\r\n                    marginBottom: spacing(1),\r\n                  }}\r\n                >\r\n                  <Text style={{ color: selected ? palette.primaryStrong : palette.text, fontWeight:'600', fontSize: typography.body }}>\r\n                    {item.label}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              );\r\n            })}\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction LoginScreen() {\r\n  const [email, setEmail] = useState('admin@example.com');\r\n  // If you kept the hardcoded backend login, default to test123:\r\n  const [password, setPassword] = useState('test123');\r\n  const [busy, setBusy] = useState(false);\r\n\r\n  // <-- use the auth context to flip the app into \"logged-in\" mode\r\n  const { setToken, setUser } = useAuth();\r\n\r\n  async function login() {\r\n    try {\r\n      setBusy(true);\r\n      const res = await fetch(`${API_URL}/auth/login`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n      const data = await res.json();\r\n      if (!res.ok) throw new Error(data?.message || data?.error || 'Login failed');\r\n\r\n      // Accept dev or real payload shape\r\n      const tok = data.token || data.accessToken;\r\n      if (!tok) throw new Error('No token returned from server');\r\n\r\n      // Store token/user in global auth state + persist\r\n      const normalizedUser = data.user ? { ...data.user, role: normalizeRole(data.user.role) } : { email, role: 'ADMIN', name: 'Admin' };\r\n      setToken(tok);\r\n      setUser(normalizedUser);\r\n      try {\r\n        await SecureStore.setItemAsync('auth_token', tok);\r\n        await SecureStore.setItemAsync('auth_user', JSON.stringify(normalizedUser));\r\n      } catch {}\r\n\r\n      // Optional: toast\r\n      Alert.alert('Welcome', 'Logged in');\r\n    } catch (e) {\r\n      Alert.alert('Error', e.message);\r\n    } finally {\r\n      setBusy(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View style={{ flex: 1, padding: 20, justifyContent: 'center' }}>\r\n      <Text style={{ fontSize: 24, marginBottom: 16 }}>PrecisionTracker</Text>\r\n      <TextInput\r\n        placeholder=\"Email\"\r\n        autoCapitalize=\"none\"\r\n        value={email}\r\n        onChangeText={setEmail}\r\n        style={{ borderWidth: 1, padding: 12, marginBottom: 12 }}\r\n      />\r\n      <TextInput\r\n        placeholder=\"Password\"\r\n        secureTextEntry\r\n        value={password}\r\n        onChangeText={setPassword}\r\n        style={{ borderWidth: 1, padding: 12, marginBottom: 12 }}\r\n      />\r\n      <Button title={busy ? 'Signing in...' : 'Sign in'} onPress={login} disabled={busy} />\r\n    </View>\r\n  );\r\n}\r\n\r\n\r\nexport default function App(){\r\n  const [token, setToken] = useState(null);\r\n  const [user, setUser] = useState(null);\r\n  const [booting, setBooting] = useState(true);\r\n  const navigationRef = useRef(null);\r\n  const [currentRoute, setCurrentRoute] = useState('Dashboard');\r\n  const { width } = useWindowDimensions();\r\n  const isCompactLayout = Platform.OS !== 'web' ? true : width < 768;\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    (async () => {\r\n      try {\r\n        const [tok, usr] = await Promise.all([\r\n          SecureStore.getItemAsync('auth_token'),\r\n          SecureStore.getItemAsync('auth_user')\r\n        ]);\r\n        if (mounted && tok) {\r\n          setToken(tok);\r\n          if (usr) {\r\n            const parsed = JSON.parse(usr);\r\n            parsed.role = normalizeRole(parsed.role);\r\n            setUser(parsed);\r\n          }\r\n        }\r\n      } catch {}\r\n      finally { if (mounted) setBooting(false); }\r\n    })();\r\n    return () => { mounted = false; };\r\n  }, []);\r\n\r\n  const authValue = {\r\n    token,\r\n    setToken: (t) => {\r\n      setToken(t);\r\n      if (!t) { try { SecureStore.deleteItemAsync('auth_token'); SecureStore.deleteItemAsync('auth_user'); } catch {} }\r\n    },\r\n    user,\r\n    setUser\r\n  };\r\n\r\n  const updateCurrentRoute = useCallback(() => {\r\n    if (!navigationRef.current) return;\r\n    const current = navigationRef.current.getCurrentRoute();\r\n    if (!current) return;\r\n    let name = current.name;\r\n    let state = current.state;\r\n    while (state && typeof state.index === 'number' && state.routes && state.routes[state.index]) {\r\n      const nested = state.routes[state.index];\r\n      name = nested.name;\r\n      state = nested.state;\r\n    }\r\n    if (name) setCurrentRoute(name);\r\n  }, []);\r\n\r\n  const handleNavigate = useCallback((routeName) => {\r\n    if (!navigationRef.current) return;\r\n    const tabRoutes = ['Dashboard','Leads','Jobs','Invoices','Schedule','Profile'];\r\n    if (tabRoutes.includes(routeName)) {\r\n      navigationRef.current.navigate('Tabs', { screen: routeName });\r\n    } else {\r\n      navigationRef.current.navigate(routeName);\r\n    }\r\n  }, []);\r\n\r\n  if (booting) {\r\n    return (\r\n      <SafeAreaView style={{ flex:1, alignItems:'center', justifyContent:'center' }}>\r\n        <Text>Loading...</Text>\r\n      </SafeAreaView>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={authValue}>\r\n      <View style={{ flex:1, backgroundColor: palette.background }}>\r\n        {isCompactLayout && token ? (\r\n          <MobileHeader\r\n            currentRoute={currentRoute}\r\n            onNavigate={handleNavigate}\r\n            isAdmin={(user?.role || '').toUpperCase() === 'ADMIN'}\r\n          />\r\n        ) : null}\r\n        <View style={{ flex:1 }}>\r\n          <NavigationContainer\r\n            ref={navigationRef}\r\n            onReady={updateCurrentRoute}\r\n            onStateChange={updateCurrentRoute}\r\n          >\r\n            {!token ? (\r\n              <Stack.Navigator>\r\n                <Stack.Screen name=\"Login\" component={LoginScreen} />\r\n              </Stack.Navigator>\r\n            ) : (\r\n              <Stack.Navigator>\r\n                <Stack.Screen name=\"Tabs\" component={TabsNav} options={{ headerShown:false }} />\r\n                <Stack.Screen name=\"NewLead\" component={NewLeadScreen} options={{ title:'New Lead' }} />\r\n                <Stack.Screen name=\"EstimateEditor\" component={EstimateEditorScreen} options={{ title:'Estimate' }} />\r\n                <Stack.Screen name=\"Signature\" component={SignatureScreen} options={{ title:'Signature' }} />\r\n                <Stack.Screen name=\"UsersAdmin\" component={UsersAdminScreen} options={{ title:'Users (Admin)' }} />\r\n                <Stack.Screen name=\"JobDetail\" component={JobDetailScreen} options={{ title:'Job' }} />\r\n              </Stack.Navigator>\r\n            )}\r\n          </NavigationContainer>\r\n        </View>\r\n      </View>\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}