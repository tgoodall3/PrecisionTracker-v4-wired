{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tyler\\\\Downloads\\\\PrecisionTracker-v4-wired\\\\PrecisionTracker\\\\mobile\\\\App.js\";\nimport React, { useEffect, useState, createContext, useContext, useRef, useCallback, useMemo } from 'react';\nimport { NavigationContainer, useFocusEffect } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport * as ImagePicker from 'expo-image-picker';\nimport * as FileSystem from 'expo-file-system';\nimport * as SQLite from 'expo-sqlite';\nimport Svg, { Path } from 'react-native-svg';\nimport ViewShot from 'react-native-view-shot';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"react-native-web/dist/exports/View\";\nimport * as SecureStore from 'expo-secure-store';\nimport DateTimePicker, { DateTimePickerAndroid } from '@react-native-community/datetimepicker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.EXPO_PUBLIC_API_URL || 'http://localhost:4000';\nfunction initOfflineTables(database) {\n  try {\n    if (!database || typeof database.transaction !== 'function') return;\n    database.transaction(tx => {\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS queue (id INTEGER PRIMARY KEY AUTOINCREMENT, type TEXT, payload TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS uploads (id INTEGER PRIMARY KEY AUTOINCREMENT, dataUrl TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS leads_cache (id INTEGER PRIMARY KEY, description TEXT, status TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS jobs_cache (id INTEGER PRIMARY KEY, name TEXT, status TEXT, startDate TEXT, endDate TEXT, notes TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS tasks_cache (id INTEGER PRIMARY KEY, jobId INTEGER, title TEXT, status TEXT, dueDate TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS calendar_cache (id INTEGER PRIMARY KEY, jobId INTEGER, title TEXT, startAt TEXT, endAt TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS estimates_cache (id INTEGER PRIMARY KEY, leadId INTEGER, subtotal REAL, taxRate REAL, total REAL, status TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS estimate_items_cache (id INTEGER PRIMARY KEY, estimateId INTEGER, description TEXT, qty REAL, unitPrice REAL);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS change_orders_cache (id INTEGER PRIMARY KEY, jobId INTEGER, title TEXT, amountDelta REAL, status TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS users_cache (id INTEGER PRIMARY KEY, email TEXT, fullName TEXT, role TEXT);');\n    });\n  } catch (e) {}\n}\nlet db;\nexport function getDb() {\n  if (db) return db;\n  if (Platform.OS === 'web') {\n    db = {\n      transaction: fn => fn({\n        executeSql: () => {}\n      }),\n      execAsync: async () => {},\n      runAsync: async () => {}\n    };\n    return db;\n  }\n  if ('openDatabaseSync' in SQLite) {\n    db = SQLite.openDatabaseSync('offline.db');\n    return db;\n  }\n  if ('openDatabaseAsync' in SQLite) {\n    db = {\n      transaction: fn => fn({\n        executeSql: () => {}\n      }),\n      execAsync: async () => {},\n      runAsync: async () => {}\n    };\n    return db;\n  }\n  db = {\n    transaction: fn => fn({\n      executeSql: () => {}\n    }),\n    execAsync: async () => {},\n    runAsync: async () => {}\n  };\n  return db;\n}\nconst dbHandle = getDb();\ninitOfflineTables(dbHandle);\nconst normalizeRole = role => {\n  if (!role) return 'TECH';\n  const r = String(role).toUpperCase();\n  if (['ADMIN', 'ESTIMATOR', 'SUPERVISOR', 'TECH'].includes(r)) return r;\n  if (r === 'STANDARD' || r === 'USER') return 'TECH';\n  return r;\n};\nconst AuthContext = createContext(null);\nfunction useAuth() {\n  return useContext(AuthContext);\n}\nasync function api(path, method = 'GET', body, token) {\n  const res = await fetch(`${API_URL}${path}`, {\n    method,\n    headers: Object.assign({\n      'Content-Type': 'application/json'\n    }, token ? {\n      Authorization: `Bearer ${token}`\n    } : {}),\n    body: body ? JSON.stringify(body) : undefined\n  });\n  if (!res.ok) {\n    throw new Error((await res.json()).error || 'Request failed');\n  }\n  return res.json();\n}\nconst palette = {\n  background: '#f4f6f8',\n  surface: '#ffffff',\n  surfaceMuted: '#f1f5f9',\n  border: '#e2e8f0',\n  text: '#0f172a',\n  muted: '#5f6b7d',\n  primary: '#2c8a7d',\n  primaryStrong: '#1f6a60',\n  success: '#219653',\n  warning: '#f59e0b',\n  danger: '#d14343',\n  info: '#2563eb'\n};\nconst spacing = (step = 1) => step * 8;\nconst typography = {\n  h1: 24,\n  h2: 18,\n  body: 15,\n  small: 12\n};\nconst floatingShadow = Platform.select({\n  ios: {\n    shadowColor: '#0f172a',\n    shadowOpacity: 0.08,\n    shadowRadius: 14,\n    shadowOffset: {\n      width: 0,\n      height: 6\n    }\n  },\n  android: {\n    elevation: 2\n  },\n  default: {}\n});\nconst pillTone = {\n  NEW: {\n    fg: palette.info,\n    bg: '#e6eeff',\n    label: 'New'\n  },\n  CONTACTED: {\n    fg: palette.primary,\n    bg: '#e6f4f2',\n    label: 'Contacted'\n  },\n  ESTIMATING: {\n    fg: palette.warning,\n    bg: '#fdf1d6',\n    label: 'Estimating'\n  },\n  CONVERTED: {\n    fg: palette.success,\n    bg: '#e6f6ec',\n    label: 'Converted'\n  },\n  CLOSED_LOST: {\n    fg: palette.muted,\n    bg: '#e2e8f0',\n    label: 'Lost'\n  },\n  SCHEDULED: {\n    fg: palette.primary,\n    bg: '#e6f4f2',\n    label: 'Scheduled'\n  },\n  IN_PROGRESS: {\n    fg: palette.info,\n    bg: '#e6eeff',\n    label: 'In progress'\n  },\n  COMPLETE: {\n    fg: palette.success,\n    bg: '#e6f6ec',\n    label: 'Complete'\n  },\n  DONE: {\n    fg: palette.success,\n    bg: '#e6f6ec',\n    label: 'Complete'\n  },\n  ON_HOLD: {\n    fg: palette.warning,\n    bg: '#fdf1d6',\n    label: 'On hold'\n  },\n  CANCELLED: {\n    fg: palette.muted,\n    bg: '#e2e8f0',\n    label: 'Cancelled'\n  },\n  DRAFT: {\n    fg: palette.muted,\n    bg: '#e2e8f0',\n    label: 'Draft'\n  },\n  SENT: {\n    fg: palette.info,\n    bg: '#e6eeff',\n    label: 'Sent'\n  },\n  PART_PAID: {\n    fg: palette.warning,\n    bg: '#fdf1d6',\n    label: 'Part paid'\n  },\n  PAID: {\n    fg: palette.success,\n    bg: '#e6f6ec',\n    label: 'Paid'\n  },\n  VOID: {\n    fg: palette.muted,\n    bg: '#f1f5f9',\n    label: 'Void'\n  }\n};\nconst toneMap = {\n  primary: {\n    fg: palette.primaryStrong,\n    bg: '#e0f3f0'\n  },\n  success: {\n    fg: palette.success,\n    bg: '#e6f6ec'\n  },\n  warning: {\n    fg: palette.warning,\n    bg: '#fdf1d6'\n  },\n  danger: {\n    fg: palette.danger,\n    bg: '#fde4e4'\n  },\n  info: {\n    fg: palette.info,\n    bg: '#e6eeff'\n  }\n};\nconst formatCurrency = value => {\n  const amount = Number(value || 0);\n  if (Number.isNaN(amount)) return '$0';\n  return `$${amount.toLocaleString(undefined, {\n    minimumFractionDigits: amount % 1 ? 2 : 0,\n    maximumFractionDigits: 2\n  })}`;\n};\nconst formatDate = value => {\n  if (!value) return null;\n  const d = new Date(value);\n  if (Number.isNaN(d.getTime())) return value;\n  return d.toLocaleDateString(undefined, {\n    month: 'short',\n    day: 'numeric'\n  });\n};\nconst isTaskCompleted = status => {\n  if (!status) return false;\n  const key = String(status).toUpperCase();\n  return key === 'DONE' || key === 'COMPLETE';\n};\nfunction SurfaceCard({\n  children,\n  style,\n  onPress\n}) {\n  const content = _jsxDEV(View, {\n    style: [{\n      backgroundColor: palette.surface,\n      borderRadius: 16,\n      borderWidth: 1,\n      borderColor: palette.border,\n      padding: spacing(2)\n    }, floatingShadow, style],\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, this);\n  if (!onPress) return content;\n  return _jsxDEV(TouchableOpacity, {\n    activeOpacity: 0.85,\n    onPress: onPress,\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n}\nfunction StatusPill({\n  status\n}) {\n  if (!status) return null;\n  const key = String(status).toUpperCase();\n  const cfg = pillTone[key] || {\n    fg: palette.muted,\n    bg: '#e2e8f0',\n    label: status\n  };\n  return _jsxDEV(View, {\n    style: {\n      backgroundColor: cfg.bg,\n      borderRadius: 999,\n      paddingHorizontal: spacing(1.5),\n      paddingVertical: spacing(0.5)\n    },\n    children: _jsxDEV(Text, {\n      style: {\n        color: cfg.fg,\n        fontSize: typography.small,\n        fontWeight: '600'\n      },\n      children: cfg.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n}\nfunction SummaryCard({\n  title,\n  value,\n  subtitle,\n  tone = 'primary',\n  onPress\n}) {\n  const colors = toneMap[tone] || toneMap.primary;\n  return _jsxDEV(SurfaceCard, {\n    onPress: onPress,\n    style: {\n      backgroundColor: colors.bg,\n      borderColor: 'transparent',\n      padding: spacing(2.5)\n    },\n    children: [_jsxDEV(Text, {\n      style: {\n        color: palette.muted,\n        fontSize: typography.small,\n        textTransform: 'uppercase',\n        fontWeight: '700'\n      },\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), _jsxDEV(Text, {\n      style: {\n        color: colors.fg,\n        fontSize: 28,\n        fontWeight: '800',\n        marginTop: spacing(0.5)\n      },\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), subtitle ? _jsxDEV(Text, {\n      style: {\n        color: palette.muted,\n        fontSize: typography.small,\n        marginTop: spacing(0.5)\n      },\n      children: subtitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 19\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 5\n  }, this);\n}\nfunction SectionHeader({\n  title,\n  actionLabel,\n  onAction\n}) {\n  return _jsxDEV(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      marginBottom: spacing(1.5)\n    },\n    children: [_jsxDEV(Text, {\n      style: {\n        color: palette.text,\n        fontSize: typography.h2,\n        fontWeight: '700'\n      },\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), actionLabel && onAction ? _jsxDEV(TouchableOpacity, {\n      onPress: onAction,\n      style: {\n        paddingHorizontal: spacing(1),\n        paddingVertical: spacing(0.5)\n      },\n      children: _jsxDEV(Text, {\n        style: {\n          color: palette.primary,\n          fontWeight: '600',\n          fontSize: typography.small\n        },\n        children: actionLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 236,\n    columnNumber: 5\n  }, this);\n}\nfunction QuickAction({\n  label,\n  onPress,\n  tone = 'primary'\n}) {\n  const toneStyles = (() => {\n    switch (tone) {\n      case 'danger':\n        return {\n          borderColor: '#fecdd3',\n          backgroundColor: '#fee2e2',\n          textColor: palette.danger\n        };\n      case 'success':\n        return {\n          borderColor: '#bbf7d0',\n          backgroundColor: '#dcfce7',\n          textColor: palette.success\n        };\n      case 'warning':\n        return {\n          borderColor: '#fde68a',\n          backgroundColor: '#fef3c7',\n          textColor: palette.warning\n        };\n      case 'muted':\n        return {\n          borderColor: palette.border,\n          backgroundColor: palette.surface,\n          textColor: palette.muted\n        };\n      default:\n        return {\n          borderColor: palette.border,\n          backgroundColor: palette.surfaceMuted,\n          textColor: palette.primary\n        };\n    }\n  })();\n  return _jsxDEV(TouchableOpacity, {\n    onPress: onPress,\n    activeOpacity: 0.85,\n    style: {\n      borderRadius: 10,\n      paddingHorizontal: spacing(1.5),\n      paddingVertical: spacing(0.75),\n      borderWidth: 1,\n      borderColor: toneStyles.borderColor,\n      backgroundColor: toneStyles.backgroundColor\n    },\n    children: _jsxDEV(Text, {\n      style: {\n        color: toneStyles.textColor,\n        fontWeight: '600',\n        fontSize: typography.small\n      },\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 263,\n    columnNumber: 5\n  }, this);\n}\nconst toInputDate = dateValue => {\n  const d = dateValue instanceof Date ? dateValue : new Date(dateValue);\n  if (Number.isNaN(d.getTime())) return '';\n  const yyyy = d.getFullYear();\n  const mm = String(d.getMonth() + 1).padStart(2, '0');\n  const dd = String(d.getDate()).padStart(2, '0');\n  return `${yyyy}-${mm}-${dd}`;\n};\nconst parseInputDate = value => {\n  if (!value) return null;\n  const parsed = new Date(value);\n  if (Number.isNaN(parsed.getTime())) return null;\n  return parsed;\n};\nfunction DateInputField({\n  value,\n  onChange,\n  placeholder = 'Select date',\n  minimumDate,\n  maximumDate,\n  style\n}) {\n  const [iosPickerVisible, setIosPickerVisible] = useState(false);\n  const parsed = parseInputDate(value) || new Date();\n  const applyDate = selectedDate => {\n    if (!selectedDate) return;\n    onChange(toInputDate(selectedDate));\n  };\n  const openPicker = () => {\n    const baseDate = parseInputDate(value) || new Date();\n    if (Platform.OS === 'android') {\n      DateTimePickerAndroid.open({\n        value: baseDate,\n        mode: 'date',\n        minimumDate: minimumDate ? parseInputDate(minimumDate) || undefined : undefined,\n        maximumDate: maximumDate ? parseInputDate(maximumDate) || undefined : undefined,\n        onChange: (event, selected) => {\n          if (event.type === 'set' && selected) applyDate(selected);\n        }\n      });\n    } else {\n      setIosPickerVisible(true);\n    }\n  };\n  const containerStyle = [{\n    marginBottom: spacing(1.5)\n  }, style];\n  return _jsxDEV(View, {\n    style: containerStyle,\n    children: [_jsxDEV(TouchableOpacity, {\n      onPress: openPicker,\n      activeOpacity: 0.85,\n      style: {\n        borderWidth: 1,\n        borderColor: palette.border,\n        borderRadius: 12,\n        backgroundColor: palette.surfaceMuted,\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(1.5)\n      },\n      children: [_jsxDEV(Text, {\n        style: {\n          flex: 1,\n          color: value ? palette.text : palette.muted,\n          fontSize: typography.body\n        },\n        children: value || placeholder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: {\n          fontSize: typography.h2 - 6\n        },\n        children: \"\\uD83D\\uDCC5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this), Platform.OS === 'ios' && iosPickerVisible ? _jsxDEV(DateTimePicker, {\n      value: parsed,\n      mode: \"date\",\n      display: \"inline\",\n      onChange: (event, selected) => {\n        if (event.type === 'set' && selected) {\n          applyDate(selected);\n        }\n        setIosPickerVisible(false);\n      },\n      style: {\n        marginTop: spacing(1)\n      },\n      minimumDate: minimumDate ? parseInputDate(minimumDate) || undefined : undefined,\n      maximumDate: maximumDate ? parseInputDate(maximumDate) || undefined : undefined\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 328,\n    columnNumber: 5\n  }, this);\n}\nfunction DashboardScreen({\n  navigation\n}) {\n  const {\n    token\n  } = useAuth();\n  const [loading, setLoading] = useState(true);\n  const [refreshing, setRefreshing] = useState(false);\n  const [leads, setLeads] = useState([]);\n  const [jobs, setJobs] = useState([]);\n  const [tasks, setTasks] = useState([]);\n  const [invoiceSummary, setInvoiceSummary] = useState(null);\n  const [lastUpdated, setLastUpdated] = useState(null);\n  const jobLookup = useMemo(() => {\n    const map = {};\n    for (const job of jobs) {\n      if (job?.id != null) {\n        map[job.id] = job;\n      }\n    }\n    return map;\n  }, [jobs]);\n  const loadData = useCallback(async (isPullRefresh = false) => {\n    if (!token) return;\n    isPullRefresh ? setRefreshing(true) : setLoading(true);\n    const fetchLeads = async () => {\n      try {\n        const data = await api('/leads', 'GET', null, token);\n        setLeads(data);\n        db.transaction(tx => {\n          tx.executeSql && tx.executeSql('DELETE FROM leads_cache;');\n          data.forEach(l => tx.executeSql && tx.executeSql('INSERT OR REPLACE INTO leads_cache (id, description, status) VALUES (?,?,?)', [l.id, l.description || '', l.status || 'NEW']));\n        });\n        return data;\n      } catch (e) {\n        return await new Promise(resolve => {\n          db.transaction(tx => tx.executeSql && tx.executeSql('SELECT id, description, status FROM leads_cache', [], (_, {\n            rows\n          }) => {\n            const fallback = rows?._array || [];\n            setLeads(fallback);\n            resolve(fallback);\n          }));\n        });\n      }\n    };\n    const fetchJobs = async () => {\n      try {\n        const data = await api('/jobs', 'GET', null, token);\n        setJobs(data);\n        db.transaction(tx => {\n          tx.executeSql && tx.executeSql('DELETE FROM jobs_cache;');\n          data.forEach(j => tx.executeSql && tx.executeSql('INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)', [j.id, j.name || '', j.status || 'SCHEDULED', j.startDate || '', j.endDate || '', j.notes || '']));\n        });\n        return data;\n      } catch (e) {\n        return await new Promise(resolve => {\n          db.transaction(tx => tx.executeSql && tx.executeSql('SELECT id, name, status, startDate, endDate, notes FROM jobs_cache', [], (_, {\n            rows\n          }) => {\n            const fallback = rows?._array || [];\n            setJobs(fallback);\n            resolve(fallback);\n          }));\n        });\n      }\n    };\n    const fetchTasks = async () => {\n      try {\n        const data = await api('/tasks', 'GET', null, token);\n        setTasks(data);\n        db.transaction(tx => {\n          data.forEach(t => tx.executeSql && tx.executeSql('INSERT OR REPLACE INTO tasks_cache (id, jobId, title, status, dueDate) VALUES (?,?,?,?,?)', [t.id, t.jobId || null, t.title || '', t.status || 'TODO', t.dueDate || '']));\n        });\n        return data;\n      } catch (e) {\n        return await new Promise(resolve => {\n          db.transaction(tx => tx.executeSql && tx.executeSql('SELECT id, jobId, title, status, dueDate FROM tasks_cache ORDER BY id DESC', [], (_, {\n            rows\n          }) => {\n            const fallback = rows?._array || [];\n            setTasks(fallback);\n            resolve(fallback);\n          }));\n        });\n      }\n    };\n    const fetchInvoiceSummary = async () => {\n      try {\n        const data = await api('/invoices/summary', 'GET', null, token);\n        setInvoiceSummary(data);\n        return data;\n      } catch (e) {\n        return null;\n      }\n    };\n    try {\n      await Promise.all([fetchLeads(), fetchJobs(), fetchTasks(), fetchInvoiceSummary()]);\n      setLastUpdated(new Date());\n    } finally {\n      isPullRefresh ? setRefreshing(false) : setLoading(false);\n    }\n  }, [token]);\n  useFocusEffect(useCallback(() => {\n    loadData(false);\n  }, [loadData]));\n  const onRefresh = useCallback(() => loadData(true), [loadData]);\n  const newLeads = leads.filter(l => (l.status || '').toUpperCase() === 'NEW').length;\n  const activeJobs = jobs.filter(j => ['SCHEDULED', 'IN_PROGRESS'].includes((j.status || '').toUpperCase())).length;\n  const openTasks = tasks.filter(t => !isTaskCompleted(t.status)).length;\n  const outstandingValue = invoiceSummary?.outstanding || 0;\n  const collectedValue = invoiceSummary?.collected || 0;\n  const overdueCount = invoiceSummary?.overdueCount || 0;\n  const topLeads = leads.slice(0, 3);\n  const topJobs = jobs.slice(0, 3);\n  const nextTasks = tasks.filter(t => !isTaskCompleted(t.status)).slice(0, 3);\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(5)\n      },\n      refreshControl: _jsxDEV(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh,\n        tintColor: palette.primary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 25\n      }, this),\n      children: [_jsxDEV(Text, {\n        style: {\n          color: palette.text,\n          fontSize: typography.h1,\n          fontWeight: '700',\n          marginBottom: spacing(2)\n        },\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          justifyContent: 'space-between'\n        },\n        children: [_jsxDEV(View, {\n          style: {\n            flexBasis: '48%',\n            marginBottom: spacing(2)\n          },\n          children: _jsxDEV(SummaryCard, {\n            title: \"Leads\",\n            value: leads.length,\n            subtitle: `${newLeads} new to triage`,\n            tone: \"info\",\n            onPress: () => navigation.navigate('Leads')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexBasis: '48%',\n            marginBottom: spacing(2)\n          },\n          children: _jsxDEV(SummaryCard, {\n            title: \"Jobs\",\n            value: jobs.length,\n            subtitle: `${activeJobs} active`,\n            tone: \"primary\",\n            onPress: () => navigation.navigate('Jobs')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexBasis: '48%',\n            marginBottom: spacing(2)\n          },\n          children: _jsxDEV(SummaryCard, {\n            title: \"Tasks\",\n            value: openTasks,\n            subtitle: `Open of ${tasks.length}`,\n            tone: \"warning\",\n            onPress: () => navigation.navigate('Jobs')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexBasis: '48%',\n            marginBottom: spacing(2)\n          },\n          children: _jsxDEV(SummaryCard, {\n            title: \"Invoices\",\n            value: formatCurrency(outstandingValue),\n            subtitle: `${overdueCount} overdue | ${formatCurrency(collectedValue)} collected`,\n            tone: \"success\",\n            onPress: () => navigation.navigate('Invoices')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 9\n      }, this), loading && !refreshing ? _jsxDEV(SurfaceCard, {\n        style: {\n          alignItems: 'center',\n          justifyContent: 'center',\n          paddingVertical: spacing(6)\n        },\n        children: [_jsxDEV(ActivityIndicator, {\n          color: palette.primary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 13\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(1.5)\n          },\n          children: \"Loading summary...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 11\n      }, this) : null, _jsxDEV(SectionHeader, {\n        title: \"Next Jobs\",\n        actionLabel: \"View all\",\n        onAction: () => navigation.navigate('Jobs')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: topJobs.length === 0 ? _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: \"No jobs yet. Create one from the Jobs tab.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 13\n        }, this) : topJobs.map((job, idx) => _jsxDEV(View, {\n          style: {\n            marginBottom: idx === topJobs.length - 1 ? 0 : spacing(2.5)\n          },\n          children: [_jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center'\n            },\n            children: [_jsxDEV(Text, {\n              style: {\n                color: palette.text,\n                fontSize: typography.h2,\n                fontWeight: '600'\n              },\n              children: job.name || `Job #${job.id}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 583,\n              columnNumber: 19\n            }, this), _jsxDEV(StatusPill, {\n              status: job.status || 'SCHEDULED'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 584,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 582,\n            columnNumber: 17\n          }, this), job.startDate || job.endDate ? _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.5)\n            },\n            children: [job.startDate ? `Start ${formatDate(job.startDate)}` : '', job.startDate && job.endDate ? ' | ' : '', job.endDate ? `Due ${formatDate(job.endDate)}` : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 587,\n            columnNumber: 19\n          }, this) : null, job.notes ? _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(1)\n            },\n            numberOfLines: 2,\n            children: job.notes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 19\n          }, this) : null, _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              columnGap: spacing(1.5),\n              marginTop: spacing(1.5)\n            },\n            children: [_jsxDEV(QuickAction, {\n              label: \"Open job\",\n              onPress: () => navigation.navigate('JobDetail', {\n                jobId: job.id\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 595,\n              columnNumber: 19\n            }, this), _jsxDEV(QuickAction, {\n              label: \"Tasks\",\n              onPress: () => navigation.navigate('JobDetail', {\n                jobId: job.id,\n                tab: 'tasks'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 596,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 17\n          }, this)]\n        }, job.id || idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 9\n      }, this), _jsxDEV(SectionHeader, {\n        title: \"Hot Leads\",\n        actionLabel: \"Leads\",\n        onAction: () => navigation.navigate('Leads')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: topLeads.length === 0 ? _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: \"No leads yet. Capture leads to keep the funnel full.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 13\n        }, this) : topLeads.map((lead, idx) => _jsxDEV(View, {\n          style: {\n            marginBottom: idx === topLeads.length - 1 ? 0 : spacing(2)\n          },\n          children: [_jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center'\n            },\n            children: [_jsxDEV(Text, {\n              style: {\n                color: palette.text,\n                fontWeight: '600',\n                fontSize: typography.h2\n              },\n              children: [\"Lead #\", lead.id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 611,\n              columnNumber: 19\n            }, this), _jsxDEV(StatusPill, {\n              status: lead.status || 'NEW'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 612,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 17\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.5)\n            },\n            numberOfLines: 3,\n            children: lead.description || 'No scope captured yet.'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 614,\n            columnNumber: 17\n          }, this), _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              columnGap: spacing(1.5),\n              marginTop: spacing(1.5)\n            },\n            children: [_jsxDEV(QuickAction, {\n              label: \"Follow up\",\n              onPress: () => navigation.navigate('EstimateEditor', {\n                leadId: lead.id\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 618,\n              columnNumber: 19\n            }, this), _jsxDEV(QuickAction, {\n              label: \"Convert\",\n              onPress: () => navigation.navigate('Jobs')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 619,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 617,\n            columnNumber: 17\n          }, this)]\n        }, lead.id || idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 604,\n        columnNumber: 9\n      }, this), _jsxDEV(SectionHeader, {\n        title: \"Open Tasks\",\n        actionLabel: \"Jobs\",\n        onAction: () => navigation.navigate('Jobs')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 626,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        children: nextTasks.length === 0 ? _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: \"All clear. Add tasks from a job to keep crews aligned.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 13\n        }, this) : nextTasks.map((task, idx) => _jsxDEV(View, {\n          style: {\n            marginBottom: idx === nextTasks.length - 1 ? 0 : spacing(2)\n          },\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.text,\n              fontWeight: '600'\n            },\n            children: task.title || 'Task'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 633,\n            columnNumber: 17\n          }, this), task.jobId ? _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.25)\n            },\n            children: jobLookup[task.jobId]?.name || `Job #${task.jobId}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 635,\n            columnNumber: 19\n          }, this) : _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.25)\n            },\n            children: \"Unassigned job\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 639,\n            columnNumber: 19\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.5)\n            },\n            children: task.dueDate ? `Due ${formatDate(task.dueDate)}` : 'No due date'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 641,\n            columnNumber: 17\n          }, this), _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              columnGap: spacing(1.5),\n              marginTop: spacing(1.5)\n            },\n            children: [_jsxDEV(QuickAction, {\n              label: \"Mark done\",\n              onPress: () => navigation.navigate('JobDetail', {\n                jobId: task.jobId\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 645,\n              columnNumber: 19\n            }, this), _jsxDEV(QuickAction, {\n              label: \"View job\",\n              onPress: () => navigation.navigate('JobDetail', {\n                jobId: task.jobId\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 649,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 644,\n            columnNumber: 17\n          }, this)]\n        }, task.id || idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 627,\n        columnNumber: 9\n      }, this), lastUpdated ? _jsxDEV(Text, {\n        style: {\n          color: palette.muted,\n          fontSize: typography.small,\n          marginTop: spacing(2),\n          textAlign: 'center'\n        },\n        children: [\"Updated \", lastUpdated.toLocaleTimeString([], {\n          hour: 'numeric',\n          minute: '2-digit'\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 522,\n    columnNumber: 5\n  }, this);\n}\nfunction SignaturePad({\n  onCapturePng\n}) {\n  const [points, setPoints] = useState([]);\n  const [path, setPath] = useState('');\n  const shotRef = useRef(null);\n  return _jsxDEV(ViewShot, {\n    ref: shotRef,\n    options: {\n      format: 'png',\n      quality: 0.9,\n      result: 'base64'\n    },\n    style: {\n      height: 220,\n      borderWidth: 1,\n      backgroundColor: '#fff'\n    },\n    children: _jsxDEV(View, {\n      onStartShouldSetResponder: () => true,\n      onResponderMove: e => {\n        const x = e.nativeEvent.locationX,\n          y = e.nativeEvent.locationY;\n        setPath(p => p + (p ? ` L ${x} ${y}` : ` M ${x} ${y}`));\n      },\n      onResponderRelease: async () => {\n        const base64 = await shotRef.current.capture();\n        onCapturePng && onCapturePng('data:image/png;base64,' + base64);\n      },\n      style: {\n        flex: 1\n      },\n      children: _jsxDEV(Svg, {\n        height: \"100%\",\n        width: \"100%\",\n        children: _jsxDEV(Path, {\n          d: path,\n          stroke: \"black\",\n          strokeWidth: \"2\",\n          fill: \"none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 688,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 688,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 676,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 675,\n    columnNumber: 5\n  }, this);\n}\nfunction SignatureScreen({\n  route,\n  navigation\n}) {\n  const {\n    token\n  } = useAuth();\n  const {\n    estimateId\n  } = route.params;\n  const [sigPng, setSigPng] = useState(null);\n  const save = async () => {\n    if (!sigPng) {\n      Alert.alert('Please sign first');\n      return;\n    }\n    const resp = await api(`/estimates/${estimateId}/approve`, 'POST', {\n      signaturePngUrl: sigPng\n    }, token);\n    Alert.alert('Approved', `Payment link:\n${resp && resp.paymentLink ? resp.paymentLink : 'Unavailable'}`);\n    navigation.goBack();\n  };\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      padding: 16\n    },\n    children: [_jsxDEV(Text, {\n      style: {\n        fontSize: 18,\n        marginBottom: 8\n      },\n      children: [\"Sign Estimate #\", estimateId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 706,\n      columnNumber: 7\n    }, this), _jsxDEV(SignaturePad, {\n      onCapturePng: setSigPng\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 707,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: {\n        height: 12\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 708,\n      columnNumber: 7\n    }, this), _jsxDEV(Button, {\n      title: \"Save Signature\",\n      onPress: save\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 709,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 705,\n    columnNumber: 5\n  }, this);\n}\nfunction UsersAdminScreen() {\n  const {\n    token\n  } = useAuth();\n  const [users, setUsers] = useState([]);\n  const [email, setEmail] = useState('');\n  const [fullName, setFullName] = useState('');\n  const [role, setRole] = useState('TECH');\n  const load = async () => setUsers(await api('/users', 'GET', null, token));\n  useEffect(() => {\n    load();\n  }, []);\n  const invite = async () => {\n    await api('/users', 'POST', {\n      email,\n      fullName,\n      role: normalizeRole(role)\n    }, token);\n    setEmail('');\n    setFullName('');\n    setRole('TECH');\n    load();\n  };\n  const promote = async (id, newRole) => {\n    await api(`/users/${id}`, 'PATCH', {\n      role: normalizeRole(newRole)\n    }, token);\n    load();\n  };\n  const remove = async id => {\n    Alert.alert('Delete user', 'Are you sure?', [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Delete',\n      style: 'destructive',\n      onPress: async () => {\n        await api(`/users/${id}`, 'DELETE', null, token);\n        load();\n      }\n    }]);\n  };\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      padding: 16\n    },\n    children: [_jsxDEV(Text, {\n      style: {\n        fontSize: 18,\n        fontWeight: '600'\n      },\n      children: \"Invite User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 738,\n      columnNumber: 7\n    }, this), _jsxDEV(TextInput, {\n      placeholder: \"Full name\",\n      value: fullName,\n      onChangeText: setFullName,\n      style: {\n        borderWidth: 1,\n        padding: 8,\n        marginVertical: 6\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 739,\n      columnNumber: 7\n    }, this), _jsxDEV(TextInput, {\n      placeholder: \"Email\",\n      value: email,\n      onChangeText: setEmail,\n      autoCapitalize: \"none\",\n      style: {\n        borderWidth: 1,\n        padding: 8,\n        marginVertical: 6\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 740,\n      columnNumber: 7\n    }, this), _jsxDEV(TextInput, {\n      placeholder: \"Role (ADMIN/ESTIMATOR/SUPERVISOR/TECH)\",\n      value: role,\n      onChangeText: setRole,\n      style: {\n        borderWidth: 1,\n        padding: 8,\n        marginVertical: 6\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 741,\n      columnNumber: 7\n    }, this), _jsxDEV(Button, {\n      title: \"Create User\",\n      onPress: invite\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 742,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: {\n        height: 16\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 743,\n      columnNumber: 7\n    }, this), _jsxDEV(FlatList, {\n      data: users,\n      keyExtractor: u => String(u.id),\n      renderItem: ({\n        item\n      }) => _jsxDEV(View, {\n        style: {\n          padding: 12,\n          borderWidth: 1,\n          marginBottom: 8\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            fontWeight: '600'\n          },\n          children: item.fullName || item.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 746,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          children: item.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 747,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          children: [\"Role: \", item.role]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 748,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            gap: 8,\n            marginTop: 8,\n            flexWrap: 'wrap'\n          },\n          children: [_jsxDEV(Button, {\n            title: \"Admin\",\n            onPress: () => promote(item.id, 'ADMIN')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 750,\n            columnNumber: 13\n          }, this), _jsxDEV(Button, {\n            title: \"Estimator\",\n            onPress: () => promote(item.id, 'ESTIMATOR')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 751,\n            columnNumber: 13\n          }, this), _jsxDEV(Button, {\n            title: \"Supervisor\",\n            onPress: () => promote(item.id, 'SUPERVISOR')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 752,\n            columnNumber: 13\n          }, this), _jsxDEV(Button, {\n            title: \"Tech\",\n            onPress: () => promote(item.id, 'TECH')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 753,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: {\n              width: 8\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 754,\n            columnNumber: 13\n          }, this), _jsxDEV(Button, {\n            title: \"Delete\",\n            color: \"#c00\",\n            onPress: () => remove(item.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 755,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 749,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 745,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 744,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 737,\n    columnNumber: 5\n  }, this);\n}\nfunction InvoicesScreen({\n  navigation\n}) {\n  const {\n    token,\n    user\n  } = useAuth();\n  const [loading, setLoading] = useState(true);\n  const [refreshing, setRefreshing] = useState(false);\n  const [summary, setSummary] = useState(null);\n  const [invoices, setInvoices] = useState([]);\n  const [filter, setFilter] = useState('ALL');\n  const load = useCallback(async (isRefresh = false) => {\n    if (!token) return;\n    isRefresh ? setRefreshing(true) : setLoading(true);\n    try {\n      const [summaryData, list] = await Promise.all([api('/invoices/summary', 'GET', null, token), api('/invoices', 'GET', null, token)]);\n      setSummary(summaryData);\n      setInvoices(list);\n    } catch (e) {} finally {\n      isRefresh ? setRefreshing(false) : setLoading(false);\n    }\n  }, [token]);\n  useFocusEffect(useCallback(() => {\n    if (user?.role === 'ADMIN') {\n      load(false);\n    }\n  }, [load, user?.role]));\n  const onRefresh = useCallback(() => load(true), [load]);\n  if (user?.role !== 'ADMIN') {\n    return _jsxDEV(SafeAreaView, {\n      style: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: palette.background\n      },\n      children: _jsxDEV(Text, {\n        style: {\n          color: palette.muted\n        },\n        children: \"Invoices are only available to admin users.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 800,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 799,\n      columnNumber: 7\n    }, this);\n  }\n  const filters = [{\n    key: 'ALL',\n    label: 'All'\n  }, {\n    key: 'OUTSTANDING',\n    label: 'Outstanding'\n  }, {\n    key: 'PAID',\n    label: 'Paid'\n  }];\n  const filteredInvoices = invoices.filter(inv => {\n    if (filter === 'ALL') return true;\n    const status = (inv.status || 'DRAFT').toUpperCase();\n    if (filter === 'PAID') return status === 'PAID';\n    return !['PAID', 'VOID'].includes(status);\n  });\n  const outstanding = formatCurrency(summary?.outstanding || 0);\n  const collected = formatCurrency(summary?.collected || 0);\n  const drafts = formatCurrency(summary?.draftAmount || 0);\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(6)\n      },\n      refreshControl: _jsxDEV(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh,\n        tintColor: palette.primary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 826,\n        columnNumber: 25\n      }, this),\n      children: [_jsxDEV(Text, {\n        style: {\n          color: palette.text,\n          fontSize: typography.h1,\n          fontWeight: '700',\n          marginBottom: spacing(2)\n        },\n        children: \"Invoices\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 828,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: {\n          color: palette.muted,\n          marginBottom: spacing(2)\n        },\n        children: \"Track billing health and spot overdue balances.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 829,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          columnGap: spacing(2),\n          rowGap: spacing(2),\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(View, {\n          style: {\n            flexBasis: '48%',\n            minWidth: 160\n          },\n          children: _jsxDEV(SummaryCard, {\n            title: \"Outstanding\",\n            value: outstanding,\n            subtitle: `${summary?.overdueCount || 0} overdue`,\n            tone: \"warning\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 832,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 831,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexBasis: '48%',\n            minWidth: 160\n          },\n          children: _jsxDEV(SummaryCard, {\n            title: \"Collected\",\n            value: collected,\n            subtitle: \"All payments to date\",\n            tone: \"success\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 835,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 834,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexBasis: '48%',\n            minWidth: 160\n          },\n          children: _jsxDEV(SummaryCard, {\n            title: \"Drafts\",\n            value: drafts,\n            subtitle: `${summary?.totalCount || 0} total invoices`,\n            tone: \"info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 838,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 837,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 830,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          columnGap: spacing(1),\n          rowGap: spacing(1),\n          marginBottom: spacing(2)\n        },\n        children: filters.map(f => {\n          const selected = f.key === filter;\n          return _jsxDEV(TouchableOpacity, {\n            onPress: () => setFilter(f.key),\n            activeOpacity: 0.85,\n            style: {\n              paddingHorizontal: spacing(2),\n              paddingVertical: spacing(1),\n              borderRadius: 999,\n              borderWidth: 1,\n              borderColor: selected ? palette.primary : palette.border,\n              backgroundColor: selected ? '#d9f2ed' : palette.surface\n            },\n            children: _jsxDEV(Text, {\n              style: {\n                color: selected ? palette.primaryStrong : palette.muted,\n                fontWeight: '600',\n                fontSize: typography.small\n              },\n              children: f.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 859,\n              columnNumber: 17\n            }, this)\n          }, f.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 846,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 842,\n        columnNumber: 9\n      }, this), loading ? _jsxDEV(SurfaceCard, {\n        style: {\n          alignItems: 'center',\n          paddingVertical: spacing(6)\n        },\n        children: [_jsxDEV(ActivityIndicator, {\n          color: palette.primary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 867,\n          columnNumber: 13\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(1.5)\n          },\n          children: \"Loading invoices...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 868,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 866,\n        columnNumber: 11\n      }, this) : filteredInvoices.length === 0 ? _jsxDEV(SurfaceCard, {\n        children: _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: \"No invoices match this filter.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 872,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 871,\n        columnNumber: 11\n      }, this) : filteredInvoices.map(inv => {\n        const payments = (inv.Payments || []).reduce((sum, p) => sum + Number(p.amount || 0), 0);\n        const amount = Number(inv.amount || 0);\n        const balance = Math.max(amount - payments, 0);\n        const statusKey = (inv.status || 'DRAFT').toUpperCase();\n        return _jsxDEV(SurfaceCard, {\n          children: [_jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center'\n            },\n            children: [_jsxDEV(View, {\n              children: [_jsxDEV(Text, {\n                style: {\n                  color: palette.text,\n                  fontSize: typography.h2,\n                  fontWeight: '600'\n                },\n                children: [\"Invoice #\", inv.number || inv.id]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 884,\n                columnNumber: 21\n              }, this), _jsxDEV(Text, {\n                style: {\n                  color: palette.muted,\n                  marginTop: spacing(0.5)\n                },\n                children: [\"Issued \", inv.issuedAt ? formatDate(inv.issuedAt) : 'TBD']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 885,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 883,\n              columnNumber: 19\n            }, this), _jsxDEV(StatusPill, {\n              status: statusKey\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 887,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 882,\n            columnNumber: 17\n          }, this), _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              marginTop: spacing(1.5)\n            },\n            children: [_jsxDEV(View, {\n              children: [_jsxDEV(Text, {\n                style: {\n                  color: palette.muted,\n                  fontSize: typography.small\n                },\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 891,\n                columnNumber: 21\n              }, this), _jsxDEV(Text, {\n                style: {\n                  color: palette.text,\n                  fontWeight: '600'\n                },\n                children: formatCurrency(amount)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 892,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 890,\n              columnNumber: 19\n            }, this), _jsxDEV(View, {\n              children: [_jsxDEV(Text, {\n                style: {\n                  color: palette.muted,\n                  fontSize: typography.small\n                },\n                children: \"Collected\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 895,\n                columnNumber: 21\n              }, this), _jsxDEV(Text, {\n                style: {\n                  color: palette.text\n                },\n                children: formatCurrency(payments)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 896,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 894,\n              columnNumber: 19\n            }, this), _jsxDEV(View, {\n              children: [_jsxDEV(Text, {\n                style: {\n                  color: palette.muted,\n                  fontSize: typography.small\n                },\n                children: \"Balance\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 899,\n                columnNumber: 21\n              }, this), _jsxDEV(Text, {\n                style: {\n                  color: balance > 0 ? palette.primaryStrong : palette.muted,\n                  fontWeight: '600'\n                },\n                children: formatCurrency(balance)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 900,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 898,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 889,\n            columnNumber: 17\n          }, this), inv.dueAt ? _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(1)\n            },\n            children: [\"Due \", formatDate(inv.dueAt)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 904,\n            columnNumber: 19\n          }, this) : null, _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              flexWrap: 'wrap',\n              columnGap: spacing(1),\n              rowGap: spacing(1),\n              marginTop: spacing(2)\n            },\n            children: [inv.jobId ? _jsxDEV(QuickAction, {\n              label: \"View job\",\n              onPress: () => navigation.navigate('JobDetail', {\n                jobId: inv.jobId\n              }),\n              tone: \"muted\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 907,\n              columnNumber: 32\n            }, this) : null, _jsxDEV(QuickAction, {\n              label: \"Record payment\",\n              tone: \"success\",\n              onPress: () => Alert.alert('Coming soon', 'Payment logging will land shortly.')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 908,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 906,\n            columnNumber: 17\n          }, this)]\n        }, inv.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 881,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 824,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 823,\n    columnNumber: 5\n  }, this);\n}\nfunction JobsKanbanScreen({\n  navigation\n}) {\n  const {\n    token\n  } = useAuth();\n  const [jobs, setJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [refreshing, setRefreshing] = useState(false);\n  const [newJobName, setNewJobName] = useState('');\n  const [newJobStartDate, setNewJobStartDate] = useState('');\n  const [newJobDueDate, setNewJobDueDate] = useState('');\n  const [newJobNotes, setNewJobNotes] = useState('');\n  const [newCustomerName, setNewCustomerName] = useState('');\n  const [newCustomerPhone, setNewCustomerPhone] = useState('');\n  const [newCustomerEmail, setNewCustomerEmail] = useState('');\n  const [newAddressLine1, setNewAddressLine1] = useState('');\n  const [newAddressLine2, setNewAddressLine2] = useState('');\n  const [newCity, setNewCity] = useState('');\n  const [newStateCode, setNewStateCode] = useState('');\n  const [newZip, setNewZip] = useState('');\n  const [jobFormTab, setJobFormTab] = useState('BASICS');\n  const statusOrder = ['SCHEDULED', 'IN_PROGRESS', 'ON_HOLD', 'DONE', 'COMPLETE', 'CANCELLED'];\n  const load = useCallback(async (isRefresh = false) => {\n    isRefresh ? setRefreshing(true) : setLoading(true);\n    try {\n      const data = await api('/jobs', 'GET', null, token);\n      setJobs(data);\n      db.transaction(tx => {\n        tx.executeSql && tx.executeSql('DELETE FROM jobs_cache;');\n        data.forEach(j => tx.executeSql && tx.executeSql('INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)', [j.id, j.name || '', j.status || 'SCHEDULED', j.startDate || '', j.endDate || '', j.notes || '']));\n      });\n    } catch (e) {\n      db.transaction(tx => tx.executeSql && tx.executeSql('SELECT id, name, status, startDate, endDate, notes FROM jobs_cache', [], (_, {\n        rows\n      }) => setJobs(rows._array || [])));\n    } finally {\n      isRefresh ? setRefreshing(false) : setLoading(false);\n    }\n  }, [token]);\n  useFocusEffect(useCallback(() => {\n    load(false);\n  }, [load]));\n  const onRefresh = useCallback(() => load(true), [load]);\n  const resetForm = () => {\n    setNewJobName('');\n    setNewJobStartDate('');\n    setNewJobDueDate('');\n    setNewJobNotes('');\n    setNewCustomerName('');\n    setNewCustomerPhone('');\n    setNewCustomerEmail('');\n    setNewAddressLine1('');\n    setNewAddressLine2('');\n    setNewCity('');\n    setNewStateCode('');\n    setNewZip('');\n    setJobFormTab('BASICS');\n  };\n  const createJob = async () => {\n    if (!newJobName.trim()) {\n      Alert.alert('Missing info', 'Please add a job name.');\n      setJobFormTab('BASICS');\n      return;\n    }\n    const hasCustomer = [newCustomerName, newCustomerPhone, newCustomerEmail].some(v => v && v.trim());\n    const hasAddress = [newAddressLine1, newCity, newStateCode, newZip].some(v => v && v.trim());\n    const payload = {\n      name: newJobName.trim(),\n      status: 'SCHEDULED',\n      startDate: newJobStartDate || null,\n      endDate: newJobDueDate || null,\n      notes: newJobNotes.trim() || null\n    };\n    if (hasCustomer) {\n      payload.customer = {\n        name: newCustomerName.trim(),\n        phone: newCustomerPhone.trim(),\n        email: newCustomerEmail.trim(),\n        billingAddress: newAddressLine1 ? `${newAddressLine1}${newAddressLine2 ? `\n${newAddressLine2}` : ''}${newCity ? `\n${newCity}, ${newStateCode} ${newZip}` : ''}` : null\n      };\n    }\n    if (hasAddress) {\n      payload.jobsite = {\n        addressLine1: newAddressLine1.trim(),\n        addressLine2: newAddressLine2.trim(),\n        city: newCity.trim(),\n        state: newStateCode.trim(),\n        zip: newZip.trim()\n      };\n    }\n    try {\n      const created = await api('/jobs', 'POST', payload, token);\n      setJobs(prev => [created, ...prev]);\n      db.transaction(tx => tx.executeSql && tx.executeSql('INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)', [created.id, created.name || '', created.status || 'SCHEDULED', created.startDate || '', created.endDate || '', created.notes || '']));\n      resetForm();\n      Alert.alert('Job created', `Job #${created.id} ready to schedule.`);\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to create job');\n    }\n  };\n  const updateJobStatus = async (id, status) => {\n    try {\n      const updated = await api(`/jobs/${id}`, 'PATCH', {\n        status\n      }, token);\n      setJobs(prev => prev.map(job => job.id === id ? updated : job));\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to update job status');\n    }\n  };\n  const removeJob = async id => {\n    Alert.alert('Delete Job', `Delete job #${id}?`, [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Delete',\n      style: 'destructive',\n      onPress: async () => {\n        try {\n          await api(`/jobs/${id}`, 'DELETE', null, token);\n          setJobs(prev => prev.filter(job => job.id !== id));\n          db.transaction(tx => tx.executeSql && tx.executeSql('DELETE FROM jobs_cache WHERE id=?', [id]));\n        } catch (e) {\n          Alert.alert('Error', e.message || 'Unable to delete job');\n        }\n      }\n    }]);\n  };\n  const sortedJobs = useMemo(() => {\n    const normalize = status => (status || 'SCHEDULED').toUpperCase();\n    const rank = status => {\n      const key = normalize(status);\n      const idx = statusOrder.indexOf(key);\n      return idx === -1 ? statusOrder.length : idx;\n    };\n    const parseDateSafe = value => {\n      if (!value) return null;\n      const d = new Date(value);\n      return Number.isNaN(d.getTime()) ? null : d;\n    };\n    return [...jobs].sort((a, b) => {\n      const statusDiff = rank(a.status) - rank(b.status);\n      if (statusDiff !== 0) return statusDiff;\n      const startA = parseDateSafe(a.startDate);\n      const startB = parseDateSafe(b.startDate);\n      if (startA && startB) return startA - startB;\n      if (startA) return -1;\n      if (startB) return 1;\n      return (b.id || 0) - (a.id || 0);\n    });\n  }, [jobs, statusOrder]);\n  const groupedJobs = useMemo(() => {\n    const groups = [];\n    let currentStatus = null;\n    sortedJobs.forEach(job => {\n      const statusKey = (job.status || 'SCHEDULED').toUpperCase();\n      if (statusKey !== currentStatus) {\n        groups.push({\n          status: statusKey,\n          jobs: [job]\n        });\n        currentStatus = statusKey;\n      } else {\n        groups[groups.length - 1].jobs.push(job);\n      }\n    });\n    return groups;\n  }, [sortedJobs]);\n  const statusLabel = status => {\n    const key = (status || 'SCHEDULED').toUpperCase();\n    return pillTone[key]?.label || key.charAt(0) + key.slice(1).toLowerCase();\n  };\n  const quickStatusActions = [{\n    label: 'Start job',\n    value: 'IN_PROGRESS',\n    tone: 'primary'\n  }, {\n    label: 'Pause',\n    value: 'ON_HOLD',\n    tone: 'warning'\n  }, {\n    label: 'Wrap up',\n    value: 'DONE',\n    tone: 'success'\n  }];\n  const inputStyle = {\n    borderWidth: 1,\n    borderColor: palette.border,\n    borderRadius: 12,\n    paddingHorizontal: spacing(1.5),\n    paddingVertical: spacing(1.25),\n    backgroundColor: palette.surfaceMuted,\n    color: palette.text,\n    fontSize: typography.body,\n    marginBottom: spacing(1.5)\n  };\n  const jobTabs = [{\n    key: 'BASICS',\n    label: 'Basics'\n  }, {\n    key: 'CUSTOMER',\n    label: 'Customer'\n  }, {\n    key: 'JOBSITE',\n    label: 'Jobsite'\n  }, {\n    key: 'NOTES',\n    label: 'Notes'\n  }];\n  const renderJobFormFields = () => {\n    if (jobFormTab === 'BASICS') {\n      return _jsxDEV(View, {\n        children: [_jsxDEV(TextInput, {\n          placeholder: \"Job name\",\n          placeholderTextColor: palette.muted,\n          value: newJobName,\n          onChangeText: setNewJobName,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1136,\n          columnNumber: 11\n        }, this), _jsxDEV(DateInputField, {\n          value: newJobStartDate,\n          onChange: setNewJobStartDate,\n          placeholder: \"Start date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1143,\n          columnNumber: 11\n        }, this), _jsxDEV(DateInputField, {\n          value: newJobDueDate,\n          onChange: setNewJobDueDate,\n          placeholder: \"Due date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1148,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1135,\n        columnNumber: 9\n      }, this);\n    }\n    if (jobFormTab === 'CUSTOMER') {\n      return _jsxDEV(View, {\n        children: [_jsxDEV(TextInput, {\n          placeholder: \"Customer name\",\n          placeholderTextColor: palette.muted,\n          value: newCustomerName,\n          onChangeText: setNewCustomerName,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1159,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Phone\",\n          placeholderTextColor: palette.muted,\n          keyboardType: \"phone-pad\",\n          value: newCustomerPhone,\n          onChangeText: setNewCustomerPhone,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1166,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Email\",\n          placeholderTextColor: palette.muted,\n          keyboardType: \"email-address\",\n          autoCapitalize: \"none\",\n          value: newCustomerEmail,\n          onChangeText: setNewCustomerEmail,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1158,\n        columnNumber: 9\n      }, this);\n    }\n    if (jobFormTab === 'JOBSITE') {\n      return _jsxDEV(View, {\n        children: [_jsxDEV(TextInput, {\n          placeholder: \"Address line 1\",\n          placeholderTextColor: palette.muted,\n          value: newAddressLine1,\n          onChangeText: setNewAddressLine1,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1189,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Address line 2\",\n          placeholderTextColor: palette.muted,\n          value: newAddressLine2,\n          onChangeText: setNewAddressLine2,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1196,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            columnGap: spacing(1.5)\n          },\n          children: [_jsxDEV(View, {\n            style: {\n              flex: 1\n            },\n            children: _jsxDEV(TextInput, {\n              placeholder: \"City\",\n              placeholderTextColor: palette.muted,\n              value: newCity,\n              onChangeText: setNewCity,\n              style: [inputStyle, {\n                marginBottom: 0\n              }]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1205,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1204,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: {\n              width: 80\n            },\n            children: _jsxDEV(TextInput, {\n              placeholder: \"State\",\n              placeholderTextColor: palette.muted,\n              value: newStateCode,\n              onChangeText: setNewStateCode,\n              style: [inputStyle, {\n                marginBottom: 0\n              }]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1214,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1213,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: {\n              width: 100\n            },\n            children: _jsxDEV(TextInput, {\n              placeholder: \"ZIP\",\n              placeholderTextColor: palette.muted,\n              value: newZip,\n              onChangeText: setNewZip,\n              style: [inputStyle, {\n                marginBottom: 0\n              }]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1223,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1222,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1203,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1188,\n        columnNumber: 9\n      }, this);\n    }\n    return _jsxDEV(TextInput, {\n      placeholder: \"Internal notes\",\n      placeholderTextColor: palette.muted,\n      value: newJobNotes,\n      onChangeText: setNewJobNotes,\n      multiline: true,\n      style: [inputStyle, {\n        minHeight: 96,\n        textAlignVertical: 'top'\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1236,\n      columnNumber: 7\n    }, this);\n  };\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(4)\n      },\n      refreshControl: _jsxDEV(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh,\n        tintColor: palette.primary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1251,\n        columnNumber: 25\n      }, this),\n      children: [_jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3),\n          padding: spacing(2.5)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontSize: typography.h2,\n            fontWeight: '700',\n            marginBottom: spacing(2)\n          },\n          children: \"Create job\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1254,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            columnGap: spacing(1),\n            rowGap: spacing(1.5),\n            marginBottom: spacing(2)\n          },\n          children: jobTabs.map(tab => {\n            const selected = tab.key === jobFormTab;\n            return _jsxDEV(TouchableOpacity, {\n              onPress: () => setJobFormTab(tab.key),\n              activeOpacity: 0.85,\n              style: {\n                paddingHorizontal: spacing(2),\n                paddingVertical: spacing(1),\n                borderRadius: 999,\n                borderWidth: 1,\n                borderColor: selected ? palette.primary : palette.border,\n                backgroundColor: selected ? '#d9f2ed' : palette.surface\n              },\n              children: _jsxDEV(Text, {\n                style: {\n                  color: selected ? palette.primaryStrong : palette.muted,\n                  fontWeight: '600',\n                  fontSize: typography.small\n                },\n                children: tab.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1272,\n                columnNumber: 19\n              }, this)\n            }, tab.key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1259,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1255,\n          columnNumber: 11\n        }, this), renderJobFormFields(), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginTop: spacing(2)\n          },\n          children: [_jsxDEV(QuickAction, {\n            label: \"Reset\",\n            tone: \"muted\",\n            onPress: resetForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1281,\n            columnNumber: 13\n          }, this), _jsxDEV(TouchableOpacity, {\n            onPress: createJob,\n            activeOpacity: 0.85,\n            style: {\n              backgroundColor: palette.primary,\n              paddingHorizontal: spacing(2.5),\n              paddingVertical: spacing(1.5),\n              borderRadius: 12\n            },\n            children: _jsxDEV(Text, {\n              style: {\n                color: '#fff',\n                fontWeight: '700'\n              },\n              children: \"Create job\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1287,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1282,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1280,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1253,\n        columnNumber: 9\n      }, this), loading && !refreshing && jobs.length === 0 ? _jsxDEV(SurfaceCard, {\n        style: {\n          alignItems: 'center',\n          paddingVertical: spacing(6),\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(ActivityIndicator, {\n          color: palette.primary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1294,\n          columnNumber: 13\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(1.5)\n          },\n          children: \"Loading jobs...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1295,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1293,\n        columnNumber: 11\n      }, this) : null, groupedJobs.length === 0 ? _jsxDEV(SurfaceCard, {\n        children: _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: \"No jobs yet. Convert a lead or add a job to get started.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1301,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1300,\n        columnNumber: 11\n      }, this) : groupedJobs.map(group => _jsxDEV(View, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontWeight: '700',\n            fontSize: typography.small,\n            textTransform: 'uppercase',\n            marginBottom: spacing(1)\n          },\n          children: statusLabel(group.status)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1306,\n          columnNumber: 15\n        }, this), group.jobs.map(job => {\n          const customer = job.Customer || {};\n          const jobsite = job.Jobsite || {};\n          const addressParts = [jobsite.addressLine1, jobsite.addressLine2, [jobsite.city, jobsite.state].filter(Boolean).join(', '), jobsite.zip].filter(Boolean);\n          const address = addressParts.join(', ');\n          const statusKey = (job.status || 'SCHEDULED').toUpperCase();\n          return _jsxDEV(SurfaceCard, {\n            style: {\n              marginBottom: spacing(1.5)\n            },\n            children: [_jsxDEV(View, {\n              style: {\n                flexDirection: 'row',\n                justifyContent: 'space-between',\n                alignItems: 'center'\n              },\n              children: [_jsxDEV(Text, {\n                style: {\n                  color: palette.text,\n                  fontSize: typography.h2,\n                  fontWeight: '600'\n                },\n                children: job.name || `Job #${job.id}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1323,\n                columnNumber: 23\n              }, this), _jsxDEV(StatusPill, {\n                status: statusKey\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1324,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1322,\n              columnNumber: 21\n            }, this), job.startDate || job.endDate ? _jsxDEV(Text, {\n              style: {\n                color: palette.muted,\n                marginTop: spacing(0.75)\n              },\n              children: [job.startDate ? `Start ${formatDate(job.startDate)}` : null, job.endDate ? `Due ${formatDate(job.endDate)}` : null].filter(Boolean).join(' | ')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1327,\n              columnNumber: 23\n            }, this) : null, customer.name ? _jsxDEV(Text, {\n              style: {\n                color: palette.text,\n                fontWeight: '600',\n                marginTop: spacing(1)\n              },\n              children: customer.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1331,\n              columnNumber: 38\n            }, this) : null, customer.phone ? _jsxDEV(Text, {\n              style: {\n                color: palette.muted\n              },\n              children: customer.phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1332,\n              columnNumber: 39\n            }, this) : null, customer.email ? _jsxDEV(Text, {\n              style: {\n                color: palette.muted\n              },\n              children: customer.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1333,\n              columnNumber: 39\n            }, this) : null, address ? _jsxDEV(Text, {\n              style: {\n                color: palette.muted,\n                marginTop: spacing(1)\n              },\n              children: address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1334,\n              columnNumber: 32\n            }, this) : null, job.notes ? _jsxDEV(Text, {\n              style: {\n                color: palette.muted,\n                marginTop: spacing(1)\n              },\n              numberOfLines: 3,\n              children: job.notes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1335,\n              columnNumber: 34\n            }, this) : null, _jsxDEV(View, {\n              style: {\n                flexDirection: 'row',\n                flexWrap: 'wrap',\n                columnGap: spacing(1),\n                rowGap: spacing(1),\n                marginTop: spacing(2)\n              },\n              children: [_jsxDEV(QuickAction, {\n                label: \"View job\",\n                onPress: () => navigation.navigate('JobDetail', {\n                  jobId: job.id\n                }),\n                tone: \"muted\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1337,\n                columnNumber: 23\n              }, this), quickStatusActions.map(action => action.value === statusKey ? null : _jsxDEV(QuickAction, {\n                label: action.label,\n                tone: action.tone,\n                onPress: () => updateJobStatus(job.id, action.value)\n              }, action.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1340,\n                columnNumber: 27\n              }, this)), _jsxDEV(QuickAction, {\n                label: \"Delete\",\n                tone: \"danger\",\n                onPress: () => removeJob(job.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1348,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1336,\n              columnNumber: 21\n            }, this)]\n          }, job.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1321,\n            columnNumber: 19\n          }, this);\n        })]\n      }, group.status, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1305,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1249,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1248,\n    columnNumber: 5\n  }, this);\n}\nfunction JobDetailScreen({\n  route,\n  navigation\n}) {\n  const {\n    jobId\n  } = route.params;\n  const {\n    token,\n    user\n  } = useAuth();\n  const [jobName, setJobName] = useState('');\n  const [jobStartDate, setJobStartDate] = useState('');\n  const [jobEndDate, setJobEndDate] = useState('');\n  const [jobNotes, setJobNotes] = useState('');\n  const [jobCustomerName, setJobCustomerName] = useState('');\n  const [jobCustomerPhone, setJobCustomerPhone] = useState('');\n  const [jobCustomerEmail, setJobCustomerEmail] = useState('');\n  const [jobAddressLine1, setJobAddressLine1] = useState('');\n  const [jobAddressLine2, setJobAddressLine2] = useState('');\n  const [jobCity, setJobCity] = useState('');\n  const [jobStateCode, setJobStateCode] = useState('');\n  const [jobZip, setJobZip] = useState('');\n  const [changeOrders, setCO] = useState([]);\n  const [title, setTitle] = useState('');\n  const [amountDelta, setAmountDelta] = useState('0');\n  const loadCO = useCallback(async () => {\n    setCO(await api(`/change-orders/job/${jobId}`, 'GET', null, token));\n  }, [jobId, token]);\n  const loadJob = useCallback(async () => {\n    try {\n      const j = await api(`/jobs/${jobId}`, 'GET', null, token);\n      setJobName(j.name || '');\n      setJobStartDate(j.startDate || '');\n      setJobEndDate(j.endDate || '');\n      setJobNotes(j.notes || '');\n      const customer = j.Customer || {};\n      const jobsite = j.Jobsite || {};\n      setJobCustomerName(customer.name || '');\n      setJobCustomerPhone(customer.phone || '');\n      setJobCustomerEmail(customer.email || '');\n      setJobAddressLine1(jobsite.addressLine1 || '');\n      setJobAddressLine2(jobsite.addressLine2 || '');\n      setJobCity(jobsite.city || '');\n      setJobStateCode(jobsite.state || '');\n      setJobZip(jobsite.zip || '');\n    } catch (e) {}\n  }, [jobId, token]);\n  useEffect(() => {\n    loadJob();\n    loadCO();\n  }, [loadJob, loadCO]);\n  const addCO = async () => {\n    if (!title.trim()) {\n      Alert.alert('Missing info', 'Add a title for the change order.');\n      return;\n    }\n    await api(`/change-orders/job/${jobId}`, 'POST', {\n      title: title.trim(),\n      amountDelta: parseFloat(amountDelta) || 0\n    }, token);\n    setTitle('');\n    setAmountDelta('0');\n    loadCO();\n  };\n  const saveJobDetails = async () => {\n    try {\n      await api(`/jobs/${jobId}`, 'PATCH', {\n        name: jobName,\n        startDate: jobStartDate || null,\n        endDate: jobEndDate || null,\n        notes: jobNotes,\n        customer: {\n          name: jobCustomerName,\n          phone: jobCustomerPhone,\n          email: jobCustomerEmail,\n          billingAddress: jobAddressLine1 ? `${jobAddressLine1}${jobAddressLine2 ? `\n${jobAddressLine2}` : ''}${jobCity ? `\n${jobCity}, ${jobStateCode} ${jobZip}` : ''}` : null\n        },\n        jobsite: {\n          addressLine1: jobAddressLine1,\n          addressLine2: jobAddressLine2,\n          city: jobCity,\n          state: jobStateCode,\n          zip: jobZip\n        }\n      }, token);\n      Alert.alert('Saved', 'Job details updated.');\n      loadJob();\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to save job');\n    }\n  };\n  const deleteJob = () => {\n    Alert.alert('Delete job', `Delete job #${jobId}?`, [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Delete',\n      style: 'destructive',\n      onPress: async () => {\n        try {\n          await api(`/jobs/${jobId}`, 'DELETE', null, token);\n          db.transaction(tx => tx.executeSql('DELETE FROM jobs_cache WHERE id=?', [jobId]));\n          Alert.alert('Deleted', 'Job removed.');\n          navigation.navigate('Tabs', {\n            screen: 'Jobs'\n          });\n        } catch (e) {\n          Alert.alert('Error', e.message || 'Unable to delete job');\n        }\n      }\n    }]);\n  };\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: {\n        padding: 16,\n        paddingBottom: 32\n      },\n      children: [_jsxDEV(Text, {\n        style: {\n          fontSize: 18,\n          fontWeight: '600',\n          marginBottom: 8\n        },\n        children: [\"Job #\", jobId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1456,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: {\n          fontWeight: '600',\n          marginBottom: 6\n        },\n        children: \"Job Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1457,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        placeholder: \"Job name\",\n        value: jobName,\n        onChangeText: setJobName,\n        style: {\n          borderWidth: 1,\n          padding: 8,\n          marginBottom: 6\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1458,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          gap: 8\n        },\n        children: [_jsxDEV(DateInputField, {\n          value: jobStartDate,\n          onChange: setJobStartDate,\n          placeholder: \"Start date\",\n          style: {\n            flex: 1,\n            marginBottom: 0\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1460,\n          columnNumber: 11\n        }, this), _jsxDEV(DateInputField, {\n          value: jobEndDate,\n          onChange: setJobEndDate,\n          placeholder: \"End date\",\n          style: {\n            flex: 1,\n            marginBottom: 0\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1461,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1459,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        placeholder: \"Notes / scope\",\n        value: jobNotes,\n        onChangeText: setJobNotes,\n        multiline: true,\n        style: {\n          borderWidth: 1,\n          padding: 8,\n          marginTop: 6,\n          minHeight: 80\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1463,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: {\n          fontWeight: '600',\n          marginTop: 16\n        },\n        children: \"Customer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1465,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        placeholder: \"Name\",\n        value: jobCustomerName,\n        onChangeText: setJobCustomerName,\n        style: {\n          borderWidth: 1,\n          padding: 8,\n          marginBottom: 6\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1466,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        placeholder: \"Phone\",\n        value: jobCustomerPhone,\n        onChangeText: setJobCustomerPhone,\n        keyboardType: \"phone-pad\",\n        style: {\n          borderWidth: 1,\n          padding: 8,\n          marginBottom: 6\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1467,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        placeholder: \"Email\",\n        value: jobCustomerEmail,\n        onChangeText: setJobCustomerEmail,\n        keyboardType: \"email-address\",\n        style: {\n          borderWidth: 1,\n          padding: 8,\n          marginBottom: 6\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1468,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: {\n          fontWeight: '600',\n          marginTop: 16\n        },\n        children: \"Job Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1470,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        placeholder: \"Address line 1\",\n        value: jobAddressLine1,\n        onChangeText: setJobAddressLine1,\n        style: {\n          borderWidth: 1,\n          padding: 8,\n          marginBottom: 6\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1471,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        placeholder: \"Address line 2\",\n        value: jobAddressLine2,\n        onChangeText: setJobAddressLine2,\n        style: {\n          borderWidth: 1,\n          padding: 8,\n          marginBottom: 6\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1472,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          gap: 8\n        },\n        children: [_jsxDEV(TextInput, {\n          placeholder: \"City\",\n          value: jobCity,\n          onChangeText: setJobCity,\n          style: {\n            flex: 1,\n            borderWidth: 1,\n            padding: 8\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1474,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"State\",\n          value: jobStateCode,\n          onChangeText: setJobStateCode,\n          style: {\n            width: 80,\n            borderWidth: 1,\n            padding: 8\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1475,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"ZIP\",\n          value: jobZip,\n          onChangeText: setJobZip,\n          style: {\n            width: 100,\n            borderWidth: 1,\n            padding: 8\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1476,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1473,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          marginTop: 12\n        },\n        children: _jsxDEV(Button, {\n          title: \"Save details\",\n          onPress: saveJobDetails\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1479,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1478,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          marginTop: 12\n        },\n        children: _jsxDEV(Button, {\n          color: \"#d11a2a\",\n          title: \"Delete job\",\n          onPress: deleteJob\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1482,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1481,\n        columnNumber: 9\n      }, this), (user?.role === 'ADMIN' || user?.role === 'SUPERVISOR' || user?.role === 'ESTIMATOR') && _jsxDEV(View, {\n        style: {\n          marginVertical: 16\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            fontWeight: '600'\n          },\n          children: \"New Change Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1487,\n          columnNumber: 13\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Title\",\n          value: title,\n          onChangeText: setTitle,\n          style: {\n            borderWidth: 1,\n            padding: 8,\n            marginVertical: 6\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1488,\n          columnNumber: 13\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Amount $\",\n          value: amountDelta,\n          onChangeText: setAmountDelta,\n          keyboardType: \"decimal-pad\",\n          style: {\n            borderWidth: 1,\n            padding: 8,\n            marginVertical: 6\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1489,\n          columnNumber: 13\n        }, this), _jsxDEV(Button, {\n          title: \"Add Change Order\",\n          onPress: addCO\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1490,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1486,\n        columnNumber: 11\n      }, this), _jsxDEV(Text, {\n        style: {\n          fontWeight: '600',\n          marginTop: 12\n        },\n        children: \"Change Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1493,\n        columnNumber: 9\n      }, this), changeOrders.length === 0 ? _jsxDEV(Text, {\n        style: {\n          marginVertical: 6\n        },\n        children: \"No change orders yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1495,\n        columnNumber: 11\n      }, this) : changeOrders.map(item => _jsxDEV(View, {\n        style: {\n          borderWidth: 1,\n          padding: 10,\n          borderRadius: 8,\n          marginVertical: 6\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            fontWeight: '600'\n          },\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1498,\n          columnNumber: 13\n        }, this), _jsxDEV(Text, {\n          children: [\"Status: \", item.status, \" | $\", item.amountDelta]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1499,\n          columnNumber: 13\n        }, this), (user?.role === 'ADMIN' || user?.role === 'SUPERVISOR' || user?.role === 'ESTIMATOR') && _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            gap: 8,\n            marginTop: 8\n          },\n          children: [_jsxDEV(Button, {\n            title: \"Approve\",\n            onPress: async () => {\n              await api(`/change-orders/${item.id}`, 'PATCH', {\n                status: 'APPROVED'\n              }, token);\n              loadCO();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1502,\n            columnNumber: 17\n          }, this), _jsxDEV(Button, {\n            title: \"Reject\",\n            onPress: async () => {\n              await api(`/change-orders/${item.id}`, 'PATCH', {\n                status: 'REJECTED'\n              }, token);\n              loadCO();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1503,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1501,\n          columnNumber: 15\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1497,\n        columnNumber: 11\n      }, this)), _jsxDEV(Text, {\n        style: {\n          fontWeight: '600',\n          marginTop: 16\n        },\n        children: \"Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1509,\n        columnNumber: 9\n      }, this), _jsxDEV(JobTasks, {\n        jobId: jobId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1510,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: {\n          fontWeight: '600',\n          marginTop: 16\n        },\n        children: \"Schedule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1512,\n        columnNumber: 9\n      }, this), _jsxDEV(JobSchedule, {\n        jobId: jobId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1513,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1455,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1454,\n    columnNumber: 5\n  }, this);\n}\nfunction JobTasks({\n  jobId\n}) {\n  const {\n    token\n  } = useAuth();\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState('');\n  const [dueDate, setDueDate] = useState('');\n  const load = async () => {\n    try {\n      const data = await api(`/tasks?jobId=${jobId}`, 'GET', null, token);\n      setTasks(data);\n      db.transaction(tx => {\n        tx.executeSql('DELETE FROM tasks_cache WHERE jobId=?', [jobId]);\n        data.forEach(t => tx.executeSql('INSERT OR REPLACE INTO tasks_cache (id, jobId, title, status, dueDate) VALUES (?,?,?,?,?)', [t.id, jobId, t.title || '', t.status || 'TODO', t.dueDate || '']));\n      });\n    } catch (e) {\n      db.transaction(tx => tx.executeSql('SELECT id, jobId, title, status, dueDate FROM tasks_cache WHERE jobId=?', [jobId], (_, {\n        rows\n      }) => setTasks(rows._array || [])));\n    }\n  };\n  useEffect(() => {\n    load();\n  }, []);\n  const add = async () => {\n    if (!title.trim()) return Alert.alert('Title required');\n    await api('/tasks', 'POST', {\n      title,\n      jobId,\n      dueDate\n    }, token);\n    setTitle('');\n    setDueDate('');\n    load();\n  };\n  const done = async id => {\n    await api(`/tasks/${id}`, 'PATCH', {\n      status: 'DONE'\n    }, token);\n    load();\n  };\n  const remove = id => {\n    Alert.alert('Delete task', 'Remove this task?', [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Delete',\n      style: 'destructive',\n      onPress: async () => {\n        await api(`/tasks/${id}`, 'DELETE', null, token);\n        load();\n      }\n    }]);\n  };\n  return _jsxDEV(View, {\n    children: [_jsxDEV(View, {\n      style: {\n        flexDirection: 'row',\n        gap: 8,\n        marginVertical: 8,\n        alignItems: 'center'\n      },\n      children: [_jsxDEV(TextInput, {\n        placeholder: \"Task title\",\n        value: title,\n        onChangeText: setTitle,\n        style: {\n          flex: 1,\n          borderWidth: 1,\n          padding: 8\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1552,\n        columnNumber: 9\n      }, this), _jsxDEV(DateInputField, {\n        value: dueDate,\n        onChange: setDueDate,\n        placeholder: \"Due date\",\n        style: {\n          marginBottom: 0,\n          width: 150\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1553,\n        columnNumber: 9\n      }, this), _jsxDEV(Button, {\n        title: \"Add\",\n        onPress: add\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1554,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1551,\n      columnNumber: 7\n    }, this), tasks.map(t => _jsxDEV(View, {\n      style: {\n        borderWidth: 1,\n        padding: 10,\n        borderRadius: 8,\n        marginVertical: 6\n      },\n      children: [_jsxDEV(Text, {\n        style: {\n          fontWeight: '600'\n        },\n        children: t.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1558,\n        columnNumber: 11\n      }, this), _jsxDEV(Text, {\n        children: [\"Due: \", t.dueDate || '-', \" | Status: \", t.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1559,\n        columnNumber: 11\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          gap: 8,\n          marginTop: 6\n        },\n        children: [_jsxDEV(Button, {\n          title: \"Mark Done\",\n          onPress: () => done(t.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1561,\n          columnNumber: 13\n        }, this), _jsxDEV(Button, {\n          title: \"Delete\",\n          color: \"#c00\",\n          onPress: () => remove(t.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1562,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1560,\n        columnNumber: 11\n      }, this)]\n    }, t.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1557,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1550,\n    columnNumber: 5\n  }, this);\n}\nfunction JobSchedule({\n  jobId\n}) {\n  const {\n    token\n  } = useAuth();\n  const [events, setEvents] = useState([]);\n  const [title, setTitle] = useState('');\n  const [startAt, setStartAt] = useState('');\n  const [endAt, setEndAt] = useState('');\n  const load = async () => {\n    try {\n      const data = await api(`/calendar?jobId=${jobId}`, 'GET', null, token);\n      setEvents(data);\n      db.transaction(tx => {\n        tx.executeSql('DELETE FROM calendar_cache WHERE jobId=?', [jobId]);\n        data.forEach(ev => tx.executeSql('INSERT OR REPLACE INTO calendar_cache (id, jobId, title, startAt, endAt) VALUES (?,?,?,?,?)', [ev.id, jobId, ev.title || '', ev.startAt || '', ev.endAt || '']));\n      });\n    } catch (e) {\n      db.transaction(tx => tx.executeSql('SELECT id, jobId, title, startAt, endAt FROM calendar_cache WHERE jobId=?', [jobId], (_, {\n        rows\n      }) => setEvents(rows._array || [])));\n    }\n  };\n  useEffect(() => {\n    load();\n  }, []);\n  const add = async () => {\n    if (!title.trim() || !startAt) return Alert.alert('Title and start time required');\n    await api('/calendar', 'POST', {\n      title,\n      jobId,\n      startAt,\n      endAt\n    }, token);\n    setTitle('');\n    setStartAt('');\n    setEndAt('');\n    load();\n  };\n  const remove = id => {\n    Alert.alert('Delete event', 'Remove this schedule item?', [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Delete',\n      style: 'destructive',\n      onPress: async () => {\n        await api(`/calendar/${id}`, 'DELETE', null, token);\n        load();\n      }\n    }]);\n  };\n  return _jsxDEV(View, {\n    children: [_jsxDEV(View, {\n      style: {\n        marginVertical: 8\n      },\n      children: [_jsxDEV(TextInput, {\n        placeholder: \"Event title\",\n        value: title,\n        onChangeText: setTitle,\n        style: {\n          borderWidth: 1,\n          padding: 8,\n          marginBottom: 6\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1603,\n        columnNumber: 9\n      }, this), _jsxDEV(DateInputField, {\n        value: startAt,\n        onChange: date => {\n          const existing = startAt || '';\n          const timePartIndex = existing.indexOf('T');\n          const timePart = timePartIndex > -1 ? existing.substring(timePartIndex) : 'T08:00:00';\n          setStartAt(`${date}${timePart}`);\n        },\n        placeholder: \"Start date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1604,\n        columnNumber: 9\n      }, this), _jsxDEV(DateInputField, {\n        value: endAt,\n        onChange: date => {\n          if (!date) {\n            setEndAt('');\n            return;\n          }\n          const existing = endAt || '';\n          const timePartIndex = existing.indexOf('T');\n          const timePart = timePartIndex > -1 ? existing.substring(timePartIndex) : 'T17:00:00';\n          setEndAt(`${date}${timePart}`);\n        },\n        placeholder: \"End date (optional)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1614,\n        columnNumber: 9\n      }, this), _jsxDEV(Button, {\n        title: \"Add Event\",\n        onPress: add\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1628,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1602,\n      columnNumber: 7\n    }, this), events.map(ev => _jsxDEV(View, {\n      style: {\n        borderWidth: 1,\n        padding: 10,\n        borderRadius: 8,\n        marginVertical: 6\n      },\n      children: [_jsxDEV(Text, {\n        style: {\n          fontWeight: '600'\n        },\n        children: ev.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1632,\n        columnNumber: 11\n      }, this), _jsxDEV(Text, {\n        children: [ev.startAt, \" -> \", ev.endAt || '-']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1633,\n        columnNumber: 11\n      }, this), _jsxDEV(Button, {\n        title: \"Delete\",\n        color: \"#c00\",\n        onPress: () => remove(ev.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1634,\n        columnNumber: 11\n      }, this)]\n    }, ev.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1631,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1601,\n    columnNumber: 5\n  }, this);\n}\nasync function processQueue(token) {\n  return new Promise(resolve => {\n    db.transaction(tx => {\n      tx.executeSql('SELECT * FROM queue', [], async (_, {\n        rows\n      }) => {\n        const items = rows._array || [];\n        for (const q of items) {\n          try {\n            const payload = JSON.parse(q.payload);\n            if (q.type === 'createLead') {\n              await api('/leads', 'POST', payload, token);\n            }\n            if (q.type === 'uploadPhoto') {\n              await api('/upload/image', 'POST', {\n                dataUrl: payload.dataUrl\n              }, token);\n            }\n            db.transaction(txx => txx.executeSql('DELETE FROM queue WHERE id=?', [q.id]));\n          } catch (e) {}\n        }\n        resolve();\n      });\n    });\n  });\n}\nfunction LeadsScreen({\n  navigation\n}) {\n  const {\n    token\n  } = useAuth();\n  const [leads, setLeads] = useState([]);\n  const [refreshing, setRefreshing] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const fetchLeads = useCallback(async () => {\n    setLoading(true);\n    try {\n      const data = await api('/leads', 'GET', null, token);\n      setLeads(data);\n      db.transaction(tx => {\n        tx.executeSql && tx.executeSql('DELETE FROM leads_cache;');\n        data.forEach(l => tx.executeSql && tx.executeSql('INSERT OR REPLACE INTO leads_cache (id, description, status) VALUES (?,?,?)', [l.id, l.description || '', l.status || 'NEW']));\n      });\n    } catch (e) {\n      db.transaction(tx => tx.executeSql && tx.executeSql('SELECT id, description, status FROM leads_cache', [], (_, {\n        rows\n      }) => setLeads(rows._array || [])));\n    } finally {\n      setLoading(false);\n    }\n  }, [token]);\n  useFocusEffect(useCallback(() => {\n    fetchLeads();\n  }, [fetchLeads]));\n  const onRefresh = useCallback(async () => {\n    setRefreshing(true);\n    await fetchLeads();\n    setRefreshing(false);\n  }, [fetchLeads]);\n  const deleteLead = useCallback(lead => {\n    Alert.alert('Delete lead', `Delete lead #${lead.id}?`, [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Delete',\n      style: 'destructive',\n      onPress: async () => {\n        try {\n          await api(`/leads/${lead.id}`, 'DELETE', null, token);\n          setLeads(prev => prev.filter(l => l.id !== lead.id));\n          db.transaction(tx => tx.executeSql && tx.executeSql('DELETE FROM leads_cache WHERE id=?', [lead.id]));\n        } catch (err) {\n          Alert.alert('Error', err.message || 'Unable to delete lead');\n        }\n      }\n    }]);\n  }, [token]);\n  const newLeadsCount = leads.filter(l => (l.status || '').toUpperCase() === 'NEW').length;\n  const renderLeadCard = lead => {\n    const customer = lead.Customer || {};\n    const jobsite = lead.Jobsite || {};\n    const addressParts = [jobsite.addressLine1, jobsite.addressLine2, [jobsite.city, jobsite.state].filter(Boolean).join(', '), jobsite.zip].filter(Boolean);\n    const address = addressParts.join(', ');\n    const statusKey = (lead.status || 'NEW').toUpperCase();\n    return _jsxDEV(SurfaceCard, {\n      children: [_jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        children: [_jsxDEV(View, {\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.text,\n              fontSize: typography.h2,\n              fontWeight: '600'\n            },\n            children: [\"Lead #\", lead.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1731,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.5)\n            },\n            children: customer.name || 'Unknown customer'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1732,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1730,\n          columnNumber: 11\n        }, this), _jsxDEV(StatusPill, {\n          status: statusKey\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1734,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1729,\n        columnNumber: 9\n      }, this), customer.phone ? _jsxDEV(Text, {\n        style: {\n          color: palette.muted,\n          marginTop: spacing(0.5)\n        },\n        children: customer.phone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1736,\n        columnNumber: 27\n      }, this) : null, customer.email ? _jsxDEV(Text, {\n        style: {\n          color: palette.muted\n        },\n        children: customer.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1737,\n        columnNumber: 27\n      }, this) : null, address ? _jsxDEV(Text, {\n        style: {\n          color: palette.muted,\n          marginTop: spacing(1)\n        },\n        children: address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1738,\n        columnNumber: 20\n      }, this) : null, _jsxDEV(Text, {\n        numberOfLines: 3,\n        style: {\n          color: palette.text,\n          marginTop: spacing(1.5)\n        },\n        children: lead.description || 'No scope captured yet.'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1739,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          columnGap: spacing(1),\n          rowGap: spacing(1),\n          marginTop: spacing(2)\n        },\n        children: [_jsxDEV(QuickAction, {\n          label: \"Open\",\n          onPress: () => navigation.navigate('EstimateEditor', {\n            leadId: lead.id\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1741,\n          columnNumber: 11\n        }, this), _jsxDEV(QuickAction, {\n          label: \"Convert\",\n          tone: \"success\",\n          onPress: () => navigation.navigate('Jobs')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1742,\n          columnNumber: 11\n        }, this), _jsxDEV(QuickAction, {\n          label: \"Delete\",\n          tone: \"danger\",\n          onPress: () => deleteLead(lead)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1743,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1740,\n        columnNumber: 9\n      }, this)]\n    }, lead.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1728,\n      columnNumber: 7\n    }, this);\n  };\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(FlatList, {\n      data: leads,\n      keyExtractor: item => String(item.id),\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(4)\n      },\n      refreshControl: _jsxDEV(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh,\n        tintColor: palette.primary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1755,\n        columnNumber: 25\n      }, this),\n      ListHeaderComponent: _jsxDEV(View, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginBottom: spacing(2)\n          },\n          children: [_jsxDEV(View, {\n            children: [_jsxDEV(Text, {\n              style: {\n                color: palette.text,\n                fontSize: typography.h1,\n                fontWeight: '700'\n              },\n              children: \"Leads\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1760,\n              columnNumber: 17\n            }, this), _jsxDEV(Text, {\n              style: {\n                color: palette.muted,\n                marginTop: spacing(0.5)\n              },\n              children: \"Keep the funnel moving\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1761,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1759,\n            columnNumber: 15\n          }, this), _jsxDEV(QuickAction, {\n            label: \"New lead\",\n            onPress: () => navigation.navigate('NewLead')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1763,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1758,\n          columnNumber: 13\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            columnGap: spacing(2),\n            rowGap: spacing(2)\n          },\n          children: [_jsxDEV(View, {\n            style: {\n              flexBasis: '48%',\n              minWidth: 160\n            },\n            children: _jsxDEV(SummaryCard, {\n              title: \"Total\",\n              value: leads.length,\n              subtitle: `${newLeadsCount} new`,\n              tone: \"info\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1767,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1766,\n            columnNumber: 15\n          }, this), _jsxDEV(View, {\n            style: {\n              flexBasis: '48%',\n              minWidth: 160\n            },\n            children: _jsxDEV(SummaryCard, {\n              title: \"Outstanding\",\n              value: newLeadsCount,\n              subtitle: \"Require follow up\",\n              tone: \"warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1770,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1769,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1765,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1757,\n        columnNumber: 11\n      }, this),\n      renderItem: ({\n        item\n      }) => renderLeadCard(item),\n      ListEmptyComponent: loading ? _jsxDEV(SurfaceCard, {\n        style: {\n          alignItems: 'center',\n          paddingVertical: spacing(4)\n        },\n        children: [_jsxDEV(ActivityIndicator, {\n          color: palette.primary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1779,\n          columnNumber: 15\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(1)\n          },\n          children: \"Loading leads...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1780,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1778,\n        columnNumber: 13\n      }, this) : _jsxDEV(SurfaceCard, {\n        children: _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: \"No leads yet. Capture a lead to get started.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1784,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1783,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1751,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1750,\n    columnNumber: 5\n  }, this);\n}\nfunction NewLeadScreen({\n  navigation\n}) {\n  const {\n    token\n  } = useAuth();\n  const [description, setDescription] = useState('');\n  const [status, setStatus] = useState('NEW');\n  const [customerName, setCustomerName] = useState('');\n  const [customerPhone, setCustomerPhone] = useState('');\n  const [customerEmail, setCustomerEmail] = useState('');\n  const [addressLine1, setAddressLine1] = useState('');\n  const [addressLine2, setAddressLine2] = useState('');\n  const [city, setCity] = useState('');\n  const [stateCode, setStateCode] = useState('');\n  const [zip, setZip] = useState('');\n  const [showCustomerSection, setShowCustomerSection] = useState(false);\n  const [showJobsiteSection, setShowJobsiteSection] = useState(false);\n  const statuses = ['NEW', 'CONTACTED', 'ESTIMATING', 'CONVERTED', 'CLOSED_LOST'];\n  const buildPayload = () => {\n    const customer = [customerName, customerPhone, customerEmail].some(v => v && v.trim()) ? {\n      name: customerName.trim(),\n      phone: customerPhone.trim(),\n      email: customerEmail.trim()\n    } : null;\n    const jobsite = [addressLine1, addressLine2, city, stateCode, zip].some(v => v && v.trim()) ? {\n      addressLine1: addressLine1.trim(),\n      addressLine2: addressLine2.trim(),\n      city: city.trim(),\n      state: stateCode.trim(),\n      zip: zip.trim()\n    } : null;\n    return {\n      description,\n      status,\n      customer,\n      jobsite\n    };\n  };\n  const createLeadOnline = async () => {\n    const payload = buildPayload();\n    const created = await api('/leads', 'POST', payload, token);\n    navigation.replace('EstimateEditor', {\n      leadId: created.id\n    });\n    Alert.alert('Lead created', `Lead #${created.id} ready to estimate.`);\n  };\n  const queueLead = () => {\n    const payload = buildPayload();\n    db.transaction(tx => tx.executeSql('INSERT INTO queue (type, payload) VALUES (?,?)', ['createLead', JSON.stringify(payload)]));\n    Alert.alert('Saved offline', 'We will submit this lead when you reconnect.');\n    navigation.goBack();\n  };\n  const submit = async () => {\n    if (!description.trim()) {\n      Alert.alert('Missing scope', 'Please describe the job or scope of work.');\n      return;\n    }\n    try {\n      await createLeadOnline();\n    } catch (e) {\n      queueLead();\n    }\n  };\n  const chipStyle = active => ({\n    paddingHorizontal: spacing(2),\n    paddingVertical: spacing(1),\n    borderRadius: 999,\n    borderWidth: 1,\n    borderColor: active ? palette.primary : palette.border,\n    backgroundColor: active ? '#d9f2ed' : palette.surface\n  });\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(6)\n      },\n      children: [_jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontSize: typography.h1,\n            fontWeight: '700',\n            marginBottom: spacing(2)\n          },\n          children: \"New lead\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1872,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontWeight: '600',\n            marginBottom: spacing(1)\n          },\n          children: \"Scope\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1873,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Describe the job...\",\n          placeholderTextColor: palette.muted,\n          value: description,\n          onChangeText: setDescription,\n          multiline: true,\n          style: {\n            borderWidth: 1,\n            borderColor: palette.border,\n            borderRadius: 12,\n            padding: spacing(2),\n            minHeight: 120,\n            color: palette.text,\n            backgroundColor: palette.surfaceMuted,\n            textAlignVertical: 'top'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1874,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontWeight: '600',\n            marginTop: spacing(2),\n            marginBottom: spacing(1)\n          },\n          children: \"Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1891,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            columnGap: spacing(1),\n            rowGap: spacing(1)\n          },\n          children: statuses.map(s => {\n            const active = status === s;\n            return _jsxDEV(TouchableOpacity, {\n              onPress: () => setStatus(s),\n              activeOpacity: 0.85,\n              style: chipStyle(active),\n              children: _jsxDEV(Text, {\n                style: {\n                  color: active ? palette.primaryStrong : palette.muted,\n                  fontWeight: '600',\n                  fontSize: typography.small\n                },\n                children: s.replace('_', ' ')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1897,\n                columnNumber: 19\n              }, this)\n            }, s, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1896,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1892,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginTop: spacing(3)\n          },\n          children: [_jsxDEV(QuickAction, {\n            label: \"Save offline\",\n            tone: \"muted\",\n            onPress: queueLead\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1903,\n            columnNumber: 13\n          }, this), _jsxDEV(TouchableOpacity, {\n            onPress: submit,\n            activeOpacity: 0.85,\n            style: {\n              backgroundColor: palette.primary,\n              paddingHorizontal: spacing(3),\n              paddingVertical: spacing(1.5),\n              borderRadius: 12\n            },\n            children: _jsxDEV(Text, {\n              style: {\n                color: '#fff',\n                fontWeight: '700'\n              },\n              children: \"Create lead\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1909,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1904,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1902,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1871,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(TouchableOpacity, {\n          onPress: () => setShowCustomerSection(v => !v),\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n          },\n          activeOpacity: 0.8,\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.text,\n              fontSize: typography.h2,\n              fontWeight: '600'\n            },\n            children: \"Customer details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1920,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.primary,\n              fontWeight: '600'\n            },\n            children: showCustomerSection ? 'Hide' : 'Add'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1921,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1915,\n          columnNumber: 11\n        }, this), showCustomerSection ? _jsxDEV(View, {\n          style: {\n            marginTop: spacing(2)\n          },\n          children: [_jsxDEV(TextInput, {\n            placeholder: \"Name\",\n            placeholderTextColor: palette.muted,\n            value: customerName,\n            onChangeText: setCustomerName,\n            style: {\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted,\n              marginBottom: spacing(1.5)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1925,\n            columnNumber: 15\n          }, this), _jsxDEV(TextInput, {\n            placeholder: \"Phone\",\n            placeholderTextColor: palette.muted,\n            keyboardType: \"phone-pad\",\n            value: customerPhone,\n            onChangeText: setCustomerPhone,\n            style: {\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted,\n              marginBottom: spacing(1.5)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1940,\n            columnNumber: 15\n          }, this), _jsxDEV(TextInput, {\n            placeholder: \"Email\",\n            placeholderTextColor: palette.muted,\n            keyboardType: \"email-address\",\n            autoCapitalize: \"none\",\n            value: customerEmail,\n            onChangeText: setCustomerEmail,\n            style: {\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1956,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1924,\n          columnNumber: 13\n        }, this) : _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(1.5)\n          },\n          children: \"Add contact details to help follow up faster.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1974,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1914,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        children: [_jsxDEV(TouchableOpacity, {\n          onPress: () => setShowJobsiteSection(v => !v),\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n          },\n          activeOpacity: 0.8,\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.text,\n              fontSize: typography.h2,\n              fontWeight: '600'\n            },\n            children: \"Jobsite address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1984,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.primary,\n              fontWeight: '600'\n            },\n            children: showJobsiteSection ? 'Hide' : 'Add'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1985,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1979,\n          columnNumber: 11\n        }, this), showJobsiteSection ? _jsxDEV(View, {\n          style: {\n            marginTop: spacing(2)\n          },\n          children: [_jsxDEV(TextInput, {\n            placeholder: \"Address line 1\",\n            placeholderTextColor: palette.muted,\n            value: addressLine1,\n            onChangeText: setAddressLine1,\n            style: {\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted,\n              marginBottom: spacing(1.5)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1989,\n            columnNumber: 15\n          }, this), _jsxDEV(TextInput, {\n            placeholder: \"Address line 2\",\n            placeholderTextColor: palette.muted,\n            value: addressLine2,\n            onChangeText: setAddressLine2,\n            style: {\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted,\n              marginBottom: spacing(1.5)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2004,\n            columnNumber: 15\n          }, this), _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              columnGap: spacing(1.5)\n            },\n            children: [_jsxDEV(View, {\n              style: {\n                flex: 1\n              },\n              children: _jsxDEV(TextInput, {\n                placeholder: \"City\",\n                placeholderTextColor: palette.muted,\n                value: city,\n                onChangeText: setCity,\n                style: {\n                  borderWidth: 1,\n                  borderColor: palette.border,\n                  borderRadius: 12,\n                  padding: spacing(2),\n                  color: palette.text,\n                  backgroundColor: palette.surfaceMuted,\n                  marginBottom: spacing(1.5)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2021,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2020,\n              columnNumber: 17\n            }, this), _jsxDEV(View, {\n              style: {\n                width: 80\n              },\n              children: _jsxDEV(TextInput, {\n                placeholder: \"State\",\n                placeholderTextColor: palette.muted,\n                value: stateCode,\n                onChangeText: setStateCode,\n                style: {\n                  borderWidth: 1,\n                  borderColor: palette.border,\n                  borderRadius: 12,\n                  padding: spacing(2),\n                  color: palette.text,\n                  backgroundColor: palette.surfaceMuted,\n                  marginBottom: spacing(1.5)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2038,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2037,\n              columnNumber: 17\n            }, this), _jsxDEV(View, {\n              style: {\n                width: 100\n              },\n              children: _jsxDEV(TextInput, {\n                placeholder: \"ZIP\",\n                placeholderTextColor: palette.muted,\n                value: zip,\n                onChangeText: setZip,\n                style: {\n                  borderWidth: 1,\n                  borderColor: palette.border,\n                  borderRadius: 12,\n                  padding: spacing(2),\n                  color: palette.text,\n                  backgroundColor: palette.surfaceMuted,\n                  marginBottom: spacing(1.5)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2055,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2054,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2019,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1988,\n          columnNumber: 13\n        }, this) : _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(1.5)\n          },\n          children: \"Add a jobsite to keep crews aligned.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2074,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1978,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1870,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1869,\n    columnNumber: 5\n  }, this);\n}\nfunction EstimateEditorScreen({\n  route,\n  navigation\n}) {\n  const {\n    token,\n    user\n  } = useAuth();\n  const {\n    leadId\n  } = route.params || {};\n  const [estimateId, setEstimateId] = useState(null);\n  const [items, setItems] = useState([]);\n  const [desc, setDesc] = useState('');\n  const [qty, setQty] = useState('1');\n  const [price, setPrice] = useState('0');\n  const [notes, setNotes] = useState('');\n  const [photoUrl, setPhotoUrl] = useState(null);\n  const [subtotal, setSubtotal] = useState(0);\n  const [taxRate, setTaxRate] = useState(7.0);\n  const [tax, setTax] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [leadDetails, setLeadDetails] = useState(null);\n  const [leadStatus, setLeadStatus] = useState('NEW');\n  const [leadScope, setLeadScope] = useState('');\n  const [leadCustomerName, setLeadCustomerName] = useState('');\n  const [leadCustomerPhone, setLeadCustomerPhone] = useState('');\n  const [leadCustomerEmail, setLeadCustomerEmail] = useState('');\n  const [leadAddressLine1, setLeadAddressLine1] = useState('');\n  const [leadAddressLine2, setLeadAddressLine2] = useState('');\n  const [leadCity, setLeadCity] = useState('');\n  const [leadStateCode, setLeadStateCode] = useState('');\n  const [leadZip, setLeadZip] = useState('');\n  const leadStatuses = ['NEW', 'CONTACTED', 'ESTIMATING', 'CONVERTED', 'CLOSED_LOST'];\n  const loadLead = useCallback(async () => {\n    if (!leadId) return;\n    try {\n      const data = await api(`/leads/${leadId}`, 'GET', null, token);\n      setLeadDetails(data);\n      setLeadStatus(data.status || 'NEW');\n      setLeadScope(data.description || '');\n      const customer = data.Customer || {};\n      const jobsite = data.Jobsite || {};\n      setLeadCustomerName(customer.name || '');\n      setLeadCustomerPhone(customer.phone || '');\n      setLeadCustomerEmail(customer.email || '');\n      setLeadAddressLine1(jobsite.addressLine1 || '');\n      setLeadAddressLine2(jobsite.addressLine2 || '');\n      setLeadCity(jobsite.city || '');\n      setLeadStateCode(jobsite.state || '');\n      setLeadZip(jobsite.zip || '');\n    } catch (e) {}\n  }, [leadId, token]);\n  useEffect(() => {\n    loadLead();\n  }, [loadLead]);\n  const createEstimate = async () => {\n    const est = await api('/estimates', 'POST', {\n      leadId,\n      customerId: leadDetails?.customerId ?? null,\n      jobsiteId: leadDetails?.jobsiteId ?? null,\n      subtotal: 0,\n      taxRate: parseFloat(taxRate) || 0,\n      total: 0\n    }, token);\n    setEstimateId(est.id);\n    return est;\n  };\n  const addItem = async () => {\n    if (!estimateId) {\n      Alert.alert('Create estimate first');\n      return;\n    }\n    _jsxDEV(Text, {\n      children: [\"Qty: \", item.qty, \" x $\", item.unitPrice, \" = \", (parseFloat(item.qty || 0) * parseFloat(item.unitPrice || 0)).toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2147,\n      columnNumber: 13\n    }, this);\n    setItems(prev => [data, ...prev]);\n    setDesc('');\n    setQty('1');\n    setPrice('0');\n  };\n  const suggest = async () => {\n    const r = await api('/ai/estimate-suggest', 'POST', {\n      notes\n    }, token);\n    let targetId = estimateId;\n    if (!targetId) {\n      const est = await createEstimate();\n      targetId = est.id;\n    }\n    for (const it of r.items) {\n      await api(`/estimates/${targetId}/items`, 'POST', it, token);\n    }\n    if (!estimateId) setEstimateId(targetId);\n    Alert.alert('Added', 'Suggested line-items added');\n  };\n  const pickPhoto = async () => {\n    const res = await ImagePicker.launchImageLibraryAsync({\n      base64: true,\n      quality: 0.6\n    });\n    if (!res.canceled && res.assets && res.assets[0].base64) {\n      const dataUrl = `data:image/jpeg;base64,${res.assets[0].base64}`;\n      try {\n        const up = await api('/upload/image', 'POST', {\n          dataUrl\n        }, token);\n        setPhotoUrl(up.url);\n      } catch (e) {\n        db.transaction(tx => tx.executeSql('INSERT INTO queue (type, payload) VALUES (?,?)', ['uploadPhoto', JSON.stringify({\n          dataUrl\n        })]));\n        Alert.alert('Queued upload', 'Will send when online');\n      }\n    }\n  };\n  const saveLeadDetails = async () => {\n    if (!leadId) return;\n    try {\n      const updated = await api(`/leads/${leadId}`, 'PATCH', {\n        description: leadScope,\n        status: leadStatus,\n        customer: [leadCustomerName, leadCustomerPhone, leadCustomerEmail].some(v => v && v.trim()) ? {\n          name: leadCustomerName,\n          phone: leadCustomerPhone,\n          email: leadCustomerEmail\n        } : null,\n        jobsite: [leadAddressLine1, leadAddressLine2, leadCity, leadStateCode, leadZip].some(v => v && v.trim()) ? {\n          addressLine1: leadAddressLine1,\n          addressLine2: leadAddressLine2,\n          city: leadCity,\n          state: leadStateCode,\n          zip: leadZip\n        } : null\n      }, token);\n      setLeadDetails(updated);\n      Alert.alert('Saved', 'Lead details updated.');\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to update lead');\n    }\n  };\n  const approveAndSign = () => {\n    if (!estimateId) {\n      Alert.alert('Create estimate');\n      return;\n    }\n    navigation.navigate('Signature', {\n      estimateId\n    });\n  };\n  const canEstimate = user?.role === 'ADMIN' || user?.role === 'ESTIMATOR';\n  useEffect(() => {\n    const s = items.reduce((acc, it) => acc + parseFloat(it.qty || 0) * parseFloat(it.unitPrice || 0), 0);\n    const t = s * (parseFloat(taxRate || 0) / 100);\n    setSubtotal(s);\n    setTax(t);\n    setTotal(s + t);\n  }, [items, taxRate]);\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: {\n        padding: 16,\n        paddingBottom: 32\n      },\n      children: [_jsxDEV(Text, {\n        style: {\n          fontSize: 18,\n          marginBottom: 8\n        },\n        children: [\"Lead #\", leadId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2220,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: {\n          fontWeight: '600',\n          marginBottom: 6\n        },\n        children: \"Lead status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2221,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          gap: 8,\n          marginBottom: 12\n        },\n        children: leadStatuses.map(s => _jsxDEV(TouchableOpacity, {\n          onPress: () => setLeadStatus(s),\n          style: {\n            paddingVertical: 6,\n            paddingHorizontal: 12,\n            borderRadius: 16,\n            borderWidth: 1,\n            borderColor: leadStatus === s ? '#007AFF' : '#ccc',\n            backgroundColor: leadStatus === s ? '#E6F0FF' : '#fff'\n          },\n          children: _jsxDEV(Text, {\n            style: {\n              color: leadStatus === s ? '#007AFF' : '#333'\n            },\n            children: s\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2236,\n            columnNumber: 15\n          }, this)\n        }, s, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2224,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2222,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: {\n          fontWeight: '600',\n          marginBottom: 6\n        },\n        children: \"Scope / notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2240,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        placeholder: \"What does this lead need? Add notes, access info, budget...\",\n        value: leadScope,\n        onChangeText: setLeadScope,\n        multiline: true,\n        style: {\n          borderWidth: 1,\n          padding: 10,\n          minHeight: 100,\n          marginBottom: 12\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2241,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: {\n          fontWeight: '600',\n          marginBottom: 6\n        },\n        children: \"Customer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2248,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        placeholder: \"Name\",\n        value: leadCustomerName,\n        onChangeText: setLeadCustomerName,\n        style: {\n          borderWidth: 1,\n          padding: 8,\n          marginBottom: 6\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2249,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        placeholder: \"Phone\",\n        value: leadCustomerPhone,\n        onChangeText: setLeadCustomerPhone,\n        keyboardType: \"phone-pad\",\n        style: {\n          borderWidth: 1,\n          padding: 8,\n          marginBottom: 6\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2250,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        placeholder: \"Email\",\n        value: leadCustomerEmail,\n        onChangeText: setLeadCustomerEmail,\n        keyboardType: \"email-address\",\n        style: {\n          borderWidth: 1,\n          padding: 8,\n          marginBottom: 12\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2251,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: {\n          fontWeight: '600',\n          marginBottom: 6\n        },\n        children: \"Job address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2252,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        placeholder: \"Address line 1\",\n        value: leadAddressLine1,\n        onChangeText: setLeadAddressLine1,\n        style: {\n          borderWidth: 1,\n          padding: 8,\n          marginBottom: 6\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2253,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        placeholder: \"Address line 2\",\n        value: leadAddressLine2,\n        onChangeText: setLeadAddressLine2,\n        style: {\n          borderWidth: 1,\n          padding: 8,\n          marginBottom: 6\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2254,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          gap: 8\n        },\n        children: [_jsxDEV(TextInput, {\n          placeholder: \"City\",\n          value: leadCity,\n          onChangeText: setLeadCity,\n          style: {\n            flex: 1,\n            borderWidth: 1,\n            padding: 8\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2256,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"State\",\n          value: leadStateCode,\n          onChangeText: setLeadStateCode,\n          style: {\n            width: 80,\n            borderWidth: 1,\n            padding: 8\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2257,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"ZIP\",\n          value: leadZip,\n          onChangeText: setLeadZip,\n          style: {\n            width: 100,\n            borderWidth: 1,\n            padding: 8\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2258,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2255,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          marginTop: 12\n        },\n        children: _jsxDEV(Button, {\n          title: \"Save lead details\",\n          onPress: saveLeadDetails\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2261,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2260,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          height: 24\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2264,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: {\n          fontSize: 18,\n          fontWeight: '600',\n          marginBottom: 8\n        },\n        children: \"Estimate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2265,\n        columnNumber: 9\n      }, this), canEstimate ? _jsxDEV(Button, {\n        title: estimateId ? `Estimate #${estimateId}` : \"Create Estimate\",\n        onPress: createEstimate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2266,\n        columnNumber: 24\n      }, this) : _jsxDEV(Text, {\n        children: \"View only (insufficient role)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2266,\n        columnNumber: 129\n      }, this), _jsxDEV(View, {\n        style: {\n          height: 12\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2267,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        placeholder: \"Item description\",\n        value: desc,\n        onChangeText: setDesc,\n        style: {\n          borderWidth: 1,\n          padding: 8,\n          marginBottom: 6\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2268,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        placeholder: \"Qty\",\n        value: qty,\n        onChangeText: setQty,\n        keyboardType: \"decimal-pad\",\n        style: {\n          borderWidth: 1,\n          padding: 8,\n          marginBottom: 6\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2269,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        placeholder: \"Unit Price\",\n        value: price,\n        onChangeText: setPrice,\n        keyboardType: \"decimal-pad\",\n        style: {\n          borderWidth: 1,\n          padding: 8,\n          marginBottom: 6\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2270,\n        columnNumber: 9\n      }, this), canEstimate && _jsxDEV(Button, {\n        title: \"Add Item\",\n        onPress: addItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2271,\n        columnNumber: 25\n      }, this), _jsxDEV(View, {\n        style: {\n          height: 16\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2272,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: {\n          fontWeight: '600'\n        },\n        children: \"AI helper\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2273,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        placeholder: \"Paste field notes...\",\n        value: notes,\n        onChangeText: setNotes,\n        multiline: true,\n        style: {\n          borderWidth: 1,\n          minHeight: 80,\n          padding: 8,\n          marginBottom: 6\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2274,\n        columnNumber: 9\n      }, this), canEstimate && _jsxDEV(Button, {\n        title: \"Suggest Line Items\",\n        onPress: suggest\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2275,\n        columnNumber: 25\n      }, this), _jsxDEV(View, {\n        style: {\n          height: 16\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2276,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: {\n          fontWeight: '600',\n          marginBottom: 6\n        },\n        children: \"Totals\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2277,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          marginBottom: 6\n        },\n        children: [_jsxDEV(Text, {\n          children: \"Subtotal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2279,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          children: [\"$\", subtotal.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2279,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2278,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n          marginBottom: 6\n        },\n        children: [_jsxDEV(Text, {\n          children: \"Tax Rate (%)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2282,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          value: String(taxRate),\n          onChangeText: v => setTaxRate(parseFloat(v) || 0),\n          keyboardType: \"decimal-pad\",\n          style: {\n            borderWidth: 1,\n            padding: 6,\n            width: 80,\n            textAlign: 'right'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2283,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2281,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          marginBottom: 6\n        },\n        children: [_jsxDEV(Text, {\n          children: \"Tax\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2286,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          children: [\"$\", tax.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2286,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2285,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          marginBottom: 12\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            fontWeight: '700'\n          },\n          children: \"Total\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2289,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            fontWeight: '700'\n          },\n          children: [\"$\", total.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2289,\n          columnNumber: 58\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2288,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          height: 8\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2291,\n        columnNumber: 9\n      }, this), _jsxDEV(Button, {\n        title: \"Attach Photo\",\n        onPress: pickPhoto\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2292,\n        columnNumber: 9\n      }, this), photoUrl ? _jsxDEV(Image, {\n        source: {\n          uri: `${API_URL}${photoUrl}`\n        },\n        style: {\n          height: 120,\n          marginTop: 8\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2293,\n        columnNumber: 21\n      }, this) : null, _jsxDEV(View, {\n        style: {\n          height: 16\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2294,\n        columnNumber: 9\n      }, this), _jsxDEV(Button, {\n        title: \"Create Job from Estimate\",\n        onPress: async () => {\n          try {\n            let targetId = estimateId;\n            if (!targetId) {\n              const est = await createEstimate();\n              targetId = est.id;\n            }\n            const hasCustomer = [leadCustomerName, leadCustomerPhone, leadCustomerEmail].some(v => v && v.trim());\n            const hasAddress = [leadAddressLine1, leadAddressLine2, leadCity, leadStateCode, leadZip].some(v => v && v.trim());\n            const payload = {\n              name: leadCustomerName ? `${leadCustomerName} - ${(leadScope || 'Job').slice(0, 40)}` : `Job for Estimate #${targetId}`,\n              status: 'SCHEDULED',\n              estimateId: targetId,\n              notes: leadScope || null\n            };\n            if (hasCustomer) {\n              payload.customer = {\n                name: leadCustomerName,\n                phone: leadCustomerPhone,\n                email: leadCustomerEmail\n              };\n            }\n            if (hasAddress) {\n              payload.jobsite = {\n                addressLine1: leadAddressLine1,\n                addressLine2: leadAddressLine2,\n                city: leadCity,\n                state: leadStateCode,\n                zip: leadZip\n              };\n            }\n            const job = await api('/jobs', 'POST', payload, token);\n            Alert.alert('Job Created', `Job #${job.id}`, [{\n              text: 'Open job',\n              onPress: () => navigation.navigate('JobDetail', {\n                jobId: job.id\n              })\n            }, {\n              text: 'OK'\n            }]);\n          } catch (e) {\n            Alert.alert('Error', e.message);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2295,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          height: 8\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2333,\n        columnNumber: 9\n      }, this), _jsxDEV(Button, {\n        title: \"Approve & Sign\",\n        onPress: approveAndSign\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2334,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          height: 8\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2335,\n        columnNumber: 9\n      }, this), _jsxDEV(Button, {\n        title: \"Send Estimate\",\n        onPress: async () => {\n          if (!estimateId) return Alert.alert('Create estimate first');\n          try {\n            await api(`/estimates/${estimateId}/send`, 'POST', {}, token);\n            Alert.alert('Sent', 'Estimate sent');\n          } catch (e) {\n            Alert.alert('Error', e.message);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2336,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          height: 8\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2340,\n        columnNumber: 9\n      }, this), _jsxDEV(Button, {\n        title: \"Download PDF\",\n        onPress: async () => {\n          if (!estimateId) return Alert.alert('Create estimate first');\n          const fileUri = `${FileSystem.documentDirectory}estimate-${estimateId}.pdf`;\n          try {\n            await FileSystem.downloadAsync(`${API_URL}/pdf/estimate/${estimateId}`, fileUri, {\n              headers: {\n                Authorization: `Bearer ${token}`\n              }\n            });\n            Alert.alert('Saved', `PDF saved to:\n${fileUri}`);\n          } catch (e) {\n            Alert.alert('Error', e.message);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2341,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          height: 16\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2350,\n        columnNumber: 9\n      }, this), items.length === 0 ? _jsxDEV(Text, {\n        style: {\n          color: '#555'\n        },\n        children: \"No line-items yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2352,\n        columnNumber: 11\n      }, this) : items.map((item, idx) => _jsxDEV(View, {\n        style: {\n          padding: 10,\n          borderWidth: 1,\n          marginBottom: 8\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            fontWeight: '600'\n          },\n          children: item.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2355,\n          columnNumber: 13\n        }, this), _jsxDEV(Text, {\n          children: [\"Qty: \", item.qty, \" \\xC3\\u2014 $\", item.unitPrice, \" = \", (parseFloat(item.qty || 0) * parseFloat(item.unitPrice || 0)).toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2356,\n          columnNumber: 13\n        }, this)]\n      }, item.id || idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2354,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2219,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 2218,\n    columnNumber: 5\n  }, this);\n}\nfunction ScheduleScreen({\n  navigation\n}) {\n  const {\n    token\n  } = useAuth();\n  const [jobs, setJobs] = useState([]);\n  const [filter, setFilter] = useState('ALL');\n  const [queueCount, setQueueCount] = useState(0);\n  const [syncing, setSyncing] = useState(false);\n  const loadQueueCount = useCallback(() => {\n    db.transaction(tx => tx.executeSql('SELECT COUNT(*) as c FROM queue', [], (_, {\n      rows\n    }) => setQueueCount(rows._array?.[0]?.c || 0)));\n  }, []);\n  const load = useCallback(async () => {\n    try {\n      const data = await api('/jobs', 'GET', null, token);\n      setJobs(data);\n      db.transaction(tx => {\n        tx.executeSql('DELETE FROM jobs_cache;');\n        data.forEach(j => tx.executeSql('INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)', [j.id, j.name || '', j.status || 'SCHEDULED', j.startDate || '', j.endDate || '', j.notes || '']));\n      });\n    } catch (e) {\n      db.transaction(tx => tx.executeSql('SELECT id, name, status, startDate, endDate, notes FROM jobs_cache', [], (_, {\n        rows\n      }) => setJobs(rows._array || [])));\n    }\n  }, [token]);\n  useEffect(() => {\n    load();\n    loadQueueCount();\n  }, [load, loadQueueCount]);\n  const filters = [{\n    key: 'ALL',\n    label: 'All'\n  }, {\n    key: 'TODAY',\n    label: 'Today'\n  }, {\n    key: 'WEEK',\n    label: 'This week'\n  }];\n  const inRange = useCallback(dateValue => {\n    if (filter === 'ALL') return true;\n    if (!dateValue) return false;\n    const today = new Date();\n    const dt = new Date(dateValue);\n    if (Number.isNaN(dt.getTime())) return false;\n    if (filter === 'TODAY') {\n      return dt.getFullYear() === today.getFullYear() && dt.getMonth() === today.getMonth() && dt.getDate() === today.getDate();\n    }\n    const start = new Date(today);\n    start.setHours(0, 0, 0, 0);\n    start.setDate(today.getDate() - today.getDay());\n    const end = new Date(start);\n    end.setDate(start.getDate() + 6);\n    return dt >= start && dt <= end;\n  }, [filter]);\n  const filteredJobs = useMemo(() => jobs.filter(job => inRange(job.startDate)).sort((a, b) => new Date(a.startDate || 0) - new Date(b.startDate || 0)), [jobs, inRange]);\n  const handleSync = useCallback(async () => {\n    setSyncing(true);\n    try {\n      await processQueue(token);\n      await load();\n      loadQueueCount();\n    } finally {\n      setSyncing(false);\n    }\n  }, [token, load, loadQueueCount]);\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(6)\n      },\n      children: [_jsxDEV(Text, {\n        style: {\n          color: palette.text,\n          fontSize: typography.h1,\n          fontWeight: '700',\n          marginBottom: spacing(2)\n        },\n        children: \"Schedule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2435,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          columnGap: spacing(1),\n          rowGap: spacing(1.5),\n          marginBottom: spacing(2)\n        },\n        children: filters.map(option => _jsxDEV(QuickAction, {\n          label: option.label,\n          tone: filter === option.key ? 'primary' : 'muted',\n          onPress: () => setFilter(option.key)\n        }, option.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2438,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2436,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3),\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        children: [_jsxDEV(View, {\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.text,\n              fontWeight: '600'\n            },\n            children: \"Offline queue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2448,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.5)\n            },\n            children: [queueCount, \" items waiting to sync\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2449,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2447,\n          columnNumber: 11\n        }, this), _jsxDEV(QuickAction, {\n          label: syncing ? 'Syncing...' : 'Sync now',\n          tone: \"primary\",\n          onPress: syncing ? undefined : handleSync\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2451,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2446,\n        columnNumber: 9\n      }, this), filteredJobs.length === 0 ? _jsxDEV(SurfaceCard, {\n        children: _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: [\"No jobs \", filter !== 'ALL' ? 'in this range' : 'scheduled yet', \". Convert a lead or create a job to populate your schedule.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2456,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2455,\n        columnNumber: 11\n      }, this) : filteredJobs.map(job => {\n        const jobsite = job.Jobsite || {};\n        const addressParts = [jobsite.addressLine1, jobsite.addressLine2, [jobsite.city, jobsite.state].filter(Boolean).join(', '), jobsite.zip].filter(Boolean);\n        const address = addressParts.join(', ');\n        return _jsxDEV(SurfaceCard, {\n          style: {\n            marginBottom: spacing(2)\n          },\n          children: [_jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center'\n            },\n            children: [_jsxDEV(Text, {\n              style: {\n                color: palette.text,\n                fontSize: typography.h2,\n                fontWeight: '600'\n              },\n              children: job.name || `Job #${job.id}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2471,\n              columnNumber: 19\n            }, this), _jsxDEV(StatusPill, {\n              status: job.status || 'SCHEDULED'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2472,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2470,\n            columnNumber: 17\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.5)\n            },\n            children: [job.startDate ? `Starts ${formatDate(job.startDate)}` : 'No start date', job.endDate ? ` � Due ${formatDate(job.endDate)}` : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2474,\n            columnNumber: 17\n          }, this), address ? _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(1)\n            },\n            children: address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2477,\n            columnNumber: 28\n          }, this) : null, job.notes ? _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(1)\n            },\n            children: job.notes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2478,\n            columnNumber: 30\n          }, this) : null, _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              flexWrap: 'wrap',\n              columnGap: spacing(1),\n              rowGap: spacing(1),\n              marginTop: spacing(2)\n            },\n            children: [_jsxDEV(QuickAction, {\n              label: \"Open job\",\n              onPress: () => navigation.navigate('JobDetail', {\n                jobId: job.id\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2480,\n              columnNumber: 19\n            }, this), _jsxDEV(QuickAction, {\n              label: \"View tasks\",\n              onPress: () => navigation.navigate('JobDetail', {\n                jobId: job.id,\n                tab: 'tasks'\n              }),\n              tone: \"muted\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2481,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2479,\n            columnNumber: 17\n          }, this)]\n        }, job.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2469,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2434,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 2433,\n    columnNumber: 5\n  }, this);\n}\nfunction MeScreen({\n  navigation\n}) {\n  const {\n    setToken,\n    user\n  } = useAuth();\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      padding: 16\n    },\n    children: [_jsxDEV(Text, {\n      style: {\n        fontSize: 20,\n        fontWeight: '600'\n      },\n      children: \"PrecisionTracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2495,\n      columnNumber: 7\n    }, this), _jsxDEV(Text, {\n      children: [\"User: \", user?.email, \" (\", user?.role, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2496,\n      columnNumber: 7\n    }, this), user?.role === 'ADMIN' && _jsxDEV(View, {\n      style: {\n        height: 12\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2497,\n      columnNumber: 32\n    }, this), user?.role === 'ADMIN' && _jsxDEV(Button, {\n      title: \"Manage Users\",\n      onPress: () => navigation.navigate('UsersAdmin')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2498,\n      columnNumber: 32\n    }, this), _jsxDEV(View, {\n      style: {\n        height: 20\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2499,\n      columnNumber: 7\n    }, this), _jsxDEV(Button, {\n      title: \"Sign out\",\n      onPress: () => setToken(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2500,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 2494,\n    columnNumber: 5\n  }, this);\n}\nconst Stack = createNativeStackNavigator();\nconst Tabs = createBottomTabNavigator();\nfunction TabsNav() {\n  const {\n    user\n  } = useAuth();\n  const isAdmin = (user?.role || '').toUpperCase() === 'ADMIN';\n  return _jsxDEV(Tabs.Navigator, {\n    screenOptions: {\n      headerShown: false,\n      tabBarActiveTintColor: palette.primary,\n      tabBarStyle: {\n        backgroundColor: '#fff'\n      }\n    },\n    children: [_jsxDEV(Tabs.Screen, {\n      name: \"Dashboard\",\n      component: DashboardScreen,\n      options: {\n        title: 'Home'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2519,\n      columnNumber: 7\n    }, this), _jsxDEV(Tabs.Screen, {\n      name: \"Leads\",\n      component: LeadsScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2520,\n      columnNumber: 7\n    }, this), _jsxDEV(Tabs.Screen, {\n      name: \"Jobs\",\n      component: JobsKanbanScreen,\n      options: {\n        title: 'Jobs'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2521,\n      columnNumber: 7\n    }, this), isAdmin ? _jsxDEV(Tabs.Screen, {\n      name: \"Invoices\",\n      component: InvoicesScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2522,\n      columnNumber: 18\n    }, this) : null, _jsxDEV(Tabs.Screen, {\n      name: \"Schedule\",\n      component: ScheduleScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2523,\n      columnNumber: 7\n    }, this), _jsxDEV(Tabs.Screen, {\n      name: \"Me\",\n      component: MeScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2524,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 2512,\n    columnNumber: 5\n  }, this);\n}\nfunction LoginScreen() {\n  const [email, setEmail] = useState('admin@example.com');\n  const [password, setPassword] = useState('test123');\n  const [busy, setBusy] = useState(false);\n  const {\n    setToken,\n    setUser\n  } = useAuth();\n  async function login() {\n    try {\n      setBusy(true);\n      const res = await fetch(`${API_URL}/auth/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await res.json();\n      if (!res.ok) throw new Error(data?.message || data?.error || 'Login failed');\n      const tok = data.token || data.accessToken;\n      if (!tok) throw new Error('No token returned from server');\n      const normalizedUser = data.user ? Object.assign({}, data.user, {\n        role: normalizeRole(data.user.role)\n      }) : {\n        email,\n        role: 'ADMIN',\n        name: 'Admin'\n      };\n      setToken(tok);\n      setUser(normalizedUser);\n      try {\n        await SecureStore.setItemAsync('auth_token', tok);\n        await SecureStore.setItemAsync('auth_user', JSON.stringify(normalizedUser));\n      } catch {}\n      Alert.alert('Welcome', 'Logged in');\n    } catch (e) {\n      Alert.alert('Error', e.message);\n    } finally {\n      setBusy(false);\n    }\n  }\n  return _jsxDEV(View, {\n    style: {\n      flex: 1,\n      padding: 20,\n      justifyContent: 'center'\n    },\n    children: [_jsxDEV(Text, {\n      style: {\n        fontSize: 24,\n        marginBottom: 16\n      },\n      children: \"PrecisionTracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2573,\n      columnNumber: 7\n    }, this), _jsxDEV(TextInput, {\n      placeholder: \"Email\",\n      autoCapitalize: \"none\",\n      value: email,\n      onChangeText: setEmail,\n      style: {\n        borderWidth: 1,\n        padding: 12,\n        marginBottom: 12\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2574,\n      columnNumber: 7\n    }, this), _jsxDEV(TextInput, {\n      placeholder: \"Password\",\n      secureTextEntry: true,\n      value: password,\n      onChangeText: setPassword,\n      style: {\n        borderWidth: 1,\n        padding: 12,\n        marginBottom: 12\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2581,\n      columnNumber: 7\n    }, this), _jsxDEV(Button, {\n      title: busy ? 'Signing in...' : 'Sign in',\n      onPress: login,\n      disabled: busy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2588,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 2572,\n    columnNumber: 5\n  }, this);\n}\nexport default function App() {\n  const [token, setToken] = useState(null);\n  const [user, setUser] = useState(null);\n  const [booting, setBooting] = useState(true);\n  useEffect(() => {\n    let mounted = true;\n    (async () => {\n      try {\n        const [tok, usr] = await Promise.all([SecureStore.getItemAsync('auth_token'), SecureStore.getItemAsync('auth_user')]);\n        if (mounted && tok) {\n          setToken(tok);\n          if (usr) {\n            const parsed = JSON.parse(usr);\n            parsed.role = normalizeRole(parsed.role);\n            setUser(parsed);\n          }\n        }\n      } catch {} finally {\n        if (mounted) setBooting(false);\n      }\n    })();\n    return () => {\n      mounted = false;\n    };\n  }, []);\n  const authValue = {\n    token,\n    setToken: t => {\n      setToken(t);\n      if (!t) {\n        try {\n          SecureStore.deleteItemAsync('auth_token');\n          SecureStore.deleteItemAsync('auth_user');\n        } catch {}\n      }\n    },\n    user,\n    setUser\n  };\n  if (booting) {\n    return _jsxDEV(SafeAreaView, {\n      style: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: _jsxDEV(Text, {\n        children: \"Loading\\xC3\\u0192\\xC2\\xA2\\xC3\\xA2\\xE2\\u20AC\\u0161\\xC2\\xAC\\xC3\\u201A\\xC2\\xA6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2634,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2633,\n      columnNumber: 7\n    }, this);\n  }\n  return _jsxDEV(AuthContext.Provider, {\n    value: authValue,\n    children: _jsxDEV(NavigationContainer, {\n      children: !token ? _jsxDEV(Stack.Navigator, {\n        children: _jsxDEV(Stack.Screen, {\n          name: \"Login\",\n          component: LoginScreen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2644,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2643,\n        columnNumber: 11\n      }, this) : _jsxDEV(Stack.Navigator, {\n        children: [_jsxDEV(Stack.Screen, {\n          name: \"Tabs\",\n          component: TabsNav,\n          options: {\n            headerShown: false\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2648,\n          columnNumber: 13\n        }, this), _jsxDEV(Stack.Screen, {\n          name: \"NewLead\",\n          component: NewLeadScreen,\n          options: {\n            title: 'New Lead'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2649,\n          columnNumber: 13\n        }, this), _jsxDEV(Stack.Screen, {\n          name: \"EstimateEditor\",\n          component: EstimateEditorScreen,\n          options: {\n            title: 'Estimate'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2650,\n          columnNumber: 13\n        }, this), _jsxDEV(Stack.Screen, {\n          name: \"Signature\",\n          component: SignatureScreen,\n          options: {\n            title: 'Signature'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2651,\n          columnNumber: 13\n        }, this), _jsxDEV(Stack.Screen, {\n          name: \"UsersAdmin\",\n          component: UsersAdminScreen,\n          options: {\n            title: 'Users (Admin)'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2652,\n          columnNumber: 13\n        }, this), _jsxDEV(Stack.Screen, {\n          name: \"JobDetail\",\n          component: JobDetailScreen,\n          options: {\n            title: 'Job'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2653,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2647,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2641,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 2640,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"names":["React","useEffect","useState","createContext","useContext","useRef","useCallback","useMemo","NavigationContainer","useFocusEffect","createNativeStackNavigator","createBottomTabNavigator","Text","TextInput","Button","FlatList","TouchableOpacity","SafeAreaView","Alert","Image","ScrollView","RefreshControl","ActivityIndicator","ImagePicker","FileSystem","SQLite","Svg","Path","ViewShot","Platform","View","SecureStore","DateTimePicker","DateTimePickerAndroid","jsxDEV","_jsxDEV","API_URL","process","env","EXPO_PUBLIC_API_URL","initOfflineTables","database","transaction","tx","executeSql","e","db","getDb","OS","fn","execAsync","runAsync","openDatabaseSync","dbHandle","normalizeRole","role","r","String","toUpperCase","includes","AuthContext","useAuth","api","path","method","body","token","res","fetch","headers","Object","assign","Authorization","JSON","stringify","undefined","ok","Error","json","error","palette","background","surface","surfaceMuted","border","text","muted","primary","primaryStrong","success","warning","danger","info","spacing","step","typography","h1","h2","small","floatingShadow","select","ios","shadowColor","shadowOpacity","shadowRadius","shadowOffset","width","height","android","elevation","default","pillTone","NEW","fg","bg","label","CONTACTED","ESTIMATING","CONVERTED","CLOSED_LOST","SCHEDULED","IN_PROGRESS","COMPLETE","DONE","ON_HOLD","CANCELLED","DRAFT","SENT","PART_PAID","PAID","VOID","toneMap","formatCurrency","value","amount","Number","isNaN","toLocaleString","minimumFractionDigits","maximumFractionDigits","formatDate","d","Date","getTime","toLocaleDateString","month","day","isTaskCompleted","status","key","SurfaceCard","children","style","onPress","content","backgroundColor","borderRadius","borderWidth","borderColor","padding","fileName","_jsxFileName","lineNumber","columnNumber","activeOpacity","StatusPill","cfg","paddingHorizontal","paddingVertical","color","fontSize","fontWeight","SummaryCard","title","subtitle","tone","colors","textTransform","marginTop","SectionHeader","actionLabel","onAction","flexDirection","justifyContent","alignItems","marginBottom","QuickAction","toneStyles","textColor","toInputDate","dateValue","yyyy","getFullYear","mm","getMonth","padStart","dd","getDate","parseInputDate","parsed","DateInputField","onChange","placeholder","minimumDate","maximumDate","iosPickerVisible","setIosPickerVisible","applyDate","selectedDate","openPicker","baseDate","open","mode","event","selected","type","containerStyle","flex","display","DashboardScreen","navigation","loading","setLoading","refreshing","setRefreshing","leads","setLeads","jobs","setJobs","tasks","setTasks","invoiceSummary","setInvoiceSummary","lastUpdated","setLastUpdated","jobLookup","map","job","id","loadData","isPullRefresh","fetchLeads","data","forEach","l","description","Promise","resolve","_","rows","fallback","_array","fetchJobs","j","name","startDate","endDate","notes","fetchTasks","t","jobId","dueDate","fetchInvoiceSummary","all","onRefresh","newLeads","filter","length","activeJobs","openTasks","outstandingValue","outstanding","collectedValue","collected","overdueCount","topLeads","slice","topJobs","nextTasks","contentContainerStyle","paddingBottom","refreshControl","tintColor","flexWrap","flexBasis","navigate","idx","numberOfLines","columnGap","tab","lead","leadId","task","textAlign","toLocaleTimeString","hour","minute","SignaturePad","onCapturePng","points","setPoints","setPath","shotRef","ref","options","format","quality","result","onStartShouldSetResponder","onResponderMove","x","nativeEvent","locationX","y","locationY","p","onResponderRelease","base64","current","capture","stroke","strokeWidth","fill","SignatureScreen","route","estimateId","params","sigPng","setSigPng","save","alert","resp","signaturePngUrl","paymentLink","goBack","UsersAdminScreen","users","setUsers","email","setEmail","fullName","setFullName","setRole","load","invite","promote","newRole","remove","onChangeText","marginVertical","autoCapitalize","keyExtractor","u","renderItem","item","gap","InvoicesScreen","user","summary","setSummary","invoices","setInvoices","setFilter","isRefresh","summaryData","list","filters","filteredInvoices","inv","drafts","draftAmount","rowGap","minWidth","totalCount","f","payments","Payments","reduce","sum","balance","Math","max","statusKey","number","issuedAt","dueAt","JobsKanbanScreen","newJobName","setNewJobName","newJobStartDate","setNewJobStartDate","newJobDueDate","setNewJobDueDate","newJobNotes","setNewJobNotes","newCustomerName","setNewCustomerName","newCustomerPhone","setNewCustomerPhone","newCustomerEmail","setNewCustomerEmail","newAddressLine1","setNewAddressLine1","newAddressLine2","setNewAddressLine2","newCity","setNewCity","newStateCode","setNewStateCode","newZip","setNewZip","jobFormTab","setJobFormTab","statusOrder","resetForm","createJob","trim","hasCustomer","some","v","hasAddress","payload","customer","phone","billingAddress","jobsite","addressLine1","addressLine2","city","state","zip","created","prev","message","updateJobStatus","updated","removeJob","sortedJobs","normalize","rank","indexOf","parseDateSafe","sort","a","b","statusDiff","startA","startB","groupedJobs","groups","currentStatus","push","statusLabel","charAt","toLowerCase","quickStatusActions","inputStyle","jobTabs","renderJobFormFields","placeholderTextColor","keyboardType","multiline","minHeight","textAlignVertical","group","Customer","Jobsite","addressParts","Boolean","join","address","action","JobDetailScreen","jobName","setJobName","jobStartDate","setJobStartDate","jobEndDate","setJobEndDate","jobNotes","setJobNotes","jobCustomerName","setJobCustomerName","jobCustomerPhone","setJobCustomerPhone","jobCustomerEmail","setJobCustomerEmail","jobAddressLine1","setJobAddressLine1","jobAddressLine2","setJobAddressLine2","jobCity","setJobCity","jobStateCode","setJobStateCode","jobZip","setJobZip","changeOrders","setCO","setTitle","amountDelta","setAmountDelta","loadCO","loadJob","addCO","parseFloat","saveJobDetails","deleteJob","screen","JobTasks","JobSchedule","setDueDate","add","done","events","setEvents","startAt","setStartAt","endAt","setEndAt","ev","date","existing","timePartIndex","timePart","substring","processQueue","items","q","parse","dataUrl","txx","LeadsScreen","deleteLead","err","newLeadsCount","renderLeadCard","ListHeaderComponent","ListEmptyComponent","NewLeadScreen","setDescription","setStatus","customerName","setCustomerName","customerPhone","setCustomerPhone","customerEmail","setCustomerEmail","setAddressLine1","setAddressLine2","setCity","stateCode","setStateCode","setZip","showCustomerSection","setShowCustomerSection","showJobsiteSection","setShowJobsiteSection","statuses","buildPayload","createLeadOnline","replace","queueLead","submit","chipStyle","active","s","EstimateEditorScreen","setEstimateId","setItems","desc","setDesc","qty","setQty","price","setPrice","setNotes","photoUrl","setPhotoUrl","subtotal","setSubtotal","taxRate","setTaxRate","tax","setTax","total","setTotal","leadDetails","setLeadDetails","leadStatus","setLeadStatus","leadScope","setLeadScope","leadCustomerName","setLeadCustomerName","leadCustomerPhone","setLeadCustomerPhone","leadCustomerEmail","setLeadCustomerEmail","leadAddressLine1","setLeadAddressLine1","leadAddressLine2","setLeadAddressLine2","leadCity","setLeadCity","leadStateCode","setLeadStateCode","leadZip","setLeadZip","leadStatuses","loadLead","createEstimate","est","customerId","jobsiteId","addItem","unitPrice","toFixed","suggest","targetId","it","pickPhoto","launchImageLibraryAsync","canceled","assets","up","url","saveLeadDetails","approveAndSign","canEstimate","acc","source","uri","fileUri","documentDirectory","downloadAsync","ScheduleScreen","queueCount","setQueueCount","syncing","setSyncing","loadQueueCount","c","inRange","today","dt","start","setHours","setDate","getDay","end","filteredJobs","handleSync","option","MeScreen","setToken","Stack","Tabs","TabsNav","isAdmin","Navigator","screenOptions","headerShown","tabBarActiveTintColor","tabBarStyle","Screen","component","LoginScreen","password","setPassword","busy","setBusy","setUser","login","tok","accessToken","normalizedUser","setItemAsync","secureTextEntry","disabled","App","booting","setBooting","mounted","usr","getItemAsync","authValue","deleteItemAsync","Provider"],"sources":["C:/Users/Tyler/Downloads/PrecisionTracker-v4-wired/PrecisionTracker/mobile/App.js"],"sourcesContent":["\r\nimport React, { useEffect, useState, createContext, useContext, useRef, useCallback, useMemo } from 'react';\r\nimport { NavigationContainer, useFocusEffect } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport {Text, TextInput, Button, FlatList, TouchableOpacity, SafeAreaView, Alert, Image, ScrollView, RefreshControl, ActivityIndicator } from 'react-native';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport * as FileSystem from 'expo-file-system';\r\nimport * as SQLite from 'expo-sqlite';\r\nimport Svg, { Path } from 'react-native-svg';\r\nimport ViewShot from 'react-native-view-shot';\r\nimport { Platform, View } from 'react-native';\r\nimport * as SecureStore from 'expo-secure-store';\r\nimport DateTimePicker, { DateTimePickerAndroid } from '@react-native-community/datetimepicker';\r\n// import * as SQLite from 'expo-sqlite';\r\n\r\n\r\nconst API_URL = process.env.EXPO_PUBLIC_API_URL || 'http://localhost:4000';\r\n// const db = SQLite.openDatabase('offline.db');\r\n\r\n// function initDB(){\r\n//   db.transaction(tx => {\r\n//     tx.executeSql('CREATE TABLE IF NOT EXISTS queue (id INTEGER PRIMARY KEY AUTOINCREMENT, type TEXT, payload TEXT);');\r\n//     tx.executeSql('CREATE TABLE IF NOT EXISTS uploads (id INTEGER PRIMARY KEY AUTOINCREMENT, dataUrl TEXT);');\r\n//     tx.executeSql('CREATE TABLE IF NOT EXISTS leads_cache (id INTEGER PRIMARY KEY, description TEXT, status TEXT);');\r\n//   });\r\n// }\r\n\r\nfunction initOfflineTables(database){\r\n  try {\r\n    if (!database || typeof database.transaction !== 'function') return;\r\n    database.transaction(tx => {\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS queue (id INTEGER PRIMARY KEY AUTOINCREMENT, type TEXT, payload TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS uploads (id INTEGER PRIMARY KEY AUTOINCREMENT, dataUrl TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS leads_cache (id INTEGER PRIMARY KEY, description TEXT, status TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS jobs_cache (id INTEGER PRIMARY KEY, name TEXT, status TEXT, startDate TEXT, endDate TEXT, notes TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS tasks_cache (id INTEGER PRIMARY KEY, jobId INTEGER, title TEXT, status TEXT, dueDate TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS calendar_cache (id INTEGER PRIMARY KEY, jobId INTEGER, title TEXT, startAt TEXT, endAt TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS estimates_cache (id INTEGER PRIMARY KEY, leadId INTEGER, subtotal REAL, taxRate REAL, total REAL, status TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS estimate_items_cache (id INTEGER PRIMARY KEY, estimateId INTEGER, description TEXT, qty REAL, unitPrice REAL);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS change_orders_cache (id INTEGER PRIMARY KEY, jobId INTEGER, title TEXT, amountDelta REAL, status TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS users_cache (id INTEGER PRIMARY KEY, email TEXT, fullName TEXT, role TEXT);');\r\n    });\r\n  } catch (e) {\r\n    // best-effort; avoid noisy alerts in offline mode\r\n  }\r\n}\r\n\r\nlet db;\r\nexport function getDb() {\r\n  if (db) return db;\r\n\r\n  // Web: safe no-op DB\r\n  if (Platform.OS === 'web') {\r\n    db = {\r\n      transaction: (fn) => fn({ executeSql: () => {} }),\r\n      execAsync: async () => {},\r\n      runAsync: async () => {},\r\n    };\r\n    return db;\r\n  }\r\n\r\n  // SDK 51+: prefer sync, then async; DO NOT reference openDatabase (removed)\r\n  if ('openDatabaseSync' in SQLite) {\r\n    db = SQLite.openDatabaseSync('offline.db');\r\n    return db;\r\n  }\r\n\r\n  if ('openDatabaseAsync' in SQLite) {\r\n    // Minimal adapter so existing code won't crash; refactor later if needed\r\n    db = {\r\n      transaction: (fn) => fn({ executeSql: () => {} }),\r\n      execAsync: async () => {},\r\n      runAsync: async () => {},\r\n    };\r\n    return db;\r\n  }\r\n\r\n  // Safety fallback\r\n  db = {\r\n    transaction: (fn) => fn({ executeSql: () => {} }),\r\n    execAsync: async () => {},\r\n    runAsync: async () => {},\r\n  };\r\n  return db;\r\n}\r\n\r\n// DB handle\r\nconst dbHandle = getDb();\r\ninitOfflineTables(dbHandle);\r\n\r\n// ---------- Helpers ----------\r\nconst normalizeRole = (role) => {\r\n  if (!role) return 'TECH';\r\n  const r = String(role).toUpperCase();\r\n  if (['ADMIN','ESTIMATOR','SUPERVISOR','TECH'].includes(r)) return r;\r\n  if (r === 'STANDARD' || r === 'USER') return 'TECH';\r\n  return r;\r\n};\r\n\r\nconst AuthContext = createContext(null);\r\nfunction useAuth(){ return useContext(AuthContext); }\r\nasync function api(path, method='GET', body, token){\r\n  const res = await fetch(`${API_URL}${path}`, {\r\n    method, headers: { 'Content-Type':'application/json', ...(token?{Authorization:`Bearer ${token}`}:{}) },\r\n    body: body?JSON.stringify(body):undefined\r\n  });\r\n  if(!res.ok){ throw new Error((await res.json()).error || 'Request failed'); }\r\n  return res.json();\r\n}\r\n\r\n// ---------- Design tokens ----------\r\nconst palette = {\r\n  background: '#f4f6f8',\r\n  surface: '#ffffff',\r\n  surfaceMuted: '#f1f5f9',\r\n  border: '#e2e8f0',\r\n  text: '#0f172a',\r\n  muted: '#5f6b7d',\r\n  primary: '#2c8a7d',\r\n  primaryStrong: '#1f6a60',\r\n  success: '#219653',\r\n  warning: '#f59e0b',\r\n  danger: '#d14343',\r\n  info: '#2563eb',\r\n};\r\n\r\nconst spacing = (step = 1) => step * 8;\r\n\r\nconst typography = {\r\n  h1: 24,\r\n  h2: 18,\r\n  body: 15,\r\n  small: 12,\r\n};\r\n\r\nconst floatingShadow = Platform.select({\r\n  ios: { shadowColor: '#0f172a', shadowOpacity: 0.08, shadowRadius: 14, shadowOffset: { width: 0, height: 6 } },\r\n  android: { elevation: 2 },\r\n  default: {},\r\n});\r\n\r\nconst pillTone = {\r\n  NEW: { fg: palette.info, bg: '#e6eeff', label: 'New' },\r\n  CONTACTED: { fg: palette.primary, bg: '#e6f4f2', label: 'Contacted' },\r\n  ESTIMATING: { fg: palette.warning, bg: '#fdf1d6', label: 'Estimating' },\r\n  CONVERTED: { fg: palette.success, bg: '#e6f6ec', label: 'Converted' },\r\n  CLOSED_LOST: { fg: palette.muted, bg: '#e2e8f0', label: 'Lost' },\r\n  SCHEDULED: { fg: palette.primary, bg: '#e6f4f2', label: 'Scheduled' },\r\n  IN_PROGRESS: { fg: palette.info, bg: '#e6eeff', label: 'In progress' },\r\n  COMPLETE: { fg: palette.success, bg: '#e6f6ec', label: 'Complete' },\r\n  DONE: { fg: palette.success, bg: '#e6f6ec', label: 'Complete' },\r\n  ON_HOLD: { fg: palette.warning, bg: '#fdf1d6', label: 'On hold' },\r\n  CANCELLED: { fg: palette.muted, bg: '#e2e8f0', label: 'Cancelled' },\r\n  DRAFT: { fg: palette.muted, bg: '#e2e8f0', label: 'Draft' },\r\n  SENT: { fg: palette.info, bg: '#e6eeff', label: 'Sent' },\r\n  PART_PAID: { fg: palette.warning, bg: '#fdf1d6', label: 'Part paid' },\r\n  PAID: { fg: palette.success, bg: '#e6f6ec', label: 'Paid' },\r\n  VOID: { fg: palette.muted, bg: '#f1f5f9', label: 'Void' },\r\n};\r\n\r\nconst toneMap = {\r\n  primary: { fg: palette.primaryStrong, bg: '#e0f3f0' },\r\n  success: { fg: palette.success, bg: '#e6f6ec' },\r\n  warning: { fg: palette.warning, bg: '#fdf1d6' },\r\n  danger: { fg: palette.danger, bg: '#fde4e4' },\r\n  info: { fg: palette.info, bg: '#e6eeff' },\r\n};\r\n\r\nconst formatCurrency = (value) => {\r\n  const amount = Number(value || 0);\r\n  if (Number.isNaN(amount)) return '$0';\r\n  return `$${amount.toLocaleString(undefined, { minimumFractionDigits: amount % 1 ? 2 : 0, maximumFractionDigits: 2 })}`;\r\n};\r\n\r\nconst formatDate = (value) => {\r\n  if (!value) return null;\r\n  const d = new Date(value);\r\n  if (Number.isNaN(d.getTime())) return value;\r\n  return d.toLocaleDateString(undefined, { month: 'short', day: 'numeric' });\r\n};\r\n\r\nconst isTaskCompleted = (status) => {\r\n  if (!status) return false;\r\n  const key = String(status).toUpperCase();\r\n  return key === 'DONE' || key === 'COMPLETE';\r\n};\r\n\r\nfunction SurfaceCard({ children, style, onPress }) {\r\n  const content = (\r\n    <View\r\n      style={[\r\n        { backgroundColor: palette.surface, borderRadius: 16, borderWidth: 1, borderColor: palette.border, padding: spacing(2) },\r\n        floatingShadow,\r\n        style,\r\n      ]}\r\n    >\r\n      {children}\r\n    </View>\r\n  );\r\n  if (!onPress) return content;\r\n  return (\r\n    <TouchableOpacity activeOpacity={0.85} onPress={onPress}>\r\n      {content}\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n\r\nfunction StatusPill({ status }) {\r\n  if (!status) return null;\r\n  const key = String(status).toUpperCase();\r\n  const cfg = pillTone[key] || { fg: palette.muted, bg: '#e2e8f0', label: status };\r\n  return (\r\n    <View style={{ backgroundColor: cfg.bg, borderRadius: 999, paddingHorizontal: spacing(1.5), paddingVertical: spacing(0.5) }}>\r\n      <Text style={{ color: cfg.fg, fontSize: typography.small, fontWeight: '600' }}>{cfg.label}</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction SummaryCard({ title, value, subtitle, tone = 'primary', onPress }) {\r\n  const colors = toneMap[tone] || toneMap.primary;\r\n  return (\r\n    <SurfaceCard\r\n      onPress={onPress}\r\n      style={{ backgroundColor: colors.bg, borderColor: 'transparent', padding: spacing(2.5) }}\r\n    >\r\n      <Text style={{ color: palette.muted, fontSize: typography.small, textTransform: 'uppercase', fontWeight: '700' }}>{title}</Text>\r\n      <Text style={{ color: colors.fg, fontSize: 28, fontWeight: '800', marginTop: spacing(0.5) }}>{value}</Text>\r\n      {subtitle ? <Text style={{ color: palette.muted, fontSize: typography.small, marginTop: spacing(0.5) }}>{subtitle}</Text> : null}\r\n    </SurfaceCard>\r\n  );\r\n}\r\n\r\nfunction SectionHeader({ title, actionLabel, onAction }) {\r\n  return (\r\n    <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', marginBottom: spacing(1.5) }}>\r\n      <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight: '700' }}>{title}</Text>\r\n      {actionLabel && onAction ? (\r\n        <TouchableOpacity onPress={onAction} style={{ paddingHorizontal: spacing(1), paddingVertical: spacing(0.5) }}>\r\n          <Text style={{ color: palette.primary, fontWeight: '600', fontSize: typography.small }}>{actionLabel}</Text>\r\n        </TouchableOpacity>\r\n      ) : null}\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction QuickAction({ label, onPress, tone = 'primary' }) {\r\n  const toneStyles = (() => {\r\n    switch (tone) {\r\n      case 'danger':\r\n        return { borderColor: '#fecdd3', backgroundColor: '#fee2e2', textColor: palette.danger };\r\n      case 'success':\r\n        return { borderColor: '#bbf7d0', backgroundColor: '#dcfce7', textColor: palette.success };\r\n      case 'warning':\r\n        return { borderColor: '#fde68a', backgroundColor: '#fef3c7', textColor: palette.warning };\r\n      case 'muted':\r\n        return { borderColor: palette.border, backgroundColor: palette.surface, textColor: palette.muted };\r\n      default:\r\n        return { borderColor: palette.border, backgroundColor: palette.surfaceMuted, textColor: palette.primary };\r\n    }\r\n  })();\r\n  return (\r\n    <TouchableOpacity\r\n      onPress={onPress}\r\n      activeOpacity={0.85}\r\n      style={{\r\n        borderRadius: 10,\r\n        paddingHorizontal: spacing(1.5),\r\n        paddingVertical: spacing(0.75),\r\n        borderWidth: 1,\r\n        borderColor: toneStyles.borderColor,\r\n        backgroundColor: toneStyles.backgroundColor,\r\n      }}\r\n    >\r\n      <Text style={{ color: toneStyles.textColor, fontWeight: '600', fontSize: typography.small }}>{label}</Text>\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n\r\nconst toInputDate = (dateValue) => {\r\n  const d = dateValue instanceof Date ? dateValue : new Date(dateValue);\r\n  if (Number.isNaN(d.getTime())) return '';\r\n  const yyyy = d.getFullYear();\r\n  const mm = String(d.getMonth() + 1).padStart(2, '0');\r\n  const dd = String(d.getDate()).padStart(2, '0');\r\n  return `${yyyy}-${mm}-${dd}`;\r\n};\r\n\r\nconst parseInputDate = (value) => {\r\n  if (!value) return null;\r\n  const parsed = new Date(value);\r\n  if (Number.isNaN(parsed.getTime())) return null;\r\n  return parsed;\r\n};\r\n\r\nfunction DateInputField({ value, onChange, placeholder = 'Select date', minimumDate, maximumDate, style }) {\r\n  const [iosPickerVisible, setIosPickerVisible] = useState(false);\r\n  const parsed = parseInputDate(value) || new Date();\r\n\r\n  const applyDate = (selectedDate) => {\r\n    if (!selectedDate) return;\r\n    onChange(toInputDate(selectedDate));\r\n  };\r\n\r\n  const openPicker = () => {\r\n    const baseDate = parseInputDate(value) || new Date();\r\n    if (Platform.OS === 'android') {\r\n      DateTimePickerAndroid.open({\r\n        value: baseDate,\r\n        mode: 'date',\r\n        minimumDate: minimumDate ? parseInputDate(minimumDate) || undefined : undefined,\r\n        maximumDate: maximumDate ? parseInputDate(maximumDate) || undefined : undefined,\r\n        onChange: (event, selected) => {\r\n          if (event.type === 'set' && selected) applyDate(selected);\r\n        },\r\n      });\r\n    } else {\r\n      setIosPickerVisible(true);\r\n    }\r\n  };\r\n\r\n  const containerStyle = [\r\n    { marginBottom: spacing(1.5) },\r\n    style,\r\n  ];\r\n\r\n  return (\r\n    <View style={containerStyle}>\r\n      <TouchableOpacity\r\n        onPress={openPicker}\r\n        activeOpacity={0.85}\r\n        style={{\r\n          borderWidth: 1,\r\n          borderColor: palette.border,\r\n          borderRadius: 12,\r\n          backgroundColor: palette.surfaceMuted,\r\n          flexDirection: 'row',\r\n          alignItems: 'center',\r\n          paddingHorizontal: spacing(2),\r\n          paddingVertical: spacing(1.5),\r\n        }}\r\n      >\r\n        <Text style={{ flex: 1, color: value ? palette.text : palette.muted, fontSize: typography.body }}>\r\n          {value || placeholder}\r\n        </Text>\r\n        <Text style={{ fontSize: typography.h2 - 6 }}>📅</Text>\r\n      </TouchableOpacity>\r\n      {Platform.OS === 'ios' && iosPickerVisible ? (\r\n        <DateTimePicker\r\n          value={parsed}\r\n          mode=\"date\"\r\n          display=\"inline\"\r\n          onChange={(event, selected) => {\r\n            if (event.type === 'set' && selected) {\r\n              applyDate(selected);\r\n            }\r\n            setIosPickerVisible(false);\r\n          }}\r\n          style={{ marginTop: spacing(1) }}\r\n          minimumDate={minimumDate ? parseInputDate(minimumDate) || undefined : undefined}\r\n          maximumDate={maximumDate ? parseInputDate(maximumDate) || undefined : undefined}\r\n        />\r\n      ) : null}\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction DashboardScreen({ navigation }) {\r\n  const { token } = useAuth();\r\n  const [loading, setLoading] = useState(true);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [leads, setLeads] = useState([]);\r\n  const [jobs, setJobs] = useState([]);\r\n  const [tasks, setTasks] = useState([]);\r\n  const [invoiceSummary, setInvoiceSummary] = useState(null);\r\n  const [lastUpdated, setLastUpdated] = useState(null);\r\n\r\n  const jobLookup = useMemo(() => {\r\n    const map = {};\r\n    for (const job of jobs) {\r\n      if (job?.id != null) {\r\n        map[job.id] = job;\r\n      }\r\n    }\r\n    return map;\r\n  }, [jobs]);\r\n\r\n  const loadData = useCallback(async (isPullRefresh = false) => {\r\n    if (!token) return;\r\n    isPullRefresh ? setRefreshing(true) : setLoading(true);\r\n\r\n    const fetchLeads = async () => {\r\n      try {\r\n        const data = await api('/leads', 'GET', null, token);\r\n        setLeads(data);\r\n        db.transaction(tx => {\r\n          tx.executeSql && tx.executeSql('DELETE FROM leads_cache;');\r\n          data.forEach(l =>\r\n            tx.executeSql && tx.executeSql(\r\n              'INSERT OR REPLACE INTO leads_cache (id, description, status) VALUES (?,?,?)',\r\n              [l.id, l.description || '', l.status || 'NEW']\r\n            )\r\n          );\r\n        });\r\n        return data;\r\n      } catch (e) {\r\n        return await new Promise(resolve => {\r\n          db.transaction(tx =>\r\n            tx.executeSql && tx.executeSql(\r\n              'SELECT id, description, status FROM leads_cache',\r\n              [],\r\n              (_, { rows }) => {\r\n                const fallback = rows?._array || [];\r\n                setLeads(fallback);\r\n                resolve(fallback);\r\n              }\r\n            )\r\n          );\r\n        });\r\n      }\r\n    };\r\n\r\n    const fetchJobs = async () => {\r\n      try {\r\n        const data = await api('/jobs', 'GET', null, token);\r\n        setJobs(data);\r\n        db.transaction(tx => {\r\n          tx.executeSql && tx.executeSql('DELETE FROM jobs_cache;');\r\n          data.forEach(j =>\r\n            tx.executeSql && tx.executeSql(\r\n              'INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)',\r\n              [j.id, j.name || '', j.status || 'SCHEDULED', j.startDate || '', j.endDate || '', j.notes || '']\r\n            )\r\n          );\r\n        });\r\n        return data;\r\n      } catch (e) {\r\n        return await new Promise(resolve => {\r\n          db.transaction(tx =>\r\n            tx.executeSql && tx.executeSql(\r\n              'SELECT id, name, status, startDate, endDate, notes FROM jobs_cache',\r\n              [],\r\n              (_, { rows }) => {\r\n                const fallback = rows?._array || [];\r\n                setJobs(fallback);\r\n                resolve(fallback);\r\n              }\r\n            )\r\n          );\r\n        });\r\n      }\r\n    };\r\n\r\n    const fetchTasks = async () => {\r\n      try {\r\n        const data = await api('/tasks', 'GET', null, token);\r\n        setTasks(data);\r\n        db.transaction(tx => {\r\n          data.forEach(t =>\r\n            tx.executeSql && tx.executeSql(\r\n              'INSERT OR REPLACE INTO tasks_cache (id, jobId, title, status, dueDate) VALUES (?,?,?,?,?)',\r\n              [t.id, t.jobId || null, t.title || '', t.status || 'TODO', t.dueDate || '']\r\n            )\r\n          );\r\n        });\r\n        return data;\r\n      } catch (e) {\r\n        return await new Promise(resolve => {\r\n          db.transaction(tx =>\r\n            tx.executeSql && tx.executeSql(\r\n              'SELECT id, jobId, title, status, dueDate FROM tasks_cache ORDER BY id DESC',\r\n              [],\r\n              (_, { rows }) => {\r\n                const fallback = rows?._array || [];\r\n                setTasks(fallback);\r\n                resolve(fallback);\r\n              }\r\n            )\r\n          );\r\n        });\r\n      }\r\n    };\r\n\r\n    const fetchInvoiceSummary = async () => {\r\n      try {\r\n        const data = await api('/invoices/summary', 'GET', null, token);\r\n        setInvoiceSummary(data);\r\n        return data;\r\n      } catch (e) {\r\n        return null;\r\n      }\r\n    };\r\n\r\n    try {\r\n      await Promise.all([fetchLeads(), fetchJobs(), fetchTasks(), fetchInvoiceSummary()]);\r\n      setLastUpdated(new Date());\r\n    } finally {\r\n      isPullRefresh ? setRefreshing(false) : setLoading(false);\r\n    }\r\n  }, [token]);\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      loadData(false);\r\n    }, [loadData])\r\n  );\r\n\r\n  const onRefresh = useCallback(() => loadData(true), [loadData]);\r\n\r\n  const newLeads = leads.filter(l => (l.status || '').toUpperCase() === 'NEW').length;\r\n  const activeJobs = jobs.filter(j => ['SCHEDULED', 'IN_PROGRESS'].includes((j.status || '').toUpperCase())).length;\r\n  const openTasks = tasks.filter(t => !isTaskCompleted(t.status)).length;\r\n  const outstandingValue = invoiceSummary?.outstanding || 0;\r\n  const collectedValue = invoiceSummary?.collected || 0;\r\n  const overdueCount = invoiceSummary?.overdueCount || 0;\r\n\r\n  const topLeads = leads.slice(0, 3);\r\n  const topJobs = jobs.slice(0, 3);\r\n  const nextTasks = tasks.filter(t => !isTaskCompleted(t.status)).slice(0, 3);\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex: 1, backgroundColor: palette.background }}>\r\n      <ScrollView\r\n        contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(5) }}\r\n        refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} tintColor={palette.primary} />}\r\n      >\r\n        <Text style={{ color: palette.text, fontSize: typography.h1, fontWeight: '700', marginBottom: spacing(2) }}>Dashboard</Text>\r\n\r\n        <View style={{ flexDirection: 'row', flexWrap: 'wrap', justifyContent: 'space-between' }}>\r\n          <View style={{ flexBasis: '48%', marginBottom: spacing(2) }}>\r\n            <SummaryCard\r\n              title=\"Leads\"\r\n              value={leads.length}\r\n              subtitle={`${newLeads} new to triage`}\r\n              tone=\"info\"\r\n              onPress={() => navigation.navigate('Leads')}\r\n            />\r\n          </View>\r\n          <View style={{ flexBasis: '48%', marginBottom: spacing(2) }}>\r\n            <SummaryCard\r\n              title=\"Jobs\"\r\n              value={jobs.length}\r\n              subtitle={`${activeJobs} active`}\r\n              tone=\"primary\"\r\n              onPress={() => navigation.navigate('Jobs')}\r\n            />\r\n          </View>\r\n          <View style={{ flexBasis: '48%', marginBottom: spacing(2) }}>\r\n            <SummaryCard\r\n              title=\"Tasks\"\r\n              value={openTasks}\r\n              subtitle={`Open of ${tasks.length}`}\r\n              tone=\"warning\"\r\n              onPress={() => navigation.navigate('Jobs')}\r\n            />\r\n          </View>\r\n          <View style={{ flexBasis: '48%', marginBottom: spacing(2) }}>\r\n            <SummaryCard\r\n              title=\"Invoices\"\r\n              value={formatCurrency(outstandingValue)}\r\n              subtitle={`${overdueCount} overdue | ${formatCurrency(collectedValue)} collected`}\r\n              tone=\"success\"\r\n              onPress={() => navigation.navigate('Invoices')}\r\n            />\r\n          </View>\r\n        </View>\r\n\r\n        {loading && !refreshing ? (\r\n          <SurfaceCard style={{ alignItems: 'center', justifyContent: 'center', paddingVertical: spacing(6) }}>\r\n            <ActivityIndicator color={palette.primary} />\r\n            <Text style={{ color: palette.muted, marginTop: spacing(1.5) }}>Loading summary...</Text>\r\n          </SurfaceCard>\r\n        ) : null}\r\n\r\n        <SectionHeader title=\"Next Jobs\" actionLabel=\"View all\" onAction={() => navigation.navigate('Jobs')} />\r\n        <SurfaceCard style={{ marginBottom: spacing(3) }}>\r\n          {topJobs.length === 0 ? (\r\n            <Text style={{ color: palette.muted }}>No jobs yet. Create one from the Jobs tab.</Text>\r\n          ) : (\r\n            topJobs.map((job, idx) => (\r\n              <View key={job.id || idx} style={{ marginBottom: idx === topJobs.length - 1 ? 0 : spacing(2.5) }}>\r\n                <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                  <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight: '600' }}>{job.name || `Job #${job.id}`}</Text>\r\n                  <StatusPill status={job.status || 'SCHEDULED'} />\r\n                </View>\r\n                {job.startDate || job.endDate ? (\r\n                  <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>\r\n                    {job.startDate ? `Start ${formatDate(job.startDate)}` : ''}{job.startDate && job.endDate ? ' | ' : ''}{job.endDate ? `Due ${formatDate(job.endDate)}` : ''}\r\n                  </Text>\r\n                ) : null}\r\n                {job.notes ? (\r\n                  <Text style={{ color: palette.muted, marginTop: spacing(1) }} numberOfLines={2}>{job.notes}</Text>\r\n                ) : null}\r\n                <View style={{ flexDirection: 'row', columnGap: spacing(1.5), marginTop: spacing(1.5) }}>\r\n                  <QuickAction label=\"Open job\" onPress={() => navigation.navigate('JobDetail', { jobId: job.id })} />\r\n                  <QuickAction label=\"Tasks\" onPress={() => navigation.navigate('JobDetail', { jobId: job.id, tab: 'tasks' })} />\r\n                </View>\r\n              </View>\r\n            ))\r\n          )}\r\n        </SurfaceCard>\r\n\r\n        <SectionHeader title=\"Hot Leads\" actionLabel=\"Leads\" onAction={() => navigation.navigate('Leads')} />\r\n        <SurfaceCard style={{ marginBottom: spacing(3) }}>\r\n          {topLeads.length === 0 ? (\r\n            <Text style={{ color: palette.muted }}>No leads yet. Capture leads to keep the funnel full.</Text>\r\n          ) : (\r\n            topLeads.map((lead, idx) => (\r\n              <View key={lead.id || idx} style={{ marginBottom: idx === topLeads.length - 1 ? 0 : spacing(2) }}>\r\n                <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                  <Text style={{ color: palette.text, fontWeight: '600', fontSize: typography.h2 }}>Lead #{lead.id}</Text>\r\n                  <StatusPill status={lead.status || 'NEW'} />\r\n                </View>\r\n                <Text style={{ color: palette.muted, marginTop: spacing(0.5) }} numberOfLines={3}>\r\n                  {lead.description || 'No scope captured yet.'}\r\n                </Text>\r\n                <View style={{ flexDirection: 'row', columnGap: spacing(1.5), marginTop: spacing(1.5) }}>\r\n                  <QuickAction label=\"Follow up\" onPress={() => navigation.navigate('EstimateEditor', { leadId: lead.id })} />\r\n                  <QuickAction label=\"Convert\" onPress={() => navigation.navigate('Jobs')} />\r\n                </View>\r\n              </View>\r\n            ))\r\n          )}\r\n        </SurfaceCard>\r\n\r\n        <SectionHeader title=\"Open Tasks\" actionLabel=\"Jobs\" onAction={() => navigation.navigate('Jobs')} />\r\n        <SurfaceCard>\r\n          {nextTasks.length === 0 ? (\r\n            <Text style={{ color: palette.muted }}>All clear. Add tasks from a job to keep crews aligned.</Text>\r\n          ) : (\r\n            nextTasks.map((task, idx) => (\r\n              <View key={task.id || idx} style={{ marginBottom: idx === nextTasks.length - 1 ? 0 : spacing(2) }}>\r\n                <Text style={{ color: palette.text, fontWeight: '600' }}>{task.title || 'Task'}</Text>\r\n                {task.jobId ? (\r\n                  <Text style={{ color: palette.muted, marginTop: spacing(0.25) }}>\r\n                    {jobLookup[task.jobId]?.name || `Job #${task.jobId}`}\r\n                  </Text>\r\n                ) : (\r\n                  <Text style={{ color: palette.muted, marginTop: spacing(0.25) }}>Unassigned job</Text>\r\n                )}\r\n                <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>\r\n                  {task.dueDate ? `Due ${formatDate(task.dueDate)}` : 'No due date'}\r\n                </Text>\r\n                <View style={{ flexDirection: 'row', columnGap: spacing(1.5), marginTop: spacing(1.5) }}>\r\n                  <QuickAction\r\n                    label=\"Mark done\"\r\n                    onPress={() => navigation.navigate('JobDetail', { jobId: task.jobId })}\r\n                  />\r\n                  <QuickAction\r\n                    label=\"View job\"\r\n                    onPress={() => navigation.navigate('JobDetail', { jobId: task.jobId })}\r\n                  />\r\n                </View>\r\n              </View>\r\n            ))\r\n          )}\r\n        </SurfaceCard>\r\n\r\n        {lastUpdated ? (\r\n          <Text style={{ color: palette.muted, fontSize: typography.small, marginTop: spacing(2), textAlign: 'center' }}>\r\n            Updated {lastUpdated.toLocaleTimeString([], { hour: 'numeric', minute: '2-digit' })}\r\n          </Text>\r\n        ) : null}\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\n// ---------- Signature Pad to PNG ----------\r\nfunction SignaturePad({ onCapturePng }){\r\n  const [points, setPoints] = useState([]);\r\n  const [path, setPath] = useState('');\r\n  const shotRef = useRef(null);\r\n  return (\r\n    <ViewShot ref={shotRef} options={{ format: 'png', quality: 0.9, result: 'base64' }} style={{ height:220, borderWidth:1, backgroundColor:'#fff' }}>\r\n      <View\r\n        onStartShouldSetResponder={()=>true}\r\n        onResponderMove={(e)=>{\r\n          const x = e.nativeEvent.locationX, y = e.nativeEvent.locationY;\r\n          setPath(p => p + (p ? ` L ${x} ${y}` : ` M ${x} ${y}`));\r\n        }}\r\n        onResponderRelease={async ()=>{\r\n          const base64 = await shotRef.current.capture();\r\n          onCapturePng && onCapturePng('data:image/png;base64,' + base64);\r\n        }}\r\n        style={{ flex:1 }}\r\n      >\r\n        <Svg height=\"100%\" width=\"100%\"><Path d={path} stroke=\"black\" strokeWidth=\"2\" fill=\"none\" /></Svg>\r\n      </View>\r\n    </ViewShot>\r\n  );\r\n}\r\n\r\nfunction SignatureScreen({ route, navigation }){\r\n  const { token } = useAuth();\r\n  const { estimateId } = route.params;\r\n  const [sigPng, setSigPng] = useState(null);\r\n  const save = async () => {\r\n    if(!sigPng){ Alert.alert('Please sign first'); return; }\r\n    const resp = await api(`/estimates/${estimateId}/approve`, 'POST', { signaturePngUrl: sigPng }, token);\r\n    Alert.alert('Approved', `Payment link:\r\n${(resp && resp.paymentLink) ? resp.paymentLink : 'Unavailable'}`); navigation.goBack();\r\n  };\r\n  return (\r\n    <SafeAreaView style={{ padding:16 }}>\r\n      <Text style={{ fontSize:18, marginBottom:8 }}>Sign Estimate #{estimateId}</Text>\r\n      <SignaturePad onCapturePng={setSigPng} />\r\n      <View style={{ height:12 }} />\r\n      <Button title=\"Save Signature\" onPress={save} />\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\n// ---------- Admin: Users ----------\r\nfunction UsersAdminScreen(){\r\n  const { token } = useAuth();\r\n  const [users, setUsers] = useState([]);\r\n  const [email, setEmail] = useState('');\r\n  const [fullName, setFullName] = useState('');\r\n  const [role, setRole] = useState('TECH');\r\n  const load = async ()=> setUsers(await api('/users','GET',null,token));\r\n  useEffect(()=>{ load(); },[]);\r\n  const invite = async ()=>{\r\n    await api('/users','POST', { email, fullName, role: normalizeRole(role) }, token);\r\n    setEmail(''); setFullName(''); setRole('TECH'); load();\r\n  };\r\n  const promote = async (id, newRole)=>{\r\n    await api(`/users/${id}`,'PATCH',{ role: normalizeRole(newRole) }, token); load();\r\n  };\r\n  const remove = async (id) => {\r\n    Alert.alert('Delete user', 'Are you sure?', [\r\n      { text: 'Cancel', style: 'cancel' },\r\n      { text: 'Delete', style: 'destructive', onPress: async ()=>{ await api(`/users/${id}`,'DELETE',null,token); load(); } }\r\n    ]);\r\n  };\r\n  return (\r\n    <SafeAreaView style={{ flex:1, padding:16 }}>\r\n      <Text style={{ fontSize:18, fontWeight:'600' }}>Invite User</Text>\r\n      <TextInput placeholder=\"Full name\" value={fullName} onChangeText={setFullName} style={{ borderWidth:1, padding:8, marginVertical:6 }} />\r\n      <TextInput placeholder=\"Email\" value={email} onChangeText={setEmail} autoCapitalize='none' style={{ borderWidth:1, padding:8, marginVertical:6 }} />\r\n      <TextInput placeholder=\"Role (ADMIN/ESTIMATOR/SUPERVISOR/TECH)\" value={role} onChangeText={setRole} style={{ borderWidth:1, padding:8, marginVertical:6 }} />\r\n      <Button title=\"Create User\" onPress={invite} />\r\n      <View style={{ height:16 }} />\r\n      <FlatList data={users} keyExtractor={u=>String(u.id)} renderItem={({item}) => (\r\n        <View style={{ padding:12, borderWidth:1, marginBottom:8 }}>\r\n          <Text style={{ fontWeight:'600' }}>{item.fullName || item.email}</Text>\r\n          <Text>{item.email}</Text>\r\n          <Text>Role: {item.role}</Text>\r\n          <View style={{ flexDirection:'row', gap:8, marginTop:8, flexWrap:'wrap' }}>\r\n            <Button title=\"Admin\" onPress={()=>promote(item.id,'ADMIN')} />\r\n            <Button title=\"Estimator\" onPress={()=>promote(item.id,'ESTIMATOR')} />\r\n            <Button title=\"Supervisor\" onPress={()=>promote(item.id,'SUPERVISOR')} />\r\n            <Button title=\"Tech\" onPress={()=>promote(item.id,'TECH')} />\r\n            <View style={{ width:8 }} />\r\n            <Button title=\"Delete\" color=\"#c00\" onPress={()=>remove(item.id)} />\r\n          </View>\r\n        </View>\r\n      )}/>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\n// ---------- Jobs Kanban + Change Orders ----------\r\nfunction InvoicesScreen({ navigation }){\r\n  const { token, user } = useAuth();\r\n  const [loading, setLoading] = useState(true);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [summary, setSummary] = useState(null);\r\n  const [invoices, setInvoices] = useState([]);\r\n  const [filter, setFilter] = useState('ALL');\r\n\r\n  const load = useCallback(async (isRefresh = false) => {\r\n    if (!token) return;\r\n    isRefresh ? setRefreshing(true) : setLoading(true);\r\n    try {\r\n      const [summaryData, list] = await Promise.all([\r\n        api('/invoices/summary', 'GET', null, token),\r\n        api('/invoices', 'GET', null, token),\r\n      ]);\r\n      setSummary(summaryData);\r\n      setInvoices(list);\r\n    } catch (e) {\r\n      // keep prior data on failure\r\n    } finally {\r\n      isRefresh ? setRefreshing(false) : setLoading(false);\r\n    }\r\n  }, [token]);\r\n\r\n  useFocusEffect(useCallback(() => {\r\n    if (user?.role === 'ADMIN') {\r\n      load(false);\r\n    }\r\n  }, [load, user?.role]));\r\n\r\n  const onRefresh = useCallback(() => load(true), [load]);\r\n\r\n  if (user?.role !== 'ADMIN') {\r\n    return (\r\n      <SafeAreaView style={{ flex:1, alignItems:'center', justifyContent:'center', backgroundColor: palette.background }}>\r\n        <Text style={{ color: palette.muted }}>Invoices are only available to admin users.</Text>\r\n      </SafeAreaView>\r\n    );\r\n  }\r\n\r\n  const filters = [\r\n    { key:'ALL', label:'All' },\r\n    { key:'OUTSTANDING', label:'Outstanding' },\r\n    { key:'PAID', label:'Paid' },\r\n  ];\r\n\r\n  const filteredInvoices = invoices.filter(inv => {\r\n    if (filter === 'ALL') return true;\r\n    const status = (inv.status || 'DRAFT').toUpperCase();\r\n    if (filter === 'PAID') return status === 'PAID';\r\n    return !['PAID','VOID'].includes(status);\r\n  });\r\n\r\n  const outstanding = formatCurrency(summary?.outstanding || 0);\r\n  const collected = formatCurrency(summary?.collected || 0);\r\n  const drafts = formatCurrency(summary?.draftAmount || 0);\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\r\n      <ScrollView\r\n        contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(6) }}\r\n        refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} tintColor={palette.primary} />}\r\n      >\r\n        <Text style={{ color: palette.text, fontSize: typography.h1, fontWeight:'700', marginBottom: spacing(2) }}>Invoices</Text>\r\n        <Text style={{ color: palette.muted, marginBottom: spacing(2) }}>Track billing health and spot overdue balances.</Text>\r\n        <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(2), rowGap: spacing(2), marginBottom: spacing(3) }}>\r\n          <View style={{ flexBasis:'48%', minWidth: 160 }}>\r\n            <SummaryCard title=\"Outstanding\" value={outstanding} subtitle={`${summary?.overdueCount || 0} overdue`} tone=\"warning\" />\r\n          </View>\r\n          <View style={{ flexBasis:'48%', minWidth: 160 }}>\r\n            <SummaryCard title=\"Collected\" value={collected} subtitle=\"All payments to date\" tone=\"success\" />\r\n          </View>\r\n          <View style={{ flexBasis:'48%', minWidth: 160 }}>\r\n            <SummaryCard title=\"Drafts\" value={drafts} subtitle={`${summary?.totalCount || 0} total invoices`} tone=\"info\" />\r\n          </View>\r\n        </View>\r\n\r\n        <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginBottom: spacing(2) }}>\r\n          {filters.map(f => {\r\n            const selected = f.key === filter;\r\n            return (\r\n              <TouchableOpacity\r\n                key={f.key}\r\n                onPress={() => setFilter(f.key)}\r\n                activeOpacity={0.85}\r\n                style={{\r\n                  paddingHorizontal: spacing(2),\r\n                  paddingVertical: spacing(1),\r\n                  borderRadius: 999,\r\n                  borderWidth: 1,\r\n                  borderColor: selected ? palette.primary : palette.border,\r\n                  backgroundColor: selected ? '#d9f2ed' : palette.surface,\r\n                }}\r\n              >\r\n                <Text style={{ color: selected ? palette.primaryStrong : palette.muted, fontWeight:'600', fontSize: typography.small }}>{f.label}</Text>\r\n              </TouchableOpacity>\r\n            );\r\n          })}\r\n        </View>\r\n\r\n        {loading ? (\r\n          <SurfaceCard style={{ alignItems:'center', paddingVertical: spacing(6) }}>\r\n            <ActivityIndicator color={palette.primary} />\r\n            <Text style={{ color: palette.muted, marginTop: spacing(1.5) }}>Loading invoices...</Text>\r\n          </SurfaceCard>\r\n        ) : filteredInvoices.length === 0 ? (\r\n          <SurfaceCard>\r\n            <Text style={{ color: palette.muted }}>No invoices match this filter.</Text>\r\n          </SurfaceCard>\r\n        ) : (\r\n          filteredInvoices.map(inv => {\r\n            const payments = (inv.Payments || []).reduce((sum, p) => sum + Number(p.amount || 0), 0);\r\n            const amount = Number(inv.amount || 0);\r\n            const balance = Math.max(amount - payments, 0);\r\n            const statusKey = (inv.status || 'DRAFT').toUpperCase();\r\n            return (\r\n              <SurfaceCard key={inv.id}>\r\n                <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center' }}>\r\n                  <View>\r\n                    <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600' }}>Invoice #{inv.number || inv.id}</Text>\r\n                    <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>Issued {inv.issuedAt ? formatDate(inv.issuedAt) : 'TBD'}</Text>\r\n                  </View>\r\n                  <StatusPill status={statusKey} />\r\n                </View>\r\n                <View style={{ flexDirection:'row', justifyContent:'space-between', marginTop: spacing(1.5) }}>\r\n                  <View>\r\n                    <Text style={{ color: palette.muted, fontSize: typography.small }}>Amount</Text>\r\n                    <Text style={{ color: palette.text, fontWeight:'600' }}>{formatCurrency(amount)}</Text>\r\n                  </View>\r\n                  <View>\r\n                    <Text style={{ color: palette.muted, fontSize: typography.small }}>Collected</Text>\r\n                    <Text style={{ color: palette.text }}>{formatCurrency(payments)}</Text>\r\n                  </View>\r\n                  <View>\r\n                    <Text style={{ color: palette.muted, fontSize: typography.small }}>Balance</Text>\r\n                    <Text style={{ color: balance > 0 ? palette.primaryStrong : palette.muted, fontWeight:'600' }}>{formatCurrency(balance)}</Text>\r\n                  </View>\r\n                </View>\r\n                {inv.dueAt ? (\r\n                  <Text style={{ color: palette.muted, marginTop: spacing(1) }}>Due {formatDate(inv.dueAt)}</Text>\r\n                ) : null}\r\n                <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginTop: spacing(2) }}>\r\n                  {inv.jobId ? <QuickAction label=\"View job\" onPress={() => navigation.navigate('JobDetail', { jobId: inv.jobId })} tone=\"muted\" /> : null}\r\n                  <QuickAction label=\"Record payment\" tone=\"success\" onPress={() => Alert.alert('Coming soon', 'Payment logging will land shortly.')} />\r\n                </View>\r\n              </SurfaceCard>\r\n            );\r\n          })\r\n        )}\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\nfunction JobsKanbanScreen({ navigation }){\r\n  const { token } = useAuth();\r\n  const [jobs, setJobs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [newJobName, setNewJobName] = useState('');\r\n  const [newJobStartDate, setNewJobStartDate] = useState('');\r\n  const [newJobDueDate, setNewJobDueDate] = useState('');\r\n  const [newJobNotes, setNewJobNotes] = useState('');\r\n  const [newCustomerName, setNewCustomerName] = useState('');\r\n  const [newCustomerPhone, setNewCustomerPhone] = useState('');\r\n  const [newCustomerEmail, setNewCustomerEmail] = useState('');\r\n  const [newAddressLine1, setNewAddressLine1] = useState('');\r\n  const [newAddressLine2, setNewAddressLine2] = useState('');\r\n  const [newCity, setNewCity] = useState('');\r\n  const [newStateCode, setNewStateCode] = useState('');\r\n  const [newZip, setNewZip] = useState('');\r\n  const [jobFormTab, setJobFormTab] = useState('BASICS');\r\n  const statusOrder = ['SCHEDULED','IN_PROGRESS','ON_HOLD','DONE','COMPLETE','CANCELLED'];\r\n\r\n  const load = useCallback(async (isRefresh = false) => {\r\n    isRefresh ? setRefreshing(true) : setLoading(true);\r\n    try {\r\n      const data = await api('/jobs','GET',null,token);\r\n      setJobs(data);\r\n      db.transaction(tx => {\r\n        tx.executeSql && tx.executeSql('DELETE FROM jobs_cache;');\r\n        data.forEach(j => tx.executeSql && tx.executeSql(\r\n          'INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)',\r\n          [j.id, j.name||'', j.status||'SCHEDULED', j.startDate||'', j.endDate||'', j.notes||'']\r\n        ));\r\n      });\r\n    } catch(e) {\r\n      db.transaction(tx =>\r\n        tx.executeSql && tx.executeSql(\r\n          'SELECT id, name, status, startDate, endDate, notes FROM jobs_cache',\r\n          [],\r\n          (_, { rows }) => setJobs(rows._array || [])\r\n        )\r\n      );\r\n    } finally {\r\n      isRefresh ? setRefreshing(false) : setLoading(false);\r\n    }\r\n  }, [token]);\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      load(false);\r\n    }, [load])\r\n  );\r\n\r\n  const onRefresh = useCallback(() => load(true), [load]);\r\n\r\n  const resetForm = () => {\r\n    setNewJobName('');\r\n    setNewJobStartDate('');\r\n    setNewJobDueDate('');\r\n    setNewJobNotes('');\r\n    setNewCustomerName('');\r\n    setNewCustomerPhone('');\r\n    setNewCustomerEmail('');\r\n    setNewAddressLine1('');\r\n    setNewAddressLine2('');\r\n    setNewCity('');\r\n    setNewStateCode('');\r\n    setNewZip('');\r\n    setJobFormTab('BASICS');\r\n  };\r\n\r\n  const createJob = async () => {\r\n    if(!newJobName.trim()){\r\n      Alert.alert('Missing info', 'Please add a job name.');\r\n      setJobFormTab('BASICS');\r\n      return;\r\n    }\r\n    const hasCustomer = [newCustomerName, newCustomerPhone, newCustomerEmail].some(v => v && v.trim());\r\n    const hasAddress = [newAddressLine1, newCity, newStateCode, newZip].some(v => v && v.trim());\r\n    const payload = {\r\n      name: newJobName.trim(),\r\n      status: 'SCHEDULED',\r\n      startDate: newJobStartDate || null,\r\n      endDate: newJobDueDate || null,\r\n      notes: newJobNotes.trim() || null,\r\n    };\r\n    if (hasCustomer) {\r\n      payload.customer = {\r\n        name: newCustomerName.trim(),\r\n        phone: newCustomerPhone.trim(),\r\n        email: newCustomerEmail.trim(),\r\n        billingAddress: newAddressLine1\r\n          ? `${newAddressLine1}${newAddressLine2 ? `\r\n${newAddressLine2}` : ''}${newCity ? `\r\n${newCity}, ${newStateCode} ${newZip}` : ''}`\r\n          : null,\r\n      };\r\n    }\r\n    if (hasAddress) {\r\n      payload.jobsite = {\r\n        addressLine1: newAddressLine1.trim(),\r\n        addressLine2: newAddressLine2.trim(),\r\n        city: newCity.trim(),\r\n        state: newStateCode.trim(),\r\n        zip: newZip.trim(),\r\n      };\r\n    }\r\n    try {\r\n      const created = await api('/jobs','POST', payload, token);\r\n      setJobs(prev => [created, ...prev]);\r\n      db.transaction(tx =>\r\n        tx.executeSql && tx.executeSql(\r\n          'INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)',\r\n          [created.id, created.name||'', created.status||'SCHEDULED', created.startDate||'', created.endDate||'', created.notes||'']\r\n        )\r\n      );\r\n      resetForm();\r\n      Alert.alert('Job created', `Job #${created.id} ready to schedule.`);\r\n    } catch(e) {\r\n      Alert.alert('Error', e.message || 'Unable to create job');\r\n    }\r\n  };\r\n\r\n  const updateJobStatus = async (id, status) => {\r\n    try {\r\n      const updated = await api(`/jobs/${id}`,'PATCH',{ status }, token);\r\n      setJobs(prev => prev.map(job => job.id === id ? updated : job));\r\n    } catch(e) {\r\n      Alert.alert('Error', e.message || 'Unable to update job status');\r\n    }\r\n  };\r\n\r\n  const removeJob = async (id) => {\r\n    Alert.alert('Delete Job', `Delete job #${id}?`, [\r\n      { text:'Cancel', style:'cancel' },\r\n      { text:'Delete', style:'destructive', onPress: async () => {\r\n        try {\r\n          await api(`/jobs/${id}`,'DELETE',null,token);\r\n          setJobs(prev => prev.filter(job => job.id !== id));\r\n          db.transaction(tx => tx.executeSql && tx.executeSql('DELETE FROM jobs_cache WHERE id=?', [id]));\r\n        } catch(e) {\r\n          Alert.alert('Error', e.message || 'Unable to delete job');\r\n        }\r\n      } }\r\n    ]);\r\n  };\r\n\r\n  const sortedJobs = useMemo(() => {\r\n    const normalize = (status) => (status || 'SCHEDULED').toUpperCase();\r\n    const rank = (status) => {\r\n      const key = normalize(status);\r\n      const idx = statusOrder.indexOf(key);\r\n      return idx === -1 ? statusOrder.length : idx;\r\n    };\r\n    const parseDateSafe = (value) => {\r\n      if (!value) return null;\r\n      const d = new Date(value);\r\n      return Number.isNaN(d.getTime()) ? null : d;\r\n    };\r\n    return [...jobs].sort((a, b) => {\r\n      const statusDiff = rank(a.status) - rank(b.status);\r\n      if (statusDiff !== 0) return statusDiff;\r\n      const startA = parseDateSafe(a.startDate);\r\n      const startB = parseDateSafe(b.startDate);\r\n      if (startA && startB) return startA - startB;\r\n      if (startA) return -1;\r\n      if (startB) return 1;\r\n      return (b.id || 0) - (a.id || 0);\r\n    });\r\n  }, [jobs, statusOrder]);\r\n\r\n  const groupedJobs = useMemo(() => {\r\n    const groups = [];\r\n    let currentStatus = null;\r\n    sortedJobs.forEach(job => {\r\n      const statusKey = (job.status || 'SCHEDULED').toUpperCase();\r\n      if (statusKey !== currentStatus) {\r\n        groups.push({ status: statusKey, jobs: [job] });\r\n        currentStatus = statusKey;\r\n      } else {\r\n        groups[groups.length - 1].jobs.push(job);\r\n      }\r\n    });\r\n    return groups;\r\n  }, [sortedJobs]);\r\n\r\n  const statusLabel = (status) => {\r\n    const key = (status || 'SCHEDULED').toUpperCase();\r\n    return pillTone[key]?.label || key.charAt(0) + key.slice(1).toLowerCase();\r\n  };\r\n\r\n  const quickStatusActions = [\r\n    { label:'Start job', value:'IN_PROGRESS', tone:'primary' },\r\n    { label:'Pause', value:'ON_HOLD', tone:'warning' },\r\n    { label:'Wrap up', value:'DONE', tone:'success' },\r\n  ];\r\n\r\n  const inputStyle = {\r\n    borderWidth: 1,\r\n    borderColor: palette.border,\r\n    borderRadius: 12,\r\n    paddingHorizontal: spacing(1.5),\r\n    paddingVertical: spacing(1.25),\r\n    backgroundColor: palette.surfaceMuted,\r\n    color: palette.text,\r\n    fontSize: typography.body,\r\n    marginBottom: spacing(1.5),\r\n  };\r\n\r\n  const jobTabs = [\r\n    { key:'BASICS', label:'Basics' },\r\n    { key:'CUSTOMER', label:'Customer' },\r\n    { key:'JOBSITE', label:'Jobsite' },\r\n    { key:'NOTES', label:'Notes' },\r\n  ];\r\n\r\n  const renderJobFormFields = () => {\r\n    if (jobFormTab === 'BASICS') {\r\n      return (\r\n        <View>\r\n          <TextInput\r\n            placeholder=\"Job name\"\r\n            placeholderTextColor={palette.muted}\r\n            value={newJobName}\r\n            onChangeText={setNewJobName}\r\n            style={inputStyle}\r\n          />\r\n          <DateInputField\r\n            value={newJobStartDate}\r\n            onChange={setNewJobStartDate}\r\n            placeholder=\"Start date\"\r\n          />\r\n          <DateInputField\r\n            value={newJobDueDate}\r\n            onChange={setNewJobDueDate}\r\n            placeholder=\"Due date\"\r\n          />\r\n        </View>\r\n      );\r\n    }\r\n    if (jobFormTab === 'CUSTOMER') {\r\n      return (\r\n        <View>\r\n          <TextInput\r\n            placeholder=\"Customer name\"\r\n            placeholderTextColor={palette.muted}\r\n            value={newCustomerName}\r\n            onChangeText={setNewCustomerName}\r\n            style={inputStyle}\r\n          />\r\n          <TextInput\r\n            placeholder=\"Phone\"\r\n            placeholderTextColor={palette.muted}\r\n            keyboardType=\"phone-pad\"\r\n            value={newCustomerPhone}\r\n            onChangeText={setNewCustomerPhone}\r\n            style={inputStyle}\r\n          />\r\n          <TextInput\r\n            placeholder=\"Email\"\r\n            placeholderTextColor={palette.muted}\r\n            keyboardType=\"email-address\"\r\n            autoCapitalize=\"none\"\r\n            value={newCustomerEmail}\r\n            onChangeText={setNewCustomerEmail}\r\n            style={inputStyle}\r\n          />\r\n        </View>\r\n      );\r\n    }\r\n    if (jobFormTab === 'JOBSITE') {\r\n      return (\r\n        <View>\r\n          <TextInput\r\n            placeholder=\"Address line 1\"\r\n            placeholderTextColor={palette.muted}\r\n            value={newAddressLine1}\r\n            onChangeText={setNewAddressLine1}\r\n            style={inputStyle}\r\n          />\r\n          <TextInput\r\n            placeholder=\"Address line 2\"\r\n            placeholderTextColor={palette.muted}\r\n            value={newAddressLine2}\r\n            onChangeText={setNewAddressLine2}\r\n            style={inputStyle}\r\n          />\r\n          <View style={{ flexDirection:'row', columnGap: spacing(1.5) }}>\r\n            <View style={{ flex:1 }}>\r\n              <TextInput\r\n                placeholder=\"City\"\r\n                placeholderTextColor={palette.muted}\r\n                value={newCity}\r\n                onChangeText={setNewCity}\r\n                style={[inputStyle, { marginBottom: 0 }]}\r\n              />\r\n            </View>\r\n            <View style={{ width: 80 }}>\r\n              <TextInput\r\n                placeholder=\"State\"\r\n                placeholderTextColor={palette.muted}\r\n                value={newStateCode}\r\n                onChangeText={setNewStateCode}\r\n                style={[inputStyle, { marginBottom: 0 }]}\r\n              />\r\n            </View>\r\n            <View style={{ width: 100 }}>\r\n              <TextInput\r\n                placeholder=\"ZIP\"\r\n                placeholderTextColor={palette.muted}\r\n                value={newZip}\r\n                onChangeText={setNewZip}\r\n                style={[inputStyle, { marginBottom: 0 }]}\r\n              />\r\n            </View>\r\n          </View>\r\n        </View>\r\n      );\r\n    }\r\n    return (\r\n      <TextInput\r\n        placeholder=\"Internal notes\"\r\n        placeholderTextColor={palette.muted}\r\n        value={newJobNotes}\r\n        onChangeText={setNewJobNotes}\r\n        multiline\r\n        style={[inputStyle, { minHeight: 96, textAlignVertical: 'top' }]}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\r\n      <ScrollView\r\n        contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(4) }}\r\n        refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} tintColor={palette.primary} />}\r\n      >\r\n        <SurfaceCard style={{ marginBottom: spacing(3), padding: spacing(2.5) }}>\r\n          <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700', marginBottom: spacing(2) }}>Create job</Text>\r\n          <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1.5), marginBottom: spacing(2) }}>\r\n            {jobTabs.map(tab => {\r\n              const selected = tab.key === jobFormTab;\r\n              return (\r\n                <TouchableOpacity\r\n                  key={tab.key}\r\n                  onPress={() => setJobFormTab(tab.key)}\r\n                  activeOpacity={0.85}\r\n                  style={{\r\n                    paddingHorizontal: spacing(2),\r\n                    paddingVertical: spacing(1),\r\n                    borderRadius: 999,\r\n                    borderWidth: 1,\r\n                    borderColor: selected ? palette.primary : palette.border,\r\n                    backgroundColor: selected ? '#d9f2ed' : palette.surface,\r\n                  }}\r\n                >\r\n                  <Text style={{ color: selected ? palette.primaryStrong : palette.muted, fontWeight:'600', fontSize: typography.small }}>\r\n                    {tab.label}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              );\r\n            })}\r\n          </View>\r\n          {renderJobFormFields()}\r\n          <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center', marginTop: spacing(2) }}>\r\n            <QuickAction label=\"Reset\" tone=\"muted\" onPress={resetForm} />\r\n            <TouchableOpacity\r\n              onPress={createJob}\r\n              activeOpacity={0.85}\r\n              style={{ backgroundColor: palette.primary, paddingHorizontal: spacing(2.5), paddingVertical: spacing(1.5), borderRadius: 12 }}\r\n            >\r\n              <Text style={{ color:'#fff', fontWeight:'700' }}>Create job</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </SurfaceCard>\r\n\r\n        {loading && !refreshing && jobs.length === 0 ? (\r\n          <SurfaceCard style={{ alignItems:'center', paddingVertical: spacing(6), marginBottom: spacing(3) }}>\r\n            <ActivityIndicator color={palette.primary} />\r\n            <Text style={{ color: palette.muted, marginTop: spacing(1.5) }}>Loading jobs...</Text>\r\n          </SurfaceCard>\r\n        ) : null}\r\n\r\n        {groupedJobs.length === 0 ? (\r\n          <SurfaceCard>\r\n            <Text style={{ color: palette.muted }}>No jobs yet. Convert a lead or add a job to get started.</Text>\r\n          </SurfaceCard>\r\n        ) : (\r\n          groupedJobs.map(group => (\r\n            <View key={group.status} style={{ marginBottom: spacing(3) }}>\r\n              <Text style={{ color: palette.muted, fontWeight:'700', fontSize: typography.small, textTransform:'uppercase', marginBottom: spacing(1) }}>\r\n                {statusLabel(group.status)}\r\n              </Text>\r\n              {group.jobs.map(job => {\r\n                const customer = job.Customer || {};\r\n                const jobsite = job.Jobsite || {};\r\n                const addressParts = [\r\n                  jobsite.addressLine1,\r\n                  jobsite.addressLine2,\r\n                  [jobsite.city, jobsite.state].filter(Boolean).join(', '),\r\n                  jobsite.zip\r\n                ].filter(Boolean);\r\n                const address = addressParts.join(', ');\r\n                const statusKey = (job.status || 'SCHEDULED').toUpperCase();\r\n                return (\r\n                  <SurfaceCard key={job.id} style={{ marginBottom: spacing(1.5) }}>\r\n                    <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center' }}>\r\n                      <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600' }}>{job.name || `Job #${job.id}`}</Text>\r\n                      <StatusPill status={statusKey} />\r\n                    </View>\r\n                    {(job.startDate || job.endDate) ? (\r\n                      <Text style={{ color: palette.muted, marginTop: spacing(0.75) }}>\r\n                        {[job.startDate ? `Start ${formatDate(job.startDate)}` : null, job.endDate ? `Due ${formatDate(job.endDate)}` : null].filter(Boolean).join(' | ')}\r\n                      </Text>\r\n                    ) : null}\r\n                    {customer.name ? <Text style={{ color: palette.text, fontWeight:'600', marginTop: spacing(1) }}>{customer.name}</Text> : null}\r\n                    {customer.phone ? <Text style={{ color: palette.muted }}>{customer.phone}</Text> : null}\r\n                    {customer.email ? <Text style={{ color: palette.muted }}>{customer.email}</Text> : null}\r\n                    {address ? <Text style={{ color: palette.muted, marginTop: spacing(1) }}>{address}</Text> : null}\r\n                    {job.notes ? <Text style={{ color: palette.muted, marginTop: spacing(1) }} numberOfLines={3}>{job.notes}</Text> : null}\r\n                    <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginTop: spacing(2) }}>\r\n                      <QuickAction label=\"View job\" onPress={() => navigation.navigate('JobDetail', { jobId: job.id })} tone=\"muted\" />\r\n                      {quickStatusActions.map(action => (\r\n                        action.value === statusKey ? null : (\r\n                          <QuickAction\r\n                            key={action.value}\r\n                            label={action.label}\r\n                            tone={action.tone}\r\n                            onPress={() => updateJobStatus(job.id, action.value)}\r\n                          />\r\n                        )\r\n                      ))}\r\n                      <QuickAction label=\"Delete\" tone=\"danger\" onPress={() => removeJob(job.id)} />\r\n                    </View>\r\n                  </SurfaceCard>\r\n                );\r\n              })}\r\n            </View>\r\n          ))\r\n        )}\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\nfunction JobDetailScreen({ route, navigation }){\r\n  const { jobId } = route.params;\r\n  const { token, user } = useAuth();\r\n  const [jobName, setJobName] = useState('');\r\n  const [jobStartDate, setJobStartDate] = useState('');\r\n  const [jobEndDate, setJobEndDate] = useState('');\r\n  const [jobNotes, setJobNotes] = useState('');\r\n  const [jobCustomerName, setJobCustomerName] = useState('');\r\n  const [jobCustomerPhone, setJobCustomerPhone] = useState('');\r\n  const [jobCustomerEmail, setJobCustomerEmail] = useState('');\r\n  const [jobAddressLine1, setJobAddressLine1] = useState('');\r\n  const [jobAddressLine2, setJobAddressLine2] = useState('');\r\n  const [jobCity, setJobCity] = useState('');\r\n  const [jobStateCode, setJobStateCode] = useState('');\r\n  const [jobZip, setJobZip] = useState('');\r\n  const [changeOrders, setCO] = useState([]);\r\n  const [title, setTitle] = useState('');\r\n  const [amountDelta, setAmountDelta] = useState('0');\r\n  const loadCO = useCallback(async () => {\r\n    setCO(await api(`/change-orders/job/${jobId}`,'GET',null,token));\r\n  }, [jobId, token]);\r\n  const loadJob = useCallback(async () => {\r\n    try {\r\n      const j = await api(`/jobs/${jobId}`,'GET',null,token);\r\n      setJobName(j.name||'');\r\n      setJobStartDate(j.startDate||'');\r\n      setJobEndDate(j.endDate||'');\r\n      setJobNotes(j.notes||'');\r\n      const customer = j.Customer || {};\r\n      const jobsite = j.Jobsite || {};\r\n      setJobCustomerName(customer.name || '');\r\n      setJobCustomerPhone(customer.phone || '');\r\n      setJobCustomerEmail(customer.email || '');\r\n      setJobAddressLine1(jobsite.addressLine1 || '');\r\n      setJobAddressLine2(jobsite.addressLine2 || '');\r\n      setJobCity(jobsite.city || '');\r\n      setJobStateCode(jobsite.state || '');\r\n      setJobZip(jobsite.zip || '');\r\n    } catch(e) { }\r\n  }, [jobId, token]);\r\n  useEffect(()=>{ loadJob(); loadCO(); },[loadJob, loadCO]);\r\n  const addCO = async ()=>{\r\n    if(!title.trim()){\r\n      Alert.alert('Missing info', 'Add a title for the change order.');\r\n      return;\r\n    }\r\n    await api(`/change-orders/job/${jobId}`,'POST',{ title: title.trim(), amountDelta: parseFloat(amountDelta) || 0 }, token);\r\n    setTitle(''); setAmountDelta('0'); loadCO();\r\n  };\r\n  const saveJobDetails = async () => {\r\n    try {\r\n      await api(`/jobs/${jobId}`,'PATCH',{\r\n        name: jobName,\r\n        startDate: jobStartDate || null,\r\n        endDate: jobEndDate || null,\r\n        notes: jobNotes,\r\n        customer: {\r\n          name: jobCustomerName,\r\n          phone: jobCustomerPhone,\r\n          email: jobCustomerEmail,\r\n          billingAddress: jobAddressLine1 ? `${jobAddressLine1}${jobAddressLine2 ? `\r\n${jobAddressLine2}` : ''}${jobCity ? `\r\n${jobCity}, ${jobStateCode} ${jobZip}` : ''}` : null,\r\n        },\r\n        jobsite: {\r\n          addressLine1: jobAddressLine1,\r\n          addressLine2: jobAddressLine2,\r\n          city: jobCity,\r\n          state: jobStateCode,\r\n          zip: jobZip,\r\n        },\r\n      }, token);\r\n      Alert.alert('Saved', 'Job details updated.');\r\n      loadJob();\r\n    } catch(e) {\r\n      Alert.alert('Error', e.message || 'Unable to save job');\r\n    }\r\n  };\r\n  const deleteJob = () => {\r\n    Alert.alert('Delete job', `Delete job #${jobId}?`, [\r\n      { text:'Cancel', style:'cancel' },\r\n      { text:'Delete', style:'destructive', onPress: async ()=>{\r\n        try{\r\n          await api(`/jobs/${jobId}`,'DELETE',null,token);\r\n          db.transaction(tx => tx.executeSql('DELETE FROM jobs_cache WHERE id=?', [jobId]));\r\n          Alert.alert('Deleted', 'Job removed.');\r\n          navigation.navigate('Tabs', { screen:'Jobs' });\r\n        }catch(e){\r\n          Alert.alert('Error', e.message || 'Unable to delete job');\r\n        }\r\n      }}\r\n    ]);\r\n  };\r\n  return (\r\n    <SafeAreaView style={{ flex:1 }}>\r\n      <ScrollView contentContainerStyle={{ padding:16, paddingBottom:32 }}>\r\n        <Text style={{ fontSize:18, fontWeight:'600', marginBottom:8 }}>Job #{jobId}</Text>\r\n        <Text style={{ fontWeight:'600', marginBottom:6 }}>Job Details</Text>\r\n        <TextInput placeholder=\"Job name\" value={jobName} onChangeText={setJobName} style={{ borderWidth:1, padding:8, marginBottom:6 }} />\r\n        <View style={{ flexDirection:'row', gap:8 }}>\r\n          <DateInputField value={jobStartDate} onChange={setJobStartDate} placeholder=\"Start date\" style={{ flex:1, marginBottom:0 }} />\r\n          <DateInputField value={jobEndDate} onChange={setJobEndDate} placeholder=\"End date\" style={{ flex:1, marginBottom:0 }} />\r\n        </View>\r\n        <TextInput placeholder=\"Notes / scope\" value={jobNotes} onChangeText={setJobNotes} multiline style={{ borderWidth:1, padding:8, marginTop:6, minHeight:80 }} />\r\n\r\n        <Text style={{ fontWeight:'600', marginTop:16 }}>Customer</Text>\r\n        <TextInput placeholder=\"Name\" value={jobCustomerName} onChangeText={setJobCustomerName} style={{ borderWidth:1, padding:8, marginBottom:6 }} />\r\n        <TextInput placeholder=\"Phone\" value={jobCustomerPhone} onChangeText={setJobCustomerPhone} keyboardType=\"phone-pad\" style={{ borderWidth:1, padding:8, marginBottom:6 }} />\r\n        <TextInput placeholder=\"Email\" value={jobCustomerEmail} onChangeText={setJobCustomerEmail} keyboardType=\"email-address\" style={{ borderWidth:1, padding:8, marginBottom:6 }} />\r\n\r\n        <Text style={{ fontWeight:'600', marginTop:16 }}>Job Address</Text>\r\n        <TextInput placeholder=\"Address line 1\" value={jobAddressLine1} onChangeText={setJobAddressLine1} style={{ borderWidth:1, padding:8, marginBottom:6 }} />\r\n        <TextInput placeholder=\"Address line 2\" value={jobAddressLine2} onChangeText={setJobAddressLine2} style={{ borderWidth:1, padding:8, marginBottom:6 }} />\r\n        <View style={{ flexDirection:'row', gap:8 }}>\r\n          <TextInput placeholder=\"City\" value={jobCity} onChangeText={setJobCity} style={{ flex:1, borderWidth:1, padding:8 }} />\r\n          <TextInput placeholder=\"State\" value={jobStateCode} onChangeText={setJobStateCode} style={{ width:80, borderWidth:1, padding:8 }} />\r\n          <TextInput placeholder=\"ZIP\" value={jobZip} onChangeText={setJobZip} style={{ width:100, borderWidth:1, padding:8 }} />\r\n        </View>\r\n        <View style={{ marginTop:12 }}>\r\n          <Button title=\"Save details\" onPress={saveJobDetails} />\r\n        </View>\r\n        <View style={{ marginTop:12 }}>\r\n          <Button color=\"#d11a2a\" title=\"Delete job\" onPress={deleteJob} />\r\n        </View>\r\n\r\n        {(user?.role==='ADMIN'||user?.role==='SUPERVISOR'||user?.role==='ESTIMATOR') && (\r\n          <View style={{ marginVertical:16 }}>\r\n            <Text style={{ fontWeight:'600' }}>New Change Order</Text>\r\n            <TextInput placeholder=\"Title\" value={title} onChangeText={setTitle} style={{ borderWidth:1, padding:8, marginVertical:6 }} />\r\n            <TextInput placeholder=\"Amount $\" value={amountDelta} onChangeText={setAmountDelta} keyboardType=\"decimal-pad\" style={{ borderWidth:1, padding:8, marginVertical:6 }} />\r\n            <Button title=\"Add Change Order\" onPress={addCO} />\r\n          </View>\r\n        )}\r\n        <Text style={{ fontWeight:'600', marginTop:12 }}>Change Orders</Text>\r\n        {changeOrders.length === 0 ? (\r\n          <Text style={{ marginVertical:6 }}>No change orders yet.</Text>\r\n        ) : changeOrders.map(item => (\r\n          <View key={item.id} style={{ borderWidth:1, padding:10, borderRadius:8, marginVertical:6 }}>\r\n            <Text style={{ fontWeight:'600' }}>{item.title}</Text>\r\n            <Text>Status: {item.status} | ${item.amountDelta}</Text>\r\n            {(user?.role==='ADMIN'||user?.role==='SUPERVISOR'||user?.role==='ESTIMATOR') && (\r\n              <View style={{ flexDirection:'row', gap:8, marginTop:8 }}>\r\n                <Button title=\"Approve\" onPress={async ()=>{ await api(`/change-orders/${item.id}`,'PATCH',{ status:'APPROVED' }, token); loadCO(); }} />\r\n                <Button title=\"Reject\" onPress={async ()=>{ await api(`/change-orders/${item.id}`,'PATCH',{ status:'REJECTED' }, token); loadCO(); }} />\r\n              </View>\r\n            )}\r\n          </View>\r\n        ))}\r\n\r\n        <Text style={{ fontWeight:'600', marginTop:16 }}>Tasks</Text>\r\n        <JobTasks jobId={jobId} />\r\n\r\n        <Text style={{ fontWeight:'600', marginTop:16 }}>Schedule</Text>\r\n        <JobSchedule jobId={jobId} />\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nfunction JobTasks({ jobId }){\r\n  const { token } = useAuth();\r\n  const [tasks, setTasks] = useState([]);\r\n  const [title, setTitle] = useState('');\r\n  const [dueDate, setDueDate] = useState('');\r\n  const load = async()=> {\r\n    try {\r\n      const data = await api(`/tasks?jobId=${jobId}`,'GET',null,token);\r\n      setTasks(data);\r\n      db.transaction(tx => {\r\n        tx.executeSql('DELETE FROM tasks_cache WHERE jobId=?', [jobId]);\r\n        data.forEach(t => tx.executeSql('INSERT OR REPLACE INTO tasks_cache (id, jobId, title, status, dueDate) VALUES (?,?,?,?,?)', [t.id, jobId, t.title||'', t.status||'TODO', t.dueDate||'']));\r\n      });\r\n    } catch(e) {\r\n      db.transaction(tx => tx.executeSql('SELECT id, jobId, title, status, dueDate FROM tasks_cache WHERE jobId=?', [jobId], (_, { rows }) => setTasks(rows._array || [])));\r\n    }\r\n  };\r\n  useEffect(()=>{ load(); },[]);\r\n  const add = async()=>{\r\n    if(!title.trim()) return Alert.alert('Title required');\r\n    await api('/tasks','POST',{ title, jobId, dueDate }, token);\r\n    setTitle(''); setDueDate(''); load();\r\n  };\r\n  const done = async(id)=>{ await api(`/tasks/${id}`,'PATCH',{ status:'DONE' }, token); load(); };\r\n  const remove = (id)=>{\r\n    Alert.alert('Delete task', 'Remove this task?', [\r\n      { text:'Cancel', style:'cancel' },\r\n      { text:'Delete', style:'destructive', onPress: async ()=>{ await api(`/tasks/${id}`,'DELETE',null,token); load(); } },\r\n    ]);\r\n  };\r\n  return (\r\n    <View>\r\n      <View style={{ flexDirection:'row', gap:8, marginVertical:8, alignItems:'center' }}>\r\n        <TextInput placeholder=\"Task title\" value={title} onChangeText={setTitle} style={{ flex:1, borderWidth:1, padding:8 }} />\r\n        <DateInputField value={dueDate} onChange={setDueDate} placeholder=\"Due date\" style={{ marginBottom:0, width:150 }} />\r\n        <Button title=\"Add\" onPress={add} />\r\n      </View>\r\n      {tasks.map(t => (\r\n        <View key={t.id} style={{ borderWidth:1, padding:10, borderRadius:8, marginVertical:6 }}>\r\n          <Text style={{ fontWeight:'600' }}>{t.title}</Text>\r\n          <Text>Due: {t.dueDate || '-'} | Status: {t.status}</Text>\r\n          <View style={{ flexDirection:'row', gap:8, marginTop:6 }}>\r\n            <Button title=\"Mark Done\" onPress={()=>done(t.id)} />\r\n            <Button title=\"Delete\" color=\"#c00\" onPress={()=>remove(t.id)} />\r\n          </View>\r\n        </View>\r\n      ))}\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction JobSchedule({ jobId }){\r\n  const { token } = useAuth();\r\n  const [events, setEvents] = useState([]);\r\n  const [title, setTitle] = useState('');\r\n  const [startAt, setStartAt] = useState('');\r\n  const [endAt, setEndAt] = useState('');\r\n  const load = async()=> {\r\n    try {\r\n      const data = await api(`/calendar?jobId=${jobId}`,'GET',null,token);\r\n      setEvents(data);\r\n      db.transaction(tx => {\r\n        tx.executeSql('DELETE FROM calendar_cache WHERE jobId=?', [jobId]);\r\n        data.forEach(ev => tx.executeSql('INSERT OR REPLACE INTO calendar_cache (id, jobId, title, startAt, endAt) VALUES (?,?,?,?,?)', [ev.id, jobId, ev.title||'', ev.startAt||'', ev.endAt||'']));\r\n      });\r\n    } catch(e) {\r\n      db.transaction(tx => tx.executeSql('SELECT id, jobId, title, startAt, endAt FROM calendar_cache WHERE jobId=?', [jobId], (_, { rows }) => setEvents(rows._array || [])));\r\n    }\r\n  };\r\n  useEffect(()=>{ load(); },[]);\r\n  const add = async()=>{\r\n    if(!title.trim() || !startAt) return Alert.alert('Title and start time required');\r\n    await api('/calendar','POST',{ title, jobId, startAt, endAt }, token);\r\n    setTitle(''); setStartAt(''); setEndAt(''); load();\r\n  };\r\n  const remove = (id)=>{\r\n    Alert.alert('Delete event', 'Remove this schedule item?', [\r\n      { text:'Cancel', style:'cancel' },\r\n      { text:'Delete', style:'destructive', onPress: async ()=>{ await api(`/calendar/${id}`,'DELETE',null,token); load(); } },\r\n    ]);\r\n  };\r\n  return (\r\n    <View>\r\n      <View style={{ marginVertical:8 }}>\r\n        <TextInput placeholder=\"Event title\" value={title} onChangeText={setTitle} style={{ borderWidth:1, padding:8, marginBottom:6 }} />\r\n        <DateInputField\r\n          value={startAt}\r\n          onChange={(date) => {\r\n            const existing = startAt || '';\r\n            const timePartIndex = existing.indexOf('T');\r\n            const timePart = timePartIndex > -1 ? existing.substring(timePartIndex) : 'T08:00:00';\r\n            setStartAt(`${date}${timePart}`);\r\n          }}\r\n          placeholder=\"Start date\"\r\n        />\r\n        <DateInputField\r\n          value={endAt}\r\n          onChange={(date) => {\r\n            if (!date) {\r\n              setEndAt('');\r\n              return;\r\n            }\r\n            const existing = endAt || '';\r\n            const timePartIndex = existing.indexOf('T');\r\n            const timePart = timePartIndex > -1 ? existing.substring(timePartIndex) : 'T17:00:00';\r\n            setEndAt(`${date}${timePart}`);\r\n          }}\r\n          placeholder=\"End date (optional)\"\r\n        />\r\n        <Button title=\"Add Event\" onPress={add} />\r\n      </View>\r\n      {events.map(ev => (\r\n        <View key={ev.id} style={{ borderWidth:1, padding:10, borderRadius:8, marginVertical:6 }}>\r\n          <Text style={{ fontWeight:'600' }}>{ev.title}</Text>\r\n          <Text>{ev.startAt} -> {ev.endAt || '-'}</Text>\r\n          <Button title=\"Delete\" color=\"#c00\" onPress={()=>remove(ev.id)} />\r\n        </View>\r\n      ))}\r\n    </View>\r\n  );\r\n}\r\n\r\n// ---------- Leads / Estimates (with photo queue) ----------\r\nasync function processQueue(token){\r\n  return new Promise(resolve => {\r\n    db.transaction(tx => {\r\n      tx.executeSql('SELECT * FROM queue', [], async (_, { rows }) => {\r\n        const items = rows._array || [];\r\n        for(const q of items){\r\n          try{\r\n            const payload = JSON.parse(q.payload);\r\n            if(q.type === 'createLead'){ await api('/leads', 'POST', payload, token); }\r\n            if(q.type === 'uploadPhoto'){ await api('/upload/image', 'POST', { dataUrl: payload.dataUrl }, token); }\r\n            db.transaction(txx => txx.executeSql('DELETE FROM queue WHERE id=?', [q.id]));\r\n          }catch(e){ /* keep for later */ }\r\n        }\r\n        resolve();\r\n      });\r\n    });\r\n  });\r\n}\r\n\r\nfunction LeadsScreen({ navigation }){\r\n  const { token } = useAuth();\r\n  const [leads, setLeads] = useState([]);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const fetchLeads = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n      const data = await api('/leads', 'GET', null, token);\r\n      setLeads(data);\r\n      db.transaction(tx => {\r\n        tx.executeSql && tx.executeSql('DELETE FROM leads_cache;');\r\n        data.forEach(l => tx.executeSql && tx.executeSql(\r\n          'INSERT OR REPLACE INTO leads_cache (id, description, status) VALUES (?,?,?)',\r\n          [l.id, l.description || '', l.status || 'NEW']\r\n        ));\r\n      });\r\n    } catch(e){\r\n      db.transaction(tx =>\r\n        tx.executeSql && tx.executeSql('SELECT id, description, status FROM leads_cache', [], (_, { rows }) => setLeads(rows._array || []))\r\n      );\r\n    }\r\n    finally {\r\n      setLoading(false);\r\n    }\r\n  }, [token]);\r\n\r\n  useFocusEffect(useCallback(() => {\r\n    fetchLeads();\r\n  }, [fetchLeads]));\r\n\r\n  const onRefresh = useCallback(async () => {\r\n    setRefreshing(true);\r\n    await fetchLeads();\r\n    setRefreshing(false);\r\n  }, [fetchLeads]);\r\n\r\n  const deleteLead = useCallback((lead) => {\r\n    Alert.alert('Delete lead', `Delete lead #${lead.id}?`, [\r\n      { text:'Cancel', style:'cancel' },\r\n      { text:'Delete', style:'destructive', onPress: async () => {\r\n        try {\r\n          await api(`/leads/${lead.id}`,'DELETE',null,token);\r\n          setLeads(prev => prev.filter(l => l.id !== lead.id));\r\n          db.transaction(tx => tx.executeSql && tx.executeSql('DELETE FROM leads_cache WHERE id=?', [lead.id]));\r\n        } catch(err) {\r\n          Alert.alert('Error', err.message || 'Unable to delete lead');\r\n        }\r\n      }}\r\n    ]);\r\n  }, [token]);\r\n\r\n  const newLeadsCount = leads.filter(l => (l.status || '').toUpperCase() === 'NEW').length;\r\n\r\n  const renderLeadCard = (lead) => {\r\n    const customer = lead.Customer || {};\r\n    const jobsite = lead.Jobsite || {};\r\n    const addressParts = [\r\n      jobsite.addressLine1,\r\n      jobsite.addressLine2,\r\n      [jobsite.city, jobsite.state].filter(Boolean).join(', '),\r\n      jobsite.zip\r\n    ].filter(Boolean);\r\n    const address = addressParts.join(', ');\r\n    const statusKey = (lead.status || 'NEW').toUpperCase();\r\n    return (\r\n      <SurfaceCard key={lead.id}>\r\n        <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center' }}>\r\n          <View>\r\n            <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600' }}>Lead #{lead.id}</Text>\r\n            <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>{customer.name || 'Unknown customer'}</Text>\r\n          </View>\r\n          <StatusPill status={statusKey} />\r\n        </View>\r\n        {customer.phone ? <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>{customer.phone}</Text> : null}\r\n        {customer.email ? <Text style={{ color: palette.muted }}>{customer.email}</Text> : null}\r\n        {address ? <Text style={{ color: palette.muted, marginTop: spacing(1) }}>{address}</Text> : null}\r\n        <Text numberOfLines={3} style={{ color: palette.text, marginTop: spacing(1.5) }}>{lead.description || 'No scope captured yet.'}</Text>\r\n        <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginTop: spacing(2) }}>\r\n          <QuickAction label=\"Open\" onPress={() => navigation.navigate('EstimateEditor', { leadId: lead.id })} />\r\n          <QuickAction label=\"Convert\" tone=\"success\" onPress={() => navigation.navigate('Jobs')} />\r\n          <QuickAction label=\"Delete\" tone=\"danger\" onPress={() => deleteLead(lead)} />\r\n        </View>\r\n      </SurfaceCard>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\r\n      <FlatList\r\n        data={leads}\r\n        keyExtractor={item => String(item.id)}\r\n        contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(4) }}\r\n        refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} tintColor={palette.primary} />}\r\n        ListHeaderComponent={\r\n          <View style={{ marginBottom: spacing(3) }}>\r\n            <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center', marginBottom: spacing(2) }}>\r\n              <View>\r\n                <Text style={{ color: palette.text, fontSize: typography.h1, fontWeight:'700' }}>Leads</Text>\r\n                <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>Keep the funnel moving</Text>\r\n              </View>\r\n              <QuickAction label=\"New lead\" onPress={() => navigation.navigate('NewLead')} />\r\n            </View>\r\n            <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(2), rowGap: spacing(2) }}>\r\n              <View style={{ flexBasis:'48%', minWidth: 160 }}>\r\n                <SummaryCard title=\"Total\" value={leads.length} subtitle={`${newLeadsCount} new`} tone=\"info\" />\r\n              </View>\r\n              <View style={{ flexBasis:'48%', minWidth: 160 }}>\r\n                <SummaryCard title=\"Outstanding\" value={newLeadsCount} subtitle=\"Require follow up\" tone=\"warning\" />\r\n              </View>\r\n            </View>\r\n          </View>\r\n        }\r\n        renderItem={({ item }) => renderLeadCard(item)}\r\n        ListEmptyComponent={\r\n          loading ? (\r\n            <SurfaceCard style={{ alignItems:'center', paddingVertical: spacing(4) }}>\r\n              <ActivityIndicator color={palette.primary} />\r\n              <Text style={{ color: palette.muted, marginTop: spacing(1) }}>Loading leads...</Text>\r\n            </SurfaceCard>\r\n          ) : (\r\n            <SurfaceCard>\r\n              <Text style={{ color: palette.muted }}>No leads yet. Capture a lead to get started.</Text>\r\n            </SurfaceCard>\r\n          )\r\n        }\r\n      />\r\n    </SafeAreaView>\r\n  );\r\n}\r\nfunction NewLeadScreen({ navigation }){\r\n  const { token } = useAuth();\r\n  const [description, setDescription] = useState('');\r\n  const [status, setStatus] = useState('NEW');\r\n  const [customerName, setCustomerName] = useState('');\r\n  const [customerPhone, setCustomerPhone] = useState('');\r\n  const [customerEmail, setCustomerEmail] = useState('');\r\n  const [addressLine1, setAddressLine1] = useState('');\r\n  const [addressLine2, setAddressLine2] = useState('');\r\n  const [city, setCity] = useState('');\r\n  const [stateCode, setStateCode] = useState('');\r\n  const [zip, setZip] = useState('');\r\n  const [showCustomerSection, setShowCustomerSection] = useState(false);\r\n  const [showJobsiteSection, setShowJobsiteSection] = useState(false);\r\n  const statuses = ['NEW','CONTACTED','ESTIMATING','CONVERTED','CLOSED_LOST'];\r\n\r\n  const buildPayload = () => {\r\n    const customer = [customerName, customerPhone, customerEmail].some(v => v && v.trim())\r\n      ? {\r\n          name: customerName.trim(),\r\n          phone: customerPhone.trim(),\r\n          email: customerEmail.trim(),\r\n        }\r\n      : null;\r\n    const jobsite = [addressLine1, addressLine2, city, stateCode, zip].some(v => v && v.trim())\r\n      ? {\r\n          addressLine1: addressLine1.trim(),\r\n          addressLine2: addressLine2.trim(),\r\n          city: city.trim(),\r\n          state: stateCode.trim(),\r\n          zip: zip.trim(),\r\n        }\r\n      : null;\r\n    return {\r\n      description,\r\n      status,\r\n      customer,\r\n      jobsite,\r\n    };\r\n  };\r\n\r\n  const createLeadOnline = async () => {\r\n    const payload = buildPayload();\r\n    const created = await api('/leads', 'POST', payload, token);\r\n    navigation.replace('EstimateEditor', { leadId: created.id });\r\n    Alert.alert('Lead created', `Lead #${created.id} ready to estimate.`);\r\n  };\r\n\r\n  const queueLead = () => {\r\n    const payload = buildPayload();\r\n    db.transaction(tx => tx.executeSql('INSERT INTO queue (type, payload) VALUES (?,?)', ['createLead', JSON.stringify(payload)]));\r\n    Alert.alert('Saved offline', 'We will submit this lead when you reconnect.');\r\n    navigation.goBack();\r\n  };\r\n\r\n  const submit = async () => {\r\n    if(!description.trim()){\r\n      Alert.alert('Missing scope', 'Please describe the job or scope of work.');\r\n      return;\r\n    }\r\n    try {\r\n      await createLeadOnline();\r\n    } catch(e){\r\n      queueLead();\r\n    }\r\n  };\r\n\r\n  const chipStyle = (active) => ({\r\n    paddingHorizontal: spacing(2),\r\n    paddingVertical: spacing(1),\r\n    borderRadius: 999,\r\n    borderWidth: 1,\r\n    borderColor: active ? palette.primary : palette.border,\r\n    backgroundColor: active ? '#d9f2ed' : palette.surface,\r\n  });\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\r\n      <ScrollView contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(6) }}>\r\n        <SurfaceCard style={{ marginBottom: spacing(3) }}>\r\n          <Text style={{ color: palette.text, fontSize: typography.h1, fontWeight:'700', marginBottom: spacing(2) }}>New lead</Text>\r\n          <Text style={{ color: palette.muted, fontWeight:'600', marginBottom: spacing(1) }}>Scope</Text>\r\n          <TextInput\r\n            placeholder=\"Describe the job...\"\r\n            placeholderTextColor={palette.muted}\r\n            value={description}\r\n            onChangeText={setDescription}\r\n            multiline\r\n            style={{\r\n              borderWidth: 1,\r\n              borderColor: palette.border,\r\n              borderRadius: 12,\r\n              padding: spacing(2),\r\n              minHeight: 120,\r\n              color: palette.text,\r\n              backgroundColor: palette.surfaceMuted,\r\n              textAlignVertical: 'top',\r\n            }}\r\n          />\r\n          <Text style={{ color: palette.muted, fontWeight:'600', marginTop: spacing(2), marginBottom: spacing(1) }}>Status</Text>\r\n          <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1) }}>\r\n            {statuses.map(s => {\r\n              const active = status === s;\r\n              return (\r\n                <TouchableOpacity key={s} onPress={() => setStatus(s)} activeOpacity={0.85} style={chipStyle(active)}>\r\n                  <Text style={{ color: active ? palette.primaryStrong : palette.muted, fontWeight:'600', fontSize: typography.small }}>{s.replace('_',' ')}</Text>\r\n                </TouchableOpacity>\r\n              );\r\n            })}\r\n          </View>\r\n          <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center', marginTop: spacing(3) }}>\r\n            <QuickAction label=\"Save offline\" tone=\"muted\" onPress={queueLead} />\r\n            <TouchableOpacity\r\n              onPress={submit}\r\n              activeOpacity={0.85}\r\n              style={{ backgroundColor: palette.primary, paddingHorizontal: spacing(3), paddingVertical: spacing(1.5), borderRadius: 12 }}\r\n            >\r\n              <Text style={{ color:'#fff', fontWeight:'700' }}>Create lead</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </SurfaceCard>\r\n\r\n        <SurfaceCard style={{ marginBottom: spacing(3) }}>\r\n          <TouchableOpacity\r\n            onPress={() => setShowCustomerSection(v => !v)}\r\n            style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center' }}\r\n            activeOpacity={0.8}\r\n          >\r\n            <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600' }}>Customer details</Text>\r\n            <Text style={{ color: palette.primary, fontWeight:'600' }}>{showCustomerSection ? 'Hide' : 'Add'}</Text>\r\n          </TouchableOpacity>\r\n          {showCustomerSection ? (\r\n            <View style={{ marginTop: spacing(2) }}>\r\n              <TextInput\r\n                placeholder=\"Name\"\r\n                placeholderTextColor={palette.muted}\r\n                value={customerName}\r\n                onChangeText={setCustomerName}\r\n                style={{\r\n                  borderWidth: 1,\r\n                  borderColor: palette.border,\r\n                  borderRadius: 12,\r\n                  padding: spacing(2),\r\n                  color: palette.text,\r\n                  backgroundColor: palette.surfaceMuted,\r\n                  marginBottom: spacing(1.5),\r\n                }}\r\n              />\r\n              <TextInput\r\n                placeholder=\"Phone\"\r\n                placeholderTextColor={palette.muted}\r\n                keyboardType=\"phone-pad\"\r\n                value={customerPhone}\r\n                onChangeText={setCustomerPhone}\r\n                style={{\r\n                  borderWidth: 1,\r\n                  borderColor: palette.border,\r\n                  borderRadius: 12,\r\n                  padding: spacing(2),\r\n                  color: palette.text,\r\n                  backgroundColor: palette.surfaceMuted,\r\n                  marginBottom: spacing(1.5),\r\n                }}\r\n              />\r\n              <TextInput\r\n                placeholder=\"Email\"\r\n                placeholderTextColor={palette.muted}\r\n                keyboardType=\"email-address\"\r\n                autoCapitalize=\"none\"\r\n                value={customerEmail}\r\n                onChangeText={setCustomerEmail}\r\n                style={{\r\n                  borderWidth: 1,\r\n                  borderColor: palette.border,\r\n                  borderRadius: 12,\r\n                  padding: spacing(2),\r\n                  color: palette.text,\r\n                  backgroundColor: palette.surfaceMuted,\r\n                }}\r\n              />\r\n            </View>\r\n          ) : (\r\n            <Text style={{ color: palette.muted, marginTop: spacing(1.5) }}>Add contact details to help follow up faster.</Text>\r\n          )}\r\n        </SurfaceCard>\r\n\r\n        <SurfaceCard>\r\n          <TouchableOpacity\r\n            onPress={() => setShowJobsiteSection(v => !v)}\r\n            style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center' }}\r\n            activeOpacity={0.8}\r\n          >\r\n            <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600' }}>Jobsite address</Text>\r\n            <Text style={{ color: palette.primary, fontWeight:'600' }}>{showJobsiteSection ? 'Hide' : 'Add'}</Text>\r\n          </TouchableOpacity>\r\n          {showJobsiteSection ? (\r\n            <View style={{ marginTop: spacing(2) }}>\r\n              <TextInput\r\n                placeholder=\"Address line 1\"\r\n                placeholderTextColor={palette.muted}\r\n                value={addressLine1}\r\n                onChangeText={setAddressLine1}\r\n                style={{\r\n                  borderWidth: 1,\r\n                  borderColor: palette.border,\r\n                  borderRadius: 12,\r\n                  padding: spacing(2),\r\n                  color: palette.text,\r\n                  backgroundColor: palette.surfaceMuted,\r\n                  marginBottom: spacing(1.5),\r\n                }}\r\n              />\r\n              <TextInput\r\n                placeholder=\"Address line 2\"\r\n                placeholderTextColor={palette.muted}\r\n                value={addressLine2}\r\n                onChangeText={setAddressLine2}\r\n                style={{\r\n                  borderWidth: 1,\r\n                  borderColor: palette.border,\r\n                  borderRadius: 12,\r\n                  padding: spacing(2),\r\n                  color: palette.text,\r\n                  backgroundColor: palette.surfaceMuted,\r\n                  marginBottom: spacing(1.5),\r\n                }}\r\n              />\r\n              <View style={{ flexDirection:'row', columnGap: spacing(1.5) }}>\r\n                <View style={{ flex:1 }}>\r\n                  <TextInput\r\n                    placeholder=\"City\"\r\n                    placeholderTextColor={palette.muted}\r\n                    value={city}\r\n                    onChangeText={setCity}\r\n                    style={{\r\n                      borderWidth: 1,\r\n                      borderColor: palette.border,\r\n                      borderRadius: 12,\r\n                      padding: spacing(2),\r\n                      color: palette.text,\r\n                      backgroundColor: palette.surfaceMuted,\r\n                      marginBottom: spacing(1.5),\r\n                    }}\r\n                  />\r\n                </View>\r\n                <View style={{ width: 80 }}>\r\n                  <TextInput\r\n                    placeholder=\"State\"\r\n                    placeholderTextColor={palette.muted}\r\n                    value={stateCode}\r\n                    onChangeText={setStateCode}\r\n                    style={{\r\n                      borderWidth: 1,\r\n                      borderColor: palette.border,\r\n                      borderRadius: 12,\r\n                      padding: spacing(2),\r\n                      color: palette.text,\r\n                      backgroundColor: palette.surfaceMuted,\r\n                      marginBottom: spacing(1.5),\r\n                    }}\r\n                  />\r\n                </View>\r\n                <View style={{ width: 100 }}>\r\n                  <TextInput\r\n                    placeholder=\"ZIP\"\r\n                    placeholderTextColor={palette.muted}\r\n                    value={zip}\r\n                    onChangeText={setZip}\r\n                    style={{\r\n                      borderWidth: 1,\r\n                      borderColor: palette.border,\r\n                      borderRadius: 12,\r\n                      padding: spacing(2),\r\n                      color: palette.text,\r\n                      backgroundColor: palette.surfaceMuted,\r\n                      marginBottom: spacing(1.5),\r\n                    }}\r\n                  />\r\n                </View>\r\n              </View>\r\n            </View>\r\n          ) : (\r\n            <Text style={{ color: palette.muted, marginTop: spacing(1.5) }}>Add a jobsite to keep crews aligned.</Text>\r\n          )}\r\n        </SurfaceCard>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\nfunction EstimateEditorScreen({ route, navigation }){\r\n  const { token, user } = useAuth();\r\n  const { leadId } = route.params || {};\r\n  const [estimateId, setEstimateId] = useState(null);\r\n  const [items, setItems] = useState([]);\r\n  const [desc, setDesc] = useState('');\r\n  const [qty, setQty] = useState('1');\r\n  const [price, setPrice] = useState('0');\r\n  const [notes, setNotes] = useState('');\r\n  const [photoUrl, setPhotoUrl] = useState(null);\r\n  const [subtotal, setSubtotal] = useState(0);\r\n  const [taxRate, setTaxRate] = useState(7.0);\r\n  const [tax, setTax] = useState(0);\r\n  const [total, setTotal] = useState(0);\r\n  const [leadDetails, setLeadDetails] = useState(null);\r\n  const [leadStatus, setLeadStatus] = useState('NEW');\r\n  const [leadScope, setLeadScope] = useState('');\r\n  const [leadCustomerName, setLeadCustomerName] = useState('');\r\n  const [leadCustomerPhone, setLeadCustomerPhone] = useState('');\r\n  const [leadCustomerEmail, setLeadCustomerEmail] = useState('');\r\n  const [leadAddressLine1, setLeadAddressLine1] = useState('');\r\n  const [leadAddressLine2, setLeadAddressLine2] = useState('');\r\n  const [leadCity, setLeadCity] = useState('');\r\n  const [leadStateCode, setLeadStateCode] = useState('');\r\n  const [leadZip, setLeadZip] = useState('');\r\n  const leadStatuses = ['NEW','CONTACTED','ESTIMATING','CONVERTED','CLOSED_LOST'];\r\n\r\n  const loadLead = useCallback(async () => {\r\n    if (!leadId) return;\r\n    try {\r\n      const data = await api(`/leads/${leadId}`,'GET',null,token);\r\n      setLeadDetails(data);\r\n      setLeadStatus(data.status || 'NEW');\r\n      setLeadScope(data.description || '');\r\n      const customer = data.Customer || {};\r\n      const jobsite = data.Jobsite || {};\r\n      setLeadCustomerName(customer.name || '');\r\n      setLeadCustomerPhone(customer.phone || '');\r\n      setLeadCustomerEmail(customer.email || '');\r\n      setLeadAddressLine1(jobsite.addressLine1 || '');\r\n      setLeadAddressLine2(jobsite.addressLine2 || '');\r\n      setLeadCity(jobsite.city || '');\r\n      setLeadStateCode(jobsite.state || '');\r\n      setLeadZip(jobsite.zip || '');\r\n    } catch(e) { }\r\n  }, [leadId, token]);\r\n\r\n  useEffect(() => {\r\n    loadLead();\r\n  }, [loadLead]);\r\n\r\n  const createEstimate = async () => {\r\n    const est = await api('/estimates', 'POST', {\r\n      leadId,\r\n      customerId: leadDetails?.customerId ?? null,\r\n      jobsiteId: leadDetails?.jobsiteId ?? null,\r\n      subtotal: 0,\r\n      taxRate: parseFloat(taxRate) || 0,\r\n      total: 0\r\n    }, token);\r\n    setEstimateId(est.id);\r\n    return est;\r\n  };\r\n\r\n  const addItem = async () => {\r\n    if(!estimateId){ Alert.alert('Create estimate first'); return; }\r\n            <Text>Qty: {item.qty} x ${item.unitPrice} = {(parseFloat(item.qty||0)*parseFloat(item.unitPrice||0)).toFixed(2)}</Text>\r\n    setItems(prev => [data, ...prev]); setDesc(''); setQty('1'); setPrice('0');\r\n  };\r\n\r\n  const suggest = async () => {\r\n    const r = await api('/ai/estimate-suggest', 'POST', { notes }, token);\r\n    let targetId = estimateId;\r\n    if(!targetId){\r\n      const est = await createEstimate();\r\n      targetId = est.id;\r\n    }\r\n    for(const it of r.items){\r\n      await api(`/estimates/${targetId}/items`, 'POST', it, token);\r\n    }\r\n    if(!estimateId) setEstimateId(targetId);\r\n    Alert.alert('Added', 'Suggested line-items added');\r\n  };\r\n\r\n  const pickPhoto = async () => {\r\n    const res = await ImagePicker.launchImageLibraryAsync({ base64: true, quality: 0.6 });\r\n    if(!res.canceled && res.assets && res.assets[0].base64){\r\n      const dataUrl = `data:image/jpeg;base64,${res.assets[0].base64}`;\r\n      try {\r\n        const up = await api('/upload/image', 'POST', { dataUrl }, token);\r\n        setPhotoUrl(up.url);\r\n      } catch(e){\r\n        db.transaction(tx => tx.executeSql('INSERT INTO queue (type, payload) VALUES (?,?)', ['uploadPhoto', JSON.stringify({ dataUrl })]));\r\n        Alert.alert('Queued upload', 'Will send when online');\r\n      }\r\n    }\r\n  };\r\n\r\n  const saveLeadDetails = async () => {\r\n    if (!leadId) return;\r\n    try {\r\n      const updated = await api(`/leads/${leadId}`,'PATCH',{\r\n        description: leadScope,\r\n        status: leadStatus,\r\n        customer: [leadCustomerName, leadCustomerPhone, leadCustomerEmail].some(v => v && v.trim()) ? {\r\n          name: leadCustomerName,\r\n          phone: leadCustomerPhone,\r\n          email: leadCustomerEmail,\r\n        } : null,\r\n        jobsite: [leadAddressLine1, leadAddressLine2, leadCity, leadStateCode, leadZip].some(v => v && v.trim()) ? {\r\n          addressLine1: leadAddressLine1,\r\n          addressLine2: leadAddressLine2,\r\n          city: leadCity,\r\n          state: leadStateCode,\r\n          zip: leadZip,\r\n        } : null,\r\n      }, token);\r\n      setLeadDetails(updated);\r\n      Alert.alert('Saved', 'Lead details updated.');\r\n    } catch(e) {\r\n      Alert.alert('Error', e.message || 'Unable to update lead');\r\n    }\r\n  };\r\n\r\n  const approveAndSign = () => { if(!estimateId){ Alert.alert('Create estimate'); return; } navigation.navigate('Signature', { estimateId }); };\r\n\r\n  const canEstimate = user?.role === 'ADMIN' || user?.role === 'ESTIMATOR';\r\n\r\n  useEffect(()=>{\r\n    const s = items.reduce((acc, it) => acc + (parseFloat(it.qty||0) * parseFloat(it.unitPrice||0)), 0);\r\n    const t = s * (parseFloat(taxRate||0)/100);\r\n    setSubtotal(s);\r\n    setTax(t);\r\n    setTotal(s + t);\r\n  }, [items, taxRate]);\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex:1 }}>\r\n      <ScrollView contentContainerStyle={{ padding:16, paddingBottom:32 }}>\r\n        <Text style={{ fontSize:18, marginBottom:8 }}>Lead #{leadId}</Text>\r\n        <Text style={{ fontWeight:'600', marginBottom:6 }}>Lead status</Text>\r\n        <View style={{ flexDirection:'row', flexWrap:'wrap', gap:8, marginBottom:12 }}>\r\n          {leadStatuses.map(s => (\r\n            <TouchableOpacity\r\n              key={s}\r\n              onPress={()=>setLeadStatus(s)}\r\n              style={{\r\n                paddingVertical:6,\r\n                paddingHorizontal:12,\r\n                borderRadius:16,\r\n                borderWidth:1,\r\n                borderColor: leadStatus===s ? '#007AFF' : '#ccc',\r\n                backgroundColor: leadStatus===s ? '#E6F0FF' : '#fff'\r\n              }}\r\n            >\r\n              <Text style={{ color: leadStatus===s ? '#007AFF' : '#333' }}>{s}</Text>\r\n            </TouchableOpacity>\r\n          ))}\r\n        </View>\r\n        <Text style={{ fontWeight:'600', marginBottom:6 }}>Scope / notes</Text>\r\n        <TextInput\r\n          placeholder=\"What does this lead need? Add notes, access info, budget...\"\r\n          value={leadScope}\r\n          onChangeText={setLeadScope}\r\n          multiline\r\n          style={{ borderWidth:1, padding:10, minHeight:100, marginBottom:12 }}\r\n        />\r\n        <Text style={{ fontWeight:'600', marginBottom:6 }}>Customer</Text>\r\n        <TextInput placeholder=\"Name\" value={leadCustomerName} onChangeText={setLeadCustomerName} style={{ borderWidth:1, padding:8, marginBottom:6 }} />\r\n        <TextInput placeholder=\"Phone\" value={leadCustomerPhone} onChangeText={setLeadCustomerPhone} keyboardType=\"phone-pad\" style={{ borderWidth:1, padding:8, marginBottom:6 }} />\r\n        <TextInput placeholder=\"Email\" value={leadCustomerEmail} onChangeText={setLeadCustomerEmail} keyboardType=\"email-address\" style={{ borderWidth:1, padding:8, marginBottom:12 }} />\r\n        <Text style={{ fontWeight:'600', marginBottom:6 }}>Job address</Text>\r\n        <TextInput placeholder=\"Address line 1\" value={leadAddressLine1} onChangeText={setLeadAddressLine1} style={{ borderWidth:1, padding:8, marginBottom:6 }} />\r\n        <TextInput placeholder=\"Address line 2\" value={leadAddressLine2} onChangeText={setLeadAddressLine2} style={{ borderWidth:1, padding:8, marginBottom:6 }} />\r\n        <View style={{ flexDirection:'row', gap:8 }}>\r\n          <TextInput placeholder=\"City\" value={leadCity} onChangeText={setLeadCity} style={{ flex:1, borderWidth:1, padding:8 }} />\r\n          <TextInput placeholder=\"State\" value={leadStateCode} onChangeText={setLeadStateCode} style={{ width:80, borderWidth:1, padding:8 }} />\r\n          <TextInput placeholder=\"ZIP\" value={leadZip} onChangeText={setLeadZip} style={{ width:100, borderWidth:1, padding:8 }} />\r\n        </View>\r\n        <View style={{ marginTop:12 }}>\r\n          <Button title=\"Save lead details\" onPress={saveLeadDetails} />\r\n        </View>\r\n\r\n        <View style={{ height:24 }} />\r\n        <Text style={{ fontSize:18, fontWeight:'600', marginBottom:8 }}>Estimate</Text>\r\n        {canEstimate ? <Button title={estimateId ? `Estimate #${estimateId}` : \"Create Estimate\"} onPress={createEstimate} /> : <Text>View only (insufficient role)</Text>}\r\n        <View style={{ height:12 }} />\r\n        <TextInput placeholder=\"Item description\" value={desc} onChangeText={setDesc} style={{ borderWidth:1, padding:8, marginBottom:6 }} />\r\n        <TextInput placeholder=\"Qty\" value={qty} onChangeText={setQty} keyboardType='decimal-pad' style={{ borderWidth:1, padding:8, marginBottom:6 }} />\r\n        <TextInput placeholder=\"Unit Price\" value={price} onChangeText={setPrice} keyboardType='decimal-pad' style={{ borderWidth:1, padding:8, marginBottom:6 }} />\r\n        {canEstimate && <Button title=\"Add Item\" onPress={addItem} />}\r\n        <View style={{ height:16 }} />\r\n        <Text style={{ fontWeight:'600' }}>AI helper</Text>\r\n        <TextInput placeholder=\"Paste field notes...\" value={notes} onChangeText={setNotes} multiline style={{ borderWidth:1, minHeight:80, padding:8, marginBottom:6 }} />\r\n        {canEstimate && <Button title=\"Suggest Line Items\" onPress={suggest} />}\r\n        <View style={{ height:16 }} />\r\n        <Text style={{ fontWeight:'600', marginBottom:6 }}>Totals</Text>\r\n        <View style={{ flexDirection:'row', justifyContent:'space-between', marginBottom:6 }}>\r\n          <Text>Subtotal</Text><Text>${subtotal.toFixed(2)}</Text>\r\n        </View>\r\n        <View style={{ flexDirection:'row', alignItems:'center', justifyContent:'space-between', marginBottom:6 }}>\r\n          <Text>Tax Rate (%)</Text>\r\n          <TextInput value={String(taxRate)} onChangeText={(v)=>setTaxRate(parseFloat(v)||0)} keyboardType='decimal-pad' style={{ borderWidth:1, padding:6, width:80, textAlign:'right' }} />\r\n        </View>\r\n        <View style={{ flexDirection:'row', justifyContent:'space-between', marginBottom:6 }}>\r\n          <Text>Tax</Text><Text>${tax.toFixed(2)}</Text>\r\n        </View>\r\n        <View style={{ flexDirection:'row', justifyContent:'space-between', marginBottom:12 }}>\r\n          <Text style={{ fontWeight:'700' }}>Total</Text><Text style={{ fontWeight:'700' }}>${total.toFixed(2)}</Text>\r\n        </View>\r\n        <View style={{ height:8 }} />\r\n        <Button title=\"Attach Photo\" onPress={pickPhoto} />\r\n        {photoUrl ? <Image source={{ uri: `${API_URL}${photoUrl}` }} style={{ height:120, marginTop:8 }} /> : null}\r\n        <View style={{ height:16 }} />\r\n        <Button title=\"Create Job from Estimate\" onPress={async ()=>{\r\n          try {\r\n            let targetId = estimateId;\r\n            if(!targetId){\r\n              const est = await createEstimate();\r\n              targetId = est.id;\r\n            }\r\n            const hasCustomer = [leadCustomerName, leadCustomerPhone, leadCustomerEmail].some(v => v && v.trim());\r\n            const hasAddress = [leadAddressLine1, leadAddressLine2, leadCity, leadStateCode, leadZip].some(v => v && v.trim());\r\n            const payload = {\r\n              name: leadCustomerName ? `${leadCustomerName} - ${(leadScope || 'Job').slice(0,40)}` : `Job for Estimate #${targetId}`,\r\n              status: 'SCHEDULED',\r\n              estimateId: targetId,\r\n              notes: leadScope || null,\r\n            };\r\n            if (hasCustomer) {\r\n              payload.customer = {\r\n                name: leadCustomerName,\r\n                phone: leadCustomerPhone,\r\n                email: leadCustomerEmail,\r\n              };\r\n            }\r\n            if (hasAddress) {\r\n              payload.jobsite = {\r\n                addressLine1: leadAddressLine1,\r\n                addressLine2: leadAddressLine2,\r\n                city: leadCity,\r\n                state: leadStateCode,\r\n                zip: leadZip,\r\n              };\r\n            }\r\n            const job = await api('/jobs','POST',payload, token);\r\n            Alert.alert('Job Created', `Job #${job.id}`, [\r\n              { text:'Open job', onPress: ()=>navigation.navigate('JobDetail', { jobId: job.id }) },\r\n              { text:'OK' }\r\n            ]);\r\n          } catch(e){ Alert.alert('Error', e.message); }\r\n        }} />\r\n        <View style={{ height:8 }} />\r\n        <Button title=\"Approve & Sign\" onPress={approveAndSign} />\r\n        <View style={{ height:8 }} />\r\n        <Button title=\"Send Estimate\" onPress={async ()=>{\r\n          if(!estimateId) return Alert.alert('Create estimate first');\r\n          try { await api(`/estimates/${estimateId}/send`, 'POST', {}, token); Alert.alert('Sent', 'Estimate sent'); } catch(e){ Alert.alert('Error', e.message); }\r\n        }} />\r\n        <View style={{ height:8 }} />\r\n        <Button title=\"Download PDF\" onPress={async ()=>{\r\n          if(!estimateId) return Alert.alert('Create estimate first');\r\n          const fileUri = `${FileSystem.documentDirectory}estimate-${estimateId}.pdf`;\r\n          try {\r\n            await FileSystem.downloadAsync(`${API_URL}/pdf/estimate/${estimateId}`, fileUri, { headers: { Authorization: `Bearer ${token}` } });\r\n            Alert.alert('Saved', `PDF saved to:\r\n${fileUri}`);\r\n          } catch (e) { Alert.alert('Error', e.message); }\r\n        }} />\r\n        <View style={{ height:16 }} />\r\n        {items.length === 0 ? (\r\n          <Text style={{ color:'#555' }}>No line-items yet.</Text>\r\n        ) : items.map((item, idx) => (\r\n          <View key={item.id || idx} style={{ padding:10, borderWidth:1, marginBottom:8 }}>\r\n            <Text style={{ fontWeight:'600' }}>{item.description}</Text>\r\n            <Text>Qty: {item.qty} Ã— ${item.unitPrice} = {(parseFloat(item.qty||0)*parseFloat(item.unitPrice||0)).toFixed(2)}</Text>\r\n          </View>\r\n        ))}\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\nfunction ScheduleScreen({ navigation }){\r\n  const { token } = useAuth();\r\n  const [jobs, setJobs] = useState([]);\r\n  const [filter, setFilter] = useState('ALL');\r\n  const [queueCount, setQueueCount] = useState(0);\r\n  const [syncing, setSyncing] = useState(false);\r\n\r\n  const loadQueueCount = useCallback(() => {\r\n    db.transaction(tx => tx.executeSql('SELECT COUNT(*) as c FROM queue', [], (_, { rows }) => setQueueCount((rows._array?.[0]?.c)||0)));\r\n  }, []);\r\n\r\n  const load = useCallback(async () => {\r\n    try {\r\n      const data = await api('/jobs','GET',null,token);\r\n      setJobs(data);\r\n      db.transaction(tx => {\r\n        tx.executeSql('DELETE FROM jobs_cache;');\r\n        data.forEach(j => tx.executeSql('INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)', [j.id, j.name||'', j.status||'SCHEDULED', j.startDate||'', j.endDate||'', j.notes||'']));\r\n      });\r\n    } catch(e) {\r\n      db.transaction(tx => tx.executeSql('SELECT id, name, status, startDate, endDate, notes FROM jobs_cache', [], (_, { rows }) => setJobs(rows._array || [])));\r\n    }\r\n  }, [token]);\r\n\r\n  useEffect(() => {\r\n    load();\r\n    loadQueueCount();\r\n  }, [load, loadQueueCount]);\r\n\r\n  const filters = [\r\n    { key:'ALL', label:'All' },\r\n    { key:'TODAY', label:'Today' },\r\n    { key:'WEEK', label:'This week' },\r\n  ];\r\n\r\n  const inRange = useCallback((dateValue) => {\r\n    if (filter === 'ALL') return true;\r\n    if (!dateValue) return false;\r\n    const today = new Date();\r\n    const dt = new Date(dateValue);\r\n    if (Number.isNaN(dt.getTime())) return false;\r\n    if (filter === 'TODAY') {\r\n      return dt.getFullYear() === today.getFullYear() && dt.getMonth() === today.getMonth() && dt.getDate() === today.getDate();\r\n    }\r\n    const start = new Date(today);\r\n    start.setHours(0, 0, 0, 0);\r\n    start.setDate(today.getDate() - today.getDay());\r\n    const end = new Date(start);\r\n    end.setDate(start.getDate() + 6);\r\n    return dt >= start && dt <= end;\r\n  }, [filter]);\r\n\r\n  const filteredJobs = useMemo(() => (\r\n    jobs\r\n      .filter(job => inRange(job.startDate))\r\n      .sort((a, b) => new Date(a.startDate || 0) - new Date(b.startDate || 0))\r\n  ), [jobs, inRange]);\r\n\r\n  const handleSync = useCallback(async () => {\r\n    setSyncing(true);\r\n    try {\r\n      await processQueue(token);\r\n      await load();\r\n      loadQueueCount();\r\n    } finally {\r\n      setSyncing(false);\r\n    }\r\n  }, [token, load, loadQueueCount]);\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\r\n      <ScrollView contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(6) }}>\r\n        <Text style={{ color: palette.text, fontSize: typography.h1, fontWeight:'700', marginBottom: spacing(2) }}>Schedule</Text>\r\n        <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1.5), marginBottom: spacing(2) }}>\r\n          {filters.map(option => (\r\n            <QuickAction\r\n              key={option.key}\r\n              label={option.label}\r\n              tone={filter === option.key ? 'primary' : 'muted'}\r\n              onPress={() => setFilter(option.key)}\r\n            />\r\n          ))}\r\n        </View>\r\n        <SurfaceCard style={{ marginBottom: spacing(3), flexDirection:'row', justifyContent:'space-between', alignItems:'center' }}>\r\n          <View>\r\n            <Text style={{ color: palette.text, fontWeight:'600' }}>Offline queue</Text>\r\n            <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>{queueCount} items waiting to sync</Text>\r\n          </View>\r\n          <QuickAction label={syncing ? 'Syncing...' : 'Sync now'} tone=\"primary\" onPress={syncing ? undefined : handleSync} />\r\n        </SurfaceCard>\r\n\r\n        {filteredJobs.length === 0 ? (\r\n          <SurfaceCard>\r\n            <Text style={{ color: palette.muted }}>No jobs {filter !== 'ALL' ? 'in this range' : 'scheduled yet'}. Convert a lead or create a job to populate your schedule.</Text>\r\n          </SurfaceCard>\r\n        ) : (\r\n          filteredJobs.map(job => {\r\n            const jobsite = job.Jobsite || {};\r\n            const addressParts = [\r\n              jobsite.addressLine1,\r\n              jobsite.addressLine2,\r\n              [jobsite.city, jobsite.state].filter(Boolean).join(', '),\r\n              jobsite.zip,\r\n            ].filter(Boolean);\r\n            const address = addressParts.join(', ');\r\n            return (\r\n              <SurfaceCard key={job.id} style={{ marginBottom: spacing(2) }}>\r\n                <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center' }}>\r\n                  <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600' }}>{job.name || `Job #${job.id}`}</Text>\r\n                  <StatusPill status={job.status || 'SCHEDULED'} />\r\n                </View>\r\n                <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>\r\n                  {job.startDate ? `Starts ${formatDate(job.startDate)}` : 'No start date'}{job.endDate ? ` � Due ${formatDate(job.endDate)}` : ''}\r\n                </Text>\r\n                {address ? <Text style={{ color: palette.muted, marginTop: spacing(1) }}>{address}</Text> : null}\r\n                {job.notes ? <Text style={{ color: palette.muted, marginTop: spacing(1) }}>{job.notes}</Text> : null}\r\n                <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginTop: spacing(2) }}>\r\n                  <QuickAction label=\"Open job\" onPress={() => navigation.navigate('JobDetail', { jobId: job.id })} />\r\n                  <QuickAction label=\"View tasks\" onPress={() => navigation.navigate('JobDetail', { jobId: job.id, tab: 'tasks' })} tone=\"muted\" />\r\n                </View>\r\n              </SurfaceCard>\r\n            );\r\n          })\r\n        )}\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\nfunction MeScreen({ navigation }){\r\n  const { setToken, user } = useAuth();\r\n  return (\r\n    <SafeAreaView style={{ flex:1, padding:16 }}>\r\n      <Text style={{ fontSize:20, fontWeight:'600' }}>PrecisionTracker</Text>\r\n      <Text>User: {user?.email} ({user?.role})</Text>\r\n      {user?.role==='ADMIN' && <View style={{ height:12 }} />}\r\n      {user?.role==='ADMIN' && <Button title=\"Manage Users\" onPress={()=>navigation.navigate('UsersAdmin')} />}\r\n      <View style={{ height:20 }} />\r\n      <Button title=\"Sign out\" onPress={()=>setToken(null)} />\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nconst Stack = createNativeStackNavigator();\r\nconst Tabs = createBottomTabNavigator();\r\n\r\nfunction TabsNav(){\r\n  const { user } = useAuth();\r\n  const isAdmin = (user?.role || '').toUpperCase() === 'ADMIN';\r\n  return (\r\n    <Tabs.Navigator\r\n      screenOptions={{\r\n        headerShown: false,\r\n        tabBarActiveTintColor: palette.primary,\r\n        tabBarStyle: { backgroundColor: '#fff' },\r\n      }}\r\n    >\r\n      <Tabs.Screen name=\"Dashboard\" component={DashboardScreen} options={{ title: 'Home' }} />\r\n      <Tabs.Screen name=\"Leads\" component={LeadsScreen} />\r\n      <Tabs.Screen name=\"Jobs\" component={JobsKanbanScreen} options={{ title:'Jobs' }} />\r\n      {isAdmin ? <Tabs.Screen name=\"Invoices\" component={InvoicesScreen} /> : null}\r\n      <Tabs.Screen name=\"Schedule\" component={ScheduleScreen} />\r\n      <Tabs.Screen name=\"Me\" component={MeScreen} />\r\n    </Tabs.Navigator>\r\n  );\r\n}\r\n\r\nfunction LoginScreen() {\r\n  const [email, setEmail] = useState('admin@example.com');\r\n  // If you kept the hardcoded backend login, default to test123:\r\n  const [password, setPassword] = useState('test123');\r\n  const [busy, setBusy] = useState(false);\r\n\r\n  // <-- use the auth context to flip the app into \"logged-in\" mode\r\n  const { setToken, setUser } = useAuth();\r\n\r\n  async function login() {\r\n    try {\r\n      setBusy(true);\r\n      const res = await fetch(`${API_URL}/auth/login`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n      const data = await res.json();\r\n      if (!res.ok) throw new Error(data?.message || data?.error || 'Login failed');\r\n\r\n      // Accept dev or real payload shape\r\n      const tok = data.token || data.accessToken;\r\n      if (!tok) throw new Error('No token returned from server');\r\n\r\n      // Store token/user in global auth state + persist\r\n      const normalizedUser = data.user ? { ...data.user, role: normalizeRole(data.user.role) } : { email, role: 'ADMIN', name: 'Admin' };\r\n      setToken(tok);\r\n      setUser(normalizedUser);\r\n      try {\r\n        await SecureStore.setItemAsync('auth_token', tok);\r\n        await SecureStore.setItemAsync('auth_user', JSON.stringify(normalizedUser));\r\n      } catch {}\r\n\r\n      // Optional: toast\r\n      Alert.alert('Welcome', 'Logged in');\r\n    } catch (e) {\r\n      Alert.alert('Error', e.message);\r\n    } finally {\r\n      setBusy(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View style={{ flex: 1, padding: 20, justifyContent: 'center' }}>\r\n      <Text style={{ fontSize: 24, marginBottom: 16 }}>PrecisionTracker</Text>\r\n      <TextInput\r\n        placeholder=\"Email\"\r\n        autoCapitalize=\"none\"\r\n        value={email}\r\n        onChangeText={setEmail}\r\n        style={{ borderWidth: 1, padding: 12, marginBottom: 12 }}\r\n      />\r\n      <TextInput\r\n        placeholder=\"Password\"\r\n        secureTextEntry\r\n        value={password}\r\n        onChangeText={setPassword}\r\n        style={{ borderWidth: 1, padding: 12, marginBottom: 12 }}\r\n      />\r\n      <Button title={busy ? 'Signing in...' : 'Sign in'} onPress={login} disabled={busy} />\r\n    </View>\r\n  );\r\n}\r\n\r\n\r\nexport default function App(){\r\n  const [token, setToken] = useState(null);\r\n  const [user, setUser] = useState(null);\r\n  const [booting, setBooting] = useState(true);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    (async () => {\r\n      try {\r\n        const [tok, usr] = await Promise.all([\r\n          SecureStore.getItemAsync('auth_token'),\r\n          SecureStore.getItemAsync('auth_user')\r\n        ]);\r\n        if (mounted && tok) {\r\n          setToken(tok);\r\n          if (usr) {\r\n            const parsed = JSON.parse(usr);\r\n            parsed.role = normalizeRole(parsed.role);\r\n            setUser(parsed);\r\n          }\r\n        }\r\n      } catch {}\r\n      finally { if (mounted) setBooting(false); }\r\n    })();\r\n    return () => { mounted = false; };\r\n  }, []);\r\n\r\n  const authValue = {\r\n    token,\r\n    setToken: (t) => {\r\n      setToken(t);\r\n      if (!t) { try { SecureStore.deleteItemAsync('auth_token'); SecureStore.deleteItemAsync('auth_user'); } catch {} }\r\n    },\r\n    user,\r\n    setUser\r\n  };\r\n\r\n  if (booting) {\r\n    return (\r\n      <SafeAreaView style={{ flex:1, alignItems:'center', justifyContent:'center' }}>\r\n        <Text>LoadingÃƒÂ¢Ã¢â€šÂ¬Ã‚Â¦</Text>\r\n      </SafeAreaView>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={authValue}>\r\n      <NavigationContainer>\r\n        {!token ? (\r\n          <Stack.Navigator>\r\n            <Stack.Screen name=\"Login\" component={LoginScreen} />\r\n          </Stack.Navigator>\r\n        ) : (\r\n          <Stack.Navigator>\r\n            <Stack.Screen name=\"Tabs\" component={TabsNav} options={{ headerShown:false }} />\r\n            <Stack.Screen name=\"NewLead\" component={NewLeadScreen} options={{ title:'New Lead' }} />\r\n            <Stack.Screen name=\"EstimateEditor\" component={EstimateEditorScreen} options={{ title:'Estimate' }} />\r\n            <Stack.Screen name=\"Signature\" component={SignatureScreen} options={{ title:'Signature' }} />\r\n            <Stack.Screen name=\"UsersAdmin\" component={UsersAdminScreen} options={{ title:'Users (Admin)' }} />\r\n            <Stack.Screen name=\"JobDetail\" component={JobDetailScreen} options={{ title:'Job' }} />\r\n          </Stack.Navigator>\r\n        )}\r\n      </NavigationContainer>\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}