{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tyler\\\\Downloads\\\\PrecisionTracker-v4-wired\\\\PrecisionTracker\\\\mobile\\\\App.js\";\nimport React, { useEffect, useState, createContext, useContext, useRef, useCallback, useMemo } from 'react';\nimport { NavigationContainer, useFocusEffect } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport * as ImagePicker from 'expo-image-picker';\nimport * as FileSystem from 'expo-file-system';\nimport * as SQLite from 'expo-sqlite';\nimport Svg, { Path } from 'react-native-svg';\nimport ViewShot from 'react-native-view-shot';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"react-native-web/dist/exports/View\";\nimport * as SecureStore from 'expo-secure-store';\nimport DateTimePicker, { DateTimePickerAndroid } from '@react-native-community/datetimepicker';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.EXPO_PUBLIC_API_URL || 'http://localhost:4000';\nfunction initOfflineTables(database) {\n  try {\n    if (!database || typeof database.transaction !== 'function') return;\n    database.transaction(tx => {\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS queue (id INTEGER PRIMARY KEY AUTOINCREMENT, type TEXT, payload TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS uploads (id INTEGER PRIMARY KEY AUTOINCREMENT, dataUrl TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS leads_cache (id INTEGER PRIMARY KEY, description TEXT, status TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS jobs_cache (id INTEGER PRIMARY KEY, name TEXT, status TEXT, startDate TEXT, endDate TEXT, notes TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS tasks_cache (id INTEGER PRIMARY KEY, jobId INTEGER, title TEXT, status TEXT, dueDate TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS calendar_cache (id INTEGER PRIMARY KEY, jobId INTEGER, title TEXT, startAt TEXT, endAt TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS estimates_cache (id INTEGER PRIMARY KEY, leadId INTEGER, subtotal REAL, taxRate REAL, total REAL, status TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS estimate_items_cache (id INTEGER PRIMARY KEY, estimateId INTEGER, description TEXT, qty REAL, unitPrice REAL);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS change_orders_cache (id INTEGER PRIMARY KEY, jobId INTEGER, title TEXT, amountDelta REAL, status TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS users_cache (id INTEGER PRIMARY KEY, email TEXT, fullName TEXT, role TEXT);');\n    });\n  } catch (e) {}\n}\nlet db;\nexport function getDb() {\n  if (db) return db;\n  if (Platform.OS === 'web') {\n    db = {\n      transaction: fn => fn({\n        executeSql: () => {}\n      }),\n      execAsync: async () => {},\n      runAsync: async () => {}\n    };\n    return db;\n  }\n  if ('openDatabaseSync' in SQLite) {\n    db = SQLite.openDatabaseSync('offline.db');\n    return db;\n  }\n  if ('openDatabaseAsync' in SQLite) {\n    db = {\n      transaction: fn => fn({\n        executeSql: () => {}\n      }),\n      execAsync: async () => {},\n      runAsync: async () => {}\n    };\n    return db;\n  }\n  db = {\n    transaction: fn => fn({\n      executeSql: () => {}\n    }),\n    execAsync: async () => {},\n    runAsync: async () => {}\n  };\n  return db;\n}\nconst dbHandle = getDb();\ninitOfflineTables(dbHandle);\nconst normalizeRole = role => {\n  if (!role) return 'TECH';\n  const r = String(role).toUpperCase();\n  if (['ADMIN', 'ESTIMATOR', 'SUPERVISOR', 'TECH'].includes(r)) return r;\n  if (r === 'STANDARD' || r === 'USER') return 'TECH';\n  return r;\n};\nconst AuthContext = createContext(null);\nfunction useAuth() {\n  return useContext(AuthContext);\n}\nasync function api(path, method = 'GET', body, token) {\n  const headers = Object.assign({}, token ? {\n    Authorization: `Bearer ${token}`\n  } : {}, body ? {\n    'Content-Type': 'application/json'\n  } : {});\n  let response;\n  try {\n    response = await fetch(`${API_URL}${path}`, {\n      method,\n      headers,\n      body: body ? JSON.stringify(body) : undefined\n    });\n  } catch (networkError) {\n    throw new Error(networkError?.message || 'Network request failed');\n  }\n  const contentType = response.headers.get('content-type') || '';\n  const rawBody = await response.text();\n  let data = null;\n  if (rawBody) {\n    if (contentType.includes('application/json')) {\n      try {\n        data = JSON.parse(rawBody);\n      } catch {\n        data = rawBody;\n      }\n    } else {\n      data = rawBody;\n    }\n  }\n  if (!response.ok) {\n    const message = data && typeof data === 'object' && (data.error || data.message) || (typeof data === 'string' ? data : 'Request failed');\n    throw new Error(message);\n  }\n  return data;\n}\nconst palette = {\n  background: '#f4f6f8',\n  surface: '#ffffff',\n  surfaceMuted: '#f1f5f9',\n  border: '#e2e8f0',\n  text: '#0f172a',\n  muted: '#5f6b7d',\n  primary: '#2c8a7d',\n  primaryStrong: '#1f6a60',\n  success: '#219653',\n  warning: '#f59e0b',\n  danger: '#d14343',\n  info: '#2563eb'\n};\nconst spacing = (step = 1) => step * 8;\nconst typography = {\n  h1: 24,\n  h2: 18,\n  body: 15,\n  small: 12\n};\nconst floatingShadow = Platform.select({\n  ios: {\n    shadowColor: '#0f172a',\n    shadowOpacity: 0.08,\n    shadowRadius: 14,\n    shadowOffset: {\n      width: 0,\n      height: 6\n    }\n  },\n  android: {\n    elevation: 2\n  },\n  default: {}\n});\nconst pillTone = {\n  NEW: {\n    fg: palette.info,\n    bg: '#e6eeff',\n    label: 'New'\n  },\n  CONTACTED: {\n    fg: palette.primary,\n    bg: '#e6f4f2',\n    label: 'Contacted'\n  },\n  ESTIMATING: {\n    fg: palette.warning,\n    bg: '#fdf1d6',\n    label: 'Estimating'\n  },\n  CONVERTED: {\n    fg: palette.success,\n    bg: '#e6f6ec',\n    label: 'Converted'\n  },\n  CLOSED_LOST: {\n    fg: palette.muted,\n    bg: '#e2e8f0',\n    label: 'Lost'\n  },\n  SCHEDULED: {\n    fg: palette.primary,\n    bg: '#e6f4f2',\n    label: 'Scheduled'\n  },\n  IN_PROGRESS: {\n    fg: palette.info,\n    bg: '#e6eeff',\n    label: 'In progress'\n  },\n  COMPLETE: {\n    fg: palette.success,\n    bg: '#e6f6ec',\n    label: 'Complete'\n  },\n  DONE: {\n    fg: palette.success,\n    bg: '#e6f6ec',\n    label: 'Complete'\n  },\n  ON_HOLD: {\n    fg: palette.warning,\n    bg: '#fdf1d6',\n    label: 'On hold'\n  },\n  CANCELLED: {\n    fg: palette.muted,\n    bg: '#e2e8f0',\n    label: 'Cancelled'\n  },\n  DRAFT: {\n    fg: palette.muted,\n    bg: '#e2e8f0',\n    label: 'Draft'\n  },\n  SENT: {\n    fg: palette.info,\n    bg: '#e6eeff',\n    label: 'Sent'\n  },\n  PART_PAID: {\n    fg: palette.warning,\n    bg: '#fdf1d6',\n    label: 'Part paid'\n  },\n  PAID: {\n    fg: palette.success,\n    bg: '#e6f6ec',\n    label: 'Paid'\n  },\n  VOID: {\n    fg: palette.muted,\n    bg: '#f1f5f9',\n    label: 'Void'\n  }\n};\nconst toneMap = {\n  primary: {\n    fg: palette.primaryStrong,\n    bg: '#e0f3f0'\n  },\n  success: {\n    fg: palette.success,\n    bg: '#e6f6ec'\n  },\n  warning: {\n    fg: palette.warning,\n    bg: '#fdf1d6'\n  },\n  danger: {\n    fg: palette.danger,\n    bg: '#fde4e4'\n  },\n  info: {\n    fg: palette.info,\n    bg: '#e6eeff'\n  }\n};\nconst formInputBaseStyle = {\n  borderWidth: 1,\n  borderColor: palette.border,\n  borderRadius: 12,\n  paddingVertical: spacing(1.5),\n  paddingHorizontal: spacing(2),\n  color: palette.text,\n  backgroundColor: palette.surfaceMuted,\n  fontSize: typography.body,\n  marginBottom: spacing(1.5)\n};\nconst FormInput = React.forwardRef((props, ref) => _jsxDEV(TextInput, Object.assign({\n  ref: ref,\n  placeholderTextColor: palette.muted\n}, props, {\n  style: [formInputBaseStyle, props.style]\n}), void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 216,\n  columnNumber: 3\n}, this));\nFormInput.displayName = 'FormInput';\nconst formatCurrency = value => {\n  const amount = Number(value || 0);\n  if (Number.isNaN(amount)) return '$0';\n  return `$${amount.toLocaleString(undefined, {\n    minimumFractionDigits: amount % 1 ? 2 : 0,\n    maximumFractionDigits: 2\n  })}`;\n};\nconst formatDate = value => {\n  if (!value) return null;\n  const d = new Date(value);\n  if (Number.isNaN(d.getTime())) return value;\n  return d.toLocaleDateString(undefined, {\n    month: 'short',\n    day: 'numeric'\n  });\n};\nconst isTaskCompleted = status => {\n  if (!status) return false;\n  const key = String(status).toUpperCase();\n  return key === 'DONE' || key === 'COMPLETE';\n};\nfunction SurfaceCard({\n  children,\n  style,\n  onPress\n}) {\n  const content = _jsxDEV(View, {\n    style: [{\n      backgroundColor: palette.surface,\n      borderRadius: 16,\n      borderWidth: 1,\n      borderColor: palette.border,\n      padding: spacing(2)\n    }, floatingShadow, style],\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 246,\n    columnNumber: 5\n  }, this);\n  if (!onPress) return content;\n  return _jsxDEV(TouchableOpacity, {\n    activeOpacity: 0.85,\n    onPress: onPress,\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 5\n  }, this);\n}\nfunction StatusPill({\n  status\n}) {\n  if (!status) return null;\n  const key = String(status).toUpperCase();\n  const cfg = pillTone[key] || {\n    fg: palette.muted,\n    bg: '#e2e8f0',\n    label: status\n  };\n  return _jsxDEV(View, {\n    style: {\n      backgroundColor: cfg.bg,\n      borderRadius: 999,\n      paddingHorizontal: spacing(1.5),\n      paddingVertical: spacing(0.5)\n    },\n    children: _jsxDEV(Text, {\n      style: {\n        color: cfg.fg,\n        fontSize: typography.small,\n        fontWeight: '600'\n      },\n      children: cfg.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 269,\n    columnNumber: 5\n  }, this);\n}\nfunction SummaryCard({\n  title,\n  value,\n  subtitle,\n  tone = 'primary',\n  onPress\n}) {\n  const colors = toneMap[tone] || toneMap.primary;\n  return _jsxDEV(SurfaceCard, {\n    onPress: onPress,\n    style: {\n      backgroundColor: colors.bg,\n      borderColor: 'transparent',\n      padding: spacing(2.5)\n    },\n    children: [_jsxDEV(Text, {\n      style: {\n        color: palette.muted,\n        fontSize: typography.small,\n        textTransform: 'uppercase',\n        fontWeight: '700'\n      },\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this), _jsxDEV(Text, {\n      style: {\n        color: colors.fg,\n        fontSize: 28,\n        fontWeight: '800',\n        marginTop: spacing(0.5)\n      },\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), subtitle ? _jsxDEV(Text, {\n      style: {\n        color: palette.muted,\n        fontSize: typography.small,\n        marginTop: spacing(0.5)\n      },\n      children: subtitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 19\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 278,\n    columnNumber: 5\n  }, this);\n}\nfunction StatusCard({\n  label,\n  value,\n  description,\n  tone = 'primary'\n}) {\n  const colors = toneMap[tone] || toneMap.primary;\n  return _jsxDEV(SurfaceCard, {\n    style: {\n      backgroundColor: colors.bg,\n      borderColor: colors.fg,\n      borderWidth: 1,\n      paddingVertical: spacing(2),\n      paddingHorizontal: spacing(2.5),\n      flexGrow: 1,\n      flexBasis: '48%'\n    },\n    children: [_jsxDEV(Text, {\n      style: {\n        color: colors.fg,\n        fontSize: typography.small,\n        fontWeight: '700',\n        textTransform: 'uppercase'\n      },\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this), _jsxDEV(Text, {\n      style: {\n        color: palette.text,\n        fontSize: 24,\n        fontWeight: '700',\n        marginTop: spacing(0.5)\n      },\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this), description ? _jsxDEV(Text, {\n      style: {\n        color: palette.muted,\n        fontSize: typography.small,\n        marginTop: spacing(0.5)\n      },\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 22\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 292,\n    columnNumber: 5\n  }, this);\n}\nfunction SectionHeader({\n  title,\n  actionLabel,\n  onAction\n}) {\n  return _jsxDEV(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      marginBottom: spacing(1.5)\n    },\n    children: [_jsxDEV(Text, {\n      style: {\n        color: palette.text,\n        fontSize: typography.h2,\n        fontWeight: '700'\n      },\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this), actionLabel && onAction ? _jsxDEV(TouchableOpacity, {\n      onPress: onAction,\n      style: {\n        paddingHorizontal: spacing(1),\n        paddingVertical: spacing(0.5)\n      },\n      children: _jsxDEV(Text, {\n        style: {\n          color: palette.primary,\n          fontWeight: '600',\n          fontSize: typography.small\n        },\n        children: actionLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 312,\n    columnNumber: 5\n  }, this);\n}\nfunction QuickAction({\n  label,\n  onPress,\n  tone = 'primary'\n}) {\n  const toneStyles = (() => {\n    switch (tone) {\n      case 'danger':\n        return {\n          borderColor: '#fecdd3',\n          backgroundColor: '#fee2e2',\n          textColor: palette.danger\n        };\n      case 'success':\n        return {\n          borderColor: '#bbf7d0',\n          backgroundColor: '#dcfce7',\n          textColor: palette.success\n        };\n      case 'warning':\n        return {\n          borderColor: '#fde68a',\n          backgroundColor: '#fef3c7',\n          textColor: palette.warning\n        };\n      case 'muted':\n        return {\n          borderColor: palette.border,\n          backgroundColor: palette.surface,\n          textColor: palette.muted\n        };\n      default:\n        return {\n          borderColor: palette.border,\n          backgroundColor: palette.surfaceMuted,\n          textColor: palette.primary\n        };\n    }\n  })();\n  return _jsxDEV(TouchableOpacity, {\n    onPress: onPress,\n    activeOpacity: 0.85,\n    style: {\n      borderRadius: 10,\n      paddingHorizontal: spacing(1.5),\n      paddingVertical: spacing(0.75),\n      borderWidth: 1,\n      borderColor: toneStyles.borderColor,\n      backgroundColor: toneStyles.backgroundColor\n    },\n    children: _jsxDEV(Text, {\n      style: {\n        color: toneStyles.textColor,\n        fontWeight: '600',\n        fontSize: typography.small\n      },\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 339,\n    columnNumber: 5\n  }, this);\n}\nconst toInputDate = dateValue => {\n  const d = dateValue instanceof Date ? dateValue : new Date(dateValue);\n  if (Number.isNaN(d.getTime())) return '';\n  const yyyy = d.getFullYear();\n  const mm = String(d.getMonth() + 1).padStart(2, '0');\n  const dd = String(d.getDate()).padStart(2, '0');\n  return `${yyyy}-${mm}-${dd}`;\n};\nconst parseInputDate = value => {\n  if (!value) return null;\n  const parsed = new Date(value);\n  if (Number.isNaN(parsed.getTime())) return null;\n  return parsed;\n};\nconst deriveLeadTitle = lead => {\n  if (!lead) return 'Untitled lead';\n  const customerName = lead.Customer?.name;\n  if (customerName && customerName.trim()) return customerName.trim();\n  if (lead.description && lead.description.trim()) {\n    const firstLine = lead.description.trim().split('\\n')[0];\n    return firstLine.length > 60 ? `${firstLine.slice(0, 57)}...` : firstLine;\n  }\n  return `Lead ${lead.id}`;\n};\nfunction DateInputField({\n  value,\n  onChange,\n  placeholder = 'Select date',\n  minimumDate,\n  maximumDate,\n  style\n}) {\n  const [iosPickerVisible, setIosPickerVisible] = useState(false);\n  const isWeb = Platform.OS === 'web';\n  const toDateOnly = input => {\n    if (!input) return '';\n    if (input instanceof Date) return toInputDate(input);\n    if (typeof input === 'string') {\n      const [datePart] = input.split('T');\n      return datePart;\n    }\n    return '';\n  };\n  const normalizedValue = toDateOnly(value);\n  const minDateString = minimumDate ? toDateOnly(minimumDate) : undefined;\n  const maxDateString = maximumDate ? toDateOnly(maximumDate) : undefined;\n  const parsed = parseInputDate(normalizedValue) || new Date();\n  const displayLabel = value ? formatDate(value) || normalizedValue : '';\n  const applyDate = selectedDate => {\n    if (!selectedDate) return;\n    onChange(toInputDate(selectedDate));\n  };\n  const handleManualChange = text => {\n    if (!text) {\n      onChange('');\n      return;\n    }\n    onChange(text);\n  };\n  const openPicker = () => {\n    if (isWeb) return;\n    const baseDate = parseInputDate(normalizedValue) || new Date();\n    if (Platform.OS === 'android') {\n      DateTimePickerAndroid.open({\n        value: baseDate,\n        mode: 'date',\n        minimumDate: minimumDate ? parseInputDate(minimumDate) || undefined : undefined,\n        maximumDate: maximumDate ? parseInputDate(maximumDate) || undefined : undefined,\n        onChange: (event, selected) => {\n          if (event.type === 'set' && selected) applyDate(selected);\n        }\n      });\n    } else {\n      setIosPickerVisible(true);\n    }\n  };\n  const containerStyle = [{\n    marginBottom: spacing(1.5)\n  }, style];\n  if (isWeb) {\n    return _jsxDEV(View, {\n      style: containerStyle,\n      children: _jsxDEV(TextInput, {\n        value: normalizedValue,\n        placeholder: placeholder,\n        placeholderTextColor: palette.muted,\n        onChangeText: handleManualChange,\n        onChange: event => handleManualChange(event?.nativeEvent?.text ?? event?.target?.value ?? ''),\n        style: [formInputBaseStyle, {\n          marginBottom: 0\n        }],\n        type: \"date\",\n        min: minDateString,\n        max: maxDateString\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 7\n    }, this);\n  }\n  return _jsxDEV(View, {\n    style: containerStyle,\n    children: [_jsxDEV(TouchableOpacity, {\n      onPress: openPicker,\n      activeOpacity: 0.85,\n      style: {\n        borderWidth: 1,\n        borderColor: palette.border,\n        borderRadius: 12,\n        backgroundColor: palette.surfaceMuted,\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(1.5)\n      },\n      children: [_jsxDEV(Text, {\n        style: {\n          flex: 1,\n          color: displayLabel ? palette.text : palette.muted,\n          fontSize: typography.body\n        },\n        children: displayLabel || placeholder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: {\n          fontSize: typography.h2 - 6,\n          color: palette.muted\n        },\n        children: \"CAL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 7\n    }, this), Platform.OS === 'ios' && iosPickerVisible ? _jsxDEV(DateTimePicker, {\n      value: parsed,\n      mode: \"date\",\n      display: \"inline\",\n      onChange: (event, selected) => {\n        if (event.type === 'set' && selected) {\n          applyDate(selected);\n        }\n        if (event.type === 'dismissed') {\n          setIosPickerVisible(false);\n          return;\n        }\n        setIosPickerVisible(false);\n      },\n      style: {\n        marginTop: spacing(1)\n      },\n      minimumDate: minimumDate ? parseInputDate(minimumDate) || undefined : undefined,\n      maximumDate: maximumDate ? parseInputDate(maximumDate) || undefined : undefined\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 458,\n    columnNumber: 5\n  }, this);\n}\nconst TECH_ASSIGN_ROLES = ['TECH', 'SUPERVISOR', 'ESTIMATOR'];\nfunction TechSelector({\n  team = [],\n  value,\n  onSelect,\n  label,\n  allowAllRoles,\n  allowClear\n}) {\n  const options = useMemo(() => {\n    const normalized = team.map(member => Object.assign({}, member, {\n      role: normalizeRole(member.role)\n    }));\n    if (allowAllRoles) return normalized;\n    return normalized.filter(member => TECH_ASSIGN_ROLES.includes(member.role));\n  }, [team, allowAllRoles]);\n  if (!options.length) return null;\n  const renderLabel = label ? _jsxDEV(Text, {\n    style: {\n      color: palette.muted,\n      fontSize: typography.small,\n      marginBottom: spacing(1)\n    },\n    children: label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 517,\n    columnNumber: 5\n  }, this) : null;\n  return _jsxDEV(View, {\n    style: {\n      marginTop: spacing(1.5)\n    },\n    children: [renderLabel, _jsxDEV(View, {\n      style: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        columnGap: spacing(1),\n        rowGap: spacing(1)\n      },\n      children: [options.map(member => {\n        const selected = member.id === value;\n        const displayName = member.fullName || member.email;\n        const shortLabel = displayName.length > 22 ? `${displayName.slice(0, 21)}…` : displayName;\n        return _jsxDEV(QuickAction, {\n          label: shortLabel,\n          tone: selected ? 'primary' : 'muted',\n          onPress: () => onSelect(member.id)\n        }, member.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 13\n        }, this);\n      }), allowClear ? _jsxDEV(QuickAction, {\n        label: \"Clear\",\n        tone: \"muted\",\n        onPress: () => onSelect(null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 23\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 521,\n    columnNumber: 5\n  }, this);\n}\nfunction DashboardScreen({\n  navigation\n}) {\n  const {\n    token,\n    user\n  } = useAuth();\n  const [loading, setLoading] = useState(true);\n  const [refreshing, setRefreshing] = useState(false);\n  const [leads, setLeads] = useState([]);\n  const [jobs, setJobs] = useState([]);\n  const [tasks, setTasks] = useState([]);\n  const [invoiceSummary, setInvoiceSummary] = useState(null);\n  const [lastUpdated, setLastUpdated] = useState(null);\n  const isAdmin = (user?.role || '').toUpperCase() === 'ADMIN';\n  const jobLookup = useMemo(() => {\n    const map = {};\n    for (const job of jobs) {\n      if (job?.id != null) {\n        map[job.id] = job;\n      }\n    }\n    return map;\n  }, [jobs]);\n  const loadData = useCallback(async (isPullRefresh = false) => {\n    if (!token) return;\n    isPullRefresh ? setRefreshing(true) : setLoading(true);\n    const fetchLeads = async () => {\n      try {\n        const data = await api('/leads', 'GET', null, token);\n        setLeads(data);\n        db.transaction(tx => {\n          tx.executeSql && tx.executeSql('DELETE FROM leads_cache;');\n          data.forEach(l => tx.executeSql && tx.executeSql('INSERT OR REPLACE INTO leads_cache (id, description, status) VALUES (?,?,?)', [l.id, l.description || '', l.status || 'NEW']));\n        });\n        return data;\n      } catch (e) {\n        return await new Promise(resolve => {\n          db.transaction(tx => tx.executeSql && tx.executeSql('SELECT id, description, status FROM leads_cache', [], (_, {\n            rows\n          }) => {\n            const fallback = rows?._array || [];\n            setLeads(fallback);\n            resolve(fallback);\n          }));\n        });\n      }\n    };\n    const fetchJobs = async () => {\n      try {\n        const data = await api('/jobs', 'GET', null, token);\n        setJobs(data);\n        db.transaction(tx => {\n          tx.executeSql && tx.executeSql('DELETE FROM jobs_cache;');\n          data.forEach(j => tx.executeSql && tx.executeSql('INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)', [j.id, j.name || '', j.status || 'SCHEDULED', j.startDate || '', j.endDate || '', j.notes || '']));\n        });\n        return data;\n      } catch (e) {\n        return await new Promise(resolve => {\n          db.transaction(tx => tx.executeSql && tx.executeSql('SELECT id, name, status, startDate, endDate, notes FROM jobs_cache', [], (_, {\n            rows\n          }) => {\n            const fallback = rows?._array || [];\n            setJobs(fallback);\n            resolve(fallback);\n          }));\n        });\n      }\n    };\n    const fetchTasks = async () => {\n      try {\n        const data = await api('/tasks', 'GET', null, token);\n        setTasks(data);\n        db.transaction(tx => {\n          data.forEach(t => tx.executeSql && tx.executeSql('INSERT OR REPLACE INTO tasks_cache (id, jobId, title, status, dueDate) VALUES (?,?,?,?,?)', [t.id, t.jobId || null, t.title || '', t.status || 'TODO', t.dueDate || '']));\n        });\n        return data;\n      } catch (e) {\n        return await new Promise(resolve => {\n          db.transaction(tx => tx.executeSql && tx.executeSql('SELECT id, jobId, title, status, dueDate FROM tasks_cache ORDER BY id DESC', [], (_, {\n            rows\n          }) => {\n            const fallback = rows?._array || [];\n            setTasks(fallback);\n            resolve(fallback);\n          }));\n        });\n      }\n    };\n    const fetchInvoiceSummary = async () => {\n      try {\n        const data = await api('/invoices/summary', 'GET', null, token);\n        setInvoiceSummary(data);\n        return data;\n      } catch (e) {\n        return null;\n      }\n    };\n    try {\n      await Promise.all([fetchLeads(), fetchJobs(), fetchTasks(), fetchInvoiceSummary()]);\n      setLastUpdated(new Date());\n    } finally {\n      isPullRefresh ? setRefreshing(false) : setLoading(false);\n    }\n  }, [token]);\n  useFocusEffect(useCallback(() => {\n    loadData(false);\n  }, [loadData]));\n  const onRefresh = useCallback(() => loadData(true), [loadData]);\n  const newLeads = leads.filter(l => (l.status || '').toUpperCase() === 'NEW').length;\n  const activeJobs = jobs.filter(j => ['SCHEDULED', 'IN_PROGRESS'].includes((j.status || '').toUpperCase())).length;\n  const openTasks = tasks.filter(t => !isTaskCompleted(t.status)).length;\n  const outstandingValue = invoiceSummary?.outstanding || 0;\n  const collectedValue = invoiceSummary?.collected || 0;\n  const overdueCount = invoiceSummary?.overdueCount || 0;\n  const overdueTasks = useMemo(() => {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    return tasks.filter(task => {\n      if (!task?.dueDate || isTaskCompleted(task.status)) return false;\n      const due = new Date(task.dueDate);\n      if (Number.isNaN(due.getTime())) return false;\n      return due < today;\n    }).length;\n  }, [tasks]);\n  const statusCards = useMemo(() => [{\n    label: 'Active',\n    value: String(activeJobs),\n    description: 'Jobs in progress or scheduled',\n    tone: 'primary'\n  }, {\n    label: 'Pending',\n    value: formatCurrency(outstandingValue),\n    description: 'Unpaid invoices',\n    tone: 'warning'\n  }, {\n    label: 'Paid',\n    value: formatCurrency(collectedValue),\n    description: 'Collected to date',\n    tone: 'success'\n  }, {\n    label: 'Overdue',\n    value: String(overdueTasks),\n    description: `Tasks overdue; ${overdueCount} invoices late`,\n    tone: 'danger'\n  }], [activeJobs, outstandingValue, collectedValue, overdueTasks, overdueCount]);\n  const topLeads = leads.slice(0, 3);\n  const topJobs = jobs.slice(0, 3);\n  const nextTasks = tasks.filter(t => !isTaskCompleted(t.status)).slice(0, 3);\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(5)\n      },\n      refreshControl: _jsxDEV(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh,\n        tintColor: palette.primary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 737,\n        columnNumber: 25\n      }, this),\n      children: [_jsxDEV(Text, {\n        style: {\n          color: palette.text,\n          fontSize: typography.h1,\n          fontWeight: '700',\n          marginBottom: spacing(2)\n        },\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 739,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          columnGap: spacing(1.5),\n          rowGap: spacing(1.5),\n          marginBottom: spacing(2)\n        },\n        children: [_jsxDEV(QuickAction, {\n          label: \"New job\",\n          onPress: () => navigation.navigate('Jobs', {\n            focus: 'create-job'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 742,\n          columnNumber: 11\n        }, this), _jsxDEV(QuickAction, {\n          label: \"New lead\",\n          onPress: () => navigation.navigate('NewLead')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 743,\n          columnNumber: 11\n        }, this), isAdmin ? _jsxDEV(QuickAction, {\n          label: \"Create invoice\",\n          tone: \"success\",\n          onPress: () => navigation.navigate('Invoices')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 744,\n          columnNumber: 22\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 741,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          columnGap: spacing(1.5),\n          rowGap: spacing(1.5),\n          marginBottom: spacing(3)\n        },\n        children: statusCards.map(card => _jsxDEV(StatusCard, {\n          label: card.label,\n          value: card.value,\n          description: card.description,\n          tone: card.tone\n        }, card.label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 749,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 747,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          columnGap: spacing(1.5),\n          rowGap: spacing(1.5)\n        },\n        children: [_jsxDEV(View, {\n          style: {\n            flexBasis: '48%',\n            minWidth: 160\n          },\n          children: _jsxDEV(SummaryCard, {\n            title: \"Leads\",\n            value: leads.length,\n            subtitle: `${newLeads} new to triage`,\n            tone: \"info\",\n            onPress: () => navigation.navigate('Leads')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 761,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 760,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexBasis: '48%',\n            minWidth: 160\n          },\n          children: _jsxDEV(SummaryCard, {\n            title: \"Jobs\",\n            value: jobs.length,\n            subtitle: `${activeJobs} active`,\n            tone: \"primary\",\n            onPress: () => navigation.navigate('Jobs')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 770,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 769,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexBasis: '48%',\n            minWidth: 160\n          },\n          children: _jsxDEV(SummaryCard, {\n            title: \"Tasks\",\n            value: openTasks,\n            subtitle: `${overdueTasks} overdue • ${tasks.length} total`,\n            tone: \"warning\",\n            onPress: () => navigation.navigate('Jobs')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 779,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 778,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexBasis: '48%',\n            minWidth: 160\n          },\n          children: _jsxDEV(SummaryCard, {\n            title: \"Invoices\",\n            value: formatCurrency(outstandingValue),\n            subtitle: `${overdueCount} overdue | ${formatCurrency(collectedValue)} collected`,\n            tone: \"success\",\n            onPress: () => navigation.navigate('Invoices')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 788,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 787,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 759,\n        columnNumber: 9\n      }, this), loading && !refreshing ? _jsxDEV(SurfaceCard, {\n        style: {\n          alignItems: 'center',\n          justifyContent: 'center',\n          paddingVertical: spacing(6)\n        },\n        children: [_jsxDEV(ActivityIndicator, {\n          color: palette.primary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 800,\n          columnNumber: 13\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(1.5)\n          },\n          children: \"Loading summary...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 801,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 799,\n        columnNumber: 11\n      }, this) : null, _jsxDEV(SectionHeader, {\n        title: \"Next Jobs\",\n        actionLabel: \"View all\",\n        onAction: () => navigation.navigate('Jobs')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 805,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: topJobs.length === 0 ? _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: \"No jobs yet. Create one from the Jobs tab.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 808,\n          columnNumber: 13\n        }, this) : topJobs.map((job, idx) => {\n          const startLabel = job.startDate ? `Start ${formatDate(job.startDate)}` : null;\n          const endLabel = job.endDate ? `Due ${formatDate(job.endDate)}` : null;\n          return _jsxDEV(View, {\n            style: {\n              marginBottom: idx === topJobs.length - 1 ? 0 : spacing(2.5)\n            },\n            children: [_jsxDEV(View, {\n              style: {\n                flexDirection: 'row',\n                justifyContent: 'space-between',\n                alignItems: 'center'\n              },\n              children: [_jsxDEV(Text, {\n                style: {\n                  color: palette.text,\n                  fontSize: typography.h2,\n                  fontWeight: '600'\n                },\n                children: job.name || `Job #${job.id}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 816,\n                columnNumber: 21\n              }, this), _jsxDEV(StatusPill, {\n                status: job.status || 'SCHEDULED'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 817,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 815,\n              columnNumber: 19\n            }, this), startLabel || endLabel ? _jsxDEV(Text, {\n              style: {\n                color: palette.muted,\n                marginTop: spacing(0.5)\n              },\n              children: [startLabel, endLabel].filter(Boolean).join(' - ')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 820,\n              columnNumber: 21\n            }, this) : null, job.notes ? _jsxDEV(Text, {\n              style: {\n                color: palette.muted,\n                marginTop: spacing(1)\n              },\n              numberOfLines: 2,\n              children: job.notes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 825,\n              columnNumber: 21\n            }, this) : null, _jsxDEV(View, {\n              style: {\n                flexDirection: 'row',\n                columnGap: spacing(1.5),\n                marginTop: spacing(1.5)\n              },\n              children: [_jsxDEV(QuickAction, {\n                label: \"Open job\",\n                onPress: () => navigation.navigate('JobDetail', {\n                  jobId: job.id\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 828,\n                columnNumber: 21\n              }, this), _jsxDEV(QuickAction, {\n                label: \"Tasks\",\n                onPress: () => navigation.navigate('JobDetail', {\n                  jobId: job.id,\n                  tab: 'tasks'\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 829,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 827,\n              columnNumber: 19\n            }, this)]\n          }, job.id || idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 814,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 806,\n        columnNumber: 9\n      }, this), _jsxDEV(SectionHeader, {\n        title: \"Hot Leads\",\n        actionLabel: \"Leads\",\n        onAction: () => navigation.navigate('Leads')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 837,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: topLeads.length === 0 ? _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: \"No leads yet. Capture leads to keep the funnel full.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 840,\n          columnNumber: 13\n        }, this) : topLeads.map((lead, idx) => _jsxDEV(View, {\n          style: {\n            marginBottom: idx === topLeads.length - 1 ? 0 : spacing(2)\n          },\n          children: [_jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center'\n            },\n            children: [_jsxDEV(Text, {\n              style: {\n                color: palette.text,\n                fontWeight: '600',\n                fontSize: typography.h2\n              },\n              children: deriveLeadTitle(lead)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 845,\n              columnNumber: 17\n            }, this), _jsxDEV(StatusPill, {\n              status: lead.status || 'NEW'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 846,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 844,\n            columnNumber: 15\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.5)\n            },\n            numberOfLines: 3,\n            children: lead.description || 'No scope captured yet.'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 848,\n            columnNumber: 15\n          }, this), _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              columnGap: spacing(1.5),\n              marginTop: spacing(1.5)\n            },\n            children: [_jsxDEV(QuickAction, {\n              label: \"Follow up\",\n              onPress: () => navigation.navigate('EstimateEditor', {\n                leadId: lead.id\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 852,\n              columnNumber: 19\n            }, this), _jsxDEV(QuickAction, {\n              label: \"Convert\",\n              onPress: () => navigation.navigate('Jobs')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 853,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 851,\n            columnNumber: 17\n          }, this)]\n        }, lead.id || idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 843,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 838,\n        columnNumber: 9\n      }, this), _jsxDEV(SectionHeader, {\n        title: \"Open Tasks\",\n        actionLabel: \"Jobs\",\n        onAction: () => navigation.navigate('Jobs')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 860,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        children: nextTasks.length === 0 ? _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: \"All clear. Add tasks from a job to keep crews aligned.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 863,\n          columnNumber: 13\n        }, this) : nextTasks.map((task, idx) => _jsxDEV(View, {\n          style: {\n            marginBottom: idx === nextTasks.length - 1 ? 0 : spacing(2)\n          },\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.text,\n              fontWeight: '600'\n            },\n            children: task.title || 'Task'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 867,\n            columnNumber: 17\n          }, this), task.jobId ? _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.25)\n            },\n            children: jobLookup[task.jobId]?.name || `Job #${task.jobId}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 869,\n            columnNumber: 19\n          }, this) : _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.25)\n            },\n            children: \"Unassigned job\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 873,\n            columnNumber: 19\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.5)\n            },\n            children: task.dueDate ? `Due ${formatDate(task.dueDate)}` : 'No due date'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 875,\n            columnNumber: 17\n          }, this), _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              columnGap: spacing(1.5),\n              marginTop: spacing(1.5)\n            },\n            children: [_jsxDEV(QuickAction, {\n              label: \"Mark done\",\n              onPress: () => navigation.navigate('JobDetail', {\n                jobId: task.jobId\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 879,\n              columnNumber: 19\n            }, this), _jsxDEV(QuickAction, {\n              label: \"View job\",\n              onPress: () => navigation.navigate('JobDetail', {\n                jobId: task.jobId\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 883,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 878,\n            columnNumber: 17\n          }, this)]\n        }, task.id || idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 866,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 861,\n        columnNumber: 9\n      }, this), lastUpdated ? _jsxDEV(Text, {\n        style: {\n          color: palette.muted,\n          fontSize: typography.small,\n          marginTop: spacing(2),\n          textAlign: 'center'\n        },\n        children: [\"Updated \", lastUpdated.toLocaleTimeString([], {\n          hour: 'numeric',\n          minute: '2-digit'\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 894,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 735,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 734,\n    columnNumber: 5\n  }, this);\n}\nfunction SignaturePad({\n  onCapturePng\n}) {\n  const [points, setPoints] = useState([]);\n  const [path, setPath] = useState('');\n  const shotRef = useRef(null);\n  return _jsxDEV(ViewShot, {\n    ref: shotRef,\n    options: {\n      format: 'png',\n      quality: 0.9,\n      result: 'base64'\n    },\n    style: {\n      height: 220,\n      borderWidth: 1,\n      backgroundColor: '#fff'\n    },\n    children: _jsxDEV(View, {\n      onStartShouldSetResponder: () => true,\n      onResponderMove: e => {\n        const x = e.nativeEvent.locationX,\n          y = e.nativeEvent.locationY;\n        setPath(p => p + (p ? ` L ${x} ${y}` : ` M ${x} ${y}`));\n      },\n      onResponderRelease: async () => {\n        const base64 = await shotRef.current.capture();\n        onCapturePng && onCapturePng('data:image/png;base64,' + base64);\n      },\n      style: {\n        flex: 1\n      },\n      children: _jsxDEV(Svg, {\n        height: \"100%\",\n        width: \"100%\",\n        children: _jsxDEV(Path, {\n          d: path,\n          stroke: \"black\",\n          strokeWidth: \"2\",\n          fill: \"none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 922,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 922,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 910,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 909,\n    columnNumber: 5\n  }, this);\n}\nfunction SignatureScreen({\n  route,\n  navigation\n}) {\n  const {\n    token\n  } = useAuth();\n  const {\n    estimateId\n  } = route.params;\n  const [sigPng, setSigPng] = useState(null);\n  const save = async () => {\n    if (!sigPng) {\n      Alert.alert('Please sign first');\n      return;\n    }\n    const resp = await api(`/estimates/${estimateId}/approve`, 'POST', {\n      signaturePngUrl: sigPng\n    }, token);\n    Alert.alert('Approved', `Payment link:\n${resp && resp.paymentLink ? resp.paymentLink : 'Unavailable'}`);\n    navigation.goBack();\n  };\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      padding: 16\n    },\n    children: [_jsxDEV(Text, {\n      style: {\n        fontSize: 18,\n        marginBottom: 8\n      },\n      children: [\"Sign Estimate #\", estimateId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 940,\n      columnNumber: 7\n    }, this), _jsxDEV(SignaturePad, {\n      onCapturePng: setSigPng\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 941,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: {\n        height: 12\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 942,\n      columnNumber: 7\n    }, this), _jsxDEV(Button, {\n      title: \"Save Signature\",\n      onPress: save\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 943,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 939,\n    columnNumber: 5\n  }, this);\n}\nconst userRoleOptions = [{\n  label: 'Admin',\n  value: 'ADMIN'\n}, {\n  label: 'Estimator',\n  value: 'ESTIMATOR'\n}, {\n  label: 'Supervisor',\n  value: 'SUPERVISOR'\n}, {\n  label: 'Tech',\n  value: 'TECH'\n}];\nconst invoiceStatusOptions = [{\n  value: 'DRAFT',\n  label: 'Draft'\n}, {\n  value: 'SENT',\n  label: 'Sent'\n}, {\n  value: 'PART_PAID',\n  label: 'Part paid'\n}, {\n  value: 'PAID',\n  label: 'Paid'\n}, {\n  value: 'VOID',\n  label: 'Void'\n}];\nfunction UsersAdminScreen() {\n  const {\n    token\n  } = useAuth();\n  const [users, setUsers] = useState([]);\n  const [email, setEmail] = useState('');\n  const [fullName, setFullName] = useState('');\n  const [role, setRole] = useState('TECH');\n  const [inviting, setInviting] = useState(false);\n  const [refreshing, setRefreshing] = useState(false);\n  const load = useCallback(async () => {\n    try {\n      const response = await api('/users', 'GET', null, token);\n      setUsers(Array.isArray(response) ? response : []);\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to load users.');\n    }\n  }, [token]);\n  useEffect(() => {\n    load();\n  }, [load]);\n  const resetForm = () => {\n    setEmail('');\n    setFullName('');\n    setRole('TECH');\n  };\n  const invite = async () => {\n    const trimmedEmail = email.trim().toLowerCase();\n    const trimmedName = fullName.trim();\n    if (!trimmedEmail) {\n      Alert.alert('Missing email', 'Enter an email address to invite a user.');\n      return;\n    }\n    try {\n      setInviting(true);\n      await api('/users', 'POST', {\n        email: trimmedEmail,\n        fullName: trimmedName || undefined,\n        role: normalizeRole(role)\n      }, token);\n      resetForm();\n      await load();\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to send invite.');\n    } finally {\n      setInviting(false);\n    }\n  };\n  const promote = async (id, newRole) => {\n    try {\n      await api(`/users/${id}`, 'PATCH', {\n        role: normalizeRole(newRole)\n      }, token);\n      await load();\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to update role.');\n    }\n  };\n  const remove = id => {\n    Alert.alert('Remove user', 'Are you sure you want to remove this person?', [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Remove',\n      style: 'destructive',\n      onPress: async () => {\n        try {\n          await api(`/users/${id}`, 'DELETE', null, token);\n          await load();\n        } catch (e) {\n          Alert.alert('Error', e.message || 'Unable to delete user.');\n        }\n      }\n    }]);\n  };\n  const onRefresh = useCallback(async () => {\n    setRefreshing(true);\n    try {\n      await load();\n    } finally {\n      setRefreshing(false);\n    }\n  }, [load]);\n  const renderRolePill = value => {\n    const roleCfg = userRoleOptions.find(option => option.value === normalizeRole(value));\n    const label = roleCfg ? roleCfg.label : normalizeRole(value);\n    return _jsxDEV(View, {\n      style: {\n        backgroundColor: '#e0f3f0',\n        paddingHorizontal: spacing(1.5),\n        paddingVertical: spacing(0.5),\n        borderRadius: 999\n      },\n      children: _jsxDEV(Text, {\n        style: {\n          color: palette.primaryStrong,\n          fontWeight: '600',\n          fontSize: typography.small\n        },\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1050,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1049,\n      columnNumber: 7\n    }, this);\n  };\n  const renderRoleSelector = (selectedRole, onSelect) => _jsxDEV(View, {\n    style: {\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      columnGap: spacing(1),\n      rowGap: spacing(1)\n    },\n    children: userRoleOptions.map(option => {\n      const selected = selectedRole === option.value;\n      return _jsxDEV(TouchableOpacity, {\n        onPress: () => onSelect(option.value),\n        activeOpacity: 0.85,\n        style: {\n          paddingHorizontal: spacing(2),\n          paddingVertical: spacing(1),\n          borderRadius: 999,\n          borderWidth: 1,\n          borderColor: selected ? palette.primary : palette.border,\n          backgroundColor: selected ? '#d9f2ed' : palette.surface\n        },\n        children: _jsxDEV(Text, {\n          style: {\n            color: selected ? palette.primaryStrong : palette.muted,\n            fontWeight: '600',\n            fontSize: typography.small\n          },\n          children: option.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1073,\n          columnNumber: 13\n        }, this)\n      }, option.value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1060,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1056,\n    columnNumber: 5\n  }, this);\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(FlatList, {\n      data: users,\n      keyExtractor: u => String(u.id),\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(6)\n      },\n      refreshControl: _jsxDEV(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh,\n        tintColor: palette.primary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1088,\n        columnNumber: 25\n      }, this),\n      ListHeaderComponent: _jsxDEV(View, {\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontSize: typography.h1,\n            fontWeight: '700',\n            marginBottom: spacing(2)\n          },\n          children: \"Team management\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1091,\n          columnNumber: 13\n        }, this), _jsxDEV(SurfaceCard, {\n          style: {\n            padding: spacing(2.5),\n            marginBottom: spacing(3)\n          },\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.text,\n              fontSize: typography.h2,\n              fontWeight: '700'\n            },\n            children: \"Invite teammate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1093,\n            columnNumber: 15\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.5),\n              marginBottom: spacing(2)\n            },\n            children: \"Send an invite email and choose what they can access.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1094,\n            columnNumber: 15\n          }, this), _jsxDEV(FormInput, {\n            placeholder: \"Full name (optional)\",\n            value: fullName,\n            onChangeText: setFullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1097,\n            columnNumber: 15\n          }, this), _jsxDEV(FormInput, {\n            placeholder: \"Work email\",\n            autoCapitalize: \"none\",\n            keyboardType: \"email-address\",\n            value: email,\n            onChangeText: setEmail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1102,\n            columnNumber: 15\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              fontWeight: '600',\n              fontSize: typography.small,\n              textTransform: 'uppercase',\n              marginBottom: spacing(1)\n            },\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1109,\n            columnNumber: 15\n          }, this), renderRoleSelector(role, setRole), _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              marginTop: spacing(2)\n            },\n            children: [_jsxDEV(QuickAction, {\n              label: \"Clear\",\n              tone: \"muted\",\n              onPress: resetForm\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1112,\n              columnNumber: 17\n            }, this), _jsxDEV(TouchableOpacity, {\n              onPress: invite,\n              activeOpacity: 0.85,\n              disabled: inviting,\n              style: {\n                backgroundColor: palette.primary,\n                paddingHorizontal: spacing(2.5),\n                paddingVertical: spacing(1.5),\n                borderRadius: 12,\n                opacity: inviting ? 0.6 : 1\n              },\n              children: _jsxDEV(Text, {\n                style: {\n                  color: '#fff',\n                  fontWeight: '700'\n                },\n                children: inviting ? 'Sending...' : 'Send invite'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1125,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1113,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1111,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1092,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1090,\n        columnNumber: 11\n      }, this),\n      ListEmptyComponent: _jsxDEV(SurfaceCard, {\n        children: _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: \"Invite your first teammate to collaborate on jobs.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1133,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1132,\n        columnNumber: 11\n      }, this),\n      renderItem: ({\n        item\n      }) => {\n        const normalizedRole = normalizeRole(item.role);\n        return _jsxDEV(SurfaceCard, {\n          style: {\n            marginBottom: spacing(2),\n            padding: spacing(2.5)\n          },\n          children: [_jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              marginBottom: spacing(1.5)\n            },\n            children: [_jsxDEV(View, {\n              children: [_jsxDEV(Text, {\n                style: {\n                  color: palette.text,\n                  fontSize: typography.h2,\n                  fontWeight: '600'\n                },\n                children: item.fullName || item.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1142,\n                columnNumber: 19\n              }, this), _jsxDEV(Text, {\n                style: {\n                  color: palette.muted,\n                  marginTop: spacing(0.5)\n                },\n                children: item.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1143,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1141,\n              columnNumber: 17\n            }, this), renderRolePill(normalizedRole)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1140,\n            columnNumber: 15\n          }, this), _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              flexWrap: 'wrap',\n              columnGap: spacing(1),\n              rowGap: spacing(1)\n            },\n            children: [userRoleOptions.map(option => {\n              const selected = normalizedRole === option.value;\n              return _jsxDEV(TouchableOpacity, {\n                onPress: () => promote(item.id, option.value),\n                disabled: selected,\n                activeOpacity: 0.85,\n                style: {\n                  paddingHorizontal: spacing(1.75),\n                  paddingVertical: spacing(0.75),\n                  borderRadius: 999,\n                  borderWidth: 1,\n                  borderColor: selected ? palette.primary : palette.border,\n                  backgroundColor: selected ? '#d9f2ed' : palette.surface,\n                  opacity: selected ? 0.7 : 1\n                },\n                children: _jsxDEV(Text, {\n                  style: {\n                    color: selected ? palette.primaryStrong : palette.muted,\n                    fontWeight: '600',\n                    fontSize: typography.small\n                  },\n                  children: option.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1166,\n                  columnNumber: 23\n                }, this)\n              }, option.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1151,\n                columnNumber: 21\n              }, this);\n            }), _jsxDEV(TouchableOpacity, {\n              onPress: () => remove(item.id),\n              activeOpacity: 0.85,\n              style: {\n                paddingHorizontal: spacing(1.75),\n                paddingVertical: spacing(0.75),\n                borderRadius: 999,\n                borderWidth: 1,\n                borderColor: '#fecdd3',\n                backgroundColor: '#fee2e2'\n              },\n              children: _jsxDEV(Text, {\n                style: {\n                  color: palette.danger,\n                  fontWeight: '600',\n                  fontSize: typography.small\n                },\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1184,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1172,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1147,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1139,\n          columnNumber: 13\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1084,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1083,\n    columnNumber: 5\n  }, this);\n}\nfunction InvoicesScreen({\n  navigation\n}) {\n  const {\n    token,\n    user\n  } = useAuth();\n  const [loading, setLoading] = useState(true);\n  const [refreshing, setRefreshing] = useState(false);\n  const [summary, setSummary] = useState(null);\n  const [invoices, setInvoices] = useState([]);\n  const [filter, setFilter] = useState('ALL');\n  const [newInvoiceJobId, setNewInvoiceJobId] = useState('');\n  const [newInvoiceAmount, setNewInvoiceAmount] = useState('');\n  const [newInvoiceIssuedAt, setNewInvoiceIssuedAt] = useState('');\n  const [newInvoiceDueAt, setNewInvoiceDueAt] = useState('');\n  const [newInvoiceStatus, setNewInvoiceStatus] = useState('DRAFT');\n  const [creatingInvoice, setCreatingInvoice] = useState(false);\n  const load = useCallback(async (isRefresh = false) => {\n    if (!token) return;\n    isRefresh ? setRefreshing(true) : setLoading(true);\n    try {\n      const [summaryData, list] = await Promise.all([api('/invoices/summary', 'GET', null, token), api('/invoices', 'GET', null, token)]);\n      setSummary(summaryData);\n      setInvoices(list);\n    } catch (e) {} finally {\n      isRefresh ? setRefreshing(false) : setLoading(false);\n    }\n  }, [token]);\n  useFocusEffect(useCallback(() => {\n    if (user?.role === 'ADMIN') {\n      load(false);\n    }\n  }, [load, user?.role]));\n  const onRefresh = useCallback(() => load(true), [load]);\n  const nextInvoiceNumber = useMemo(() => {\n    if (!Array.isArray(invoices) || invoices.length === 0) {\n      return 'INV-0001';\n    }\n    const maxNumber = invoices.reduce((acc, inv) => {\n      const match = String(inv.number || '').match(/(\\d+)$/);\n      if (match) {\n        return Math.max(acc, parseInt(match[1], 10));\n      }\n      if (inv.id) {\n        return Math.max(acc, Number(inv.id));\n      }\n      return acc;\n    }, 0);\n    const next = maxNumber + 1;\n    return `INV-${String(next).padStart(4, '0')}`;\n  }, [invoices]);\n  const resetInvoiceForm = useCallback(() => {\n    setNewInvoiceJobId('');\n    setNewInvoiceAmount('');\n    setNewInvoiceIssuedAt('');\n    setNewInvoiceDueAt('');\n    setNewInvoiceStatus('DRAFT');\n  }, []);\n  const createInvoice = useCallback(async () => {\n    const amountValue = parseFloat(newInvoiceAmount);\n    if (Number.isNaN(amountValue) || amountValue <= 0) {\n      Alert.alert('Missing amount', 'Enter a valid invoice amount.');\n      return;\n    }\n    const jobIdTrimmed = newInvoiceJobId.trim();\n    const jobIdValue = jobIdTrimmed ? parseInt(jobIdTrimmed, 10) : null;\n    if (jobIdTrimmed && Number.isNaN(jobIdValue)) {\n      Alert.alert('Invalid job', 'Job ID must be a number.');\n      return;\n    }\n    const payload = {\n      amount: amountValue,\n      status: newInvoiceStatus,\n      number: nextInvoiceNumber || undefined,\n      jobId: jobIdValue || undefined,\n      issuedAt: newInvoiceIssuedAt || null,\n      dueAt: newInvoiceDueAt || null\n    };\n    try {\n      setCreatingInvoice(true);\n      const created = await api('/invoices', 'POST', payload, token);\n      resetInvoiceForm();\n      await load(false);\n      Alert.alert('Invoice created', `${created?.number || payload.number || 'Invoice'} saved.`);\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to create invoice.');\n    } finally {\n      setCreatingInvoice(false);\n    }\n  }, [newInvoiceAmount, newInvoiceStatus, newInvoiceJobId, newInvoiceIssuedAt, newInvoiceDueAt, token, load, resetInvoiceForm, nextInvoiceNumber]);\n  const deleteInvoice = useCallback(invoice => {\n    Alert.alert('Delete invoice', `Delete invoice #${invoice.number || invoice.id}?`, [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Delete',\n      style: 'destructive',\n      onPress: async () => {\n        try {\n          await api(`/invoices/${invoice.id}`, 'DELETE', null, token);\n          await load(false);\n        } catch (e) {\n          Alert.alert('Error', e.message || 'Unable to delete invoice.');\n        }\n      }\n    }]);\n  }, [token, load]);\n  if (user?.role !== 'ADMIN') {\n    return _jsxDEV(SafeAreaView, {\n      style: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: palette.background\n      },\n      children: _jsxDEV(Text, {\n        style: {\n          color: palette.muted\n        },\n        children: \"Invoices are only available to admin users.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1324,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1323,\n      columnNumber: 7\n    }, this);\n  }\n  const filters = [{\n    key: 'ALL',\n    label: 'All'\n  }, {\n    key: 'OUTSTANDING',\n    label: 'Outstanding'\n  }, {\n    key: 'PAID',\n    label: 'Paid'\n  }];\n  const filteredInvoices = invoices.filter(inv => {\n    if (filter === 'ALL') return true;\n    const status = (inv.status || 'DRAFT').toUpperCase();\n    if (filter === 'PAID') return status === 'PAID';\n    return !['PAID', 'VOID'].includes(status);\n  });\n  const outstanding = formatCurrency(summary?.outstanding || 0);\n  const collected = formatCurrency(summary?.collected || 0);\n  const drafts = formatCurrency(summary?.draftAmount || 0);\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(6)\n      },\n      refreshControl: _jsxDEV(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh,\n        tintColor: palette.primary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1350,\n        columnNumber: 25\n      }, this),\n      children: [_jsxDEV(Text, {\n        style: {\n          color: palette.text,\n          fontSize: typography.h1,\n          fontWeight: '700',\n          marginBottom: spacing(2)\n        },\n        children: \"Invoices\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1352,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: {\n          color: palette.muted,\n          marginBottom: spacing(2)\n        },\n        children: \"Track billing health and spot overdue balances.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1353,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          padding: spacing(2.5),\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontSize: typography.h2,\n            fontWeight: '700'\n          },\n          children: \"Create invoice\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1355,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(0.5),\n            marginBottom: spacing(2)\n          },\n          children: \"Capture billing details and keep your accounts current.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1356,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            marginBottom: spacing(1.5)\n          },\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              fontSize: typography.small,\n              fontWeight: '700',\n              textTransform: 'uppercase'\n            },\n            children: \"Invoice number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1360,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.text,\n              fontSize: typography.h2,\n              fontWeight: '700',\n              marginTop: spacing(0.5)\n            },\n            children: nextInvoiceNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1361,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1359,\n          columnNumber: 11\n        }, this), _jsxDEV(FormInput, {\n          placeholder: \"Job ID (optional)\",\n          value: newInvoiceJobId,\n          onChangeText: setNewInvoiceJobId,\n          keyboardType: \"number-pad\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1363,\n          columnNumber: 11\n        }, this), _jsxDEV(FormInput, {\n          placeholder: \"Amount $\",\n          value: newInvoiceAmount,\n          onChangeText: setNewInvoiceAmount,\n          keyboardType: \"decimal-pad\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1369,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            columnGap: spacing(1.5)\n          },\n          children: [_jsxDEV(View, {\n            style: {\n              flex: 1\n            },\n            children: _jsxDEV(DateInputField, {\n              value: newInvoiceIssuedAt,\n              onChange: setNewInvoiceIssuedAt,\n              placeholder: \"Issued date\",\n              style: {\n                marginBottom: 0\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1377,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1376,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: {\n              flex: 1\n            },\n            children: _jsxDEV(DateInputField, {\n              value: newInvoiceDueAt,\n              onChange: setNewInvoiceDueAt,\n              placeholder: \"Due date (optional)\",\n              style: {\n                marginBottom: 0\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1380,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1379,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1375,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontSize: typography.small,\n            fontWeight: '700',\n            textTransform: 'uppercase',\n            marginTop: spacing(2),\n            marginBottom: spacing(1)\n          },\n          children: \"Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1383,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            columnGap: spacing(1),\n            rowGap: spacing(1)\n          },\n          children: invoiceStatusOptions.map(option => {\n            const selected = option.value === newInvoiceStatus;\n            return _jsxDEV(TouchableOpacity, {\n              onPress: () => setNewInvoiceStatus(option.value),\n              activeOpacity: 0.85,\n              style: {\n                paddingHorizontal: spacing(2),\n                paddingVertical: spacing(1),\n                borderRadius: 999,\n                borderWidth: 1,\n                borderColor: selected ? palette.primary : palette.border,\n                backgroundColor: selected ? '#d9f2ed' : palette.surface\n              },\n              children: _jsxDEV(Text, {\n                style: {\n                  color: selected ? palette.primaryStrong : palette.muted,\n                  fontWeight: '600',\n                  fontSize: typography.small\n                },\n                children: option.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1401,\n                columnNumber: 19\n              }, this)\n            }, option.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1388,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1384,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginTop: spacing(2)\n          },\n          children: [_jsxDEV(QuickAction, {\n            label: \"Reset\",\n            tone: \"muted\",\n            onPress: resetInvoiceForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1409,\n            columnNumber: 13\n          }, this), _jsxDEV(TouchableOpacity, {\n            onPress: createInvoice,\n            activeOpacity: 0.85,\n            disabled: creatingInvoice,\n            style: {\n              backgroundColor: palette.primary,\n              paddingHorizontal: spacing(2.5),\n              paddingVertical: spacing(1.5),\n              borderRadius: 12,\n              opacity: creatingInvoice ? 0.6 : 1\n            },\n            children: _jsxDEV(Text, {\n              style: {\n                color: '#fff',\n                fontWeight: '700'\n              },\n              children: creatingInvoice ? 'Saving...' : 'Create invoice'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1422,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1410,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1408,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1354,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          columnGap: spacing(2),\n          rowGap: spacing(2),\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(View, {\n          style: {\n            flexBasis: '48%',\n            minWidth: 160\n          },\n          children: _jsxDEV(SummaryCard, {\n            title: \"Outstanding\",\n            value: outstanding,\n            subtitle: `${summary?.overdueCount || 0} overdue`,\n            tone: \"warning\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1429,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1428,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexBasis: '48%',\n            minWidth: 160\n          },\n          children: _jsxDEV(SummaryCard, {\n            title: \"Collected\",\n            value: collected,\n            subtitle: \"All payments to date\",\n            tone: \"success\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1432,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1431,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexBasis: '48%',\n            minWidth: 160\n          },\n          children: _jsxDEV(SummaryCard, {\n            title: \"Drafts\",\n            value: drafts,\n            subtitle: `${summary?.totalCount || 0} total invoices`,\n            tone: \"info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1435,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1434,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1427,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          columnGap: spacing(1),\n          rowGap: spacing(1),\n          marginBottom: spacing(2)\n        },\n        children: filters.map(f => {\n          const selected = f.key === filter;\n          return _jsxDEV(TouchableOpacity, {\n            onPress: () => setFilter(f.key),\n            activeOpacity: 0.85,\n            style: {\n              paddingHorizontal: spacing(2),\n              paddingVertical: spacing(1),\n              borderRadius: 999,\n              borderWidth: 1,\n              borderColor: selected ? palette.primary : palette.border,\n              backgroundColor: selected ? '#d9f2ed' : palette.surface\n            },\n            children: _jsxDEV(Text, {\n              style: {\n                color: selected ? palette.primaryStrong : palette.muted,\n                fontWeight: '600',\n                fontSize: typography.small\n              },\n              children: f.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1456,\n              columnNumber: 17\n            }, this)\n          }, f.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1443,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1439,\n        columnNumber: 9\n      }, this), loading ? _jsxDEV(SurfaceCard, {\n        style: {\n          alignItems: 'center',\n          paddingVertical: spacing(6)\n        },\n        children: [_jsxDEV(ActivityIndicator, {\n          color: palette.primary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1464,\n          columnNumber: 13\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(1.5)\n          },\n          children: \"Loading invoices...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1465,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1463,\n        columnNumber: 11\n      }, this) : filteredInvoices.length === 0 ? _jsxDEV(SurfaceCard, {\n        children: _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: \"No invoices match this filter.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1469,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1468,\n        columnNumber: 11\n      }, this) : filteredInvoices.map(inv => {\n        const payments = (inv.Payments || []).reduce((sum, p) => sum + Number(p.amount || 0), 0);\n        const amount = Number(inv.amount || 0);\n        const balance = Math.max(amount - payments, 0);\n        const statusKey = (inv.status || 'DRAFT').toUpperCase();\n        return _jsxDEV(SurfaceCard, {\n          children: [_jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center'\n            },\n            children: [_jsxDEV(View, {\n              children: [_jsxDEV(Text, {\n                style: {\n                  color: palette.text,\n                  fontSize: typography.h2,\n                  fontWeight: '600'\n                },\n                children: [\"Invoice #\", inv.number || inv.id]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1481,\n                columnNumber: 21\n              }, this), _jsxDEV(Text, {\n                style: {\n                  color: palette.muted,\n                  marginTop: spacing(0.5)\n                },\n                children: [\"Issued \", inv.issuedAt ? formatDate(inv.issuedAt) : 'TBD']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1482,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1480,\n              columnNumber: 19\n            }, this), _jsxDEV(StatusPill, {\n              status: statusKey\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1484,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1479,\n            columnNumber: 17\n          }, this), _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              marginTop: spacing(1.5)\n            },\n            children: [_jsxDEV(View, {\n              children: [_jsxDEV(Text, {\n                style: {\n                  color: palette.muted,\n                  fontSize: typography.small\n                },\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1488,\n                columnNumber: 21\n              }, this), _jsxDEV(Text, {\n                style: {\n                  color: palette.text,\n                  fontWeight: '600'\n                },\n                children: formatCurrency(amount)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1489,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1487,\n              columnNumber: 19\n            }, this), _jsxDEV(View, {\n              children: [_jsxDEV(Text, {\n                style: {\n                  color: palette.muted,\n                  fontSize: typography.small\n                },\n                children: \"Collected\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1492,\n                columnNumber: 21\n              }, this), _jsxDEV(Text, {\n                style: {\n                  color: palette.text\n                },\n                children: formatCurrency(payments)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1493,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1491,\n              columnNumber: 19\n            }, this), _jsxDEV(View, {\n              children: [_jsxDEV(Text, {\n                style: {\n                  color: palette.muted,\n                  fontSize: typography.small\n                },\n                children: \"Balance\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1496,\n                columnNumber: 21\n              }, this), _jsxDEV(Text, {\n                style: {\n                  color: balance > 0 ? palette.primaryStrong : palette.muted,\n                  fontWeight: '600'\n                },\n                children: formatCurrency(balance)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1497,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1495,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1486,\n            columnNumber: 17\n          }, this), inv.dueAt ? _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(1)\n            },\n            children: [\"Due \", formatDate(inv.dueAt)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1501,\n            columnNumber: 19\n          }, this) : null, _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              flexWrap: 'wrap',\n              columnGap: spacing(1),\n              rowGap: spacing(1),\n              marginTop: spacing(2)\n            },\n            children: [inv.jobId ? _jsxDEV(QuickAction, {\n              label: \"View job\",\n              onPress: () => navigation.navigate('JobDetail', {\n                jobId: inv.jobId\n              }),\n              tone: \"muted\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1504,\n              columnNumber: 32\n            }, this) : null, _jsxDEV(QuickAction, {\n              label: \"Record payment\",\n              tone: \"success\",\n              onPress: () => Alert.alert('Coming soon', 'Payment logging will land shortly.')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1505,\n              columnNumber: 19\n            }, this), _jsxDEV(QuickAction, {\n              label: \"Delete\",\n              tone: \"danger\",\n              onPress: () => deleteInvoice(inv)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1506,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1503,\n            columnNumber: 17\n          }, this)]\n        }, inv.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1478,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1348,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1347,\n    columnNumber: 5\n  }, this);\n}\nfunction JobsKanbanScreen({\n  navigation,\n  route\n}) {\n  const {\n    token\n  } = useAuth();\n  const [jobs, setJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [refreshing, setRefreshing] = useState(false);\n  const [newJobName, setNewJobName] = useState('');\n  const [newJobStartDate, setNewJobStartDate] = useState('');\n  const [newJobDueDate, setNewJobDueDate] = useState('');\n  const [newJobNotes, setNewJobNotes] = useState('');\n  const [newCustomerName, setNewCustomerName] = useState('');\n  const [newCustomerPhone, setNewCustomerPhone] = useState('');\n  const [newCustomerEmail, setNewCustomerEmail] = useState('');\n  const [newAddressLine1, setNewAddressLine1] = useState('');\n  const [newAddressLine2, setNewAddressLine2] = useState('');\n  const [newCity, setNewCity] = useState('');\n  const [newStateCode, setNewStateCode] = useState('');\n  const [newZip, setNewZip] = useState('');\n  const [jobFormTab, setJobFormTab] = useState('BASICS');\n  const statusOrder = ['SCHEDULED', 'IN_PROGRESS', 'ON_HOLD', 'DONE', 'COMPLETE', 'CANCELLED'];\n  const load = useCallback(async (isRefresh = false) => {\n    isRefresh ? setRefreshing(true) : setLoading(true);\n    try {\n      const data = await api('/jobs', 'GET', null, token);\n      setJobs(data);\n      db.transaction(tx => {\n        tx.executeSql && tx.executeSql('DELETE FROM jobs_cache;');\n        data.forEach(j => tx.executeSql && tx.executeSql('INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)', [j.id, j.name || '', j.status || 'SCHEDULED', j.startDate || '', j.endDate || '', j.notes || '']));\n      });\n    } catch (e) {\n      db.transaction(tx => tx.executeSql && tx.executeSql('SELECT id, name, status, startDate, endDate, notes FROM jobs_cache', [], (_, {\n        rows\n      }) => setJobs(rows._array || [])));\n    } finally {\n      isRefresh ? setRefreshing(false) : setLoading(false);\n    }\n  }, [token]);\n  useFocusEffect(useCallback(() => {\n    load(false);\n  }, [load]));\n  const onRefresh = useCallback(() => load(true), [load]);\n  const resetForm = () => {\n    setNewJobName('');\n    setNewJobStartDate('');\n    setNewJobDueDate('');\n    setNewJobNotes('');\n    setNewCustomerName('');\n    setNewCustomerPhone('');\n    setNewCustomerEmail('');\n    setNewAddressLine1('');\n    setNewAddressLine2('');\n    setNewCity('');\n    setNewStateCode('');\n    setNewZip('');\n    setJobFormTab('BASICS');\n  };\n  const createJob = async () => {\n    if (!newJobName.trim()) {\n      Alert.alert('Missing info', 'Please add a job name.');\n      setJobFormTab('BASICS');\n      return;\n    }\n    const hasCustomer = [newCustomerName, newCustomerPhone, newCustomerEmail].some(v => v && v.trim());\n    const hasAddress = [newAddressLine1, newCity, newStateCode, newZip].some(v => v && v.trim());\n    const payload = {\n      name: newJobName.trim(),\n      status: 'SCHEDULED',\n      startDate: newJobStartDate || null,\n      endDate: newJobDueDate || null,\n      notes: newJobNotes.trim() || null\n    };\n    if (hasCustomer) {\n      payload.customer = {\n        name: newCustomerName.trim(),\n        phone: newCustomerPhone.trim(),\n        email: newCustomerEmail.trim(),\n        billingAddress: newAddressLine1 ? `${newAddressLine1}${newAddressLine2 ? `\n${newAddressLine2}` : ''}${newCity ? `\n${newCity}, ${newStateCode} ${newZip}` : ''}` : null\n      };\n    }\n    if (hasAddress) {\n      payload.jobsite = {\n        addressLine1: newAddressLine1.trim(),\n        addressLine2: newAddressLine2.trim(),\n        city: newCity.trim(),\n        state: newStateCode.trim(),\n        zip: newZip.trim()\n      };\n    }\n    try {\n      const created = await api('/jobs', 'POST', payload, token);\n      setJobs(prev => [created, ...prev]);\n      db.transaction(tx => tx.executeSql && tx.executeSql('INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)', [created.id, created.name || '', created.status || 'SCHEDULED', created.startDate || '', created.endDate || '', created.notes || '']));\n      resetForm();\n      Alert.alert('Job created', `Job #${created.id} ready to schedule.`);\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to create job');\n    }\n  };\n  const updateJobStatus = async (id, status) => {\n    try {\n      const updated = await api(`/jobs/${id}`, 'PATCH', {\n        status\n      }, token);\n      setJobs(prev => prev.map(job => job.id === id ? updated : job));\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to update job status');\n    }\n  };\n  const removeJob = async id => {\n    Alert.alert('Delete Job', `Delete job #${id}?`, [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Delete',\n      style: 'destructive',\n      onPress: async () => {\n        try {\n          await api(`/jobs/${id}`, 'DELETE', null, token);\n          setJobs(prev => prev.filter(job => job.id !== id));\n          db.transaction(tx => tx.executeSql && tx.executeSql('DELETE FROM jobs_cache WHERE id=?', [id]));\n        } catch (e) {\n          Alert.alert('Error', e.message || 'Unable to delete job');\n        }\n      }\n    }]);\n  };\n  const sortedJobs = useMemo(() => {\n    const normalize = status => (status || 'SCHEDULED').toUpperCase();\n    const rank = status => {\n      const key = normalize(status);\n      const idx = statusOrder.indexOf(key);\n      return idx === -1 ? statusOrder.length : idx;\n    };\n    const parseDateSafe = value => {\n      if (!value) return null;\n      const d = new Date(value);\n      return Number.isNaN(d.getTime()) ? null : d;\n    };\n    return [...jobs].sort((a, b) => {\n      const statusDiff = rank(a.status) - rank(b.status);\n      if (statusDiff !== 0) return statusDiff;\n      const startA = parseDateSafe(a.startDate);\n      const startB = parseDateSafe(b.startDate);\n      if (startA && startB) return startA - startB;\n      if (startA) return -1;\n      if (startB) return 1;\n      return (b.id || 0) - (a.id || 0);\n    });\n  }, [jobs, statusOrder]);\n  const groupedJobs = useMemo(() => {\n    const groups = [];\n    let currentStatus = null;\n    sortedJobs.forEach(job => {\n      const statusKey = (job.status || 'SCHEDULED').toUpperCase();\n      if (statusKey !== currentStatus) {\n        groups.push({\n          status: statusKey,\n          jobs: [job]\n        });\n        currentStatus = statusKey;\n      } else {\n        groups[groups.length - 1].jobs.push(job);\n      }\n    });\n    return groups;\n  }, [sortedJobs]);\n  const statusLabel = status => {\n    const key = (status || 'SCHEDULED').toUpperCase();\n    return pillTone[key]?.label || key.charAt(0) + key.slice(1).toLowerCase();\n  };\n  const quickStatusActions = [{\n    label: 'Start job',\n    value: 'IN_PROGRESS',\n    tone: 'primary'\n  }, {\n    label: 'Pause',\n    value: 'ON_HOLD',\n    tone: 'warning'\n  }, {\n    label: 'Wrap up',\n    value: 'DONE',\n    tone: 'success'\n  }];\n  const inputStyle = {\n    borderWidth: 1,\n    borderColor: palette.border,\n    borderRadius: 12,\n    paddingHorizontal: spacing(1.5),\n    paddingVertical: spacing(1.25),\n    backgroundColor: palette.surfaceMuted,\n    color: palette.text,\n    fontSize: typography.body,\n    marginBottom: spacing(1.5)\n  };\n  const jobTabs = [{\n    key: 'BASICS',\n    label: 'Basics'\n  }, {\n    key: 'CUSTOMER',\n    label: 'Customer'\n  }, {\n    key: 'JOBSITE',\n    label: 'Jobsite'\n  }, {\n    key: 'NOTES',\n    label: 'Notes'\n  }];\n  const renderJobFormFields = () => {\n    if (jobFormTab === 'BASICS') {\n      return _jsxDEV(View, {\n        children: [_jsxDEV(TextInput, {\n          placeholder: \"Job name\",\n          placeholderTextColor: palette.muted,\n          value: newJobName,\n          onChangeText: setNewJobName,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1734,\n          columnNumber: 11\n        }, this), _jsxDEV(DateInputField, {\n          value: newJobStartDate,\n          onChange: setNewJobStartDate,\n          placeholder: \"Start date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1741,\n          columnNumber: 11\n        }, this), _jsxDEV(DateInputField, {\n          value: newJobDueDate,\n          onChange: setNewJobDueDate,\n          placeholder: \"Due date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1746,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1733,\n        columnNumber: 9\n      }, this);\n    }\n    if (jobFormTab === 'CUSTOMER') {\n      return _jsxDEV(View, {\n        children: [_jsxDEV(TextInput, {\n          placeholder: \"Customer name\",\n          placeholderTextColor: palette.muted,\n          value: newCustomerName,\n          onChangeText: setNewCustomerName,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1757,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Phone\",\n          placeholderTextColor: palette.muted,\n          keyboardType: \"phone-pad\",\n          value: newCustomerPhone,\n          onChangeText: setNewCustomerPhone,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1764,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Email\",\n          placeholderTextColor: palette.muted,\n          keyboardType: \"email-address\",\n          autoCapitalize: \"none\",\n          value: newCustomerEmail,\n          onChangeText: setNewCustomerEmail,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1772,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1756,\n        columnNumber: 9\n      }, this);\n    }\n    if (jobFormTab === 'JOBSITE') {\n      return _jsxDEV(View, {\n        children: [_jsxDEV(TextInput, {\n          placeholder: \"Address line 1\",\n          placeholderTextColor: palette.muted,\n          value: newAddressLine1,\n          onChangeText: setNewAddressLine1,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1787,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Address line 2\",\n          placeholderTextColor: palette.muted,\n          value: newAddressLine2,\n          onChangeText: setNewAddressLine2,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1794,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            columnGap: spacing(1.5)\n          },\n          children: [_jsxDEV(View, {\n            style: {\n              flex: 1\n            },\n            children: _jsxDEV(TextInput, {\n              placeholder: \"City\",\n              placeholderTextColor: palette.muted,\n              value: newCity,\n              onChangeText: setNewCity,\n              style: [inputStyle, {\n                marginBottom: 0\n              }]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1803,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1802,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: {\n              width: 80\n            },\n            children: _jsxDEV(TextInput, {\n              placeholder: \"State\",\n              placeholderTextColor: palette.muted,\n              value: newStateCode,\n              onChangeText: setNewStateCode,\n              style: [inputStyle, {\n                marginBottom: 0\n              }]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1812,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1811,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: {\n              width: 100\n            },\n            children: _jsxDEV(TextInput, {\n              placeholder: \"ZIP\",\n              placeholderTextColor: palette.muted,\n              value: newZip,\n              onChangeText: setNewZip,\n              style: [inputStyle, {\n                marginBottom: 0\n              }]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1821,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1820,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1801,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1786,\n        columnNumber: 9\n      }, this);\n    }\n    return _jsxDEV(TextInput, {\n      placeholder: \"Internal notes\",\n      placeholderTextColor: palette.muted,\n      value: newJobNotes,\n      onChangeText: setNewJobNotes,\n      multiline: true,\n      style: [inputStyle, {\n        minHeight: 96,\n        textAlignVertical: 'top'\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1834,\n      columnNumber: 7\n    }, this);\n  };\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(4)\n      },\n      refreshControl: _jsxDEV(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh,\n        tintColor: palette.primary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1849,\n        columnNumber: 25\n      }, this),\n      children: [_jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3),\n          padding: spacing(2.5)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontSize: typography.h2,\n            fontWeight: '700',\n            marginBottom: spacing(2)\n          },\n          children: \"Create job\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1852,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            columnGap: spacing(1),\n            rowGap: spacing(1.5),\n            marginBottom: spacing(2)\n          },\n          children: jobTabs.map(tab => {\n            const selected = tab.key === jobFormTab;\n            return _jsxDEV(TouchableOpacity, {\n              onPress: () => setJobFormTab(tab.key),\n              activeOpacity: 0.85,\n              style: {\n                paddingHorizontal: spacing(2),\n                paddingVertical: spacing(1),\n                borderRadius: 999,\n                borderWidth: 1,\n                borderColor: selected ? palette.primary : palette.border,\n                backgroundColor: selected ? '#d9f2ed' : palette.surface\n              },\n              children: _jsxDEV(Text, {\n                style: {\n                  color: selected ? palette.primaryStrong : palette.muted,\n                  fontWeight: '600',\n                  fontSize: typography.small\n                },\n                children: tab.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1870,\n                columnNumber: 19\n              }, this)\n            }, tab.key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1857,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1853,\n          columnNumber: 11\n        }, this), renderJobFormFields(), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginTop: spacing(2)\n          },\n          children: [_jsxDEV(QuickAction, {\n            label: \"Reset\",\n            tone: \"muted\",\n            onPress: resetForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1879,\n            columnNumber: 13\n          }, this), _jsxDEV(TouchableOpacity, {\n            onPress: createJob,\n            activeOpacity: 0.85,\n            style: {\n              backgroundColor: palette.primary,\n              paddingHorizontal: spacing(2.5),\n              paddingVertical: spacing(1.5),\n              borderRadius: 12\n            },\n            children: _jsxDEV(Text, {\n              style: {\n                color: '#fff',\n                fontWeight: '700'\n              },\n              children: \"Create job\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1885,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1880,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1878,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1851,\n        columnNumber: 9\n      }, this), loading && !refreshing && jobs.length === 0 ? _jsxDEV(SurfaceCard, {\n        style: {\n          alignItems: 'center',\n          paddingVertical: spacing(6),\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(ActivityIndicator, {\n          color: palette.primary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1892,\n          columnNumber: 13\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(1.5)\n          },\n          children: \"Loading jobs...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1893,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1891,\n        columnNumber: 11\n      }, this) : null, groupedJobs.length === 0 ? _jsxDEV(SurfaceCard, {\n        children: _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: \"No jobs yet. Convert a lead or add a job to get started.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1899,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1898,\n        columnNumber: 11\n      }, this) : groupedJobs.map(group => _jsxDEV(View, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontWeight: '700',\n            fontSize: typography.small,\n            textTransform: 'uppercase',\n            marginBottom: spacing(1)\n          },\n          children: statusLabel(group.status)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1904,\n          columnNumber: 15\n        }, this), group.jobs.map(job => {\n          const customer = job.Customer || {};\n          const jobsite = job.Jobsite || {};\n          const addressParts = [jobsite.addressLine1, jobsite.addressLine2, [jobsite.city, jobsite.state].filter(Boolean).join(', '), jobsite.zip].filter(Boolean);\n          const address = addressParts.join(', ');\n          const statusKey = (job.status || 'SCHEDULED').toUpperCase();\n          return _jsxDEV(SurfaceCard, {\n            style: {\n              marginBottom: spacing(1.5)\n            },\n            children: [_jsxDEV(View, {\n              style: {\n                flexDirection: 'row',\n                justifyContent: 'space-between',\n                alignItems: 'center'\n              },\n              children: [_jsxDEV(Text, {\n                style: {\n                  color: palette.text,\n                  fontSize: typography.h2,\n                  fontWeight: '600'\n                },\n                children: job.name || `Job #${job.id}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1921,\n                columnNumber: 23\n              }, this), _jsxDEV(StatusPill, {\n                status: statusKey\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1922,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1920,\n              columnNumber: 21\n            }, this), job.startDate || job.endDate ? _jsxDEV(Text, {\n              style: {\n                color: palette.muted,\n                marginTop: spacing(0.75)\n              },\n              children: [job.startDate ? `Start ${formatDate(job.startDate)}` : null, job.endDate ? `Due ${formatDate(job.endDate)}` : null].filter(Boolean).join(' | ')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1925,\n              columnNumber: 23\n            }, this) : null, customer.name ? _jsxDEV(Text, {\n              style: {\n                color: palette.text,\n                fontWeight: '600',\n                marginTop: spacing(1)\n              },\n              children: customer.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1929,\n              columnNumber: 38\n            }, this) : null, customer.phone ? _jsxDEV(Text, {\n              style: {\n                color: palette.muted\n              },\n              children: customer.phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1930,\n              columnNumber: 39\n            }, this) : null, customer.email ? _jsxDEV(Text, {\n              style: {\n                color: palette.muted\n              },\n              children: customer.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1931,\n              columnNumber: 39\n            }, this) : null, address ? _jsxDEV(Text, {\n              style: {\n                color: palette.muted,\n                marginTop: spacing(1)\n              },\n              children: address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1932,\n              columnNumber: 32\n            }, this) : null, job.notes ? _jsxDEV(Text, {\n              style: {\n                color: palette.muted,\n                marginTop: spacing(1)\n              },\n              numberOfLines: 3,\n              children: job.notes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1933,\n              columnNumber: 34\n            }, this) : null, _jsxDEV(View, {\n              style: {\n                flexDirection: 'row',\n                flexWrap: 'wrap',\n                columnGap: spacing(1),\n                rowGap: spacing(1),\n                marginTop: spacing(2)\n              },\n              children: [_jsxDEV(QuickAction, {\n                label: \"View job\",\n                onPress: () => navigation.navigate('JobDetail', {\n                  jobId: job.id\n                }),\n                tone: \"muted\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1935,\n                columnNumber: 23\n              }, this), quickStatusActions.map(action => action.value === statusKey ? null : _jsxDEV(QuickAction, {\n                label: action.label,\n                tone: action.tone,\n                onPress: () => updateJobStatus(job.id, action.value)\n              }, action.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1938,\n                columnNumber: 27\n              }, this)), _jsxDEV(QuickAction, {\n                label: \"Delete\",\n                tone: \"danger\",\n                onPress: () => removeJob(job.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1946,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1934,\n              columnNumber: 21\n            }, this)]\n          }, job.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1919,\n            columnNumber: 19\n          }, this);\n        })]\n      }, group.status, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1903,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1847,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1846,\n    columnNumber: 5\n  }, this);\n}\nfunction JobDetailScreen({\n  route,\n  navigation\n}) {\n  const {\n    jobId\n  } = route.params;\n  const {\n    token,\n    user\n  } = useAuth();\n  const [jobName, setJobName] = useState('');\n  const [jobStartDate, setJobStartDate] = useState('');\n  const [jobEndDate, setJobEndDate] = useState('');\n  const [jobNotes, setJobNotes] = useState('');\n  const [jobCustomerName, setJobCustomerName] = useState('');\n  const [jobCustomerPhone, setJobCustomerPhone] = useState('');\n  const [jobCustomerEmail, setJobCustomerEmail] = useState('');\n  const [jobAddressLine1, setJobAddressLine1] = useState('');\n  const [jobAddressLine2, setJobAddressLine2] = useState('');\n  const [jobCity, setJobCity] = useState('');\n  const [jobStateCode, setJobStateCode] = useState('');\n  const [jobZip, setJobZip] = useState('');\n  const [changeOrders, setCO] = useState([]);\n  const [title, setTitle] = useState('');\n  const [amountDelta, setAmountDelta] = useState('0');\n  const roleKey = normalizeRole(user?.role);\n  const canManageChangeOrders = ['ADMIN', 'SUPERVISOR', 'ESTIMATOR'].includes(roleKey);\n  const loadCO = useCallback(async () => {\n    setCO(await api(`/change-orders/job/${jobId}`, 'GET', null, token));\n  }, [jobId, token]);\n  const loadJob = useCallback(async () => {\n    try {\n      const j = await api(`/jobs/${jobId}`, 'GET', null, token);\n      setJobName(j.name || '');\n      setJobStartDate(j.startDate || '');\n      setJobEndDate(j.endDate || '');\n      setJobNotes(j.notes || '');\n      const customer = j.Customer || {};\n      const jobsite = j.Jobsite || {};\n      setJobCustomerName(customer.name || '');\n      setJobCustomerPhone(customer.phone || '');\n      setJobCustomerEmail(customer.email || '');\n      setJobAddressLine1(jobsite.addressLine1 || '');\n      setJobAddressLine2(jobsite.addressLine2 || '');\n      setJobCity(jobsite.city || '');\n      setJobStateCode(jobsite.state || '');\n      setJobZip(jobsite.zip || '');\n    } catch (e) {}\n  }, [jobId, token]);\n  useEffect(() => {\n    loadJob();\n    loadCO();\n  }, [loadJob, loadCO]);\n  const addCO = async () => {\n    if (!title.trim()) {\n      Alert.alert('Missing info', 'Add a title for the change order.');\n      return;\n    }\n    await api(`/change-orders/job/${jobId}`, 'POST', {\n      title: title.trim(),\n      amountDelta: parseFloat(amountDelta) || 0\n    }, token);\n    setTitle('');\n    setAmountDelta('0');\n    loadCO();\n  };\n  const saveJobDetails = async () => {\n    try {\n      await api(`/jobs/${jobId}`, 'PATCH', {\n        name: jobName,\n        startDate: jobStartDate || null,\n        endDate: jobEndDate || null,\n        notes: jobNotes,\n        customer: {\n          name: jobCustomerName,\n          phone: jobCustomerPhone,\n          email: jobCustomerEmail,\n          billingAddress: jobAddressLine1 ? `${jobAddressLine1}${jobAddressLine2 ? `\n${jobAddressLine2}` : ''}${jobCity ? `\n${jobCity}, ${jobStateCode} ${jobZip}` : ''}` : null\n        },\n        jobsite: {\n          addressLine1: jobAddressLine1,\n          addressLine2: jobAddressLine2,\n          city: jobCity,\n          state: jobStateCode,\n          zip: jobZip\n        }\n      }, token);\n      Alert.alert('Saved', 'Job details updated.');\n      loadJob();\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to save job');\n    }\n  };\n  const deleteJob = () => {\n    Alert.alert('Delete job', `Delete job #${jobId}?`, [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Delete',\n      style: 'destructive',\n      onPress: async () => {\n        try {\n          await api(`/jobs/${jobId}`, 'DELETE', null, token);\n          db.transaction(tx => tx.executeSql('DELETE FROM jobs_cache WHERE id=?', [jobId]));\n          Alert.alert('Deleted', 'Job removed.');\n          navigation.navigate('Tabs', {\n            screen: 'Jobs'\n          });\n        } catch (e) {\n          Alert.alert('Error', e.message || 'Unable to delete job');\n        }\n      }\n    }]);\n  };\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(6)\n      },\n      children: [_jsxDEV(Text, {\n        style: {\n          color: palette.text,\n          fontSize: typography.h1,\n          fontWeight: '700'\n        },\n        children: [\"Job #\", jobId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2058,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: {\n          color: palette.muted,\n          marginTop: spacing(0.5),\n          marginBottom: spacing(3)\n        },\n        children: \"Keep job information up to date so the field team always has the latest context.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2059,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          padding: spacing(2.5),\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontSize: typography.small,\n            fontWeight: '700',\n            textTransform: 'uppercase',\n            marginBottom: spacing(1)\n          },\n          children: \"Basics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2064,\n          columnNumber: 11\n        }, this), _jsxDEV(FormInput, {\n          placeholder: \"Job name\",\n          value: jobName,\n          onChangeText: setJobName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2067,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            columnGap: spacing(1.5)\n          },\n          children: [_jsxDEV(View, {\n            style: {\n              flex: 1\n            },\n            children: _jsxDEV(DateInputField, {\n              value: jobStartDate,\n              onChange: setJobStartDate,\n              placeholder: \"Start date\",\n              style: {\n                marginBottom: 0\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2070,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2069,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: {\n              flex: 1\n            },\n            children: _jsxDEV(DateInputField, {\n              value: jobEndDate,\n              onChange: setJobEndDate,\n              placeholder: \"End date\",\n              style: {\n                marginBottom: 0\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2073,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2072,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2068,\n          columnNumber: 11\n        }, this), _jsxDEV(FormInput, {\n          placeholder: \"Notes / scope\",\n          value: jobNotes,\n          onChangeText: setJobNotes,\n          multiline: true,\n          style: {\n            minHeight: 112,\n            textAlignVertical: 'top'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2076,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginTop: spacing(2)\n          },\n          children: [_jsxDEV(QuickAction, {\n            label: \"Delete job\",\n            tone: \"danger\",\n            onPress: deleteJob\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2084,\n            columnNumber: 13\n          }, this), _jsxDEV(TouchableOpacity, {\n            onPress: saveJobDetails,\n            activeOpacity: 0.85,\n            style: {\n              backgroundColor: palette.primary,\n              paddingHorizontal: spacing(2.5),\n              paddingVertical: spacing(1.5),\n              borderRadius: 12\n            },\n            children: _jsxDEV(Text, {\n              style: {\n                color: '#fff',\n                fontWeight: '700'\n              },\n              children: \"Save changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2090,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2085,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2083,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2063,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          padding: spacing(2.5),\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontSize: typography.small,\n            fontWeight: '700',\n            textTransform: 'uppercase',\n            marginBottom: spacing(1)\n          },\n          children: \"Customer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2096,\n          columnNumber: 11\n        }, this), _jsxDEV(FormInput, {\n          placeholder: \"Name\",\n          value: jobCustomerName,\n          onChangeText: setJobCustomerName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2099,\n          columnNumber: 11\n        }, this), _jsxDEV(FormInput, {\n          placeholder: \"Phone\",\n          value: jobCustomerPhone,\n          onChangeText: setJobCustomerPhone,\n          keyboardType: \"phone-pad\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2100,\n          columnNumber: 11\n        }, this), _jsxDEV(FormInput, {\n          placeholder: \"Email\",\n          value: jobCustomerEmail,\n          onChangeText: setJobCustomerEmail,\n          keyboardType: \"email-address\",\n          autoCapitalize: \"none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2095,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          padding: spacing(2.5),\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontSize: typography.small,\n            fontWeight: '700',\n            textTransform: 'uppercase',\n            marginBottom: spacing(1)\n          },\n          children: \"Jobsite\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2111,\n          columnNumber: 11\n        }, this), _jsxDEV(FormInput, {\n          placeholder: \"Address line 1\",\n          value: jobAddressLine1,\n          onChangeText: setJobAddressLine1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2114,\n          columnNumber: 11\n        }, this), _jsxDEV(FormInput, {\n          placeholder: \"Address line 2\",\n          value: jobAddressLine2,\n          onChangeText: setJobAddressLine2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2115,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            columnGap: spacing(1.5)\n          },\n          children: [_jsxDEV(FormInput, {\n            placeholder: \"City\",\n            value: jobCity,\n            onChangeText: setJobCity,\n            style: {\n              flex: 1,\n              marginBottom: 0\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2117,\n            columnNumber: 13\n          }, this), _jsxDEV(FormInput, {\n            placeholder: \"State\",\n            value: jobStateCode,\n            onChangeText: setJobStateCode,\n            autoCapitalize: \"characters\",\n            style: {\n              width: 96,\n              marginBottom: 0\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2118,\n            columnNumber: 13\n          }, this), _jsxDEV(FormInput, {\n            placeholder: \"ZIP\",\n            value: jobZip,\n            onChangeText: setJobZip,\n            keyboardType: \"numeric\",\n            style: {\n              width: 112,\n              marginBottom: 0\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2110,\n        columnNumber: 9\n      }, this), canManageChangeOrders ? _jsxDEV(SurfaceCard, {\n        style: {\n          padding: spacing(2.5),\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontSize: typography.small,\n            fontWeight: '700',\n            textTransform: 'uppercase',\n            marginBottom: spacing(1)\n          },\n          children: \"New change order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2137,\n          columnNumber: 13\n        }, this), _jsxDEV(FormInput, {\n          placeholder: \"Title\",\n          value: title,\n          onChangeText: setTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2140,\n          columnNumber: 13\n        }, this), _jsxDEV(FormInput, {\n          placeholder: \"Amount $\",\n          value: amountDelta,\n          onChangeText: setAmountDelta,\n          keyboardType: \"decimal-pad\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2141,\n          columnNumber: 13\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'flex-end',\n            marginTop: spacing(2)\n          },\n          children: _jsxDEV(TouchableOpacity, {\n            onPress: addCO,\n            activeOpacity: 0.85,\n            style: {\n              backgroundColor: palette.primary,\n              paddingHorizontal: spacing(2.5),\n              paddingVertical: spacing(1.5),\n              borderRadius: 12\n            },\n            children: _jsxDEV(Text, {\n              style: {\n                color: '#fff',\n                fontWeight: '700'\n              },\n              children: \"Add change order\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2148,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2143,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2142,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2136,\n        columnNumber: 11\n      }, this) : null, _jsxDEV(View, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontSize: typography.h2,\n            fontWeight: '700',\n            marginBottom: spacing(1.5)\n          },\n          children: \"Change orders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2155,\n          columnNumber: 11\n        }, this), changeOrders.length === 0 ? _jsxDEV(SurfaceCard, {\n          children: _jsxDEV(Text, {\n            style: {\n              color: palette.muted\n            },\n            children: \"No change orders yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2158,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2157,\n          columnNumber: 13\n        }, this) : changeOrders.map(item => {\n          const statusKey = (item.status || 'PENDING').toUpperCase();\n          const statusTone = (() => {\n            if (statusKey === 'APPROVED') return {\n              bg: '#dcfce7',\n              fg: palette.success,\n              label: 'Approved'\n            };\n            if (statusKey === 'REJECTED') return {\n              bg: '#fee2e2',\n              fg: palette.danger,\n              label: 'Rejected'\n            };\n            return {\n              bg: '#e0f3f0',\n              fg: palette.primaryStrong,\n              label: 'Pending'\n            };\n          })();\n          const amountLabel = formatCurrency(item.amountDelta || 0);\n          return _jsxDEV(SurfaceCard, {\n            style: {\n              marginBottom: spacing(1.5),\n              padding: spacing(2.5)\n            },\n            children: [_jsxDEV(View, {\n              style: {\n                flexDirection: 'row',\n                justifyContent: 'space-between',\n                alignItems: 'center'\n              },\n              children: [_jsxDEV(Text, {\n                style: {\n                  color: palette.text,\n                  fontSize: typography.h2,\n                  fontWeight: '600'\n                },\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2171,\n                columnNumber: 19\n              }, this), _jsxDEV(View, {\n                style: {\n                  backgroundColor: statusTone.bg,\n                  borderRadius: 999,\n                  paddingHorizontal: spacing(1.5),\n                  paddingVertical: spacing(0.5)\n                },\n                children: _jsxDEV(Text, {\n                  style: {\n                    color: statusTone.fg,\n                    fontWeight: '600',\n                    fontSize: typography.small\n                  },\n                  children: statusTone.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2173,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2172,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2170,\n              columnNumber: 17\n            }, this), _jsxDEV(Text, {\n              style: {\n                color: palette.muted,\n                marginTop: spacing(0.5)\n              },\n              children: amountLabel\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2176,\n              columnNumber: 17\n            }, this), canManageChangeOrders ? _jsxDEV(View, {\n              style: {\n                flexDirection: 'row',\n                flexWrap: 'wrap',\n                columnGap: spacing(1),\n                rowGap: spacing(1),\n                marginTop: spacing(1.5)\n              },\n              children: [_jsxDEV(QuickAction, {\n                label: \"Approve\",\n                tone: \"success\",\n                onPress: async () => {\n                  await api(`/change-orders/${item.id}`, 'PATCH', {\n                    status: 'APPROVED'\n                  }, token);\n                  loadCO();\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2179,\n                columnNumber: 21\n              }, this), _jsxDEV(QuickAction, {\n                label: \"Reject\",\n                tone: \"danger\",\n                onPress: async () => {\n                  await api(`/change-orders/${item.id}`, 'PATCH', {\n                    status: 'REJECTED'\n                  }, token);\n                  loadCO();\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2184,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2178,\n              columnNumber: 19\n            }, this) : null]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2169,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2154,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: {\n          color: palette.text,\n          fontSize: typography.h2,\n          fontWeight: '700',\n          marginBottom: spacing(1.5)\n        },\n        children: \"Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2196,\n        columnNumber: 9\n      }, this), _jsxDEV(JobTasks, {\n        jobId: jobId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2197,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: {\n          color: palette.text,\n          fontSize: typography.h2,\n          fontWeight: '700',\n          marginTop: spacing(3),\n          marginBottom: spacing(1.5)\n        },\n        children: \"Schedule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2199,\n        columnNumber: 9\n      }, this), _jsxDEV(JobSchedule, {\n        jobId: jobId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2200,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2055,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 2054,\n    columnNumber: 5\n  }, this);\n}\nfunction JobTasks({\n  jobId\n}) {\n  const {\n    token\n  } = useAuth();\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState('');\n  const [dueDate, setDueDate] = useState('');\n  const load = async () => {\n    try {\n      const data = await api(`/tasks?jobId=${jobId}`, 'GET', null, token);\n      setTasks(data);\n      db.transaction(tx => {\n        tx.executeSql('DELETE FROM tasks_cache WHERE jobId=?', [jobId]);\n        data.forEach(t => tx.executeSql('INSERT OR REPLACE INTO tasks_cache (id, jobId, title, status, dueDate) VALUES (?,?,?,?,?)', [t.id, jobId, t.title || '', t.status || 'TODO', t.dueDate || '']));\n      });\n    } catch (e) {\n      db.transaction(tx => tx.executeSql('SELECT id, jobId, title, status, dueDate FROM tasks_cache WHERE jobId=?', [jobId], (_, {\n        rows\n      }) => setTasks(rows._array || [])));\n    }\n  };\n  useEffect(() => {\n    load();\n  }, []);\n  const add = async () => {\n    if (!title.trim()) return Alert.alert('Title required');\n    await api('/tasks', 'POST', {\n      title,\n      jobId,\n      dueDate\n    }, token);\n    setTitle('');\n    setDueDate('');\n    load();\n  };\n  const done = async id => {\n    await api(`/tasks/${id}`, 'PATCH', {\n      status: 'DONE'\n    }, token);\n    load();\n  };\n  const remove = id => {\n    Alert.alert('Delete task', 'Remove this task?', [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Delete',\n      style: 'destructive',\n      onPress: async () => {\n        await api(`/tasks/${id}`, 'DELETE', null, token);\n        load();\n      }\n    }]);\n  };\n  return _jsxDEV(View, {\n    children: [_jsxDEV(SurfaceCard, {\n      style: {\n        marginBottom: spacing(2)\n      },\n      children: [_jsxDEV(Text, {\n        style: {\n          color: palette.text,\n          fontSize: typography.h2,\n          fontWeight: '600',\n          marginBottom: spacing(1.5)\n        },\n        children: \"Add task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2239,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        placeholder: \"Task title\",\n        placeholderTextColor: palette.muted,\n        value: title,\n        onChangeText: setTitle,\n        style: {\n          borderWidth: 1,\n          borderColor: palette.border,\n          borderRadius: 12,\n          padding: spacing(2),\n          color: palette.text,\n          backgroundColor: palette.surfaceMuted,\n          marginBottom: spacing(1.5)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2240,\n        columnNumber: 9\n      }, this), _jsxDEV(DateInputField, {\n        value: dueDate,\n        onChange: setDueDate,\n        placeholder: \"Due date (optional)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2255,\n        columnNumber: 9\n      }, this), _jsxDEV(QuickAction, {\n        label: \"Add task\",\n        onPress: add\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2256,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2238,\n      columnNumber: 7\n    }, this), tasks.length === 0 ? _jsxDEV(SurfaceCard, {\n      children: _jsxDEV(Text, {\n        style: {\n          color: palette.muted\n        },\n        children: \"No tasks yet. Add one to start tracking progress.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2261,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2260,\n      columnNumber: 9\n    }, this) : tasks.map(t => _jsxDEV(SurfaceCard, {\n      style: {\n        marginBottom: spacing(1.5)\n      },\n      children: [_jsxDEV(Text, {\n        style: {\n          color: palette.text,\n          fontWeight: '600',\n          fontSize: typography.h2 - 2\n        },\n        children: t.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2266,\n        columnNumber: 13\n      }, this), _jsxDEV(Text, {\n        style: {\n          color: palette.muted,\n          marginTop: spacing(0.5)\n        },\n        children: [\"Status: \", t.status || 'TODO', t.dueDate ? ` - Due ${formatDate(t.dueDate)}` : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2267,\n        columnNumber: 13\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          columnGap: spacing(1),\n          rowGap: spacing(1),\n          marginTop: spacing(1.5)\n        },\n        children: [!isTaskCompleted(t.status) ? _jsxDEV(QuickAction, {\n          label: \"Mark done\",\n          tone: \"success\",\n          onPress: () => done(t.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2272,\n          columnNumber: 17\n        }, this) : null, _jsxDEV(QuickAction, {\n          label: \"Delete\",\n          tone: \"danger\",\n          onPress: () => remove(t.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2274,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2270,\n        columnNumber: 13\n      }, this)]\n    }, t.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2265,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 2237,\n    columnNumber: 5\n  }, this);\n}\nfunction JobSchedule({\n  jobId\n}) {\n  const {\n    token\n  } = useAuth();\n  const [events, setEvents] = useState([]);\n  const [title, setTitle] = useState('');\n  const [startAt, setStartAt] = useState('');\n  const [endAt, setEndAt] = useState('');\n  const load = async () => {\n    try {\n      const data = await api(`/calendar?jobId=${jobId}`, 'GET', null, token);\n      setEvents(data);\n      db.transaction(tx => {\n        tx.executeSql('DELETE FROM calendar_cache WHERE jobId=?', [jobId]);\n        data.forEach(ev => tx.executeSql('INSERT OR REPLACE INTO calendar_cache (id, jobId, title, startAt, endAt) VALUES (?,?,?,?,?)', [ev.id, jobId, ev.title || '', ev.startAt || '', ev.endAt || '']));\n      });\n    } catch (e) {\n      db.transaction(tx => tx.executeSql('SELECT id, jobId, title, startAt, endAt FROM calendar_cache WHERE jobId=?', [jobId], (_, {\n        rows\n      }) => setEvents(rows._array || [])));\n    }\n  };\n  useEffect(() => {\n    load();\n  }, []);\n  const add = async () => {\n    if (!title.trim() || !startAt) return Alert.alert('Title and start time required');\n    await api('/calendar', 'POST', {\n      title,\n      jobId,\n      startAt,\n      endAt\n    }, token);\n    setTitle('');\n    setStartAt('');\n    setEndAt('');\n    load();\n  };\n  const remove = id => {\n    Alert.alert('Delete event', 'Remove this schedule item?', [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Delete',\n      style: 'destructive',\n      onPress: async () => {\n        await api(`/calendar/${id}`, 'DELETE', null, token);\n        load();\n      }\n    }]);\n  };\n  return _jsxDEV(View, {\n    children: [_jsxDEV(SurfaceCard, {\n      style: {\n        marginBottom: spacing(2)\n      },\n      children: [_jsxDEV(Text, {\n        style: {\n          color: palette.text,\n          fontSize: typography.h2,\n          fontWeight: '600',\n          marginBottom: spacing(1.5)\n        },\n        children: \"Schedule event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2316,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        placeholder: \"Event title\",\n        placeholderTextColor: palette.muted,\n        value: title,\n        onChangeText: setTitle,\n        style: {\n          borderWidth: 1,\n          borderColor: palette.border,\n          borderRadius: 12,\n          padding: spacing(2),\n          color: palette.text,\n          backgroundColor: palette.surfaceMuted,\n          marginBottom: spacing(1.5)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2317,\n        columnNumber: 9\n      }, this), _jsxDEV(DateInputField, {\n        value: startAt,\n        onChange: date => {\n          const existing = startAt || '';\n          const timePartIndex = existing.indexOf('T');\n          const timePart = timePartIndex > -1 ? existing.substring(timePartIndex) : 'T08:00:00';\n          setStartAt(`${date}${timePart}`);\n        },\n        placeholder: \"Start date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2332,\n        columnNumber: 9\n      }, this), _jsxDEV(DateInputField, {\n        value: endAt,\n        onChange: date => {\n          if (!date) {\n            setEndAt('');\n            return;\n          }\n          const existing = endAt || '';\n          const timePartIndex = existing.indexOf('T');\n          const timePart = timePartIndex > -1 ? existing.substring(timePartIndex) : 'T17:00:00';\n          setEndAt(`${date}${timePart}`);\n        },\n        placeholder: \"End date (optional)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2342,\n        columnNumber: 9\n      }, this), _jsxDEV(QuickAction, {\n        label: \"Add event\",\n        onPress: add\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2356,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2315,\n      columnNumber: 7\n    }, this), events.length === 0 ? _jsxDEV(SurfaceCard, {\n      children: _jsxDEV(Text, {\n        style: {\n          color: palette.muted\n        },\n        children: \"No schedule entries yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2361,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2360,\n      columnNumber: 9\n    }, this) : events.map(ev => {\n      const startLabel = ev.startAt ? `Starts ${formatDate(ev.startAt)}` : 'No start date';\n      const endLabel = ev.endAt ? ` - Ends ${formatDate(ev.endAt)}` : '';\n      return _jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(1.5)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontWeight: '600',\n            fontSize: typography.h2 - 2\n          },\n          children: ev.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2369,\n          columnNumber: 15\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(0.5)\n          },\n          children: [startLabel, endLabel]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2370,\n          columnNumber: 15\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            columnGap: spacing(1),\n            marginTop: spacing(1.5)\n          },\n          children: _jsxDEV(QuickAction, {\n            label: \"Delete\",\n            tone: \"danger\",\n            onPress: () => remove(ev.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2374,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2373,\n          columnNumber: 15\n        }, this)]\n      }, ev.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2368,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 2314,\n    columnNumber: 5\n  }, this);\n}\nasync function processQueue(token) {\n  return new Promise(resolve => {\n    db.transaction(tx => {\n      tx.executeSql('SELECT * FROM queue', [], async (_, {\n        rows\n      }) => {\n        const items = rows._array || [];\n        for (const q of items) {\n          try {\n            const payload = JSON.parse(q.payload);\n            if (q.type === 'createLead') {\n              await api('/leads', 'POST', payload, token);\n            }\n            if (q.type === 'uploadPhoto') {\n              await api('/upload/image', 'POST', {\n                dataUrl: payload.dataUrl\n              }, token);\n            }\n            db.transaction(txx => txx.executeSql('DELETE FROM queue WHERE id=?', [q.id]));\n          } catch (e) {}\n        }\n        resolve();\n      });\n    });\n  });\n}\nfunction LeadsScreen({\n  navigation\n}) {\n  const {\n    token\n  } = useAuth();\n  const [leads, setLeads] = useState([]);\n  const [refreshing, setRefreshing] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const fetchLeads = useCallback(async () => {\n    setLoading(true);\n    try {\n      const data = await api('/leads', 'GET', null, token);\n      setLeads(data);\n      db.transaction(tx => {\n        tx.executeSql && tx.executeSql('DELETE FROM leads_cache;');\n        data.forEach(l => tx.executeSql && tx.executeSql('INSERT OR REPLACE INTO leads_cache (id, description, status) VALUES (?,?,?)', [l.id, l.description || '', l.status || 'NEW']));\n      });\n    } catch (e) {\n      db.transaction(tx => tx.executeSql && tx.executeSql('SELECT id, description, status FROM leads_cache', [], (_, {\n        rows\n      }) => setLeads(rows._array || [])));\n    } finally {\n      setLoading(false);\n    }\n  }, [token]);\n  useFocusEffect(useCallback(() => {\n    fetchLeads();\n  }, [fetchLeads]));\n  const onRefresh = useCallback(async () => {\n    setRefreshing(true);\n    await fetchLeads();\n    setRefreshing(false);\n  }, [fetchLeads]);\n  const deleteLead = useCallback(lead => {\n    const title = deriveLeadTitle(lead);\n    Alert.alert('Delete lead', `Remove \"${title}\"?`, [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Delete',\n      style: 'destructive',\n      onPress: async () => {\n        try {\n          await api(`/leads/${lead.id}`, 'DELETE', null, token);\n          setLeads(prev => prev.filter(l => l.id !== lead.id));\n          db.transaction(tx => tx.executeSql && tx.executeSql('DELETE FROM leads_cache WHERE id=?', [lead.id]));\n        } catch (err) {\n          Alert.alert('Error', err.message || 'Unable to delete lead');\n        }\n      }\n    }]);\n  }, [token]);\n  const newLeadsCount = leads.filter(l => (l.status || '').toUpperCase() === 'NEW').length;\n  const renderLeadCard = lead => {\n    const customer = lead.Customer || {};\n    const title = deriveLeadTitle(lead);\n    const subtitle = customer.name && customer.name.trim() && customer.name.trim() !== title ? customer.name : null;\n    const jobsite = lead.Jobsite || {};\n    const addressParts = [jobsite.addressLine1, jobsite.addressLine2, [jobsite.city, jobsite.state].filter(Boolean).join(', '), jobsite.zip].filter(Boolean);\n    const address = addressParts.join(', ');\n    const statusKey = (lead.status || 'NEW').toUpperCase();\n    return _jsxDEV(SurfaceCard, {\n      children: [_jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        children: [_jsxDEV(View, {\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.text,\n              fontSize: typography.h2,\n              fontWeight: '600'\n            },\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2477,\n            columnNumber: 13\n          }, this), subtitle ? _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.5)\n            },\n            children: subtitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2478,\n            columnNumber: 25\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2476,\n          columnNumber: 11\n        }, this), _jsxDEV(StatusPill, {\n          status: statusKey\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2480,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2475,\n        columnNumber: 9\n      }, this), customer.phone ? _jsxDEV(Text, {\n        style: {\n          color: palette.muted,\n          marginTop: spacing(0.5)\n        },\n        children: customer.phone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2482,\n        columnNumber: 27\n      }, this) : null, customer.email ? _jsxDEV(Text, {\n        style: {\n          color: palette.muted\n        },\n        children: customer.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2483,\n        columnNumber: 27\n      }, this) : null, address ? _jsxDEV(Text, {\n        style: {\n          color: palette.muted,\n          marginTop: spacing(1)\n        },\n        children: address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2484,\n        columnNumber: 20\n      }, this) : null, _jsxDEV(Text, {\n        numberOfLines: 3,\n        style: {\n          color: palette.text,\n          marginTop: spacing(1.5)\n        },\n        children: lead.description || 'No scope captured yet.'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2485,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          columnGap: spacing(1),\n          rowGap: spacing(1),\n          marginTop: spacing(2)\n        },\n        children: [_jsxDEV(QuickAction, {\n          label: \"Open\",\n          onPress: () => navigation.navigate('EstimateEditor', {\n            leadId: lead.id\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2487,\n          columnNumber: 11\n        }, this), _jsxDEV(QuickAction, {\n          label: \"Convert\",\n          tone: \"success\",\n          onPress: () => navigation.navigate('Jobs')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2488,\n          columnNumber: 11\n        }, this), _jsxDEV(QuickAction, {\n          label: \"Delete\",\n          tone: \"danger\",\n          onPress: () => deleteLead(lead)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2489,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2486,\n        columnNumber: 9\n      }, this)]\n    }, lead.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2474,\n      columnNumber: 7\n    }, this);\n  };\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(FlatList, {\n      data: leads,\n      keyExtractor: item => String(item.id),\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(4)\n      },\n      refreshControl: _jsxDEV(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh,\n        tintColor: palette.primary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2501,\n        columnNumber: 25\n      }, this),\n      ListHeaderComponent: _jsxDEV(View, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginBottom: spacing(2)\n          },\n          children: [_jsxDEV(View, {\n            children: [_jsxDEV(Text, {\n              style: {\n                color: palette.text,\n                fontSize: typography.h1,\n                fontWeight: '700'\n              },\n              children: \"Leads\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2506,\n              columnNumber: 17\n            }, this), _jsxDEV(Text, {\n              style: {\n                color: palette.muted,\n                marginTop: spacing(0.5)\n              },\n              children: \"Keep the funnel moving\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2507,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2505,\n            columnNumber: 15\n          }, this), _jsxDEV(QuickAction, {\n            label: \"New lead\",\n            onPress: () => navigation.navigate('NewLead')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2509,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2504,\n          columnNumber: 13\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            columnGap: spacing(2),\n            rowGap: spacing(2)\n          },\n          children: [_jsxDEV(View, {\n            style: {\n              flexBasis: '48%',\n              minWidth: 160\n            },\n            children: _jsxDEV(SummaryCard, {\n              title: \"Total\",\n              value: leads.length,\n              subtitle: `${newLeadsCount} new`,\n              tone: \"info\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2513,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2512,\n            columnNumber: 15\n          }, this), _jsxDEV(View, {\n            style: {\n              flexBasis: '48%',\n              minWidth: 160\n            },\n            children: _jsxDEV(SummaryCard, {\n              title: \"Outstanding\",\n              value: newLeadsCount,\n              subtitle: \"Require follow up\",\n              tone: \"warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2516,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2515,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2511,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2503,\n        columnNumber: 11\n      }, this),\n      renderItem: ({\n        item\n      }) => renderLeadCard(item),\n      ListEmptyComponent: loading ? _jsxDEV(SurfaceCard, {\n        style: {\n          alignItems: 'center',\n          paddingVertical: spacing(4)\n        },\n        children: [_jsxDEV(ActivityIndicator, {\n          color: palette.primary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2525,\n          columnNumber: 15\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(1)\n          },\n          children: \"Loading leads...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2526,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2524,\n        columnNumber: 13\n      }, this) : _jsxDEV(SurfaceCard, {\n        children: _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: \"No leads yet. Capture a lead to get started.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2530,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2529,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2497,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 2496,\n    columnNumber: 5\n  }, this);\n}\nfunction NewLeadScreen({\n  navigation\n}) {\n  const {\n    token\n  } = useAuth();\n  const [description, setDescription] = useState('');\n  const [status, setStatus] = useState('NEW');\n  const [customerName, setCustomerName] = useState('');\n  const [customerPhone, setCustomerPhone] = useState('');\n  const [customerEmail, setCustomerEmail] = useState('');\n  const [addressLine1, setAddressLine1] = useState('');\n  const [addressLine2, setAddressLine2] = useState('');\n  const [city, setCity] = useState('');\n  const [stateCode, setStateCode] = useState('');\n  const [zip, setZip] = useState('');\n  const [showCustomerSection, setShowCustomerSection] = useState(false);\n  const [showJobsiteSection, setShowJobsiteSection] = useState(false);\n  const statuses = ['NEW', 'CONTACTED', 'ESTIMATING', 'CONVERTED', 'CLOSED_LOST'];\n  const buildPayload = () => {\n    const customer = [customerName, customerPhone, customerEmail].some(v => v && v.trim()) ? {\n      name: customerName.trim(),\n      phone: customerPhone.trim(),\n      email: customerEmail.trim()\n    } : null;\n    const jobsite = [addressLine1, addressLine2, city, stateCode, zip].some(v => v && v.trim()) ? {\n      addressLine1: addressLine1.trim(),\n      addressLine2: addressLine2.trim(),\n      city: city.trim(),\n      state: stateCode.trim(),\n      zip: zip.trim()\n    } : null;\n    return {\n      description,\n      status,\n      customer,\n      jobsite\n    };\n  };\n  const createLeadOnline = async () => {\n    const payload = buildPayload();\n    const created = await api('/leads', 'POST', payload, token);\n    navigation.replace('EstimateEditor', {\n      leadId: created.id\n    });\n    const title = deriveLeadTitle(created);\n    Alert.alert('Lead created', `\"${title}\" is ready to estimate.`);\n  };\n  const queueLead = () => {\n    const payload = buildPayload();\n    db.transaction(tx => tx.executeSql('INSERT INTO queue (type, payload) VALUES (?,?)', ['createLead', JSON.stringify(payload)]));\n    Alert.alert('Saved offline', 'We will submit this lead when you reconnect.');\n    navigation.goBack();\n  };\n  const submit = async () => {\n    if (!description.trim()) {\n      Alert.alert('Missing scope', 'Please describe the job or scope of work.');\n      return;\n    }\n    try {\n      await createLeadOnline();\n    } catch (e) {\n      queueLead();\n    }\n  };\n  const chipStyle = active => ({\n    paddingHorizontal: spacing(2),\n    paddingVertical: spacing(1),\n    borderRadius: 999,\n    borderWidth: 1,\n    borderColor: active ? palette.primary : palette.border,\n    backgroundColor: active ? '#d9f2ed' : palette.surface\n  });\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(6)\n      },\n      children: [_jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontSize: typography.h1,\n            fontWeight: '700',\n            marginBottom: spacing(2)\n          },\n          children: \"New lead\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2619,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontWeight: '600',\n            marginBottom: spacing(1)\n          },\n          children: \"Scope\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2620,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Describe the job...\",\n          placeholderTextColor: palette.muted,\n          value: description,\n          onChangeText: setDescription,\n          multiline: true,\n          style: {\n            borderWidth: 1,\n            borderColor: palette.border,\n            borderRadius: 12,\n            padding: spacing(2),\n            minHeight: 120,\n            color: palette.text,\n            backgroundColor: palette.surfaceMuted,\n            textAlignVertical: 'top'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2621,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontWeight: '600',\n            marginTop: spacing(2),\n            marginBottom: spacing(1)\n          },\n          children: \"Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2638,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            columnGap: spacing(1),\n            rowGap: spacing(1)\n          },\n          children: statuses.map(s => {\n            const active = status === s;\n            return _jsxDEV(TouchableOpacity, {\n              onPress: () => setStatus(s),\n              activeOpacity: 0.85,\n              style: chipStyle(active),\n              children: _jsxDEV(Text, {\n                style: {\n                  color: active ? palette.primaryStrong : palette.muted,\n                  fontWeight: '600',\n                  fontSize: typography.small\n                },\n                children: s.replace('_', ' ')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2644,\n                columnNumber: 19\n              }, this)\n            }, s, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2643,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2639,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginTop: spacing(3)\n          },\n          children: [_jsxDEV(QuickAction, {\n            label: \"Save offline\",\n            tone: \"muted\",\n            onPress: queueLead\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2650,\n            columnNumber: 13\n          }, this), _jsxDEV(TouchableOpacity, {\n            onPress: submit,\n            activeOpacity: 0.85,\n            style: {\n              backgroundColor: palette.primary,\n              paddingHorizontal: spacing(3),\n              paddingVertical: spacing(1.5),\n              borderRadius: 12\n            },\n            children: _jsxDEV(Text, {\n              style: {\n                color: '#fff',\n                fontWeight: '700'\n              },\n              children: \"Create lead\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2656,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2651,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2649,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2618,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(TouchableOpacity, {\n          onPress: () => setShowCustomerSection(v => !v),\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n          },\n          activeOpacity: 0.8,\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.text,\n              fontSize: typography.h2,\n              fontWeight: '600'\n            },\n            children: \"Customer details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2667,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.primary,\n              fontWeight: '600'\n            },\n            children: showCustomerSection ? 'Hide' : 'Add'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2668,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2662,\n          columnNumber: 11\n        }, this), showCustomerSection ? _jsxDEV(View, {\n          style: {\n            marginTop: spacing(2)\n          },\n          children: [_jsxDEV(TextInput, {\n            placeholder: \"Name\",\n            placeholderTextColor: palette.muted,\n            value: customerName,\n            onChangeText: setCustomerName,\n            style: {\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted,\n              marginBottom: spacing(1.5)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2672,\n            columnNumber: 15\n          }, this), _jsxDEV(TextInput, {\n            placeholder: \"Phone\",\n            placeholderTextColor: palette.muted,\n            keyboardType: \"phone-pad\",\n            value: customerPhone,\n            onChangeText: setCustomerPhone,\n            style: {\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted,\n              marginBottom: spacing(1.5)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2687,\n            columnNumber: 15\n          }, this), _jsxDEV(TextInput, {\n            placeholder: \"Email\",\n            placeholderTextColor: palette.muted,\n            keyboardType: \"email-address\",\n            autoCapitalize: \"none\",\n            value: customerEmail,\n            onChangeText: setCustomerEmail,\n            style: {\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2703,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2671,\n          columnNumber: 13\n        }, this) : _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(1.5)\n          },\n          children: \"Add contact details to help follow up faster.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2721,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2661,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        children: [_jsxDEV(TouchableOpacity, {\n          onPress: () => setShowJobsiteSection(v => !v),\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n          },\n          activeOpacity: 0.8,\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.text,\n              fontSize: typography.h2,\n              fontWeight: '600'\n            },\n            children: \"Jobsite address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2731,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.primary,\n              fontWeight: '600'\n            },\n            children: showJobsiteSection ? 'Hide' : 'Add'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2732,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2726,\n          columnNumber: 11\n        }, this), showJobsiteSection ? _jsxDEV(View, {\n          style: {\n            marginTop: spacing(2)\n          },\n          children: [_jsxDEV(TextInput, {\n            placeholder: \"Address line 1\",\n            placeholderTextColor: palette.muted,\n            value: addressLine1,\n            onChangeText: setAddressLine1,\n            style: {\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted,\n              marginBottom: spacing(1.5)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2736,\n            columnNumber: 15\n          }, this), _jsxDEV(TextInput, {\n            placeholder: \"Address line 2\",\n            placeholderTextColor: palette.muted,\n            value: addressLine2,\n            onChangeText: setAddressLine2,\n            style: {\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted,\n              marginBottom: spacing(1.5)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2751,\n            columnNumber: 15\n          }, this), _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              columnGap: spacing(1.5)\n            },\n            children: [_jsxDEV(View, {\n              style: {\n                flex: 1\n              },\n              children: _jsxDEV(TextInput, {\n                placeholder: \"City\",\n                placeholderTextColor: palette.muted,\n                value: city,\n                onChangeText: setCity,\n                style: {\n                  borderWidth: 1,\n                  borderColor: palette.border,\n                  borderRadius: 12,\n                  padding: spacing(2),\n                  color: palette.text,\n                  backgroundColor: palette.surfaceMuted,\n                  marginBottom: spacing(1.5)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2768,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2767,\n              columnNumber: 17\n            }, this), _jsxDEV(View, {\n              style: {\n                width: 80\n              },\n              children: _jsxDEV(TextInput, {\n                placeholder: \"State\",\n                placeholderTextColor: palette.muted,\n                value: stateCode,\n                onChangeText: setStateCode,\n                style: {\n                  borderWidth: 1,\n                  borderColor: palette.border,\n                  borderRadius: 12,\n                  padding: spacing(2),\n                  color: palette.text,\n                  backgroundColor: palette.surfaceMuted,\n                  marginBottom: spacing(1.5)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2785,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2784,\n              columnNumber: 17\n            }, this), _jsxDEV(View, {\n              style: {\n                width: 100\n              },\n              children: _jsxDEV(TextInput, {\n                placeholder: \"ZIP\",\n                placeholderTextColor: palette.muted,\n                value: zip,\n                onChangeText: setZip,\n                style: {\n                  borderWidth: 1,\n                  borderColor: palette.border,\n                  borderRadius: 12,\n                  padding: spacing(2),\n                  color: palette.text,\n                  backgroundColor: palette.surfaceMuted,\n                  marginBottom: spacing(1.5)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2802,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2801,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2766,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2735,\n          columnNumber: 13\n        }, this) : _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(1.5)\n          },\n          children: \"Add a jobsite to keep crews aligned.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2821,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2725,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2617,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 2616,\n    columnNumber: 5\n  }, this);\n}\nfunction EstimateEditorScreen({\n  route,\n  navigation\n}) {\n  const {\n    token,\n    user\n  } = useAuth();\n  const {\n    leadId\n  } = route.params || {};\n  const [estimateId, setEstimateId] = useState(null);\n  const [items, setItems] = useState([]);\n  const [desc, setDesc] = useState('');\n  const [qty, setQty] = useState('1');\n  const [price, setPrice] = useState('0');\n  const [notes, setNotes] = useState('');\n  const [photoUrl, setPhotoUrl] = useState(null);\n  const [subtotal, setSubtotal] = useState(0);\n  const [taxRate, setTaxRate] = useState('7');\n  const [tax, setTax] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [leadDetails, setLeadDetails] = useState(null);\n  const [leadStatus, setLeadStatus] = useState('NEW');\n  const [leadScope, setLeadScope] = useState('');\n  const [leadCustomerName, setLeadCustomerName] = useState('');\n  const [leadCustomerPhone, setLeadCustomerPhone] = useState('');\n  const [leadCustomerEmail, setLeadCustomerEmail] = useState('');\n  const [leadAddressLine1, setLeadAddressLine1] = useState('');\n  const [leadAddressLine2, setLeadAddressLine2] = useState('');\n  const [leadCity, setLeadCity] = useState('');\n  const [leadStateCode, setLeadStateCode] = useState('');\n  const [leadZip, setLeadZip] = useState('');\n  const leadStatuses = ['NEW', 'CONTACTED', 'ESTIMATING', 'CONVERTED', 'CLOSED_LOST'];\n  const loadLead = useCallback(async () => {\n    if (!leadId) return;\n    try {\n      const data = await api(`/leads/${leadId}`, 'GET', null, token);\n      setLeadDetails(data);\n      setLeadStatus(data.status || 'NEW');\n      setLeadScope(data.description || '');\n      const customer = data.Customer || {};\n      const jobsite = data.Jobsite || {};\n      setLeadCustomerName(customer.name || '');\n      setLeadCustomerPhone(customer.phone || '');\n      setLeadCustomerEmail(customer.email || '');\n      setLeadAddressLine1(jobsite.addressLine1 || '');\n      setLeadAddressLine2(jobsite.addressLine2 || '');\n      setLeadCity(jobsite.city || '');\n      setLeadStateCode(jobsite.state || '');\n      setLeadZip(jobsite.zip || '');\n    } catch (e) {}\n  }, [leadId, token]);\n  useEffect(() => {\n    loadLead();\n  }, [loadLead]);\n  const createEstimate = async () => {\n    const est = await api('/estimates', 'POST', {\n      leadId,\n      customerId: leadDetails?.customerId ?? null,\n      jobsiteId: leadDetails?.jobsiteId ?? null,\n      subtotal: 0,\n      taxRate: parseFloat(taxRate) || 0,\n      total: 0\n    }, token);\n    setEstimateId(est.id);\n    return est;\n  };\n  const ensureEstimate = useCallback(async () => {\n    if (estimateId) return estimateId;\n    const created = await createEstimate();\n    setEstimateId(created.id);\n    return created.id;\n  }, [estimateId, createEstimate]);\n  useEffect(() => {\n    const rate = parseFloat(taxRate) || 0;\n    const newSubtotal = items.reduce((sum, item) => sum + parseFloat(item.qty || 0) * parseFloat(item.unitPrice || 0), 0);\n    const newTax = newSubtotal * (rate / 100);\n    setSubtotal(newSubtotal);\n    setTax(newTax);\n    setTotal(newSubtotal + newTax);\n  }, [items, taxRate]);\n  const addItem = async () => {\n    if (!desc.trim()) {\n      Alert.alert('Line item', 'Please add a description.');\n      return;\n    }\n    try {\n      const targetId = await ensureEstimate();\n      const payload = {\n        description: desc.trim(),\n        qty: parseFloat(qty) || 1,\n        unitPrice: parseFloat(price) || 0\n      };\n      const item = await api(`/estimates/${targetId}/items`, 'POST', payload, token);\n      setItems(prev => [item, ...prev]);\n      setDesc('');\n      setQty('1');\n      setPrice('0');\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to add line item');\n    }\n  };\n  const saveLeadDetails = async () => {\n    if (!leadId) return;\n    const customerPayload = [leadCustomerName, leadCustomerPhone, leadCustomerEmail].some(v => v && v.trim()) ? {\n      name: leadCustomerName.trim(),\n      phone: leadCustomerPhone.trim(),\n      email: leadCustomerEmail.trim()\n    } : null;\n    const jobsitePayload = [leadAddressLine1, leadAddressLine2, leadCity, leadStateCode, leadZip].some(v => v && v.trim()) ? {\n      addressLine1: leadAddressLine1.trim(),\n      addressLine2: leadAddressLine2.trim(),\n      city: leadCity.trim(),\n      state: leadStateCode.trim(),\n      zip: leadZip.trim()\n    } : null;\n    try {\n      await api(`/leads/${leadId}`, 'PATCH', {\n        description: leadScope,\n        status: leadStatus,\n        customer: customerPayload,\n        jobsite: jobsitePayload\n      }, token);\n      Alert.alert('Saved', 'Lead details updated.');\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to save lead details');\n    }\n  };\n  const pickPhoto = async () => {\n    const result = await ImagePicker.launchImageLibraryAsync({\n      allowsEditing: false,\n      quality: 0.6\n    });\n    if (!result.canceled && result.assets?.length) {\n      setPhotoUrl(result.assets[0].uri);\n    }\n  };\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(6)\n      },\n      children: [_jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontSize: typography.h2,\n            fontWeight: '700',\n            marginBottom: spacing(1.5)\n          },\n          children: \"Lead summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2971,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            columnGap: spacing(1),\n            rowGap: spacing(1.5),\n            marginBottom: spacing(2)\n          },\n          children: leadStatuses.map(s => {\n            const selected = leadStatus === s;\n            return _jsxDEV(QuickAction, {\n              label: s.replace('_', ' '),\n              tone: selected ? 'primary' : 'muted',\n              onPress: () => setLeadStatus(s)\n            }, s, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2976,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2972,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Scope / project notes\",\n          placeholderTextColor: palette.muted,\n          value: leadScope,\n          onChangeText: setLeadScope,\n          multiline: true,\n          style: {\n            borderWidth: 1,\n            borderColor: palette.border,\n            borderRadius: 12,\n            padding: spacing(2),\n            minHeight: 120,\n            color: palette.text,\n            backgroundColor: palette.surfaceMuted,\n            textAlignVertical: 'top'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2985,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'flex-end',\n            marginTop: spacing(2)\n          },\n          children: _jsxDEV(QuickAction, {\n            label: \"Save lead\",\n            onPress: saveLeadDetails\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3003,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3002,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2970,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontSize: typography.h2,\n            fontWeight: '700',\n            marginBottom: spacing(1.5)\n          },\n          children: \"Line items\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3008,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Describe the work or material\",\n          placeholderTextColor: palette.muted,\n          value: desc,\n          onChangeText: setDesc,\n          style: {\n            borderWidth: 1,\n            borderColor: palette.border,\n            borderRadius: 12,\n            padding: spacing(2),\n            color: palette.text,\n            backgroundColor: palette.surfaceMuted,\n            marginBottom: spacing(1.5)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3009,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            columnGap: spacing(1.5),\n            marginBottom: spacing(1.5)\n          },\n          children: [_jsxDEV(TextInput, {\n            placeholder: \"Qty\",\n            placeholderTextColor: palette.muted,\n            value: qty,\n            onChangeText: setQty,\n            keyboardType: \"numeric\",\n            style: {\n              flex: 1,\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3025,\n            columnNumber: 13\n          }, this), _jsxDEV(TextInput, {\n            placeholder: \"Unit price\",\n            placeholderTextColor: palette.muted,\n            value: price,\n            onChangeText: setPrice,\n            keyboardType: \"numeric\",\n            style: {\n              flex: 1,\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3041,\n            columnNumber: 13\n          }, this), _jsxDEV(QuickAction, {\n            label: \"Add\",\n            onPress: addItem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3057,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3024,\n          columnNumber: 11\n        }, this), items.length === 0 ? _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: \"No line items yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3060,\n          columnNumber: 13\n        }, this) : items.map((item, idx) => _jsxDEV(SurfaceCard, {\n          style: {\n            marginBottom: spacing(1.5)\n          },\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.text,\n              fontWeight: '600'\n            },\n            children: item.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3064,\n            columnNumber: 17\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.5)\n            },\n            children: [\"Qty \", item.qty, \" x $\", parseFloat(item.unitPrice || 0).toFixed(2), \" = \", (parseFloat(item.qty || 0) * parseFloat(item.unitPrice || 0)).toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3065,\n            columnNumber: 17\n          }, this)]\n        }, item.id || idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3063,\n          columnNumber: 15\n        }, this)), _jsxDEV(View, {\n          style: {\n            marginTop: spacing(2),\n            borderTopWidth: 1,\n            borderTopColor: palette.border,\n            paddingTop: spacing(2)\n          },\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.muted\n            },\n            children: \"Tax rate (%)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3072,\n            columnNumber: 13\n          }, this), _jsxDEV(TextInput, {\n            value: String(taxRate),\n            onChangeText: setTaxRate,\n            keyboardType: \"numeric\",\n            placeholderTextColor: palette.muted,\n            style: {\n              marginTop: spacing(1),\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3073,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: {\n              marginTop: spacing(2)\n            },\n            children: [_jsxDEV(Text, {\n              style: {\n                color: palette.text\n              },\n              children: [\"Subtotal: $\", subtotal.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3089,\n              columnNumber: 15\n            }, this), _jsxDEV(Text, {\n              style: {\n                color: palette.text\n              },\n              children: [\"Tax: $\", tax.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3090,\n              columnNumber: 15\n            }, this), _jsxDEV(Text, {\n              style: {\n                color: palette.text,\n                fontWeight: '700'\n              },\n              children: [\"Total: $\", total.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3091,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3088,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3071,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3007,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontSize: typography.h2,\n            fontWeight: '700',\n            marginBottom: spacing(1.5)\n          },\n          children: \"Attachments & notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3097,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Internal notes\",\n          placeholderTextColor: palette.muted,\n          value: notes,\n          onChangeText: setNotes,\n          multiline: true,\n          style: {\n            borderWidth: 1,\n            borderColor: palette.border,\n            borderRadius: 12,\n            padding: spacing(2),\n            minHeight: 100,\n            color: palette.text,\n            backgroundColor: palette.surfaceMuted,\n            textAlignVertical: 'top'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3098,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            columnGap: spacing(1.5),\n            marginTop: spacing(1.5)\n          },\n          children: _jsxDEV(QuickAction, {\n            label: \"Add photo\",\n            onPress: pickPhoto\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3116,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3115,\n          columnNumber: 11\n        }, this), photoUrl ? _jsxDEV(Image, {\n          source: {\n            uri: photoUrl\n          },\n          style: {\n            height: 160,\n            borderRadius: 12,\n            marginTop: spacing(2)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3119,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3096,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2969,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 2968,\n    columnNumber: 5\n  }, this);\n}\nfunction ScheduleScreen({\n  navigation\n}) {\n  const {\n    token\n  } = useAuth();\n  const [jobs, setJobs] = useState([]);\n  const [filter, setFilter] = useState('ALL');\n  const [queueCount, setQueueCount] = useState(0);\n  const [syncing, setSyncing] = useState(false);\n  const loadQueueCount = useCallback(() => {\n    db.transaction(tx => tx.executeSql('SELECT COUNT(*) as c FROM queue', [], (_, {\n      rows\n    }) => setQueueCount(rows._array?.[0]?.c || 0)));\n  }, []);\n  const load = useCallback(async () => {\n    try {\n      const data = await api('/jobs', 'GET', null, token);\n      setJobs(data);\n      db.transaction(tx => {\n        tx.executeSql('DELETE FROM jobs_cache;');\n        data.forEach(j => tx.executeSql('INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)', [j.id, j.name || '', j.status || 'SCHEDULED', j.startDate || '', j.endDate || '', j.notes || '']));\n      });\n    } catch (e) {\n      db.transaction(tx => tx.executeSql('SELECT id, name, status, startDate, endDate, notes FROM jobs_cache', [], (_, {\n        rows\n      }) => setJobs(rows._array || [])));\n    }\n  }, [token]);\n  useEffect(() => {\n    load();\n    loadQueueCount();\n  }, [load, loadQueueCount]);\n  const filters = [{\n    key: 'ALL',\n    label: 'All'\n  }, {\n    key: 'TODAY',\n    label: 'Today'\n  }, {\n    key: 'WEEK',\n    label: 'This week'\n  }];\n  const inRange = useCallback(dateValue => {\n    if (filter === 'ALL') return true;\n    if (!dateValue) return false;\n    const today = new Date();\n    const dt = new Date(dateValue);\n    if (Number.isNaN(dt.getTime())) return false;\n    if (filter === 'TODAY') {\n      return dt.getFullYear() === today.getFullYear() && dt.getMonth() === today.getMonth() && dt.getDate() === today.getDate();\n    }\n    const start = new Date(today);\n    start.setHours(0, 0, 0, 0);\n    start.setDate(today.getDate() - today.getDay());\n    const end = new Date(start);\n    end.setDate(start.getDate() + 6);\n    return dt >= start && dt <= end;\n  }, [filter]);\n  const filteredJobs = useMemo(() => jobs.filter(job => inRange(job.startDate)).sort((a, b) => new Date(a.startDate || 0) - new Date(b.startDate || 0)), [jobs, inRange]);\n  const handleSync = useCallback(async () => {\n    setSyncing(true);\n    try {\n      await processQueue(token);\n      await load();\n      loadQueueCount();\n    } finally {\n      setSyncing(false);\n    }\n  }, [token, load, loadQueueCount]);\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(6)\n      },\n      children: [_jsxDEV(Text, {\n        style: {\n          color: palette.text,\n          fontSize: typography.h1,\n          fontWeight: '700',\n          marginBottom: spacing(2)\n        },\n        children: \"Schedule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3199,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          columnGap: spacing(1),\n          rowGap: spacing(1.5),\n          marginBottom: spacing(2)\n        },\n        children: filters.map(option => _jsxDEV(QuickAction, {\n          label: option.label,\n          tone: filter === option.key ? 'primary' : 'muted',\n          onPress: () => setFilter(option.key)\n        }, option.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3202,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3200,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3),\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        children: [_jsxDEV(View, {\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.text,\n              fontWeight: '600'\n            },\n            children: \"Offline queue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3212,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.5)\n            },\n            children: [queueCount, \" items waiting to sync\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3213,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3211,\n          columnNumber: 11\n        }, this), _jsxDEV(QuickAction, {\n          label: syncing ? 'Syncing...' : 'Sync now',\n          tone: syncing ? 'muted' : 'primary',\n          onPress: syncing ? undefined : handleSync\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3210,\n        columnNumber: 9\n      }, this), filteredJobs.length === 0 ? _jsxDEV(SurfaceCard, {\n        children: _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: [\"No jobs \", filter !== 'ALL' ? 'in this range' : 'scheduled yet', \". Convert a lead or create a job to populate your schedule.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3220,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3219,\n        columnNumber: 11\n      }, this) : filteredJobs.map(job => {\n        const jobsite = job.Jobsite || {};\n        const addressParts = [jobsite.addressLine1, jobsite.addressLine2, [jobsite.city, jobsite.state].filter(Boolean).join(', '), jobsite.zip].filter(Boolean);\n        const address = addressParts.join(', ');\n        const startLabel = job.startDate ? `Starts ${formatDate(job.startDate)}` : 'No start date';\n        const endLabel = job.endDate ? ` - Due ${formatDate(job.endDate)}` : '';\n        return _jsxDEV(SurfaceCard, {\n          style: {\n            marginBottom: spacing(2)\n          },\n          children: [_jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center'\n            },\n            children: [_jsxDEV(Text, {\n              style: {\n                color: palette.text,\n                fontSize: typography.h2,\n                fontWeight: '600'\n              },\n              children: job.name || `Job #${job.id}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3237,\n              columnNumber: 19\n            }, this), _jsxDEV(StatusPill, {\n              status: job.status || 'SCHEDULED'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3238,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3236,\n            columnNumber: 17\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.5)\n            },\n            children: [startLabel, endLabel]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3240,\n            columnNumber: 17\n          }, this), address ? _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(1)\n            },\n            children: address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3243,\n            columnNumber: 28\n          }, this) : null, job.notes ? _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(1)\n            },\n            children: job.notes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3244,\n            columnNumber: 30\n          }, this) : null, _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              flexWrap: 'wrap',\n              columnGap: spacing(1),\n              rowGap: spacing(1),\n              marginTop: spacing(2)\n            },\n            children: [_jsxDEV(QuickAction, {\n              label: \"Open job\",\n              onPress: () => navigation.navigate('JobDetail', {\n                jobId: job.id\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3246,\n              columnNumber: 19\n            }, this), _jsxDEV(QuickAction, {\n              label: \"View tasks\",\n              onPress: () => navigation.navigate('JobDetail', {\n                jobId: job.id,\n                tab: 'tasks'\n              }),\n              tone: \"muted\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3247,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3245,\n            columnNumber: 17\n          }, this)]\n        }, job.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3235,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 3198,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3197,\n    columnNumber: 5\n  }, this);\n}\nfunction ProfileScreen({\n  navigation\n}) {\n  const {\n    setToken,\n    user\n  } = useAuth();\n  const isAdmin = (user?.role || '').toUpperCase() === 'ADMIN';\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(6)\n      },\n      children: [_jsxDEV(Text, {\n        style: {\n          color: palette.text,\n          fontSize: typography.h1,\n          fontWeight: '700',\n          marginBottom: spacing(2)\n        },\n        children: \"Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3263,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontSize: typography.small,\n            textTransform: 'uppercase',\n            fontWeight: '600'\n          },\n          children: \"Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3265,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontSize: typography.h2,\n            fontWeight: '700',\n            marginTop: spacing(1)\n          },\n          children: user?.name || user?.fullName || 'Team member'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3266,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(0.5)\n          },\n          children: user?.email || 'No email on file'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3267,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(0.5)\n          },\n          children: [\"Role: \", user?.role || 'TECH']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3268,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3264,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontSize: typography.small,\n            textTransform: 'uppercase',\n            fontWeight: '600',\n            marginBottom: spacing(1.5)\n          },\n          children: \"Actions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3272,\n          columnNumber: 11\n        }, this), isAdmin ? _jsxDEV(View, {\n          style: {\n            marginBottom: spacing(1.5)\n          },\n          children: _jsxDEV(QuickAction, {\n            label: \"Manage users\",\n            onPress: () => navigation.navigate('UsersAdmin')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3275,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3274,\n          columnNumber: 13\n        }, this) : null, _jsxDEV(QuickAction, {\n          label: \"Sign out\",\n          tone: \"danger\",\n          onPress: () => setToken(null)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3278,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3271,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 3262,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3261,\n    columnNumber: 5\n  }, this);\n}\nconst Stack = createNativeStackNavigator();\nconst Tabs = createBottomTabNavigator();\nfunction TabsNav() {\n  const {\n    user\n  } = useAuth();\n  const isAdmin = (user?.role || '').toUpperCase() === 'ADMIN';\n  const {\n    width\n  } = useWindowDimensions();\n  const isCompact = Platform.OS !== 'web' ? true : width < 768;\n  const hideTabs = isCompact;\n  return _jsxDEV(Tabs.Navigator, {\n    screenOptions: {\n      headerShown: false,\n      tabBarActiveTintColor: palette.primary,\n      tabBarStyle: {\n        backgroundColor: '#fff',\n        display: hideTabs ? 'none' : 'flex'\n      }\n    },\n    children: [_jsxDEV(Tabs.Screen, {\n      name: \"Dashboard\",\n      component: DashboardScreen,\n      options: {\n        title: 'Home'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3301,\n      columnNumber: 7\n    }, this), _jsxDEV(Tabs.Screen, {\n      name: \"Leads\",\n      component: LeadsScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3302,\n      columnNumber: 7\n    }, this), _jsxDEV(Tabs.Screen, {\n      name: \"Jobs\",\n      component: JobsKanbanScreen,\n      options: {\n        title: 'Jobs'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3303,\n      columnNumber: 7\n    }, this), isAdmin ? _jsxDEV(Tabs.Screen, {\n      name: \"Invoices\",\n      component: InvoicesScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3304,\n      columnNumber: 18\n    }, this) : null, _jsxDEV(Tabs.Screen, {\n      name: \"Schedule\",\n      component: ScheduleScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3305,\n      columnNumber: 7\n    }, this), _jsxDEV(Tabs.Screen, {\n      name: \"Profile\",\n      component: ProfileScreen,\n      options: {\n        title: \"Profile\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3306,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 3294,\n    columnNumber: 5\n  }, this);\n}\nfunction MobileHeader({\n  currentRoute,\n  onNavigate,\n  isAdmin\n}) {\n  const [menuVisible, setMenuVisible] = useState(false);\n  const activeRoute = useMemo(() => {\n    if (currentRoute === 'JobDetail') return 'Jobs';\n    return currentRoute;\n  }, [currentRoute]);\n  const menuItems = useMemo(() => {\n    const items = [{\n      label: 'Dashboard',\n      route: 'Dashboard'\n    }, {\n      label: 'Leads',\n      route: 'Leads'\n    }, {\n      label: 'Jobs',\n      route: 'Jobs'\n    }];\n    if (isAdmin) {\n      items.push({\n        label: 'Invoices',\n        route: 'Invoices'\n      });\n    }\n    items.push({\n      label: 'Schedule',\n      route: 'Schedule'\n    }, {\n      label: 'Profile',\n      route: 'Profile'\n    });\n    if (isAdmin) {\n      items.push({\n        label: 'Manage users',\n        route: 'UsersAdmin'\n      });\n    }\n    return items;\n  }, [isAdmin]);\n  const handleSelect = useCallback(route => {\n    setMenuVisible(false);\n    onNavigate(route);\n  }, [onNavigate]);\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(SafeAreaView, {\n      style: {\n        backgroundColor: '#0B0C10'\n      },\n      children: _jsxDEV(View, {\n        style: {\n          paddingHorizontal: spacing(2),\n          paddingVertical: spacing(1.5),\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'space-between'\n        },\n        children: [_jsxDEV(TouchableOpacity, {\n          onPress: () => setMenuVisible(true),\n          accessibilityLabel: \"Open navigation menu\",\n          accessibilityRole: \"button\",\n          style: {\n            padding: spacing(1)\n          },\n          children: [_jsxDEV(View, {\n            style: {\n              width: 24,\n              height: 2,\n              backgroundColor: '#fff',\n              borderRadius: 999,\n              marginBottom: 4\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3352,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: {\n              width: 24,\n              height: 2,\n              backgroundColor: '#fff',\n              borderRadius: 999,\n              marginBottom: 4\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3353,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: {\n              width: 24,\n              height: 2,\n              backgroundColor: '#fff',\n              borderRadius: 999\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3354,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3346,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: '#fff',\n            fontSize: typography.h1,\n            fontWeight: '700'\n          },\n          children: \"Precision Tracker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3356,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            width: 24\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3357,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3345,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3344,\n      columnNumber: 7\n    }, this), _jsxDEV(Modal, {\n      visible: menuVisible,\n      animationType: \"fade\",\n      transparent: true,\n      onRequestClose: () => setMenuVisible(false),\n      children: _jsxDEV(View, {\n        style: {\n          flex: 1,\n          backgroundColor: 'rgba(15,23,42,0.6)',\n          justifyContent: 'flex-start',\n          padding: spacing(3)\n        },\n        children: _jsxDEV(View, {\n          style: {\n            backgroundColor: palette.surface,\n            borderRadius: 16,\n            padding: spacing(2.5)\n          },\n          children: [_jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              marginBottom: spacing(2)\n            },\n            children: [_jsxDEV(Text, {\n              style: {\n                color: palette.text,\n                fontSize: typography.h2,\n                fontWeight: '700'\n              },\n              children: \"Navigate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3369,\n              columnNumber: 15\n            }, this), _jsxDEV(TouchableOpacity, {\n              onPress: () => setMenuVisible(false),\n              accessibilityRole: \"button\",\n              accessibilityLabel: \"Close menu\",\n              children: _jsxDEV(Text, {\n                style: {\n                  color: palette.muted,\n                  fontWeight: '600'\n                },\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3371,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3370,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3368,\n            columnNumber: 13\n          }, this), menuItems.map(item => {\n            const selected = activeRoute === item.route;\n            return _jsxDEV(TouchableOpacity, {\n              onPress: () => handleSelect(item.route),\n              activeOpacity: 0.85,\n              style: {\n                paddingVertical: spacing(1.25),\n                paddingHorizontal: spacing(1.5),\n                borderRadius: 12,\n                backgroundColor: selected ? '#d9f2ed' : palette.surfaceMuted,\n                marginBottom: spacing(1)\n              },\n              children: _jsxDEV(Text, {\n                style: {\n                  color: selected ? palette.primaryStrong : palette.text,\n                  fontWeight: '600',\n                  fontSize: typography.body\n                },\n                children: item.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3389,\n                columnNumber: 19\n              }, this)\n            }, item.route, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3377,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3367,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3366,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3360,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\nfunction LoginScreen() {\n  const [email, setEmail] = useState('admin@example.com');\n  const [password, setPassword] = useState('test123');\n  const [busy, setBusy] = useState(false);\n  const {\n    setToken,\n    setUser\n  } = useAuth();\n  async function login() {\n    try {\n      setBusy(true);\n      const res = await fetch(`${API_URL}/auth/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await res.json();\n      if (!res.ok) throw new Error(data?.message || data?.error || 'Login failed');\n      const tok = data.token || data.accessToken;\n      if (!tok) throw new Error('No token returned from server');\n      const normalizedUser = data.user ? Object.assign({}, data.user, {\n        role: normalizeRole(data.user.role)\n      }) : {\n        email,\n        role: 'ADMIN',\n        name: 'Admin'\n      };\n      setToken(tok);\n      setUser(normalizedUser);\n      try {\n        await SecureStore.setItemAsync('auth_token', tok);\n        await SecureStore.setItemAsync('auth_user', JSON.stringify(normalizedUser));\n      } catch {}\n      Alert.alert('Welcome', 'Logged in');\n    } catch (e) {\n      Alert.alert('Error', e.message);\n    } finally {\n      setBusy(false);\n    }\n  }\n  return _jsxDEV(View, {\n    style: {\n      flex: 1,\n      padding: 20,\n      justifyContent: 'center'\n    },\n    children: [_jsxDEV(Text, {\n      style: {\n        fontSize: 24,\n        marginBottom: 16\n      },\n      children: \"PrecisionTracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3446,\n      columnNumber: 7\n    }, this), _jsxDEV(TextInput, {\n      placeholder: \"Email\",\n      autoCapitalize: \"none\",\n      value: email,\n      onChangeText: setEmail,\n      style: {\n        borderWidth: 1,\n        padding: 12,\n        marginBottom: 12\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3447,\n      columnNumber: 7\n    }, this), _jsxDEV(TextInput, {\n      placeholder: \"Password\",\n      secureTextEntry: true,\n      value: password,\n      onChangeText: setPassword,\n      style: {\n        borderWidth: 1,\n        padding: 12,\n        marginBottom: 12\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3454,\n      columnNumber: 7\n    }, this), _jsxDEV(Button, {\n      title: busy ? 'Signing in...' : 'Sign in',\n      onPress: login,\n      disabled: busy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3461,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 3445,\n    columnNumber: 5\n  }, this);\n}\nexport default function App() {\n  const [token, setToken] = useState(null);\n  const [user, setUser] = useState(null);\n  const [booting, setBooting] = useState(true);\n  const navigationRef = useRef(null);\n  const [currentRoute, setCurrentRoute] = useState('Dashboard');\n  const {\n    width\n  } = useWindowDimensions();\n  const isCompactLayout = Platform.OS !== 'web' ? true : width < 768;\n  useEffect(() => {\n    let mounted = true;\n    (async () => {\n      try {\n        const [tok, usr] = await Promise.all([SecureStore.getItemAsync('auth_token'), SecureStore.getItemAsync('auth_user')]);\n        if (mounted && tok) {\n          setToken(tok);\n          if (usr) {\n            const parsed = JSON.parse(usr);\n            parsed.role = normalizeRole(parsed.role);\n            setUser(parsed);\n          }\n        }\n      } catch {} finally {\n        if (mounted) setBooting(false);\n      }\n    })();\n    return () => {\n      mounted = false;\n    };\n  }, []);\n  const authValue = {\n    token,\n    setToken: t => {\n      setToken(t);\n      if (!t) {\n        try {\n          SecureStore.deleteItemAsync('auth_token');\n          SecureStore.deleteItemAsync('auth_user');\n        } catch {}\n      }\n    },\n    user,\n    setUser\n  };\n  const updateCurrentRoute = useCallback(() => {\n    if (!navigationRef.current) return;\n    const current = navigationRef.current.getCurrentRoute();\n    if (!current) return;\n    let name = current.name;\n    let state = current.state;\n    while (state && typeof state.index === 'number' && state.routes && state.routes[state.index]) {\n      const nested = state.routes[state.index];\n      name = nested.name;\n      state = nested.state;\n    }\n    if (name) setCurrentRoute(name);\n  }, []);\n  const handleNavigate = useCallback(routeName => {\n    if (!navigationRef.current) return;\n    const tabRoutes = ['Dashboard', 'Leads', 'Jobs', 'Invoices', 'Schedule', 'Profile'];\n    if (tabRoutes.includes(routeName)) {\n      navigationRef.current.navigate('Tabs', {\n        screen: routeName\n      });\n    } else {\n      navigationRef.current.navigate(routeName);\n    }\n  }, []);\n  if (booting) {\n    return _jsxDEV(SafeAreaView, {\n      style: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: _jsxDEV(Text, {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3535,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3534,\n      columnNumber: 7\n    }, this);\n  }\n  return _jsxDEV(AuthContext.Provider, {\n    value: authValue,\n    children: _jsxDEV(View, {\n      style: {\n        flex: 1,\n        backgroundColor: palette.background\n      },\n      children: [isCompactLayout && token ? _jsxDEV(MobileHeader, {\n        currentRoute: currentRoute,\n        onNavigate: handleNavigate,\n        isAdmin: (user?.role || '').toUpperCase() === 'ADMIN'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3544,\n        columnNumber: 11\n      }, this) : null, _jsxDEV(View, {\n        style: {\n          flex: 1\n        },\n        children: _jsxDEV(NavigationContainer, {\n          ref: navigationRef,\n          onReady: updateCurrentRoute,\n          onStateChange: updateCurrentRoute,\n          children: !token ? _jsxDEV(Stack.Navigator, {\n            children: _jsxDEV(Stack.Screen, {\n              name: \"Login\",\n              component: LoginScreen\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3558,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3557,\n            columnNumber: 15\n          }, this) : _jsxDEV(Stack.Navigator, {\n            children: [_jsxDEV(Stack.Screen, {\n              name: \"Tabs\",\n              component: TabsNav,\n              options: {\n                headerShown: false\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3562,\n              columnNumber: 17\n            }, this), _jsxDEV(Stack.Screen, {\n              name: \"NewLead\",\n              component: NewLeadScreen,\n              options: {\n                title: 'New Lead'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3563,\n              columnNumber: 17\n            }, this), _jsxDEV(Stack.Screen, {\n              name: \"EstimateEditor\",\n              component: EstimateEditorScreen,\n              options: {\n                title: 'Estimate'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3564,\n              columnNumber: 17\n            }, this), _jsxDEV(Stack.Screen, {\n              name: \"Signature\",\n              component: SignatureScreen,\n              options: {\n                title: 'Signature'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3565,\n              columnNumber: 17\n            }, this), _jsxDEV(Stack.Screen, {\n              name: \"UsersAdmin\",\n              component: UsersAdminScreen,\n              options: {\n                title: 'Users (Admin)'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3566,\n              columnNumber: 17\n            }, this), _jsxDEV(Stack.Screen, {\n              name: \"JobDetail\",\n              component: JobDetailScreen,\n              options: {\n                title: 'Job'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3567,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3561,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3551,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3550,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 3542,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3541,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"names":["React","useEffect","useState","createContext","useContext","useRef","useCallback","useMemo","NavigationContainer","useFocusEffect","createNativeStackNavigator","createBottomTabNavigator","Text","TextInput","Button","FlatList","TouchableOpacity","SafeAreaView","Alert","Image","ScrollView","RefreshControl","ActivityIndicator","Modal","useWindowDimensions","ImagePicker","FileSystem","SQLite","Svg","Path","ViewShot","Platform","View","SecureStore","DateTimePicker","DateTimePickerAndroid","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","process","env","EXPO_PUBLIC_API_URL","initOfflineTables","database","transaction","tx","executeSql","e","db","getDb","OS","fn","execAsync","runAsync","openDatabaseSync","dbHandle","normalizeRole","role","r","String","toUpperCase","includes","AuthContext","useAuth","api","path","method","body","token","headers","Object","assign","Authorization","response","fetch","JSON","stringify","undefined","networkError","Error","message","contentType","get","rawBody","text","data","parse","ok","error","palette","background","surface","surfaceMuted","border","muted","primary","primaryStrong","success","warning","danger","info","spacing","step","typography","h1","h2","small","floatingShadow","select","ios","shadowColor","shadowOpacity","shadowRadius","shadowOffset","width","height","android","elevation","default","pillTone","NEW","fg","bg","label","CONTACTED","ESTIMATING","CONVERTED","CLOSED_LOST","SCHEDULED","IN_PROGRESS","COMPLETE","DONE","ON_HOLD","CANCELLED","DRAFT","SENT","PART_PAID","PAID","VOID","toneMap","formInputBaseStyle","borderWidth","borderColor","borderRadius","paddingVertical","paddingHorizontal","color","backgroundColor","fontSize","marginBottom","FormInput","forwardRef","props","ref","placeholderTextColor","style","fileName","_jsxFileName","lineNumber","columnNumber","displayName","formatCurrency","value","amount","Number","isNaN","toLocaleString","minimumFractionDigits","maximumFractionDigits","formatDate","d","Date","getTime","toLocaleDateString","month","day","isTaskCompleted","status","key","SurfaceCard","children","onPress","content","padding","activeOpacity","StatusPill","cfg","fontWeight","SummaryCard","title","subtitle","tone","colors","textTransform","marginTop","StatusCard","description","flexGrow","flexBasis","SectionHeader","actionLabel","onAction","flexDirection","justifyContent","alignItems","QuickAction","toneStyles","textColor","toInputDate","dateValue","yyyy","getFullYear","mm","getMonth","padStart","dd","getDate","parseInputDate","parsed","deriveLeadTitle","lead","customerName","Customer","name","trim","firstLine","split","length","slice","id","DateInputField","onChange","placeholder","minimumDate","maximumDate","iosPickerVisible","setIosPickerVisible","isWeb","toDateOnly","input","datePart","normalizedValue","minDateString","maxDateString","displayLabel","applyDate","selectedDate","handleManualChange","openPicker","baseDate","open","mode","event","selected","type","containerStyle","onChangeText","nativeEvent","target","min","max","flex","display","TECH_ASSIGN_ROLES","TechSelector","team","onSelect","allowAllRoles","allowClear","options","normalized","map","member","filter","renderLabel","flexWrap","columnGap","rowGap","fullName","email","shortLabel","DashboardScreen","navigation","user","loading","setLoading","refreshing","setRefreshing","leads","setLeads","jobs","setJobs","tasks","setTasks","invoiceSummary","setInvoiceSummary","lastUpdated","setLastUpdated","isAdmin","jobLookup","job","loadData","isPullRefresh","fetchLeads","forEach","l","Promise","resolve","_","rows","fallback","_array","fetchJobs","j","startDate","endDate","notes","fetchTasks","t","jobId","dueDate","fetchInvoiceSummary","all","onRefresh","newLeads","activeJobs","openTasks","outstandingValue","outstanding","collectedValue","collected","overdueCount","overdueTasks","today","setHours","task","due","statusCards","topLeads","topJobs","nextTasks","contentContainerStyle","paddingBottom","refreshControl","tintColor","navigate","focus","card","minWidth","idx","startLabel","endLabel","Boolean","join","numberOfLines","tab","leadId","textAlign","toLocaleTimeString","hour","minute","SignaturePad","onCapturePng","points","setPoints","setPath","shotRef","format","quality","result","onStartShouldSetResponder","onResponderMove","x","locationX","y","locationY","p","onResponderRelease","base64","current","capture","stroke","strokeWidth","fill","SignatureScreen","route","estimateId","params","sigPng","setSigPng","save","alert","resp","signaturePngUrl","paymentLink","goBack","userRoleOptions","invoiceStatusOptions","UsersAdminScreen","users","setUsers","setEmail","setFullName","setRole","inviting","setInviting","load","Array","isArray","resetForm","invite","trimmedEmail","toLowerCase","trimmedName","promote","newRole","remove","renderRolePill","roleCfg","find","option","renderRoleSelector","selectedRole","keyExtractor","u","ListHeaderComponent","autoCapitalize","keyboardType","disabled","opacity","ListEmptyComponent","renderItem","item","normalizedRole","InvoicesScreen","summary","setSummary","invoices","setInvoices","setFilter","newInvoiceJobId","setNewInvoiceJobId","newInvoiceAmount","setNewInvoiceAmount","newInvoiceIssuedAt","setNewInvoiceIssuedAt","newInvoiceDueAt","setNewInvoiceDueAt","newInvoiceStatus","setNewInvoiceStatus","creatingInvoice","setCreatingInvoice","isRefresh","summaryData","list","nextInvoiceNumber","maxNumber","reduce","acc","inv","match","number","Math","parseInt","next","resetInvoiceForm","createInvoice","amountValue","parseFloat","jobIdTrimmed","jobIdValue","payload","issuedAt","dueAt","created","deleteInvoice","invoice","filters","filteredInvoices","drafts","draftAmount","totalCount","f","payments","Payments","sum","balance","statusKey","JobsKanbanScreen","newJobName","setNewJobName","newJobStartDate","setNewJobStartDate","newJobDueDate","setNewJobDueDate","newJobNotes","setNewJobNotes","newCustomerName","setNewCustomerName","newCustomerPhone","setNewCustomerPhone","newCustomerEmail","setNewCustomerEmail","newAddressLine1","setNewAddressLine1","newAddressLine2","setNewAddressLine2","newCity","setNewCity","newStateCode","setNewStateCode","newZip","setNewZip","jobFormTab","setJobFormTab","statusOrder","createJob","hasCustomer","some","v","hasAddress","customer","phone","billingAddress","jobsite","addressLine1","addressLine2","city","state","zip","prev","updateJobStatus","updated","removeJob","sortedJobs","normalize","rank","indexOf","parseDateSafe","sort","a","b","statusDiff","startA","startB","groupedJobs","groups","currentStatus","push","statusLabel","charAt","quickStatusActions","inputStyle","jobTabs","renderJobFormFields","multiline","minHeight","textAlignVertical","group","Jobsite","addressParts","address","action","JobDetailScreen","jobName","setJobName","jobStartDate","setJobStartDate","jobEndDate","setJobEndDate","jobNotes","setJobNotes","jobCustomerName","setJobCustomerName","jobCustomerPhone","setJobCustomerPhone","jobCustomerEmail","setJobCustomerEmail","jobAddressLine1","setJobAddressLine1","jobAddressLine2","setJobAddressLine2","jobCity","setJobCity","jobStateCode","setJobStateCode","jobZip","setJobZip","changeOrders","setCO","setTitle","amountDelta","setAmountDelta","roleKey","canManageChangeOrders","loadCO","loadJob","addCO","saveJobDetails","deleteJob","screen","statusTone","amountLabel","JobTasks","JobSchedule","setDueDate","add","done","events","setEvents","startAt","setStartAt","endAt","setEndAt","ev","date","existing","timePartIndex","timePart","substring","processQueue","items","q","dataUrl","txx","LeadsScreen","deleteLead","err","newLeadsCount","renderLeadCard","NewLeadScreen","setDescription","setStatus","setCustomerName","customerPhone","setCustomerPhone","customerEmail","setCustomerEmail","setAddressLine1","setAddressLine2","setCity","stateCode","setStateCode","setZip","showCustomerSection","setShowCustomerSection","showJobsiteSection","setShowJobsiteSection","statuses","buildPayload","createLeadOnline","replace","queueLead","submit","chipStyle","active","s","EstimateEditorScreen","setEstimateId","setItems","desc","setDesc","qty","setQty","price","setPrice","setNotes","photoUrl","setPhotoUrl","subtotal","setSubtotal","taxRate","setTaxRate","tax","setTax","total","setTotal","leadDetails","setLeadDetails","leadStatus","setLeadStatus","leadScope","setLeadScope","leadCustomerName","setLeadCustomerName","leadCustomerPhone","setLeadCustomerPhone","leadCustomerEmail","setLeadCustomerEmail","leadAddressLine1","setLeadAddressLine1","leadAddressLine2","setLeadAddressLine2","leadCity","setLeadCity","leadStateCode","setLeadStateCode","leadZip","setLeadZip","leadStatuses","loadLead","createEstimate","est","customerId","jobsiteId","ensureEstimate","rate","newSubtotal","unitPrice","newTax","addItem","targetId","saveLeadDetails","customerPayload","jobsitePayload","pickPhoto","launchImageLibraryAsync","allowsEditing","canceled","assets","uri","toFixed","borderTopWidth","borderTopColor","paddingTop","source","ScheduleScreen","queueCount","setQueueCount","syncing","setSyncing","loadQueueCount","c","inRange","dt","start","setDate","getDay","end","filteredJobs","handleSync","ProfileScreen","setToken","Stack","Tabs","TabsNav","isCompact","hideTabs","Navigator","screenOptions","headerShown","tabBarActiveTintColor","tabBarStyle","Screen","component","MobileHeader","currentRoute","onNavigate","menuVisible","setMenuVisible","activeRoute","menuItems","handleSelect","accessibilityLabel","accessibilityRole","visible","animationType","transparent","onRequestClose","LoginScreen","password","setPassword","busy","setBusy","setUser","login","res","json","tok","accessToken","normalizedUser","setItemAsync","secureTextEntry","App","booting","setBooting","navigationRef","setCurrentRoute","isCompactLayout","mounted","usr","getItemAsync","authValue","deleteItemAsync","updateCurrentRoute","getCurrentRoute","index","routes","nested","handleNavigate","routeName","tabRoutes","Provider","onReady","onStateChange"],"sources":["C:/Users/Tyler/Downloads/PrecisionTracker-v4-wired/PrecisionTracker/mobile/App.js"],"sourcesContent":["\r\nimport React, { useEffect, useState, createContext, useContext, useRef, useCallback, useMemo } from 'react';\r\nimport { NavigationContainer, useFocusEffect } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport {Text, TextInput, Button, FlatList, TouchableOpacity, SafeAreaView, Alert, Image, ScrollView, RefreshControl, ActivityIndicator, Modal, useWindowDimensions } from 'react-native';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport * as FileSystem from 'expo-file-system';\r\nimport * as SQLite from 'expo-sqlite';\r\nimport Svg, { Path } from 'react-native-svg';\r\nimport ViewShot from 'react-native-view-shot';\r\nimport { Platform, View } from 'react-native';\r\nimport * as SecureStore from 'expo-secure-store';\r\nimport DateTimePicker, { DateTimePickerAndroid } from '@react-native-community/datetimepicker';\r\n// import * as SQLite from 'expo-sqlite';\r\n\r\n\r\nconst API_URL = process.env.EXPO_PUBLIC_API_URL || 'http://localhost:4000';\r\n// const db = SQLite.openDatabase('offline.db');\r\n\r\n// function initDB(){\r\n//   db.transaction(tx => {\r\n//     tx.executeSql('CREATE TABLE IF NOT EXISTS queue (id INTEGER PRIMARY KEY AUTOINCREMENT, type TEXT, payload TEXT);');\r\n//     tx.executeSql('CREATE TABLE IF NOT EXISTS uploads (id INTEGER PRIMARY KEY AUTOINCREMENT, dataUrl TEXT);');\r\n//     tx.executeSql('CREATE TABLE IF NOT EXISTS leads_cache (id INTEGER PRIMARY KEY, description TEXT, status TEXT);');\r\n//   });\r\n// }\r\n\r\nfunction initOfflineTables(database){\r\n  try {\r\n    if (!database || typeof database.transaction !== 'function') return;\r\n    database.transaction(tx => {\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS queue (id INTEGER PRIMARY KEY AUTOINCREMENT, type TEXT, payload TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS uploads (id INTEGER PRIMARY KEY AUTOINCREMENT, dataUrl TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS leads_cache (id INTEGER PRIMARY KEY, description TEXT, status TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS jobs_cache (id INTEGER PRIMARY KEY, name TEXT, status TEXT, startDate TEXT, endDate TEXT, notes TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS tasks_cache (id INTEGER PRIMARY KEY, jobId INTEGER, title TEXT, status TEXT, dueDate TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS calendar_cache (id INTEGER PRIMARY KEY, jobId INTEGER, title TEXT, startAt TEXT, endAt TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS estimates_cache (id INTEGER PRIMARY KEY, leadId INTEGER, subtotal REAL, taxRate REAL, total REAL, status TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS estimate_items_cache (id INTEGER PRIMARY KEY, estimateId INTEGER, description TEXT, qty REAL, unitPrice REAL);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS change_orders_cache (id INTEGER PRIMARY KEY, jobId INTEGER, title TEXT, amountDelta REAL, status TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS users_cache (id INTEGER PRIMARY KEY, email TEXT, fullName TEXT, role TEXT);');\r\n    });\r\n  } catch (e) {\r\n    // best-effort; avoid noisy alerts in offline mode\r\n  }\r\n}\r\n\r\nlet db;\r\nexport function getDb() {\r\n  if (db) return db;\r\n\r\n  // Web: safe no-op DB\r\n  if (Platform.OS === 'web') {\r\n    db = {\r\n      transaction: (fn) => fn({ executeSql: () => {} }),\r\n      execAsync: async () => {},\r\n      runAsync: async () => {},\r\n    };\r\n    return db;\r\n  }\r\n\r\n  // SDK 51+: prefer sync, then async; DO NOT reference openDatabase (removed)\r\n  if ('openDatabaseSync' in SQLite) {\r\n    db = SQLite.openDatabaseSync('offline.db');\r\n    return db;\r\n  }\r\n\r\n  if ('openDatabaseAsync' in SQLite) {\r\n    // Minimal adapter so existing code won't crash; refactor later if needed\r\n    db = {\r\n      transaction: (fn) => fn({ executeSql: () => {} }),\r\n      execAsync: async () => {},\r\n      runAsync: async () => {},\r\n    };\r\n    return db;\r\n  }\r\n\r\n  // Safety fallback\r\n  db = {\r\n    transaction: (fn) => fn({ executeSql: () => {} }),\r\n    execAsync: async () => {},\r\n    runAsync: async () => {},\r\n  };\r\n  return db;\r\n}\r\n\r\n// DB handle\r\nconst dbHandle = getDb();\r\ninitOfflineTables(dbHandle);\r\n\r\n// ---------- Helpers ----------\r\nconst normalizeRole = (role) => {\r\n  if (!role) return 'TECH';\r\n  const r = String(role).toUpperCase();\r\n  if (['ADMIN','ESTIMATOR','SUPERVISOR','TECH'].includes(r)) return r;\r\n  if (r === 'STANDARD' || r === 'USER') return 'TECH';\r\n  return r;\r\n};\r\n\r\nconst AuthContext = createContext(null);\r\nfunction useAuth(){ return useContext(AuthContext); }\r\nasync function api(path, method='GET', body, token){\r\n  const headers = {\r\n    ...(token ? { Authorization: `Bearer ${token}` } : {}),\r\n    ...(body ? { 'Content-Type': 'application/json' } : {}),\r\n  };\r\n  let response;\r\n  try {\r\n    response = await fetch(`${API_URL}${path}`, {\r\n      method,\r\n      headers,\r\n      body: body ? JSON.stringify(body) : undefined,\r\n    });\r\n  } catch (networkError) {\r\n    throw new Error(networkError?.message || 'Network request failed');\r\n  }\r\n\r\n  const contentType = response.headers.get('content-type') || '';\r\n  const rawBody = await response.text();\r\n  let data = null;\r\n\r\n  if (rawBody) {\r\n    if (contentType.includes('application/json')) {\r\n      try {\r\n        data = JSON.parse(rawBody);\r\n      } catch {\r\n        data = rawBody;\r\n      }\r\n    } else {\r\n      data = rawBody;\r\n    }\r\n  }\r\n\r\n  if (!response.ok) {\r\n    const message =\r\n      (data && typeof data === 'object' && (data.error || data.message)) ||\r\n      (typeof data === 'string' ? data : 'Request failed');\r\n    throw new Error(message);\r\n  }\r\n\r\n  return data;\r\n}\r\n\r\n// ---------- Design tokens ----------\r\nconst palette = {\r\n  background: '#f4f6f8',\r\n  surface: '#ffffff',\r\n  surfaceMuted: '#f1f5f9',\r\n  border: '#e2e8f0',\r\n  text: '#0f172a',\r\n  muted: '#5f6b7d',\r\n  primary: '#2c8a7d',\r\n  primaryStrong: '#1f6a60',\r\n  success: '#219653',\r\n  warning: '#f59e0b',\r\n  danger: '#d14343',\r\n  info: '#2563eb',\r\n};\r\n\r\nconst spacing = (step = 1) => step * 8;\r\n\r\nconst typography = {\r\n  h1: 24,\r\n  h2: 18,\r\n  body: 15,\r\n  small: 12,\r\n};\r\n\r\nconst floatingShadow = Platform.select({\r\n  ios: { shadowColor: '#0f172a', shadowOpacity: 0.08, shadowRadius: 14, shadowOffset: { width: 0, height: 6 } },\r\n  android: { elevation: 2 },\r\n  default: {},\r\n});\r\n\r\nconst pillTone = {\r\n  NEW: { fg: palette.info, bg: '#e6eeff', label: 'New' },\r\n  CONTACTED: { fg: palette.primary, bg: '#e6f4f2', label: 'Contacted' },\r\n  ESTIMATING: { fg: palette.warning, bg: '#fdf1d6', label: 'Estimating' },\r\n  CONVERTED: { fg: palette.success, bg: '#e6f6ec', label: 'Converted' },\r\n  CLOSED_LOST: { fg: palette.muted, bg: '#e2e8f0', label: 'Lost' },\r\n  SCHEDULED: { fg: palette.primary, bg: '#e6f4f2', label: 'Scheduled' },\r\n  IN_PROGRESS: { fg: palette.info, bg: '#e6eeff', label: 'In progress' },\r\n  COMPLETE: { fg: palette.success, bg: '#e6f6ec', label: 'Complete' },\r\n  DONE: { fg: palette.success, bg: '#e6f6ec', label: 'Complete' },\r\n  ON_HOLD: { fg: palette.warning, bg: '#fdf1d6', label: 'On hold' },\r\n  CANCELLED: { fg: palette.muted, bg: '#e2e8f0', label: 'Cancelled' },\r\n  DRAFT: { fg: palette.muted, bg: '#e2e8f0', label: 'Draft' },\r\n  SENT: { fg: palette.info, bg: '#e6eeff', label: 'Sent' },\r\n  PART_PAID: { fg: palette.warning, bg: '#fdf1d6', label: 'Part paid' },\r\n  PAID: { fg: palette.success, bg: '#e6f6ec', label: 'Paid' },\r\n  VOID: { fg: palette.muted, bg: '#f1f5f9', label: 'Void' },\r\n};\r\n\r\nconst toneMap = {\r\n  primary: { fg: palette.primaryStrong, bg: '#e0f3f0' },\r\n  success: { fg: palette.success, bg: '#e6f6ec' },\r\n  warning: { fg: palette.warning, bg: '#fdf1d6' },\r\n  danger: { fg: palette.danger, bg: '#fde4e4' },\r\n  info: { fg: palette.info, bg: '#e6eeff' },\r\n};\r\n\r\nconst formInputBaseStyle = {\r\n  borderWidth: 1,\r\n  borderColor: palette.border,\r\n  borderRadius: 12,\r\n  paddingVertical: spacing(1.5),\r\n  paddingHorizontal: spacing(2),\r\n  color: palette.text,\r\n  backgroundColor: palette.surfaceMuted,\r\n  fontSize: typography.body,\r\n  marginBottom: spacing(1.5),\r\n};\r\n\r\nconst FormInput = React.forwardRef((props, ref) => (\r\n  <TextInput\r\n    ref={ref}\r\n    placeholderTextColor={palette.muted}\r\n    {...props}\r\n    style={[formInputBaseStyle, props.style]}\r\n  />\r\n));\r\nFormInput.displayName = 'FormInput';\r\n\r\nconst formatCurrency = (value) => {\r\n  const amount = Number(value || 0);\r\n  if (Number.isNaN(amount)) return '$0';\r\n  return `$${amount.toLocaleString(undefined, { minimumFractionDigits: amount % 1 ? 2 : 0, maximumFractionDigits: 2 })}`;\r\n};\r\n\r\nconst formatDate = (value) => {\r\n  if (!value) return null;\r\n  const d = new Date(value);\r\n  if (Number.isNaN(d.getTime())) return value;\r\n  return d.toLocaleDateString(undefined, { month: 'short', day: 'numeric' });\r\n};\r\n\r\nconst isTaskCompleted = (status) => {\r\n  if (!status) return false;\r\n  const key = String(status).toUpperCase();\r\n  return key === 'DONE' || key === 'COMPLETE';\r\n};\r\n\r\nfunction SurfaceCard({ children, style, onPress }) {\r\n  const content = (\r\n    <View\r\n      style={[\r\n        { backgroundColor: palette.surface, borderRadius: 16, borderWidth: 1, borderColor: palette.border, padding: spacing(2) },\r\n        floatingShadow,\r\n        style,\r\n      ]}\r\n    >\r\n      {children}\r\n    </View>\r\n  );\r\n  if (!onPress) return content;\r\n  return (\r\n    <TouchableOpacity activeOpacity={0.85} onPress={onPress}>\r\n      {content}\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n\r\nfunction StatusPill({ status }) {\r\n  if (!status) return null;\r\n  const key = String(status).toUpperCase();\r\n  const cfg = pillTone[key] || { fg: palette.muted, bg: '#e2e8f0', label: status };\r\n  return (\r\n    <View style={{ backgroundColor: cfg.bg, borderRadius: 999, paddingHorizontal: spacing(1.5), paddingVertical: spacing(0.5) }}>\r\n      <Text style={{ color: cfg.fg, fontSize: typography.small, fontWeight: '600' }}>{cfg.label}</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction SummaryCard({ title, value, subtitle, tone = 'primary', onPress }) {\n  const colors = toneMap[tone] || toneMap.primary;\n  return (\n    <SurfaceCard\n      onPress={onPress}\n      style={{ backgroundColor: colors.bg, borderColor: 'transparent', padding: spacing(2.5) }}\n    >\n      <Text style={{ color: palette.muted, fontSize: typography.small, textTransform: 'uppercase', fontWeight: '700' }}>{title}</Text>\n      <Text style={{ color: colors.fg, fontSize: 28, fontWeight: '800', marginTop: spacing(0.5) }}>{value}</Text>\n      {subtitle ? <Text style={{ color: palette.muted, fontSize: typography.small, marginTop: spacing(0.5) }}>{subtitle}</Text> : null}\n    </SurfaceCard>\n  );\n}\n\nfunction StatusCard({ label, value, description, tone = 'primary' }) {\n  const colors = toneMap[tone] || toneMap.primary;\n  return (\n    <SurfaceCard\n      style={{\n        backgroundColor: colors.bg,\n        borderColor: colors.fg,\n        borderWidth: 1,\n        paddingVertical: spacing(2),\n        paddingHorizontal: spacing(2.5),\n        flexGrow: 1,\n        flexBasis: '48%',\n      }}\n    >\n      <Text style={{ color: colors.fg, fontSize: typography.small, fontWeight: '700', textTransform: 'uppercase' }}>{label}</Text>\n      <Text style={{ color: palette.text, fontSize: 24, fontWeight: '700', marginTop: spacing(0.5) }}>{value}</Text>\n      {description ? <Text style={{ color: palette.muted, fontSize: typography.small, marginTop: spacing(0.5) }}>{description}</Text> : null}\n    </SurfaceCard>\n  );\n}\n\r\nfunction SectionHeader({ title, actionLabel, onAction }) {\r\n  return (\r\n    <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', marginBottom: spacing(1.5) }}>\r\n      <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight: '700' }}>{title}</Text>\r\n      {actionLabel && onAction ? (\r\n        <TouchableOpacity onPress={onAction} style={{ paddingHorizontal: spacing(1), paddingVertical: spacing(0.5) }}>\r\n          <Text style={{ color: palette.primary, fontWeight: '600', fontSize: typography.small }}>{actionLabel}</Text>\r\n        </TouchableOpacity>\r\n      ) : null}\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction QuickAction({ label, onPress, tone = 'primary' }) {\r\n  const toneStyles = (() => {\r\n    switch (tone) {\r\n      case 'danger':\r\n        return { borderColor: '#fecdd3', backgroundColor: '#fee2e2', textColor: palette.danger };\r\n      case 'success':\r\n        return { borderColor: '#bbf7d0', backgroundColor: '#dcfce7', textColor: palette.success };\r\n      case 'warning':\r\n        return { borderColor: '#fde68a', backgroundColor: '#fef3c7', textColor: palette.warning };\r\n      case 'muted':\r\n        return { borderColor: palette.border, backgroundColor: palette.surface, textColor: palette.muted };\r\n      default:\r\n        return { borderColor: palette.border, backgroundColor: palette.surfaceMuted, textColor: palette.primary };\r\n    }\r\n  })();\r\n  return (\r\n    <TouchableOpacity\r\n      onPress={onPress}\r\n      activeOpacity={0.85}\r\n      style={{\r\n        borderRadius: 10,\r\n        paddingHorizontal: spacing(1.5),\r\n        paddingVertical: spacing(0.75),\r\n        borderWidth: 1,\r\n        borderColor: toneStyles.borderColor,\r\n        backgroundColor: toneStyles.backgroundColor,\r\n      }}\r\n    >\r\n      <Text style={{ color: toneStyles.textColor, fontWeight: '600', fontSize: typography.small }}>{label}</Text>\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n\r\nconst toInputDate = (dateValue) => {\r\n  const d = dateValue instanceof Date ? dateValue : new Date(dateValue);\r\n  if (Number.isNaN(d.getTime())) return '';\r\n  const yyyy = d.getFullYear();\r\n  const mm = String(d.getMonth() + 1).padStart(2, '0');\r\n  const dd = String(d.getDate()).padStart(2, '0');\r\n  return `${yyyy}-${mm}-${dd}`;\r\n};\r\n\r\nconst parseInputDate = (value) => {\r\n  if (!value) return null;\r\n  const parsed = new Date(value);\r\n  if (Number.isNaN(parsed.getTime())) return null;\r\n  return parsed;\r\n};\r\n\r\nconst deriveLeadTitle = (lead) => {\r\n  if (!lead) return 'Untitled lead';\r\n  const customerName = lead.Customer?.name;\r\n  if (customerName && customerName.trim()) return customerName.trim();\r\n  if (lead.description && lead.description.trim()) {\r\n    const firstLine = lead.description.trim().split('\\n')[0];\r\n    return firstLine.length > 60 ? `${firstLine.slice(0, 57)}...` : firstLine;\r\n  }\r\n  return `Lead ${lead.id}`;\r\n};\r\n\r\nfunction DateInputField({ value, onChange, placeholder = 'Select date', minimumDate, maximumDate, style }) {\r\n  const [iosPickerVisible, setIosPickerVisible] = useState(false);\r\n  const isWeb = Platform.OS === 'web';\r\n\r\n  const toDateOnly = (input) => {\r\n    if (!input) return '';\r\n    if (input instanceof Date) return toInputDate(input);\r\n    if (typeof input === 'string') {\r\n      const [datePart] = input.split('T');\r\n      return datePart;\r\n    }\r\n    return '';\r\n  };\r\n\r\n  const normalizedValue = toDateOnly(value);\r\n  const minDateString = minimumDate ? toDateOnly(minimumDate) : undefined;\r\n  const maxDateString = maximumDate ? toDateOnly(maximumDate) : undefined;\r\n  const parsed = parseInputDate(normalizedValue) || new Date();\r\n  const displayLabel = value ? (formatDate(value) || normalizedValue) : '';\r\n\r\n  const applyDate = (selectedDate) => {\r\n    if (!selectedDate) return;\r\n    onChange(toInputDate(selectedDate));\r\n  };\r\n\r\n  const handleManualChange = (text) => {\r\n    if (!text) {\r\n      onChange('');\r\n      return;\r\n    }\r\n    onChange(text);\r\n  };\r\n\r\n  const openPicker = () => {\r\n    if (isWeb) return;\r\n    const baseDate = parseInputDate(normalizedValue) || new Date();\r\n    if (Platform.OS === 'android') {\r\n      DateTimePickerAndroid.open({\r\n        value: baseDate,\r\n        mode: 'date',\r\n        minimumDate: minimumDate ? parseInputDate(minimumDate) || undefined : undefined,\r\n        maximumDate: maximumDate ? parseInputDate(maximumDate) || undefined : undefined,\r\n        onChange: (event, selected) => {\r\n          if (event.type === 'set' && selected) applyDate(selected);\r\n        },\r\n      });\r\n    } else {\r\n      setIosPickerVisible(true);\r\n    }\r\n  };\r\n\r\n  const containerStyle = [\r\n    { marginBottom: spacing(1.5) },\r\n    style,\r\n  ];\r\n\r\n  if (isWeb) {\r\n    return (\r\n      <View style={containerStyle}>\r\n        <TextInput\r\n          value={normalizedValue}\r\n          placeholder={placeholder}\r\n          placeholderTextColor={palette.muted}\r\n          onChangeText={handleManualChange}\r\n          onChange={event => handleManualChange(event?.nativeEvent?.text ?? event?.target?.value ?? '')}\r\n          style={[formInputBaseStyle, { marginBottom: 0 }]}\r\n          type=\"date\"\r\n          min={minDateString}\r\n          max={maxDateString}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <View style={containerStyle}>\r\n      <TouchableOpacity\r\n        onPress={openPicker}\r\n        activeOpacity={0.85}\r\n        style={{\r\n          borderWidth: 1,\r\n          borderColor: palette.border,\r\n          borderRadius: 12,\r\n          backgroundColor: palette.surfaceMuted,\r\n          flexDirection: 'row',\r\n          alignItems: 'center',\r\n          paddingHorizontal: spacing(2),\r\n          paddingVertical: spacing(1.5),\r\n        }}\r\n      >\r\n        <Text style={{ flex: 1, color: displayLabel ? palette.text : palette.muted, fontSize: typography.body }}>\r\n          {displayLabel || placeholder}\r\n        </Text>\r\n        <Text style={{ fontSize: typography.h2 - 6, color: palette.muted }}>CAL</Text>\r\n      </TouchableOpacity>\r\n      {Platform.OS === 'ios' && iosPickerVisible ? (\r\n        <DateTimePicker\r\n          value={parsed}\r\n          mode=\"date\"\r\n          display=\"inline\"\r\n          onChange={(event, selected) => {\r\n            if (event.type === 'set' && selected) {\r\n              applyDate(selected);\r\n            }\r\n            if (event.type === 'dismissed') {\r\n              setIosPickerVisible(false);\r\n              return;\r\n            }\r\n            setIosPickerVisible(false);\r\n          }}\r\n          style={{ marginTop: spacing(1) }}\r\n          minimumDate={minimumDate ? parseInputDate(minimumDate) || undefined : undefined}\r\n          maximumDate={maximumDate ? parseInputDate(maximumDate) || undefined : undefined}\r\n        />\r\n      ) : null}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst TECH_ASSIGN_ROLES = ['TECH','SUPERVISOR','ESTIMATOR'];\r\n\r\nfunction TechSelector({ team = [], value, onSelect, label, allowAllRoles, allowClear }) {\r\n  const options = useMemo(() => {\r\n    const normalized = team.map(member => ({\r\n      ...member,\r\n      role: normalizeRole(member.role),\r\n    }));\r\n    if (allowAllRoles) return normalized;\r\n    return normalized.filter(member => TECH_ASSIGN_ROLES.includes(member.role));\r\n  }, [team, allowAllRoles]);\r\n\r\n  if (!options.length) return null;\r\n\r\n  const renderLabel = label ? (\r\n    <Text style={{ color: palette.muted, fontSize: typography.small, marginBottom: spacing(1) }}>{label}</Text>\r\n  ) : null;\r\n\r\n  return (\r\n    <View style={{ marginTop: spacing(1.5) }}>\r\n      {renderLabel}\r\n      <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1) }}>\r\n        {options.map(member => {\r\n          const selected = member.id === value;\r\n          const displayName = member.fullName || member.email;\r\n          const shortLabel = displayName.length > 22 ? `${displayName.slice(0, 21)}…` : displayName;\r\n          return (\r\n            <QuickAction\r\n              key={member.id}\r\n              label={shortLabel}\r\n              tone={selected ? 'primary' : 'muted'}\r\n              onPress={() => onSelect(member.id)}\r\n            />\r\n          );\r\n        })}\r\n        {allowClear ? <QuickAction label=\"Clear\" tone=\"muted\" onPress={() => onSelect(null)} /> : null}\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction DashboardScreen({ navigation }) {\n  const { token, user } = useAuth();\n  const [loading, setLoading] = useState(true);\n  const [refreshing, setRefreshing] = useState(false);\n  const [leads, setLeads] = useState([]);\n  const [jobs, setJobs] = useState([]);\n  const [tasks, setTasks] = useState([]);\n  const [invoiceSummary, setInvoiceSummary] = useState(null);\n  const [lastUpdated, setLastUpdated] = useState(null);\n  const isAdmin = (user?.role || '').toUpperCase() === 'ADMIN';\n\r\n  const jobLookup = useMemo(() => {\r\n    const map = {};\r\n    for (const job of jobs) {\r\n      if (job?.id != null) {\r\n        map[job.id] = job;\r\n      }\r\n    }\r\n    return map;\r\n  }, [jobs]);\r\n\r\n  const loadData = useCallback(async (isPullRefresh = false) => {\r\n    if (!token) return;\r\n    isPullRefresh ? setRefreshing(true) : setLoading(true);\r\n\r\n    const fetchLeads = async () => {\r\n      try {\r\n        const data = await api('/leads', 'GET', null, token);\r\n        setLeads(data);\r\n        db.transaction(tx => {\r\n          tx.executeSql && tx.executeSql('DELETE FROM leads_cache;');\r\n          data.forEach(l =>\r\n            tx.executeSql && tx.executeSql(\r\n              'INSERT OR REPLACE INTO leads_cache (id, description, status) VALUES (?,?,?)',\r\n              [l.id, l.description || '', l.status || 'NEW']\r\n            )\r\n          );\r\n        });\r\n        return data;\r\n      } catch (e) {\r\n        return await new Promise(resolve => {\r\n          db.transaction(tx =>\r\n            tx.executeSql && tx.executeSql(\r\n              'SELECT id, description, status FROM leads_cache',\r\n              [],\r\n              (_, { rows }) => {\r\n                const fallback = rows?._array || [];\r\n                setLeads(fallback);\r\n                resolve(fallback);\r\n              }\r\n            )\r\n          );\r\n        });\r\n      }\r\n    };\r\n\r\n    const fetchJobs = async () => {\r\n      try {\r\n        const data = await api('/jobs', 'GET', null, token);\r\n        setJobs(data);\r\n        db.transaction(tx => {\r\n          tx.executeSql && tx.executeSql('DELETE FROM jobs_cache;');\r\n          data.forEach(j =>\r\n            tx.executeSql && tx.executeSql(\r\n              'INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)',\r\n              [j.id, j.name || '', j.status || 'SCHEDULED', j.startDate || '', j.endDate || '', j.notes || '']\r\n            )\r\n          );\r\n        });\r\n        return data;\r\n      } catch (e) {\r\n        return await new Promise(resolve => {\r\n          db.transaction(tx =>\r\n            tx.executeSql && tx.executeSql(\r\n              'SELECT id, name, status, startDate, endDate, notes FROM jobs_cache',\r\n              [],\r\n              (_, { rows }) => {\r\n                const fallback = rows?._array || [];\r\n                setJobs(fallback);\r\n                resolve(fallback);\r\n              }\r\n            )\r\n          );\r\n        });\r\n      }\r\n    };\r\n\r\n    const fetchTasks = async () => {\r\n      try {\r\n        const data = await api('/tasks', 'GET', null, token);\r\n        setTasks(data);\r\n        db.transaction(tx => {\r\n          data.forEach(t =>\r\n            tx.executeSql && tx.executeSql(\r\n              'INSERT OR REPLACE INTO tasks_cache (id, jobId, title, status, dueDate) VALUES (?,?,?,?,?)',\r\n              [t.id, t.jobId || null, t.title || '', t.status || 'TODO', t.dueDate || '']\r\n            )\r\n          );\r\n        });\r\n        return data;\r\n      } catch (e) {\r\n        return await new Promise(resolve => {\r\n          db.transaction(tx =>\r\n            tx.executeSql && tx.executeSql(\r\n              'SELECT id, jobId, title, status, dueDate FROM tasks_cache ORDER BY id DESC',\r\n              [],\r\n              (_, { rows }) => {\r\n                const fallback = rows?._array || [];\r\n                setTasks(fallback);\r\n                resolve(fallback);\r\n              }\r\n            )\r\n          );\r\n        });\r\n      }\r\n    };\r\n\r\n    const fetchInvoiceSummary = async () => {\r\n      try {\r\n        const data = await api('/invoices/summary', 'GET', null, token);\r\n        setInvoiceSummary(data);\r\n        return data;\r\n      } catch (e) {\r\n        return null;\r\n      }\r\n    };\r\n\r\n    try {\r\n      await Promise.all([fetchLeads(), fetchJobs(), fetchTasks(), fetchInvoiceSummary()]);\r\n      setLastUpdated(new Date());\r\n    } finally {\r\n      isPullRefresh ? setRefreshing(false) : setLoading(false);\r\n    }\r\n  }, [token]);\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      loadData(false);\r\n    }, [loadData])\r\n  );\r\n\r\n  const onRefresh = useCallback(() => loadData(true), [loadData]);\r\n\r\n  const newLeads = leads.filter(l => (l.status || '').toUpperCase() === 'NEW').length;\n  const activeJobs = jobs.filter(j => ['SCHEDULED', 'IN_PROGRESS'].includes((j.status || '').toUpperCase())).length;\n  const openTasks = tasks.filter(t => !isTaskCompleted(t.status)).length;\n  const outstandingValue = invoiceSummary?.outstanding || 0;\n  const collectedValue = invoiceSummary?.collected || 0;\n  const overdueCount = invoiceSummary?.overdueCount || 0;\n  const overdueTasks = useMemo(() => {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    return tasks.filter(task => {\n      if (!task?.dueDate || isTaskCompleted(task.status)) return false;\n      const due = new Date(task.dueDate);\n      if (Number.isNaN(due.getTime())) return false;\n      return due < today;\n    }).length;\n  }, [tasks]);\n  const statusCards = useMemo(() => [\n    {\n      label: 'Active',\n      value: String(activeJobs),\n      description: 'Jobs in progress or scheduled',\n      tone: 'primary',\n    },\n    {\n      label: 'Pending',\n      value: formatCurrency(outstandingValue),\n      description: 'Unpaid invoices',\n      tone: 'warning',\n    },\n    {\n      label: 'Paid',\n      value: formatCurrency(collectedValue),\n      description: 'Collected to date',\n      tone: 'success',\n    },\n    {\n      label: 'Overdue',\n      value: String(overdueTasks),\n      description: `Tasks overdue; ${overdueCount} invoices late`,\n      tone: 'danger',\n    },\n  ], [activeJobs, outstandingValue, collectedValue, overdueTasks, overdueCount]);\n\n  const topLeads = leads.slice(0, 3);\n  const topJobs = jobs.slice(0, 3);\n  const nextTasks = tasks.filter(t => !isTaskCompleted(t.status)).slice(0, 3);\n\r\n  return (\n    <SafeAreaView style={{ flex: 1, backgroundColor: palette.background }}>\n      <ScrollView\n        contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(5) }}\n        refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} tintColor={palette.primary} />}\n      >\n        <Text style={{ color: palette.text, fontSize: typography.h1, fontWeight: '700', marginBottom: spacing(2) }}>Dashboard</Text>\n\n        <View style={{ flexDirection: 'row', flexWrap: 'wrap', columnGap: spacing(1.5), rowGap: spacing(1.5), marginBottom: spacing(2) }}>\n          <QuickAction label=\"New job\" onPress={() => navigation.navigate('Jobs', { focus: 'create-job' })} />\n          <QuickAction label=\"New lead\" onPress={() => navigation.navigate('NewLead')} />\n          {isAdmin ? <QuickAction label=\"Create invoice\" tone=\"success\" onPress={() => navigation.navigate('Invoices')} /> : null}\n        </View>\n\n        <View style={{ flexDirection: 'row', flexWrap: 'wrap', columnGap: spacing(1.5), rowGap: spacing(1.5), marginBottom: spacing(3) }}>\n          {statusCards.map(card => (\n            <StatusCard\n              key={card.label}\n              label={card.label}\n              value={card.value}\n              description={card.description}\n              tone={card.tone}\n            />\n          ))}\n        </View>\n\n        <View style={{ flexDirection: 'row', flexWrap: 'wrap', columnGap: spacing(1.5), rowGap: spacing(1.5) }}>\n          <View style={{ flexBasis: '48%', minWidth: 160 }}>\n            <SummaryCard\n              title=\"Leads\"\n              value={leads.length}\n              subtitle={`${newLeads} new to triage`}\n              tone=\"info\"\n              onPress={() => navigation.navigate('Leads')}\n            />\n          </View>\n          <View style={{ flexBasis: '48%', minWidth: 160 }}>\n            <SummaryCard\n              title=\"Jobs\"\n              value={jobs.length}\n              subtitle={`${activeJobs} active`}\n              tone=\"primary\"\n              onPress={() => navigation.navigate('Jobs')}\n            />\n          </View>\n          <View style={{ flexBasis: '48%', minWidth: 160 }}>\n            <SummaryCard\n              title=\"Tasks\"\n              value={openTasks}\n              subtitle={`${overdueTasks} overdue • ${tasks.length} total`}\n              tone=\"warning\"\n              onPress={() => navigation.navigate('Jobs')}\n            />\n          </View>\n          <View style={{ flexBasis: '48%', minWidth: 160 }}>\n            <SummaryCard\n              title=\"Invoices\"\n              value={formatCurrency(outstandingValue)}\n              subtitle={`${overdueCount} overdue | ${formatCurrency(collectedValue)} collected`}\n              tone=\"success\"\n              onPress={() => navigation.navigate('Invoices')}\r\n            />\r\n          </View>\r\n        </View>\r\n\r\n        {loading && !refreshing ? (\r\n          <SurfaceCard style={{ alignItems: 'center', justifyContent: 'center', paddingVertical: spacing(6) }}>\r\n            <ActivityIndicator color={palette.primary} />\r\n            <Text style={{ color: palette.muted, marginTop: spacing(1.5) }}>Loading summary...</Text>\r\n          </SurfaceCard>\r\n        ) : null}\r\n\r\n        <SectionHeader title=\"Next Jobs\" actionLabel=\"View all\" onAction={() => navigation.navigate('Jobs')} />\r\n        <SurfaceCard style={{ marginBottom: spacing(3) }}>\r\n          {topJobs.length === 0 ? (\r\n            <Text style={{ color: palette.muted }}>No jobs yet. Create one from the Jobs tab.</Text>\r\n          ) : (\r\n            topJobs.map((job, idx) => {\r\n              const startLabel = job.startDate ? `Start ${formatDate(job.startDate)}` : null;\r\n              const endLabel = job.endDate ? `Due ${formatDate(job.endDate)}` : null;\r\n              return (\r\n                <View key={job.id || idx} style={{ marginBottom: idx === topJobs.length - 1 ? 0 : spacing(2.5) }}>\r\n                  <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                    <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight: '600' }}>{job.name || `Job #${job.id}`}</Text>\r\n                    <StatusPill status={job.status || 'SCHEDULED'} />\r\n                  </View>\r\n                  {startLabel || endLabel ? (\r\n                    <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>\r\n                      {[startLabel, endLabel].filter(Boolean).join(' - ')}\r\n                    </Text>\r\n                  ) : null}\r\n                  {job.notes ? (\r\n                    <Text style={{ color: palette.muted, marginTop: spacing(1) }} numberOfLines={2}>{job.notes}</Text>\r\n                  ) : null}\r\n                  <View style={{ flexDirection: 'row', columnGap: spacing(1.5), marginTop: spacing(1.5) }}>\r\n                    <QuickAction label=\"Open job\" onPress={() => navigation.navigate('JobDetail', { jobId: job.id })} />\r\n                    <QuickAction label=\"Tasks\" onPress={() => navigation.navigate('JobDetail', { jobId: job.id, tab: 'tasks' })} />\r\n                  </View>\r\n                </View>\r\n              );\r\n            })\r\n          )}\r\n        </SurfaceCard>\r\n\r\n        <SectionHeader title=\"Hot Leads\" actionLabel=\"Leads\" onAction={() => navigation.navigate('Leads')} />\r\n        <SurfaceCard style={{ marginBottom: spacing(3) }}>\r\n          {topLeads.length === 0 ? (\r\n            <Text style={{ color: palette.muted }}>No leads yet. Capture leads to keep the funnel full.</Text>\r\n        ) : (\r\n          topLeads.map((lead, idx) => (\r\n            <View key={lead.id || idx} style={{ marginBottom: idx === topLeads.length - 1 ? 0 : spacing(2) }}>\r\n              <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                <Text style={{ color: palette.text, fontWeight: '600', fontSize: typography.h2 }}>{deriveLeadTitle(lead)}</Text>\r\n                <StatusPill status={lead.status || 'NEW'} />\r\n              </View>\r\n              <Text style={{ color: palette.muted, marginTop: spacing(0.5) }} numberOfLines={3}>\r\n                {lead.description || 'No scope captured yet.'}\r\n              </Text>\r\n                <View style={{ flexDirection: 'row', columnGap: spacing(1.5), marginTop: spacing(1.5) }}>\r\n                  <QuickAction label=\"Follow up\" onPress={() => navigation.navigate('EstimateEditor', { leadId: lead.id })} />\r\n                  <QuickAction label=\"Convert\" onPress={() => navigation.navigate('Jobs')} />\r\n                </View>\r\n              </View>\r\n            ))\r\n          )}\r\n        </SurfaceCard>\r\n\r\n        <SectionHeader title=\"Open Tasks\" actionLabel=\"Jobs\" onAction={() => navigation.navigate('Jobs')} />\r\n        <SurfaceCard>\r\n          {nextTasks.length === 0 ? (\r\n            <Text style={{ color: palette.muted }}>All clear. Add tasks from a job to keep crews aligned.</Text>\r\n          ) : (\r\n            nextTasks.map((task, idx) => (\r\n              <View key={task.id || idx} style={{ marginBottom: idx === nextTasks.length - 1 ? 0 : spacing(2) }}>\r\n                <Text style={{ color: palette.text, fontWeight: '600' }}>{task.title || 'Task'}</Text>\r\n                {task.jobId ? (\r\n                  <Text style={{ color: palette.muted, marginTop: spacing(0.25) }}>\r\n                    {jobLookup[task.jobId]?.name || `Job #${task.jobId}`}\r\n                  </Text>\r\n                ) : (\r\n                  <Text style={{ color: palette.muted, marginTop: spacing(0.25) }}>Unassigned job</Text>\r\n                )}\r\n                <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>\r\n                  {task.dueDate ? `Due ${formatDate(task.dueDate)}` : 'No due date'}\r\n                </Text>\r\n                <View style={{ flexDirection: 'row', columnGap: spacing(1.5), marginTop: spacing(1.5) }}>\r\n                  <QuickAction\r\n                    label=\"Mark done\"\r\n                    onPress={() => navigation.navigate('JobDetail', { jobId: task.jobId })}\r\n                  />\r\n                  <QuickAction\r\n                    label=\"View job\"\r\n                    onPress={() => navigation.navigate('JobDetail', { jobId: task.jobId })}\r\n                  />\r\n                </View>\r\n              </View>\r\n            ))\r\n          )}\r\n        </SurfaceCard>\r\n\r\n        {lastUpdated ? (\r\n          <Text style={{ color: palette.muted, fontSize: typography.small, marginTop: spacing(2), textAlign: 'center' }}>\r\n            Updated {lastUpdated.toLocaleTimeString([], { hour: 'numeric', minute: '2-digit' })}\r\n          </Text>\r\n        ) : null}\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\n// ---------- Signature Pad to PNG ----------\r\nfunction SignaturePad({ onCapturePng }){\r\n  const [points, setPoints] = useState([]);\r\n  const [path, setPath] = useState('');\r\n  const shotRef = useRef(null);\r\n  return (\r\n    <ViewShot ref={shotRef} options={{ format: 'png', quality: 0.9, result: 'base64' }} style={{ height:220, borderWidth:1, backgroundColor:'#fff' }}>\r\n      <View\r\n        onStartShouldSetResponder={()=>true}\r\n        onResponderMove={(e)=>{\r\n          const x = e.nativeEvent.locationX, y = e.nativeEvent.locationY;\r\n          setPath(p => p + (p ? ` L ${x} ${y}` : ` M ${x} ${y}`));\r\n        }}\r\n        onResponderRelease={async ()=>{\r\n          const base64 = await shotRef.current.capture();\r\n          onCapturePng && onCapturePng('data:image/png;base64,' + base64);\r\n        }}\r\n        style={{ flex:1 }}\r\n      >\r\n        <Svg height=\"100%\" width=\"100%\"><Path d={path} stroke=\"black\" strokeWidth=\"2\" fill=\"none\" /></Svg>\r\n      </View>\r\n    </ViewShot>\r\n  );\r\n}\r\n\r\nfunction SignatureScreen({ route, navigation }){\r\n  const { token } = useAuth();\r\n  const { estimateId } = route.params;\r\n  const [sigPng, setSigPng] = useState(null);\r\n  const save = async () => {\r\n    if(!sigPng){ Alert.alert('Please sign first'); return; }\r\n    const resp = await api(`/estimates/${estimateId}/approve`, 'POST', { signaturePngUrl: sigPng }, token);\r\n    Alert.alert('Approved', `Payment link:\r\n${(resp && resp.paymentLink) ? resp.paymentLink : 'Unavailable'}`); navigation.goBack();\r\n  };\r\n  return (\r\n    <SafeAreaView style={{ padding:16 }}>\r\n      <Text style={{ fontSize:18, marginBottom:8 }}>Sign Estimate #{estimateId}</Text>\r\n      <SignaturePad onCapturePng={setSigPng} />\r\n      <View style={{ height:12 }} />\r\n      <Button title=\"Save Signature\" onPress={save} />\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\n// ---------- Admin: Users ----------\r\nconst userRoleOptions = [\r\n  { label: 'Admin', value: 'ADMIN' },\r\n  { label: 'Estimator', value: 'ESTIMATOR' },\r\n  { label: 'Supervisor', value: 'SUPERVISOR' },\r\n  { label: 'Tech', value: 'TECH' },\r\n];\r\n\r\nconst invoiceStatusOptions = [\r\n  { value: 'DRAFT', label: 'Draft' },\r\n  { value: 'SENT', label: 'Sent' },\r\n  { value: 'PART_PAID', label: 'Part paid' },\r\n  { value: 'PAID', label: 'Paid' },\r\n  { value: 'VOID', label: 'Void' },\r\n];\r\n\r\nfunction UsersAdminScreen(){\r\n  const { token } = useAuth();\r\n  const [users, setUsers] = useState([]);\r\n  const [email, setEmail] = useState('');\r\n  const [fullName, setFullName] = useState('');\r\n  const [role, setRole] = useState('TECH');\r\n  const [inviting, setInviting] = useState(false);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n\r\n  const load = useCallback(async () => {\r\n    try {\r\n      const response = await api('/users','GET',null,token);\r\n      setUsers(Array.isArray(response) ? response : []);\r\n    } catch (e) {\r\n      Alert.alert('Error', e.message || 'Unable to load users.');\r\n    }\r\n  }, [token]);\r\n\r\n  useEffect(() => { load(); }, [load]);\r\n\r\n  const resetForm = () => {\r\n    setEmail('');\r\n    setFullName('');\r\n    setRole('TECH');\r\n  };\r\n\r\n  const invite = async ()=>{\r\n    const trimmedEmail = email.trim().toLowerCase();\r\n    const trimmedName = fullName.trim();\r\n    if (!trimmedEmail) {\r\n      Alert.alert('Missing email', 'Enter an email address to invite a user.');\r\n      return;\r\n    }\r\n    try {\r\n      setInviting(true);\r\n      await api('/users','POST', { email: trimmedEmail, fullName: trimmedName || undefined, role: normalizeRole(role) }, token);\r\n      resetForm();\r\n      await load();\r\n    } catch (e) {\r\n      Alert.alert('Error', e.message || 'Unable to send invite.');\r\n    } finally {\r\n      setInviting(false);\r\n    }\r\n  };\r\n\r\n  const promote = async (id, newRole)=>{\r\n    try {\r\n      await api(`/users/${id}`,'PATCH',{ role: normalizeRole(newRole) }, token);\r\n      await load();\r\n    } catch (e) {\r\n      Alert.alert('Error', e.message || 'Unable to update role.');\r\n    }\r\n  };\r\n\r\n  const remove = (id) => {\r\n    Alert.alert('Remove user', 'Are you sure you want to remove this person?', [\r\n      { text: 'Cancel', style: 'cancel' },\r\n      {\r\n        text: 'Remove',\r\n        style: 'destructive',\r\n        onPress: async () => {\r\n          try {\r\n            await api(`/users/${id}`,'DELETE',null,token);\r\n            await load();\r\n          } catch (e) {\r\n            Alert.alert('Error', e.message || 'Unable to delete user.');\r\n          }\r\n        }\r\n      }\r\n    ]);\r\n  };\r\n\r\n  const onRefresh = useCallback(async () => {\r\n    setRefreshing(true);\r\n    try {\r\n      await load();\r\n    } finally {\r\n      setRefreshing(false);\r\n    }\r\n  }, [load]);\r\n\r\n  const renderRolePill = (value) => {\r\n    const roleCfg = userRoleOptions.find(option => option.value === normalizeRole(value));\r\n    const label = roleCfg ? roleCfg.label : normalizeRole(value);\r\n    return (\r\n      <View style={{ backgroundColor: '#e0f3f0', paddingHorizontal: spacing(1.5), paddingVertical: spacing(0.5), borderRadius: 999 }}>\r\n        <Text style={{ color: palette.primaryStrong, fontWeight:'600', fontSize: typography.small }}>{label}</Text>\r\n      </View>\r\n    );\r\n  };\r\n\r\n  const renderRoleSelector = (selectedRole, onSelect) => (\r\n    <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1) }}>\r\n      {userRoleOptions.map(option => {\r\n        const selected = selectedRole === option.value;\r\n        return (\r\n          <TouchableOpacity\r\n            key={option.value}\r\n            onPress={() => onSelect(option.value)}\r\n            activeOpacity={0.85}\r\n            style={{\r\n              paddingHorizontal: spacing(2),\r\n              paddingVertical: spacing(1),\r\n              borderRadius: 999,\r\n              borderWidth: 1,\r\n              borderColor: selected ? palette.primary : palette.border,\r\n              backgroundColor: selected ? '#d9f2ed' : palette.surface,\r\n            }}\r\n          >\r\n            <Text style={{ color: selected ? palette.primaryStrong : palette.muted, fontWeight:'600', fontSize: typography.small }}>\r\n              {option.label}\r\n            </Text>\r\n          </TouchableOpacity>\r\n        );\r\n      })}\r\n    </View>\r\n  );\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\r\n      <FlatList\r\n        data={users}\r\n        keyExtractor={u=>String(u.id)}\r\n        contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(6) }}\r\n        refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} tintColor={palette.primary} />}\r\n        ListHeaderComponent={(\r\n          <View>\r\n            <Text style={{ color: palette.text, fontSize: typography.h1, fontWeight:'700', marginBottom: spacing(2) }}>Team management</Text>\r\n            <SurfaceCard style={{ padding: spacing(2.5), marginBottom: spacing(3) }}>\r\n              <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700' }}>Invite teammate</Text>\r\n              <Text style={{ color: palette.muted, marginTop: spacing(0.5), marginBottom: spacing(2) }}>\r\n                Send an invite email and choose what they can access.\r\n              </Text>\r\n              <FormInput\r\n                placeholder=\"Full name (optional)\"\r\n                value={fullName}\r\n                onChangeText={setFullName}\r\n              />\r\n              <FormInput\r\n                placeholder=\"Work email\"\r\n                autoCapitalize=\"none\"\r\n                keyboardType=\"email-address\"\r\n                value={email}\r\n                onChangeText={setEmail}\r\n              />\r\n              <Text style={{ color: palette.muted, fontWeight:'600', fontSize: typography.small, textTransform:'uppercase', marginBottom: spacing(1) }}>Role</Text>\r\n              {renderRoleSelector(role, setRole)}\r\n              <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center', marginTop: spacing(2) }}>\r\n                <QuickAction label=\"Clear\" tone=\"muted\" onPress={resetForm} />\r\n                <TouchableOpacity\r\n                  onPress={invite}\r\n                  activeOpacity={0.85}\r\n                  disabled={inviting}\r\n                  style={{\r\n                    backgroundColor: palette.primary,\r\n                    paddingHorizontal: spacing(2.5),\r\n                    paddingVertical: spacing(1.5),\r\n                    borderRadius: 12,\r\n                    opacity: inviting ? 0.6 : 1,\r\n                  }}\r\n                >\r\n                  <Text style={{ color:'#fff', fontWeight:'700' }}>{inviting ? 'Sending...' : 'Send invite'}</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </SurfaceCard>\r\n          </View>\r\n        )}\r\n        ListEmptyComponent={(\r\n          <SurfaceCard>\r\n            <Text style={{ color: palette.muted }}>Invite your first teammate to collaborate on jobs.</Text>\r\n          </SurfaceCard>\r\n        )}\r\n        renderItem={({item}) => {\r\n          const normalizedRole = normalizeRole(item.role);\r\n          return (\r\n            <SurfaceCard style={{ marginBottom: spacing(2), padding: spacing(2.5) }}>\r\n              <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center', marginBottom: spacing(1.5) }}>\r\n                <View>\r\n                  <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600' }}>{item.fullName || item.email}</Text>\r\n                  <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>{item.email}</Text>\r\n                </View>\r\n                {renderRolePill(normalizedRole)}\r\n              </View>\r\n              <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1) }}>\r\n                {userRoleOptions.map(option => {\r\n                  const selected = normalizedRole === option.value;\r\n                  return (\r\n                    <TouchableOpacity\r\n                      key={option.value}\r\n                      onPress={() => promote(item.id, option.value)}\r\n                      disabled={selected}\r\n                      activeOpacity={0.85}\r\n                      style={{\r\n                        paddingHorizontal: spacing(1.75),\r\n                        paddingVertical: spacing(0.75),\r\n                        borderRadius: 999,\r\n                        borderWidth: 1,\r\n                        borderColor: selected ? palette.primary : palette.border,\r\n                        backgroundColor: selected ? '#d9f2ed' : palette.surface,\r\n                        opacity: selected ? 0.7 : 1,\r\n                      }}\r\n                    >\r\n                      <Text style={{ color: selected ? palette.primaryStrong : palette.muted, fontWeight:'600', fontSize: typography.small }}>\r\n                        {option.label}\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  );\r\n                })}\r\n                <TouchableOpacity\r\n                  onPress={() => remove(item.id)}\r\n                  activeOpacity={0.85}\r\n                  style={{\r\n                    paddingHorizontal: spacing(1.75),\r\n                    paddingVertical: spacing(0.75),\r\n                    borderRadius: 999,\r\n                    borderWidth: 1,\r\n                    borderColor: '#fecdd3',\r\n                    backgroundColor: '#fee2e2',\r\n                  }}\r\n                >\r\n                  <Text style={{ color: palette.danger, fontWeight:'600', fontSize: typography.small }}>Remove</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </SurfaceCard>\r\n          );\r\n        }}\r\n      />\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\n// ---------- Jobs Kanban + Change Orders ----------\r\nfunction InvoicesScreen({ navigation }){\r\n  const { token, user } = useAuth();\r\n  const [loading, setLoading] = useState(true);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [summary, setSummary] = useState(null);\r\n  const [invoices, setInvoices] = useState([]);\r\n  const [filter, setFilter] = useState('ALL');\r\n  const [newInvoiceJobId, setNewInvoiceJobId] = useState('');\r\n  const [newInvoiceAmount, setNewInvoiceAmount] = useState('');\r\n  const [newInvoiceIssuedAt, setNewInvoiceIssuedAt] = useState('');\r\n  const [newInvoiceDueAt, setNewInvoiceDueAt] = useState('');\r\n  const [newInvoiceStatus, setNewInvoiceStatus] = useState('DRAFT');\r\n  const [creatingInvoice, setCreatingInvoice] = useState(false);\r\n\r\n  const load = useCallback(async (isRefresh = false) => {\r\n    if (!token) return;\r\n    isRefresh ? setRefreshing(true) : setLoading(true);\r\n    try {\r\n      const [summaryData, list] = await Promise.all([\r\n        api('/invoices/summary', 'GET', null, token),\r\n        api('/invoices', 'GET', null, token),\r\n      ]);\r\n      setSummary(summaryData);\r\n      setInvoices(list);\r\n    } catch (e) {\r\n      // keep prior data on failure\r\n    } finally {\r\n      isRefresh ? setRefreshing(false) : setLoading(false);\r\n    }\r\n  }, [token]);\r\n\r\n  useFocusEffect(useCallback(() => {\r\n    if (user?.role === 'ADMIN') {\r\n      load(false);\r\n    }\r\n  }, [load, user?.role]));\r\n\r\n  const onRefresh = useCallback(() => load(true), [load]);\r\n  const nextInvoiceNumber = useMemo(() => {\r\n    if (!Array.isArray(invoices) || invoices.length === 0) {\r\n      return 'INV-0001';\r\n    }\r\n    const maxNumber = invoices.reduce((acc, inv) => {\r\n      const match = String(inv.number || '').match(/(\\d+)$/);\r\n      if (match) {\r\n        return Math.max(acc, parseInt(match[1], 10));\r\n      }\r\n      if (inv.id) {\r\n        return Math.max(acc, Number(inv.id));\r\n      }\r\n      return acc;\r\n    }, 0);\r\n    const next = maxNumber + 1;\r\n    return `INV-${String(next).padStart(4, '0')}`;\r\n  }, [invoices]);\r\n\r\n  const resetInvoiceForm = useCallback(() => {\r\n    setNewInvoiceJobId('');\r\n    setNewInvoiceAmount('');\r\n    setNewInvoiceIssuedAt('');\r\n    setNewInvoiceDueAt('');\r\n    setNewInvoiceStatus('DRAFT');\r\n  }, []);\r\n\r\n  const createInvoice = useCallback(async () => {\r\n    const amountValue = parseFloat(newInvoiceAmount);\r\n    if (Number.isNaN(amountValue) || amountValue <= 0) {\r\n      Alert.alert('Missing amount', 'Enter a valid invoice amount.');\r\n      return;\r\n    }\r\n    const jobIdTrimmed = newInvoiceJobId.trim();\r\n    const jobIdValue = jobIdTrimmed ? parseInt(jobIdTrimmed, 10) : null;\r\n    if (jobIdTrimmed && Number.isNaN(jobIdValue)) {\r\n      Alert.alert('Invalid job', 'Job ID must be a number.');\r\n      return;\r\n    }\r\n    const payload = {\r\n      amount: amountValue,\r\n      status: newInvoiceStatus,\r\n      number: nextInvoiceNumber || undefined,\r\n      jobId: jobIdValue || undefined,\r\n      issuedAt: newInvoiceIssuedAt || null,\r\n      dueAt: newInvoiceDueAt || null,\r\n    };\r\n    try {\r\n      setCreatingInvoice(true);\r\n      const created = await api('/invoices', 'POST', payload, token);\r\n      resetInvoiceForm();\r\n      await load(false);\r\n      Alert.alert('Invoice created', `${created?.number || payload.number || 'Invoice'} saved.`);\r\n    } catch (e) {\r\n      Alert.alert('Error', e.message || 'Unable to create invoice.');\r\n    } finally {\r\n      setCreatingInvoice(false);\r\n    }\r\n  }, [\r\n    newInvoiceAmount,\r\n    newInvoiceStatus,\r\n    newInvoiceJobId,\r\n    newInvoiceIssuedAt,\r\n    newInvoiceDueAt,\r\n    token,\r\n    load,\r\n    resetInvoiceForm,\r\n    nextInvoiceNumber,\r\n  ]);\r\n\r\n  const deleteInvoice = useCallback((invoice) => {\r\n    Alert.alert('Delete invoice', `Delete invoice #${invoice.number || invoice.id}?`, [\r\n      { text:'Cancel', style:'cancel' },\r\n      {\r\n        text:'Delete',\r\n        style:'destructive',\r\n        onPress: async () => {\r\n          try {\r\n            await api(`/invoices/${invoice.id}`, 'DELETE', null, token);\r\n            await load(false);\r\n          } catch (e) {\r\n            Alert.alert('Error', e.message || 'Unable to delete invoice.');\r\n          }\r\n        }\r\n      }\r\n    ]);\r\n  }, [token, load]);\r\n\r\n  if (user?.role !== 'ADMIN') {\r\n    return (\r\n      <SafeAreaView style={{ flex:1, alignItems:'center', justifyContent:'center', backgroundColor: palette.background }}>\r\n        <Text style={{ color: palette.muted }}>Invoices are only available to admin users.</Text>\r\n      </SafeAreaView>\r\n    );\r\n  }\r\n\r\n  const filters = [\r\n    { key:'ALL', label:'All' },\r\n    { key:'OUTSTANDING', label:'Outstanding' },\r\n    { key:'PAID', label:'Paid' },\r\n  ];\r\n\r\n  const filteredInvoices = invoices.filter(inv => {\r\n    if (filter === 'ALL') return true;\r\n    const status = (inv.status || 'DRAFT').toUpperCase();\r\n    if (filter === 'PAID') return status === 'PAID';\r\n    return !['PAID','VOID'].includes(status);\r\n  });\r\n\r\n  const outstanding = formatCurrency(summary?.outstanding || 0);\r\n  const collected = formatCurrency(summary?.collected || 0);\r\n  const drafts = formatCurrency(summary?.draftAmount || 0);\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\r\n      <ScrollView\r\n        contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(6) }}\r\n        refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} tintColor={palette.primary} />}\r\n      >\r\n        <Text style={{ color: palette.text, fontSize: typography.h1, fontWeight:'700', marginBottom: spacing(2) }}>Invoices</Text>\r\n        <Text style={{ color: palette.muted, marginBottom: spacing(2) }}>Track billing health and spot overdue balances.</Text>\r\n        <SurfaceCard style={{ padding: spacing(2.5), marginBottom: spacing(3) }}>\r\n          <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700' }}>Create invoice</Text>\r\n          <Text style={{ color: palette.muted, marginTop: spacing(0.5), marginBottom: spacing(2) }}>\r\n            Capture billing details and keep your accounts current.\r\n          </Text>\r\n          <View style={{ marginBottom: spacing(1.5) }}>\r\n            <Text style={{ color: palette.muted, fontSize: typography.small, fontWeight:'700', textTransform:'uppercase' }}>Invoice number</Text>\r\n            <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700', marginTop: spacing(0.5) }}>{nextInvoiceNumber}</Text>\r\n          </View>\r\n          <FormInput\r\n            placeholder=\"Job ID (optional)\"\r\n            value={newInvoiceJobId}\r\n            onChangeText={setNewInvoiceJobId}\r\n            keyboardType=\"number-pad\"\r\n          />\r\n          <FormInput\r\n            placeholder=\"Amount $\"\r\n            value={newInvoiceAmount}\r\n            onChangeText={setNewInvoiceAmount}\r\n            keyboardType=\"decimal-pad\"\r\n          />\r\n          <View style={{ flexDirection:'row', columnGap: spacing(1.5) }}>\r\n            <View style={{ flex:1 }}>\r\n              <DateInputField value={newInvoiceIssuedAt} onChange={setNewInvoiceIssuedAt} placeholder=\"Issued date\" style={{ marginBottom: 0 }} />\r\n            </View>\r\n            <View style={{ flex:1 }}>\r\n              <DateInputField value={newInvoiceDueAt} onChange={setNewInvoiceDueAt} placeholder=\"Due date (optional)\" style={{ marginBottom: 0 }} />\r\n            </View>\r\n          </View>\r\n          <Text style={{ color: palette.muted, fontSize: typography.small, fontWeight:'700', textTransform:'uppercase', marginTop: spacing(2), marginBottom: spacing(1) }}>Status</Text>\r\n          <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1) }}>\r\n            {invoiceStatusOptions.map(option => {\r\n              const selected = option.value === newInvoiceStatus;\r\n              return (\r\n                <TouchableOpacity\r\n                  key={option.value}\r\n                  onPress={() => setNewInvoiceStatus(option.value)}\r\n                  activeOpacity={0.85}\r\n                  style={{\r\n                    paddingHorizontal: spacing(2),\r\n                    paddingVertical: spacing(1),\r\n                    borderRadius: 999,\r\n                    borderWidth: 1,\r\n                    borderColor: selected ? palette.primary : palette.border,\r\n                    backgroundColor: selected ? '#d9f2ed' : palette.surface,\r\n                  }}\r\n                >\r\n                  <Text style={{ color: selected ? palette.primaryStrong : palette.muted, fontWeight:'600', fontSize: typography.small }}>\r\n                    {option.label}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              );\r\n            })}\r\n          </View>\r\n          <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center', marginTop: spacing(2) }}>\r\n            <QuickAction label=\"Reset\" tone=\"muted\" onPress={resetInvoiceForm} />\r\n            <TouchableOpacity\r\n              onPress={createInvoice}\r\n              activeOpacity={0.85}\r\n              disabled={creatingInvoice}\r\n              style={{\r\n                backgroundColor: palette.primary,\r\n                paddingHorizontal: spacing(2.5),\r\n                paddingVertical: spacing(1.5),\r\n                borderRadius: 12,\r\n                opacity: creatingInvoice ? 0.6 : 1,\r\n              }}\r\n            >\r\n              <Text style={{ color:'#fff', fontWeight:'700' }}>{creatingInvoice ? 'Saving...' : 'Create invoice'}</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </SurfaceCard>\r\n\r\n        <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(2), rowGap: spacing(2), marginBottom: spacing(3) }}>\r\n          <View style={{ flexBasis:'48%', minWidth: 160 }}>\r\n            <SummaryCard title=\"Outstanding\" value={outstanding} subtitle={`${summary?.overdueCount || 0} overdue`} tone=\"warning\" />\r\n          </View>\r\n          <View style={{ flexBasis:'48%', minWidth: 160 }}>\r\n            <SummaryCard title=\"Collected\" value={collected} subtitle=\"All payments to date\" tone=\"success\" />\r\n          </View>\r\n          <View style={{ flexBasis:'48%', minWidth: 160 }}>\r\n            <SummaryCard title=\"Drafts\" value={drafts} subtitle={`${summary?.totalCount || 0} total invoices`} tone=\"info\" />\r\n          </View>\r\n        </View>\r\n\r\n        <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginBottom: spacing(2) }}>\r\n          {filters.map(f => {\r\n            const selected = f.key === filter;\r\n            return (\r\n              <TouchableOpacity\r\n                key={f.key}\r\n                onPress={() => setFilter(f.key)}\r\n                activeOpacity={0.85}\r\n                style={{\r\n                  paddingHorizontal: spacing(2),\r\n                  paddingVertical: spacing(1),\r\n                  borderRadius: 999,\r\n                  borderWidth: 1,\r\n                  borderColor: selected ? palette.primary : palette.border,\r\n                  backgroundColor: selected ? '#d9f2ed' : palette.surface,\r\n                }}\r\n              >\r\n                <Text style={{ color: selected ? palette.primaryStrong : palette.muted, fontWeight:'600', fontSize: typography.small }}>{f.label}</Text>\r\n              </TouchableOpacity>\r\n            );\r\n          })}\r\n        </View>\r\n\r\n        {loading ? (\r\n          <SurfaceCard style={{ alignItems:'center', paddingVertical: spacing(6) }}>\r\n            <ActivityIndicator color={palette.primary} />\r\n            <Text style={{ color: palette.muted, marginTop: spacing(1.5) }}>Loading invoices...</Text>\r\n          </SurfaceCard>\r\n        ) : filteredInvoices.length === 0 ? (\r\n          <SurfaceCard>\r\n            <Text style={{ color: palette.muted }}>No invoices match this filter.</Text>\r\n          </SurfaceCard>\r\n        ) : (\r\n          filteredInvoices.map(inv => {\r\n            const payments = (inv.Payments || []).reduce((sum, p) => sum + Number(p.amount || 0), 0);\r\n            const amount = Number(inv.amount || 0);\r\n            const balance = Math.max(amount - payments, 0);\r\n            const statusKey = (inv.status || 'DRAFT').toUpperCase();\r\n            return (\r\n              <SurfaceCard key={inv.id}>\r\n                <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center' }}>\r\n                  <View>\r\n                    <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600' }}>Invoice #{inv.number || inv.id}</Text>\r\n                    <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>Issued {inv.issuedAt ? formatDate(inv.issuedAt) : 'TBD'}</Text>\r\n                  </View>\r\n                  <StatusPill status={statusKey} />\r\n                </View>\r\n                <View style={{ flexDirection:'row', justifyContent:'space-between', marginTop: spacing(1.5) }}>\r\n                  <View>\r\n                    <Text style={{ color: palette.muted, fontSize: typography.small }}>Amount</Text>\r\n                    <Text style={{ color: palette.text, fontWeight:'600' }}>{formatCurrency(amount)}</Text>\r\n                  </View>\r\n                  <View>\r\n                    <Text style={{ color: palette.muted, fontSize: typography.small }}>Collected</Text>\r\n                    <Text style={{ color: palette.text }}>{formatCurrency(payments)}</Text>\r\n                  </View>\r\n                  <View>\r\n                    <Text style={{ color: palette.muted, fontSize: typography.small }}>Balance</Text>\r\n                    <Text style={{ color: balance > 0 ? palette.primaryStrong : palette.muted, fontWeight:'600' }}>{formatCurrency(balance)}</Text>\r\n                  </View>\r\n                </View>\r\n                {inv.dueAt ? (\r\n                  <Text style={{ color: palette.muted, marginTop: spacing(1) }}>Due {formatDate(inv.dueAt)}</Text>\r\n                ) : null}\r\n                <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginTop: spacing(2) }}>\r\n                  {inv.jobId ? <QuickAction label=\"View job\" onPress={() => navigation.navigate('JobDetail', { jobId: inv.jobId })} tone=\"muted\" /> : null}\r\n                  <QuickAction label=\"Record payment\" tone=\"success\" onPress={() => Alert.alert('Coming soon', 'Payment logging will land shortly.')} />\r\n                  <QuickAction label=\"Delete\" tone=\"danger\" onPress={() => deleteInvoice(inv)} />\r\n                </View>\r\n              </SurfaceCard>\r\n            );\r\n          })\r\n        )}\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\nfunction JobsKanbanScreen({ navigation, route }){\n  const { token } = useAuth();\n  const [jobs, setJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [refreshing, setRefreshing] = useState(false);\n  const [newJobName, setNewJobName] = useState('');\n  const [newJobStartDate, setNewJobStartDate] = useState('');\r\n  const [newJobDueDate, setNewJobDueDate] = useState('');\r\n  const [newJobNotes, setNewJobNotes] = useState('');\r\n  const [newCustomerName, setNewCustomerName] = useState('');\r\n  const [newCustomerPhone, setNewCustomerPhone] = useState('');\r\n  const [newCustomerEmail, setNewCustomerEmail] = useState('');\r\n  const [newAddressLine1, setNewAddressLine1] = useState('');\r\n  const [newAddressLine2, setNewAddressLine2] = useState('');\r\n  const [newCity, setNewCity] = useState('');\r\n  const [newStateCode, setNewStateCode] = useState('');\r\n  const [newZip, setNewZip] = useState('');\r\n  const [jobFormTab, setJobFormTab] = useState('BASICS');\r\n  const statusOrder = ['SCHEDULED','IN_PROGRESS','ON_HOLD','DONE','COMPLETE','CANCELLED'];\r\n\r\n  const load = useCallback(async (isRefresh = false) => {\r\n    isRefresh ? setRefreshing(true) : setLoading(true);\r\n    try {\r\n      const data = await api('/jobs','GET',null,token);\r\n      setJobs(data);\r\n      db.transaction(tx => {\r\n        tx.executeSql && tx.executeSql('DELETE FROM jobs_cache;');\r\n        data.forEach(j => tx.executeSql && tx.executeSql(\r\n          'INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)',\r\n          [j.id, j.name||'', j.status||'SCHEDULED', j.startDate||'', j.endDate||'', j.notes||'']\r\n        ));\r\n      });\r\n    } catch(e) {\r\n      db.transaction(tx =>\r\n        tx.executeSql && tx.executeSql(\r\n          'SELECT id, name, status, startDate, endDate, notes FROM jobs_cache',\r\n          [],\r\n          (_, { rows }) => setJobs(rows._array || [])\r\n        )\r\n      );\r\n    } finally {\r\n      isRefresh ? setRefreshing(false) : setLoading(false);\r\n    }\r\n  }, [token]);\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      load(false);\r\n    }, [load])\r\n  );\r\n\r\n  const onRefresh = useCallback(() => load(true), [load]);\r\n\r\n  const resetForm = () => {\r\n    setNewJobName('');\r\n    setNewJobStartDate('');\r\n    setNewJobDueDate('');\r\n    setNewJobNotes('');\r\n    setNewCustomerName('');\r\n    setNewCustomerPhone('');\r\n    setNewCustomerEmail('');\r\n    setNewAddressLine1('');\r\n    setNewAddressLine2('');\r\n    setNewCity('');\r\n    setNewStateCode('');\r\n    setNewZip('');\r\n    setJobFormTab('BASICS');\r\n  };\r\n\r\n  const createJob = async () => {\r\n    if(!newJobName.trim()){\r\n      Alert.alert('Missing info', 'Please add a job name.');\r\n      setJobFormTab('BASICS');\r\n      return;\r\n    }\r\n    const hasCustomer = [newCustomerName, newCustomerPhone, newCustomerEmail].some(v => v && v.trim());\r\n    const hasAddress = [newAddressLine1, newCity, newStateCode, newZip].some(v => v && v.trim());\r\n    const payload = {\r\n      name: newJobName.trim(),\r\n      status: 'SCHEDULED',\r\n      startDate: newJobStartDate || null,\r\n      endDate: newJobDueDate || null,\r\n      notes: newJobNotes.trim() || null,\r\n    };\r\n    if (hasCustomer) {\r\n      payload.customer = {\r\n        name: newCustomerName.trim(),\r\n        phone: newCustomerPhone.trim(),\r\n        email: newCustomerEmail.trim(),\r\n        billingAddress: newAddressLine1\r\n          ? `${newAddressLine1}${newAddressLine2 ? `\r\n${newAddressLine2}` : ''}${newCity ? `\r\n${newCity}, ${newStateCode} ${newZip}` : ''}`\r\n          : null,\r\n      };\r\n    }\r\n    if (hasAddress) {\r\n      payload.jobsite = {\r\n        addressLine1: newAddressLine1.trim(),\r\n        addressLine2: newAddressLine2.trim(),\r\n        city: newCity.trim(),\r\n        state: newStateCode.trim(),\r\n        zip: newZip.trim(),\r\n      };\r\n    }\r\n    try {\r\n      const created = await api('/jobs','POST', payload, token);\r\n      setJobs(prev => [created, ...prev]);\r\n      db.transaction(tx =>\r\n        tx.executeSql && tx.executeSql(\r\n          'INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)',\r\n          [created.id, created.name||'', created.status||'SCHEDULED', created.startDate||'', created.endDate||'', created.notes||'']\r\n        )\r\n      );\r\n      resetForm();\r\n      Alert.alert('Job created', `Job #${created.id} ready to schedule.`);\r\n    } catch(e) {\r\n      Alert.alert('Error', e.message || 'Unable to create job');\r\n    }\r\n  };\r\n\r\n  const updateJobStatus = async (id, status) => {\r\n    try {\r\n      const updated = await api(`/jobs/${id}`,'PATCH',{ status }, token);\r\n      setJobs(prev => prev.map(job => job.id === id ? updated : job));\r\n    } catch(e) {\r\n      Alert.alert('Error', e.message || 'Unable to update job status');\r\n    }\r\n  };\r\n\r\n  const removeJob = async (id) => {\r\n    Alert.alert('Delete Job', `Delete job #${id}?`, [\r\n      { text:'Cancel', style:'cancel' },\r\n      { text:'Delete', style:'destructive', onPress: async () => {\r\n        try {\r\n          await api(`/jobs/${id}`,'DELETE',null,token);\r\n          setJobs(prev => prev.filter(job => job.id !== id));\r\n          db.transaction(tx => tx.executeSql && tx.executeSql('DELETE FROM jobs_cache WHERE id=?', [id]));\r\n        } catch(e) {\r\n          Alert.alert('Error', e.message || 'Unable to delete job');\r\n        }\r\n      } }\r\n    ]);\r\n  };\r\n\r\n  const sortedJobs = useMemo(() => {\r\n    const normalize = (status) => (status || 'SCHEDULED').toUpperCase();\r\n    const rank = (status) => {\r\n      const key = normalize(status);\r\n      const idx = statusOrder.indexOf(key);\r\n      return idx === -1 ? statusOrder.length : idx;\r\n    };\r\n    const parseDateSafe = (value) => {\r\n      if (!value) return null;\r\n      const d = new Date(value);\r\n      return Number.isNaN(d.getTime()) ? null : d;\r\n    };\r\n    return [...jobs].sort((a, b) => {\r\n      const statusDiff = rank(a.status) - rank(b.status);\r\n      if (statusDiff !== 0) return statusDiff;\r\n      const startA = parseDateSafe(a.startDate);\r\n      const startB = parseDateSafe(b.startDate);\r\n      if (startA && startB) return startA - startB;\r\n      if (startA) return -1;\r\n      if (startB) return 1;\r\n      return (b.id || 0) - (a.id || 0);\r\n    });\r\n  }, [jobs, statusOrder]);\r\n\r\n  const groupedJobs = useMemo(() => {\r\n    const groups = [];\r\n    let currentStatus = null;\r\n    sortedJobs.forEach(job => {\r\n      const statusKey = (job.status || 'SCHEDULED').toUpperCase();\r\n      if (statusKey !== currentStatus) {\r\n        groups.push({ status: statusKey, jobs: [job] });\r\n        currentStatus = statusKey;\r\n      } else {\r\n        groups[groups.length - 1].jobs.push(job);\r\n      }\r\n    });\r\n    return groups;\r\n  }, [sortedJobs]);\r\n\r\n  const statusLabel = (status) => {\r\n    const key = (status || 'SCHEDULED').toUpperCase();\r\n    return pillTone[key]?.label || key.charAt(0) + key.slice(1).toLowerCase();\r\n  };\r\n\r\n  const quickStatusActions = [\r\n    { label:'Start job', value:'IN_PROGRESS', tone:'primary' },\r\n    { label:'Pause', value:'ON_HOLD', tone:'warning' },\r\n    { label:'Wrap up', value:'DONE', tone:'success' },\r\n  ];\r\n\r\n  const inputStyle = {\r\n    borderWidth: 1,\r\n    borderColor: palette.border,\r\n    borderRadius: 12,\r\n    paddingHorizontal: spacing(1.5),\r\n    paddingVertical: spacing(1.25),\r\n    backgroundColor: palette.surfaceMuted,\r\n    color: palette.text,\r\n    fontSize: typography.body,\r\n    marginBottom: spacing(1.5),\r\n  };\r\n\r\n  const jobTabs = [\r\n    { key:'BASICS', label:'Basics' },\r\n    { key:'CUSTOMER', label:'Customer' },\r\n    { key:'JOBSITE', label:'Jobsite' },\r\n    { key:'NOTES', label:'Notes' },\r\n  ];\r\n\r\n  const renderJobFormFields = () => {\r\n    if (jobFormTab === 'BASICS') {\r\n      return (\r\n        <View>\r\n          <TextInput\r\n            placeholder=\"Job name\"\r\n            placeholderTextColor={palette.muted}\r\n            value={newJobName}\r\n            onChangeText={setNewJobName}\r\n            style={inputStyle}\r\n          />\r\n          <DateInputField\r\n            value={newJobStartDate}\r\n            onChange={setNewJobStartDate}\r\n            placeholder=\"Start date\"\r\n          />\r\n          <DateInputField\r\n            value={newJobDueDate}\r\n            onChange={setNewJobDueDate}\r\n            placeholder=\"Due date\"\r\n          />\r\n        </View>\r\n      );\r\n    }\r\n    if (jobFormTab === 'CUSTOMER') {\r\n      return (\r\n        <View>\r\n          <TextInput\r\n            placeholder=\"Customer name\"\r\n            placeholderTextColor={palette.muted}\r\n            value={newCustomerName}\r\n            onChangeText={setNewCustomerName}\r\n            style={inputStyle}\r\n          />\r\n          <TextInput\r\n            placeholder=\"Phone\"\r\n            placeholderTextColor={palette.muted}\r\n            keyboardType=\"phone-pad\"\r\n            value={newCustomerPhone}\r\n            onChangeText={setNewCustomerPhone}\r\n            style={inputStyle}\r\n          />\r\n          <TextInput\r\n            placeholder=\"Email\"\r\n            placeholderTextColor={palette.muted}\r\n            keyboardType=\"email-address\"\r\n            autoCapitalize=\"none\"\r\n            value={newCustomerEmail}\r\n            onChangeText={setNewCustomerEmail}\r\n            style={inputStyle}\r\n          />\r\n        </View>\r\n      );\r\n    }\r\n    if (jobFormTab === 'JOBSITE') {\r\n      return (\r\n        <View>\r\n          <TextInput\r\n            placeholder=\"Address line 1\"\r\n            placeholderTextColor={palette.muted}\r\n            value={newAddressLine1}\r\n            onChangeText={setNewAddressLine1}\r\n            style={inputStyle}\r\n          />\r\n          <TextInput\r\n            placeholder=\"Address line 2\"\r\n            placeholderTextColor={palette.muted}\r\n            value={newAddressLine2}\r\n            onChangeText={setNewAddressLine2}\r\n            style={inputStyle}\r\n          />\r\n          <View style={{ flexDirection:'row', columnGap: spacing(1.5) }}>\r\n            <View style={{ flex:1 }}>\r\n              <TextInput\r\n                placeholder=\"City\"\r\n                placeholderTextColor={palette.muted}\r\n                value={newCity}\r\n                onChangeText={setNewCity}\r\n                style={[inputStyle, { marginBottom: 0 }]}\r\n              />\r\n            </View>\r\n            <View style={{ width: 80 }}>\r\n              <TextInput\r\n                placeholder=\"State\"\r\n                placeholderTextColor={palette.muted}\r\n                value={newStateCode}\r\n                onChangeText={setNewStateCode}\r\n                style={[inputStyle, { marginBottom: 0 }]}\r\n              />\r\n            </View>\r\n            <View style={{ width: 100 }}>\r\n              <TextInput\r\n                placeholder=\"ZIP\"\r\n                placeholderTextColor={palette.muted}\r\n                value={newZip}\r\n                onChangeText={setNewZip}\r\n                style={[inputStyle, { marginBottom: 0 }]}\r\n              />\r\n            </View>\r\n          </View>\r\n        </View>\r\n      );\r\n    }\r\n    return (\r\n      <TextInput\r\n        placeholder=\"Internal notes\"\r\n        placeholderTextColor={palette.muted}\r\n        value={newJobNotes}\r\n        onChangeText={setNewJobNotes}\r\n        multiline\r\n        style={[inputStyle, { minHeight: 96, textAlignVertical: 'top' }]}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\r\n      <ScrollView\r\n        contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(4) }}\r\n        refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} tintColor={palette.primary} />}\r\n      >\r\n        <SurfaceCard style={{ marginBottom: spacing(3), padding: spacing(2.5) }}>\r\n          <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700', marginBottom: spacing(2) }}>Create job</Text>\r\n          <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1.5), marginBottom: spacing(2) }}>\r\n            {jobTabs.map(tab => {\r\n              const selected = tab.key === jobFormTab;\r\n              return (\r\n                <TouchableOpacity\r\n                  key={tab.key}\r\n                  onPress={() => setJobFormTab(tab.key)}\r\n                  activeOpacity={0.85}\r\n                  style={{\r\n                    paddingHorizontal: spacing(2),\r\n                    paddingVertical: spacing(1),\r\n                    borderRadius: 999,\r\n                    borderWidth: 1,\r\n                    borderColor: selected ? palette.primary : palette.border,\r\n                    backgroundColor: selected ? '#d9f2ed' : palette.surface,\r\n                  }}\r\n                >\r\n                  <Text style={{ color: selected ? palette.primaryStrong : palette.muted, fontWeight:'600', fontSize: typography.small }}>\r\n                    {tab.label}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              );\r\n            })}\r\n          </View>\r\n          {renderJobFormFields()}\r\n          <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center', marginTop: spacing(2) }}>\r\n            <QuickAction label=\"Reset\" tone=\"muted\" onPress={resetForm} />\r\n            <TouchableOpacity\r\n              onPress={createJob}\r\n              activeOpacity={0.85}\r\n              style={{ backgroundColor: palette.primary, paddingHorizontal: spacing(2.5), paddingVertical: spacing(1.5), borderRadius: 12 }}\r\n            >\r\n              <Text style={{ color:'#fff', fontWeight:'700' }}>Create job</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </SurfaceCard>\r\n\r\n        {loading && !refreshing && jobs.length === 0 ? (\r\n          <SurfaceCard style={{ alignItems:'center', paddingVertical: spacing(6), marginBottom: spacing(3) }}>\r\n            <ActivityIndicator color={palette.primary} />\r\n            <Text style={{ color: palette.muted, marginTop: spacing(1.5) }}>Loading jobs...</Text>\r\n          </SurfaceCard>\r\n        ) : null}\r\n\r\n        {groupedJobs.length === 0 ? (\r\n          <SurfaceCard>\r\n            <Text style={{ color: palette.muted }}>No jobs yet. Convert a lead or add a job to get started.</Text>\r\n          </SurfaceCard>\r\n        ) : (\r\n          groupedJobs.map(group => (\r\n            <View key={group.status} style={{ marginBottom: spacing(3) }}>\r\n              <Text style={{ color: palette.muted, fontWeight:'700', fontSize: typography.small, textTransform:'uppercase', marginBottom: spacing(1) }}>\r\n                {statusLabel(group.status)}\r\n              </Text>\r\n              {group.jobs.map(job => {\r\n                const customer = job.Customer || {};\r\n                const jobsite = job.Jobsite || {};\r\n                const addressParts = [\r\n                  jobsite.addressLine1,\r\n                  jobsite.addressLine2,\r\n                  [jobsite.city, jobsite.state].filter(Boolean).join(', '),\r\n                  jobsite.zip\r\n                ].filter(Boolean);\r\n                const address = addressParts.join(', ');\r\n                const statusKey = (job.status || 'SCHEDULED').toUpperCase();\r\n                return (\r\n                  <SurfaceCard key={job.id} style={{ marginBottom: spacing(1.5) }}>\r\n                    <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center' }}>\r\n                      <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600' }}>{job.name || `Job #${job.id}`}</Text>\r\n                      <StatusPill status={statusKey} />\r\n                    </View>\r\n                    {(job.startDate || job.endDate) ? (\r\n                      <Text style={{ color: palette.muted, marginTop: spacing(0.75) }}>\r\n                        {[job.startDate ? `Start ${formatDate(job.startDate)}` : null, job.endDate ? `Due ${formatDate(job.endDate)}` : null].filter(Boolean).join(' | ')}\r\n                      </Text>\r\n                    ) : null}\r\n                    {customer.name ? <Text style={{ color: palette.text, fontWeight:'600', marginTop: spacing(1) }}>{customer.name}</Text> : null}\r\n                    {customer.phone ? <Text style={{ color: palette.muted }}>{customer.phone}</Text> : null}\r\n                    {customer.email ? <Text style={{ color: palette.muted }}>{customer.email}</Text> : null}\r\n                    {address ? <Text style={{ color: palette.muted, marginTop: spacing(1) }}>{address}</Text> : null}\r\n                    {job.notes ? <Text style={{ color: palette.muted, marginTop: spacing(1) }} numberOfLines={3}>{job.notes}</Text> : null}\r\n                    <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginTop: spacing(2) }}>\r\n                      <QuickAction label=\"View job\" onPress={() => navigation.navigate('JobDetail', { jobId: job.id })} tone=\"muted\" />\r\n                      {quickStatusActions.map(action => (\r\n                        action.value === statusKey ? null : (\r\n                          <QuickAction\r\n                            key={action.value}\r\n                            label={action.label}\r\n                            tone={action.tone}\r\n                            onPress={() => updateJobStatus(job.id, action.value)}\r\n                          />\r\n                        )\r\n                      ))}\r\n                      <QuickAction label=\"Delete\" tone=\"danger\" onPress={() => removeJob(job.id)} />\r\n                    </View>\r\n                  </SurfaceCard>\r\n                );\r\n              })}\r\n            </View>\r\n          ))\r\n        )}\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\nfunction JobDetailScreen({ route, navigation }){\r\n  const { jobId } = route.params;\r\n  const { token, user } = useAuth();\r\n  const [jobName, setJobName] = useState('');\r\n  const [jobStartDate, setJobStartDate] = useState('');\r\n  const [jobEndDate, setJobEndDate] = useState('');\r\n  const [jobNotes, setJobNotes] = useState('');\r\n  const [jobCustomerName, setJobCustomerName] = useState('');\r\n  const [jobCustomerPhone, setJobCustomerPhone] = useState('');\r\n  const [jobCustomerEmail, setJobCustomerEmail] = useState('');\r\n  const [jobAddressLine1, setJobAddressLine1] = useState('');\r\n  const [jobAddressLine2, setJobAddressLine2] = useState('');\r\n  const [jobCity, setJobCity] = useState('');\r\n  const [jobStateCode, setJobStateCode] = useState('');\r\n  const [jobZip, setJobZip] = useState('');\r\n  const [changeOrders, setCO] = useState([]);\r\n  const [title, setTitle] = useState('');\r\n  const [amountDelta, setAmountDelta] = useState('0');\r\n  const roleKey = normalizeRole(user?.role);\r\n  const canManageChangeOrders = ['ADMIN','SUPERVISOR','ESTIMATOR'].includes(roleKey);\r\n  const loadCO = useCallback(async () => {\r\n    setCO(await api(`/change-orders/job/${jobId}`,'GET',null,token));\r\n  }, [jobId, token]);\r\n  const loadJob = useCallback(async () => {\r\n    try {\r\n      const j = await api(`/jobs/${jobId}`,'GET',null,token);\r\n      setJobName(j.name||'');\r\n      setJobStartDate(j.startDate||'');\r\n      setJobEndDate(j.endDate||'');\r\n      setJobNotes(j.notes||'');\r\n      const customer = j.Customer || {};\r\n      const jobsite = j.Jobsite || {};\r\n      setJobCustomerName(customer.name || '');\r\n      setJobCustomerPhone(customer.phone || '');\r\n      setJobCustomerEmail(customer.email || '');\r\n      setJobAddressLine1(jobsite.addressLine1 || '');\r\n      setJobAddressLine2(jobsite.addressLine2 || '');\r\n      setJobCity(jobsite.city || '');\r\n      setJobStateCode(jobsite.state || '');\r\n      setJobZip(jobsite.zip || '');\r\n    } catch(e) { }\r\n  }, [jobId, token]);\r\n  useEffect(()=>{ loadJob(); loadCO(); },[loadJob, loadCO]);\r\n  const addCO = async ()=>{\r\n    if(!title.trim()){\r\n      Alert.alert('Missing info', 'Add a title for the change order.');\r\n      return;\r\n    }\r\n    await api(`/change-orders/job/${jobId}`,'POST',{ title: title.trim(), amountDelta: parseFloat(amountDelta) || 0 }, token);\r\n    setTitle(''); setAmountDelta('0'); loadCO();\r\n  };\r\n  const saveJobDetails = async () => {\r\n    try {\r\n      await api(`/jobs/${jobId}`,'PATCH',{\r\n        name: jobName,\r\n        startDate: jobStartDate || null,\r\n        endDate: jobEndDate || null,\r\n        notes: jobNotes,\r\n        customer: {\r\n          name: jobCustomerName,\r\n          phone: jobCustomerPhone,\r\n          email: jobCustomerEmail,\r\n          billingAddress: jobAddressLine1 ? `${jobAddressLine1}${jobAddressLine2 ? `\r\n${jobAddressLine2}` : ''}${jobCity ? `\r\n${jobCity}, ${jobStateCode} ${jobZip}` : ''}` : null,\r\n        },\r\n        jobsite: {\r\n          addressLine1: jobAddressLine1,\r\n          addressLine2: jobAddressLine2,\r\n          city: jobCity,\r\n          state: jobStateCode,\r\n          zip: jobZip,\r\n        },\r\n      }, token);\r\n      Alert.alert('Saved', 'Job details updated.');\r\n      loadJob();\r\n    } catch(e) {\r\n      Alert.alert('Error', e.message || 'Unable to save job');\r\n    }\r\n  };\r\n  const deleteJob = () => {\r\n    Alert.alert('Delete job', `Delete job #${jobId}?`, [\r\n      { text:'Cancel', style:'cancel' },\r\n      { text:'Delete', style:'destructive', onPress: async ()=>{\r\n        try{\r\n          await api(`/jobs/${jobId}`,'DELETE',null,token);\r\n          db.transaction(tx => tx.executeSql('DELETE FROM jobs_cache WHERE id=?', [jobId]));\r\n          Alert.alert('Deleted', 'Job removed.');\r\n          navigation.navigate('Tabs', { screen:'Jobs' });\r\n        }catch(e){\r\n          Alert.alert('Error', e.message || 'Unable to delete job');\r\n        }\r\n      }}\r\n    ]);\r\n  };\r\n  return (\r\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\r\n      <ScrollView\r\n        contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(6) }}\r\n      >\r\n        <Text style={{ color: palette.text, fontSize: typography.h1, fontWeight:'700' }}>Job #{jobId}</Text>\r\n        <Text style={{ color: palette.muted, marginTop: spacing(0.5), marginBottom: spacing(3) }}>\r\n          Keep job information up to date so the field team always has the latest context.\r\n        </Text>\r\n\r\n        <SurfaceCard style={{ padding: spacing(2.5), marginBottom: spacing(3) }}>\r\n          <Text style={{ color: palette.muted, fontSize: typography.small, fontWeight:'700', textTransform:'uppercase', marginBottom: spacing(1) }}>\r\n            Basics\r\n          </Text>\r\n          <FormInput placeholder=\"Job name\" value={jobName} onChangeText={setJobName} />\r\n          <View style={{ flexDirection:'row', columnGap: spacing(1.5) }}>\r\n            <View style={{ flex:1 }}>\r\n              <DateInputField value={jobStartDate} onChange={setJobStartDate} placeholder=\"Start date\" style={{ marginBottom: 0 }} />\r\n            </View>\r\n            <View style={{ flex:1 }}>\r\n              <DateInputField value={jobEndDate} onChange={setJobEndDate} placeholder=\"End date\" style={{ marginBottom: 0 }} />\r\n            </View>\r\n          </View>\r\n          <FormInput\r\n            placeholder=\"Notes / scope\"\r\n            value={jobNotes}\r\n            onChangeText={setJobNotes}\r\n            multiline\r\n            style={{ minHeight: 112, textAlignVertical: 'top' }}\r\n          />\r\n          <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center', marginTop: spacing(2) }}>\r\n            <QuickAction label=\"Delete job\" tone=\"danger\" onPress={deleteJob} />\r\n            <TouchableOpacity\r\n              onPress={saveJobDetails}\r\n              activeOpacity={0.85}\r\n              style={{ backgroundColor: palette.primary, paddingHorizontal: spacing(2.5), paddingVertical: spacing(1.5), borderRadius: 12 }}\r\n            >\r\n              <Text style={{ color:'#fff', fontWeight:'700' }}>Save changes</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </SurfaceCard>\r\n\r\n        <SurfaceCard style={{ padding: spacing(2.5), marginBottom: spacing(3) }}>\r\n          <Text style={{ color: palette.muted, fontSize: typography.small, fontWeight:'700', textTransform:'uppercase', marginBottom: spacing(1) }}>\r\n            Customer\r\n          </Text>\r\n          <FormInput placeholder=\"Name\" value={jobCustomerName} onChangeText={setJobCustomerName} />\r\n          <FormInput placeholder=\"Phone\" value={jobCustomerPhone} onChangeText={setJobCustomerPhone} keyboardType=\"phone-pad\" />\r\n          <FormInput\r\n            placeholder=\"Email\"\r\n            value={jobCustomerEmail}\r\n            onChangeText={setJobCustomerEmail}\r\n            keyboardType=\"email-address\"\r\n            autoCapitalize=\"none\"\r\n          />\r\n        </SurfaceCard>\r\n\r\n        <SurfaceCard style={{ padding: spacing(2.5), marginBottom: spacing(3) }}>\r\n          <Text style={{ color: palette.muted, fontSize: typography.small, fontWeight:'700', textTransform:'uppercase', marginBottom: spacing(1) }}>\r\n            Jobsite\r\n          </Text>\r\n          <FormInput placeholder=\"Address line 1\" value={jobAddressLine1} onChangeText={setJobAddressLine1} />\r\n          <FormInput placeholder=\"Address line 2\" value={jobAddressLine2} onChangeText={setJobAddressLine2} />\r\n          <View style={{ flexDirection:'row', columnGap: spacing(1.5) }}>\r\n            <FormInput placeholder=\"City\" value={jobCity} onChangeText={setJobCity} style={{ flex:1, marginBottom: 0 }} />\r\n            <FormInput\r\n              placeholder=\"State\"\r\n              value={jobStateCode}\r\n              onChangeText={setJobStateCode}\r\n              autoCapitalize=\"characters\"\r\n              style={{ width: 96, marginBottom: 0 }}\r\n            />\r\n            <FormInput\r\n              placeholder=\"ZIP\"\r\n              value={jobZip}\r\n              onChangeText={setJobZip}\r\n              keyboardType=\"numeric\"\r\n              style={{ width: 112, marginBottom: 0 }}\r\n            />\r\n          </View>\r\n        </SurfaceCard>\r\n\r\n        {canManageChangeOrders ? (\r\n          <SurfaceCard style={{ padding: spacing(2.5), marginBottom: spacing(3) }}>\r\n            <Text style={{ color: palette.muted, fontSize: typography.small, fontWeight:'700', textTransform:'uppercase', marginBottom: spacing(1) }}>\r\n              New change order\r\n            </Text>\r\n            <FormInput placeholder=\"Title\" value={title} onChangeText={setTitle} />\r\n            <FormInput placeholder=\"Amount $\" value={amountDelta} onChangeText={setAmountDelta} keyboardType=\"decimal-pad\" />\r\n            <View style={{ flexDirection:'row', justifyContent:'flex-end', marginTop: spacing(2) }}>\r\n              <TouchableOpacity\r\n                onPress={addCO}\r\n                activeOpacity={0.85}\r\n                style={{ backgroundColor: palette.primary, paddingHorizontal: spacing(2.5), paddingVertical: spacing(1.5), borderRadius: 12 }}\r\n              >\r\n                <Text style={{ color:'#fff', fontWeight:'700' }}>Add change order</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </SurfaceCard>\r\n        ) : null}\r\n\r\n        <View style={{ marginBottom: spacing(3) }}>\r\n          <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700', marginBottom: spacing(1.5) }}>Change orders</Text>\r\n          {changeOrders.length === 0 ? (\r\n            <SurfaceCard>\r\n              <Text style={{ color: palette.muted }}>No change orders yet.</Text>\r\n            </SurfaceCard>\r\n          ) : changeOrders.map(item => {\r\n            const statusKey = (item.status || 'PENDING').toUpperCase();\r\n            const statusTone = (() => {\r\n              if (statusKey === 'APPROVED') return { bg: '#dcfce7', fg: palette.success, label: 'Approved' };\r\n              if (statusKey === 'REJECTED') return { bg: '#fee2e2', fg: palette.danger, label: 'Rejected' };\r\n              return { bg: '#e0f3f0', fg: palette.primaryStrong, label: 'Pending' };\r\n            })();\r\n            const amountLabel = formatCurrency(item.amountDelta || 0);\r\n            return (\r\n              <SurfaceCard key={item.id} style={{ marginBottom: spacing(1.5), padding: spacing(2.5) }}>\r\n                <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center' }}>\r\n                  <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600' }}>{item.title}</Text>\r\n                  <View style={{ backgroundColor: statusTone.bg, borderRadius: 999, paddingHorizontal: spacing(1.5), paddingVertical: spacing(0.5) }}>\r\n                    <Text style={{ color: statusTone.fg, fontWeight:'600', fontSize: typography.small }}>{statusTone.label}</Text>\r\n                  </View>\r\n                </View>\r\n                <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>{amountLabel}</Text>\r\n                {canManageChangeOrders ? (\r\n                  <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginTop: spacing(1.5) }}>\r\n                    <QuickAction\r\n                      label=\"Approve\"\r\n                      tone=\"success\"\r\n                      onPress={async ()=>{ await api(`/change-orders/${item.id}`,'PATCH',{ status:'APPROVED' }, token); loadCO(); }}\r\n                    />\r\n                    <QuickAction\r\n                      label=\"Reject\"\r\n                      tone=\"danger\"\r\n                      onPress={async ()=>{ await api(`/change-orders/${item.id}`,'PATCH',{ status:'REJECTED' }, token); loadCO(); }}\r\n                    />\r\n                  </View>\r\n                ) : null}\r\n              </SurfaceCard>\r\n            );\r\n          })}\r\n        </View>\r\n\r\n        <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700', marginBottom: spacing(1.5) }}>Tasks</Text>\r\n        <JobTasks jobId={jobId} />\r\n\r\n        <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700', marginTop: spacing(3), marginBottom: spacing(1.5) }}>Schedule</Text>\r\n        <JobSchedule jobId={jobId} />\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nfunction JobTasks({ jobId }){\r\n  const { token } = useAuth();\r\n  const [tasks, setTasks] = useState([]);\r\n  const [title, setTitle] = useState('');\r\n  const [dueDate, setDueDate] = useState('');\r\n  const load = async()=> {\r\n    try {\r\n      const data = await api(`/tasks?jobId=${jobId}`,'GET',null,token);\r\n      setTasks(data);\r\n      db.transaction(tx => {\r\n        tx.executeSql('DELETE FROM tasks_cache WHERE jobId=?', [jobId]);\r\n        data.forEach(t => tx.executeSql('INSERT OR REPLACE INTO tasks_cache (id, jobId, title, status, dueDate) VALUES (?,?,?,?,?)', [t.id, jobId, t.title||'', t.status||'TODO', t.dueDate||'']));\r\n      });\r\n    } catch(e) {\r\n      db.transaction(tx => tx.executeSql('SELECT id, jobId, title, status, dueDate FROM tasks_cache WHERE jobId=?', [jobId], (_, { rows }) => setTasks(rows._array || [])));\r\n    }\r\n  };\r\n  useEffect(()=>{ load(); },[]);\r\n  const add = async()=>{\r\n    if(!title.trim()) return Alert.alert('Title required');\r\n    await api('/tasks','POST',{ title, jobId, dueDate }, token);\r\n    setTitle(''); setDueDate(''); load();\r\n  };\r\n  const done = async(id)=>{ await api(`/tasks/${id}`,'PATCH',{ status:'DONE' }, token); load(); };\r\n  const remove = (id)=>{\r\n    Alert.alert('Delete task', 'Remove this task?', [\r\n      { text:'Cancel', style:'cancel' },\r\n      { text:'Delete', style:'destructive', onPress: async ()=>{ await api(`/tasks/${id}`,'DELETE',null,token); load(); } },\r\n    ]);\r\n  };\r\n  return (\r\n    <View>\r\n      <SurfaceCard style={{ marginBottom: spacing(2) }}>\r\n        <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600', marginBottom: spacing(1.5) }}>Add task</Text>\r\n        <TextInput\r\n          placeholder=\"Task title\"\r\n          placeholderTextColor={palette.muted}\r\n          value={title}\r\n          onChangeText={setTitle}\r\n          style={{\r\n            borderWidth:1,\r\n            borderColor: palette.border,\r\n            borderRadius: 12,\r\n            padding: spacing(2),\r\n            color: palette.text,\r\n            backgroundColor: palette.surfaceMuted,\r\n            marginBottom: spacing(1.5),\r\n          }}\r\n        />\r\n        <DateInputField value={dueDate} onChange={setDueDate} placeholder=\"Due date (optional)\" />\r\n        <QuickAction label=\"Add task\" onPress={add} />\r\n      </SurfaceCard>\r\n\r\n      {tasks.length === 0 ? (\r\n        <SurfaceCard>\r\n          <Text style={{ color: palette.muted }}>No tasks yet. Add one to start tracking progress.</Text>\r\n        </SurfaceCard>\r\n      ) : (\r\n        tasks.map(t => (\r\n          <SurfaceCard key={t.id} style={{ marginBottom: spacing(1.5) }}>\r\n            <Text style={{ color: palette.text, fontWeight:'600', fontSize: typography.h2 - 2 }}>{t.title}</Text>\r\n            <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>\r\n              Status: {t.status || 'TODO'}{t.dueDate ? ` - Due ${formatDate(t.dueDate)}` : ''}\r\n            </Text>\r\n            <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginTop: spacing(1.5) }}>\r\n              {!isTaskCompleted(t.status) ? (\r\n                <QuickAction label=\"Mark done\" tone=\"success\" onPress={() => done(t.id)} />\r\n              ) : null}\r\n              <QuickAction label=\"Delete\" tone=\"danger\" onPress={() => remove(t.id)} />\r\n            </View>\r\n          </SurfaceCard>\r\n        ))\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction JobSchedule({ jobId }){\r\n  const { token } = useAuth();\r\n  const [events, setEvents] = useState([]);\r\n  const [title, setTitle] = useState('');\r\n  const [startAt, setStartAt] = useState('');\r\n  const [endAt, setEndAt] = useState('');\r\n  const load = async()=> {\r\n    try {\r\n      const data = await api(`/calendar?jobId=${jobId}`,'GET',null,token);\r\n      setEvents(data);\r\n      db.transaction(tx => {\r\n        tx.executeSql('DELETE FROM calendar_cache WHERE jobId=?', [jobId]);\r\n        data.forEach(ev => tx.executeSql('INSERT OR REPLACE INTO calendar_cache (id, jobId, title, startAt, endAt) VALUES (?,?,?,?,?)', [ev.id, jobId, ev.title||'', ev.startAt||'', ev.endAt||'']));\r\n      });\r\n    } catch(e) {\r\n      db.transaction(tx => tx.executeSql('SELECT id, jobId, title, startAt, endAt FROM calendar_cache WHERE jobId=?', [jobId], (_, { rows }) => setEvents(rows._array || [])));\r\n    }\r\n  };\r\n  useEffect(()=>{ load(); },[]);\r\n  const add = async()=>{\r\n    if(!title.trim() || !startAt) return Alert.alert('Title and start time required');\r\n    await api('/calendar','POST',{ title, jobId, startAt, endAt }, token);\r\n    setTitle(''); setStartAt(''); setEndAt(''); load();\r\n  };\r\n  const remove = (id)=>{\r\n    Alert.alert('Delete event', 'Remove this schedule item?', [\r\n      { text:'Cancel', style:'cancel' },\r\n      { text:'Delete', style:'destructive', onPress: async ()=>{ await api(`/calendar/${id}`,'DELETE',null,token); load(); } },\r\n    ]);\r\n  };\r\n  return (\r\n    <View>\r\n      <SurfaceCard style={{ marginBottom: spacing(2) }}>\r\n        <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600', marginBottom: spacing(1.5) }}>Schedule event</Text>\r\n        <TextInput\r\n          placeholder=\"Event title\"\r\n          placeholderTextColor={palette.muted}\r\n          value={title}\r\n          onChangeText={setTitle}\r\n          style={{\r\n            borderWidth:1,\r\n            borderColor: palette.border,\r\n            borderRadius: 12,\r\n            padding: spacing(2),\r\n            color: palette.text,\r\n            backgroundColor: palette.surfaceMuted,\r\n            marginBottom: spacing(1.5),\r\n          }}\r\n        />\r\n        <DateInputField\r\n          value={startAt}\r\n          onChange={(date) => {\r\n            const existing = startAt || '';\r\n            const timePartIndex = existing.indexOf('T');\r\n            const timePart = timePartIndex > -1 ? existing.substring(timePartIndex) : 'T08:00:00';\r\n            setStartAt(`${date}${timePart}`);\r\n          }}\r\n          placeholder=\"Start date\"\r\n        />\r\n        <DateInputField\r\n          value={endAt}\r\n          onChange={(date) => {\r\n            if (!date) {\r\n              setEndAt('');\r\n              return;\r\n            }\r\n            const existing = endAt || '';\r\n            const timePartIndex = existing.indexOf('T');\r\n            const timePart = timePartIndex > -1 ? existing.substring(timePartIndex) : 'T17:00:00';\r\n            setEndAt(`${date}${timePart}`);\r\n          }}\r\n          placeholder=\"End date (optional)\"\r\n        />\r\n        <QuickAction label=\"Add event\" onPress={add} />\r\n      </SurfaceCard>\r\n\r\n      {events.length === 0 ? (\r\n        <SurfaceCard>\r\n          <Text style={{ color: palette.muted }}>No schedule entries yet.</Text>\r\n        </SurfaceCard>\r\n      ) : (\r\n        events.map(ev => {\r\n          const startLabel = ev.startAt ? `Starts ${formatDate(ev.startAt)}` : 'No start date';\r\n          const endLabel = ev.endAt ? ` - Ends ${formatDate(ev.endAt)}` : '';\r\n          return (\r\n            <SurfaceCard key={ev.id} style={{ marginBottom: spacing(1.5) }}>\r\n              <Text style={{ color: palette.text, fontWeight:'600', fontSize: typography.h2 - 2 }}>{ev.title}</Text>\r\n              <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>\r\n                {startLabel}{endLabel}\r\n              </Text>\r\n              <View style={{ flexDirection:'row', columnGap: spacing(1), marginTop: spacing(1.5) }}>\r\n                <QuickAction label=\"Delete\" tone=\"danger\" onPress={()=>remove(ev.id)} />\r\n              </View>\r\n            </SurfaceCard>\r\n          );\r\n        })\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n\r\n// ---------- Leads / Estimates (with photo queue) ----------\r\nasync function processQueue(token){\r\n  return new Promise(resolve => {\r\n    db.transaction(tx => {\r\n      tx.executeSql('SELECT * FROM queue', [], async (_, { rows }) => {\r\n        const items = rows._array || [];\r\n        for(const q of items){\r\n          try{\r\n            const payload = JSON.parse(q.payload);\r\n            if(q.type === 'createLead'){ await api('/leads', 'POST', payload, token); }\r\n            if(q.type === 'uploadPhoto'){ await api('/upload/image', 'POST', { dataUrl: payload.dataUrl }, token); }\r\n            db.transaction(txx => txx.executeSql('DELETE FROM queue WHERE id=?', [q.id]));\r\n          }catch(e){ /* keep for later */ }\r\n        }\r\n        resolve();\r\n      });\r\n    });\r\n  });\r\n}\r\n\r\nfunction LeadsScreen({ navigation }){\r\n  const { token } = useAuth();\r\n  const [leads, setLeads] = useState([]);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const fetchLeads = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n      const data = await api('/leads', 'GET', null, token);\r\n      setLeads(data);\r\n      db.transaction(tx => {\r\n        tx.executeSql && tx.executeSql('DELETE FROM leads_cache;');\r\n        data.forEach(l => tx.executeSql && tx.executeSql(\r\n          'INSERT OR REPLACE INTO leads_cache (id, description, status) VALUES (?,?,?)',\r\n          [l.id, l.description || '', l.status || 'NEW']\r\n        ));\r\n      });\r\n    } catch(e){\r\n      db.transaction(tx =>\r\n        tx.executeSql && tx.executeSql('SELECT id, description, status FROM leads_cache', [], (_, { rows }) => setLeads(rows._array || []))\r\n      );\r\n    }\r\n    finally {\r\n      setLoading(false);\r\n    }\r\n  }, [token]);\r\n\r\n  useFocusEffect(useCallback(() => {\r\n    fetchLeads();\r\n  }, [fetchLeads]));\r\n\r\n  const onRefresh = useCallback(async () => {\r\n    setRefreshing(true);\r\n    await fetchLeads();\r\n    setRefreshing(false);\r\n  }, [fetchLeads]);\r\n\r\n  const deleteLead = useCallback((lead) => {\r\n    const title = deriveLeadTitle(lead);\r\n    Alert.alert('Delete lead', `Remove \"${title}\"?`, [\r\n      { text:'Cancel', style:'cancel' },\r\n      { text:'Delete', style:'destructive', onPress: async () => {\r\n        try {\r\n          await api(`/leads/${lead.id}`,'DELETE',null,token);\r\n          setLeads(prev => prev.filter(l => l.id !== lead.id));\r\n          db.transaction(tx => tx.executeSql && tx.executeSql('DELETE FROM leads_cache WHERE id=?', [lead.id]));\r\n        } catch(err) {\r\n          Alert.alert('Error', err.message || 'Unable to delete lead');\r\n        }\r\n      }}\r\n    ]);\r\n  }, [token]);\r\n\r\n  const newLeadsCount = leads.filter(l => (l.status || '').toUpperCase() === 'NEW').length;\r\n\r\n  const renderLeadCard = (lead) => {\r\n    const customer = lead.Customer || {};\r\n    const title = deriveLeadTitle(lead);\r\n    const subtitle = customer.name && customer.name.trim() && customer.name.trim() !== title ? customer.name : null;\r\n    const jobsite = lead.Jobsite || {};\r\n    const addressParts = [\r\n      jobsite.addressLine1,\r\n      jobsite.addressLine2,\r\n      [jobsite.city, jobsite.state].filter(Boolean).join(', '),\r\n      jobsite.zip\r\n    ].filter(Boolean);\r\n    const address = addressParts.join(', ');\r\n    const statusKey = (lead.status || 'NEW').toUpperCase();\r\n    return (\r\n      <SurfaceCard key={lead.id}>\r\n        <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center' }}>\r\n          <View>\r\n            <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600' }}>{title}</Text>\r\n            {subtitle ? <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>{subtitle}</Text> : null}\r\n          </View>\r\n          <StatusPill status={statusKey} />\r\n        </View>\r\n        {customer.phone ? <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>{customer.phone}</Text> : null}\r\n        {customer.email ? <Text style={{ color: palette.muted }}>{customer.email}</Text> : null}\r\n        {address ? <Text style={{ color: palette.muted, marginTop: spacing(1) }}>{address}</Text> : null}\r\n        <Text numberOfLines={3} style={{ color: palette.text, marginTop: spacing(1.5) }}>{lead.description || 'No scope captured yet.'}</Text>\r\n        <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginTop: spacing(2) }}>\r\n          <QuickAction label=\"Open\" onPress={() => navigation.navigate('EstimateEditor', { leadId: lead.id })} />\r\n          <QuickAction label=\"Convert\" tone=\"success\" onPress={() => navigation.navigate('Jobs')} />\r\n          <QuickAction label=\"Delete\" tone=\"danger\" onPress={() => deleteLead(lead)} />\r\n        </View>\r\n      </SurfaceCard>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\r\n      <FlatList\r\n        data={leads}\r\n        keyExtractor={item => String(item.id)}\r\n        contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(4) }}\r\n        refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} tintColor={palette.primary} />}\r\n        ListHeaderComponent={\r\n          <View style={{ marginBottom: spacing(3) }}>\r\n            <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center', marginBottom: spacing(2) }}>\r\n              <View>\r\n                <Text style={{ color: palette.text, fontSize: typography.h1, fontWeight:'700' }}>Leads</Text>\r\n                <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>Keep the funnel moving</Text>\r\n              </View>\r\n              <QuickAction label=\"New lead\" onPress={() => navigation.navigate('NewLead')} />\r\n            </View>\r\n            <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(2), rowGap: spacing(2) }}>\r\n              <View style={{ flexBasis:'48%', minWidth: 160 }}>\r\n                <SummaryCard title=\"Total\" value={leads.length} subtitle={`${newLeadsCount} new`} tone=\"info\" />\r\n              </View>\r\n              <View style={{ flexBasis:'48%', minWidth: 160 }}>\r\n                <SummaryCard title=\"Outstanding\" value={newLeadsCount} subtitle=\"Require follow up\" tone=\"warning\" />\r\n              </View>\r\n            </View>\r\n          </View>\r\n        }\r\n        renderItem={({ item }) => renderLeadCard(item)}\r\n        ListEmptyComponent={\r\n          loading ? (\r\n            <SurfaceCard style={{ alignItems:'center', paddingVertical: spacing(4) }}>\r\n              <ActivityIndicator color={palette.primary} />\r\n              <Text style={{ color: palette.muted, marginTop: spacing(1) }}>Loading leads...</Text>\r\n            </SurfaceCard>\r\n          ) : (\r\n            <SurfaceCard>\r\n              <Text style={{ color: palette.muted }}>No leads yet. Capture a lead to get started.</Text>\r\n            </SurfaceCard>\r\n          )\r\n        }\r\n      />\r\n    </SafeAreaView>\r\n  );\r\n}\r\nfunction NewLeadScreen({ navigation }){\r\n  const { token } = useAuth();\r\n  const [description, setDescription] = useState('');\r\n  const [status, setStatus] = useState('NEW');\r\n  const [customerName, setCustomerName] = useState('');\r\n  const [customerPhone, setCustomerPhone] = useState('');\r\n  const [customerEmail, setCustomerEmail] = useState('');\r\n  const [addressLine1, setAddressLine1] = useState('');\r\n  const [addressLine2, setAddressLine2] = useState('');\r\n  const [city, setCity] = useState('');\r\n  const [stateCode, setStateCode] = useState('');\r\n  const [zip, setZip] = useState('');\r\n  const [showCustomerSection, setShowCustomerSection] = useState(false);\r\n  const [showJobsiteSection, setShowJobsiteSection] = useState(false);\r\n  const statuses = ['NEW','CONTACTED','ESTIMATING','CONVERTED','CLOSED_LOST'];\r\n\r\n  const buildPayload = () => {\r\n    const customer = [customerName, customerPhone, customerEmail].some(v => v && v.trim())\r\n      ? {\r\n          name: customerName.trim(),\r\n          phone: customerPhone.trim(),\r\n          email: customerEmail.trim(),\r\n        }\r\n      : null;\r\n    const jobsite = [addressLine1, addressLine2, city, stateCode, zip].some(v => v && v.trim())\r\n      ? {\r\n          addressLine1: addressLine1.trim(),\r\n          addressLine2: addressLine2.trim(),\r\n          city: city.trim(),\r\n          state: stateCode.trim(),\r\n          zip: zip.trim(),\r\n        }\r\n      : null;\r\n    return {\r\n      description,\r\n      status,\r\n      customer,\r\n      jobsite,\r\n    };\r\n  };\r\n\r\n  const createLeadOnline = async () => {\r\n    const payload = buildPayload();\r\n    const created = await api('/leads', 'POST', payload, token);\r\n    navigation.replace('EstimateEditor', { leadId: created.id });\r\n    const title = deriveLeadTitle(created);\r\n    Alert.alert('Lead created', `\"${title}\" is ready to estimate.`);\r\n  };\r\n\r\n  const queueLead = () => {\r\n    const payload = buildPayload();\r\n    db.transaction(tx => tx.executeSql('INSERT INTO queue (type, payload) VALUES (?,?)', ['createLead', JSON.stringify(payload)]));\r\n    Alert.alert('Saved offline', 'We will submit this lead when you reconnect.');\r\n    navigation.goBack();\r\n  };\r\n\r\n  const submit = async () => {\r\n    if(!description.trim()){\r\n      Alert.alert('Missing scope', 'Please describe the job or scope of work.');\r\n      return;\r\n    }\r\n    try {\r\n      await createLeadOnline();\r\n    } catch(e){\r\n      queueLead();\r\n    }\r\n  };\r\n\r\n  const chipStyle = (active) => ({\r\n    paddingHorizontal: spacing(2),\r\n    paddingVertical: spacing(1),\r\n    borderRadius: 999,\r\n    borderWidth: 1,\r\n    borderColor: active ? palette.primary : palette.border,\r\n    backgroundColor: active ? '#d9f2ed' : palette.surface,\r\n  });\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\r\n      <ScrollView contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(6) }}>\r\n        <SurfaceCard style={{ marginBottom: spacing(3) }}>\r\n          <Text style={{ color: palette.text, fontSize: typography.h1, fontWeight:'700', marginBottom: spacing(2) }}>New lead</Text>\r\n          <Text style={{ color: palette.muted, fontWeight:'600', marginBottom: spacing(1) }}>Scope</Text>\r\n          <TextInput\r\n            placeholder=\"Describe the job...\"\r\n            placeholderTextColor={palette.muted}\r\n            value={description}\r\n            onChangeText={setDescription}\r\n            multiline\r\n            style={{\r\n              borderWidth: 1,\r\n              borderColor: palette.border,\r\n              borderRadius: 12,\r\n              padding: spacing(2),\r\n              minHeight: 120,\r\n              color: palette.text,\r\n              backgroundColor: palette.surfaceMuted,\r\n              textAlignVertical: 'top',\r\n            }}\r\n          />\r\n          <Text style={{ color: palette.muted, fontWeight:'600', marginTop: spacing(2), marginBottom: spacing(1) }}>Status</Text>\r\n          <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1) }}>\r\n            {statuses.map(s => {\r\n              const active = status === s;\r\n              return (\r\n                <TouchableOpacity key={s} onPress={() => setStatus(s)} activeOpacity={0.85} style={chipStyle(active)}>\r\n                  <Text style={{ color: active ? palette.primaryStrong : palette.muted, fontWeight:'600', fontSize: typography.small }}>{s.replace('_',' ')}</Text>\r\n                </TouchableOpacity>\r\n              );\r\n            })}\r\n          </View>\r\n          <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center', marginTop: spacing(3) }}>\r\n            <QuickAction label=\"Save offline\" tone=\"muted\" onPress={queueLead} />\r\n            <TouchableOpacity\r\n              onPress={submit}\r\n              activeOpacity={0.85}\r\n              style={{ backgroundColor: palette.primary, paddingHorizontal: spacing(3), paddingVertical: spacing(1.5), borderRadius: 12 }}\r\n            >\r\n              <Text style={{ color:'#fff', fontWeight:'700' }}>Create lead</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </SurfaceCard>\r\n\r\n        <SurfaceCard style={{ marginBottom: spacing(3) }}>\r\n          <TouchableOpacity\r\n            onPress={() => setShowCustomerSection(v => !v)}\r\n            style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center' }}\r\n            activeOpacity={0.8}\r\n          >\r\n            <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600' }}>Customer details</Text>\r\n            <Text style={{ color: palette.primary, fontWeight:'600' }}>{showCustomerSection ? 'Hide' : 'Add'}</Text>\r\n          </TouchableOpacity>\r\n          {showCustomerSection ? (\r\n            <View style={{ marginTop: spacing(2) }}>\r\n              <TextInput\r\n                placeholder=\"Name\"\r\n                placeholderTextColor={palette.muted}\r\n                value={customerName}\r\n                onChangeText={setCustomerName}\r\n                style={{\r\n                  borderWidth: 1,\r\n                  borderColor: palette.border,\r\n                  borderRadius: 12,\r\n                  padding: spacing(2),\r\n                  color: palette.text,\r\n                  backgroundColor: palette.surfaceMuted,\r\n                  marginBottom: spacing(1.5),\r\n                }}\r\n              />\r\n              <TextInput\r\n                placeholder=\"Phone\"\r\n                placeholderTextColor={palette.muted}\r\n                keyboardType=\"phone-pad\"\r\n                value={customerPhone}\r\n                onChangeText={setCustomerPhone}\r\n                style={{\r\n                  borderWidth: 1,\r\n                  borderColor: palette.border,\r\n                  borderRadius: 12,\r\n                  padding: spacing(2),\r\n                  color: palette.text,\r\n                  backgroundColor: palette.surfaceMuted,\r\n                  marginBottom: spacing(1.5),\r\n                }}\r\n              />\r\n              <TextInput\r\n                placeholder=\"Email\"\r\n                placeholderTextColor={palette.muted}\r\n                keyboardType=\"email-address\"\r\n                autoCapitalize=\"none\"\r\n                value={customerEmail}\r\n                onChangeText={setCustomerEmail}\r\n                style={{\r\n                  borderWidth: 1,\r\n                  borderColor: palette.border,\r\n                  borderRadius: 12,\r\n                  padding: spacing(2),\r\n                  color: palette.text,\r\n                  backgroundColor: palette.surfaceMuted,\r\n                }}\r\n              />\r\n            </View>\r\n          ) : (\r\n            <Text style={{ color: palette.muted, marginTop: spacing(1.5) }}>Add contact details to help follow up faster.</Text>\r\n          )}\r\n        </SurfaceCard>\r\n\r\n        <SurfaceCard>\r\n          <TouchableOpacity\r\n            onPress={() => setShowJobsiteSection(v => !v)}\r\n            style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center' }}\r\n            activeOpacity={0.8}\r\n          >\r\n            <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600' }}>Jobsite address</Text>\r\n            <Text style={{ color: palette.primary, fontWeight:'600' }}>{showJobsiteSection ? 'Hide' : 'Add'}</Text>\r\n          </TouchableOpacity>\r\n          {showJobsiteSection ? (\r\n            <View style={{ marginTop: spacing(2) }}>\r\n              <TextInput\r\n                placeholder=\"Address line 1\"\r\n                placeholderTextColor={palette.muted}\r\n                value={addressLine1}\r\n                onChangeText={setAddressLine1}\r\n                style={{\r\n                  borderWidth: 1,\r\n                  borderColor: palette.border,\r\n                  borderRadius: 12,\r\n                  padding: spacing(2),\r\n                  color: palette.text,\r\n                  backgroundColor: palette.surfaceMuted,\r\n                  marginBottom: spacing(1.5),\r\n                }}\r\n              />\r\n              <TextInput\r\n                placeholder=\"Address line 2\"\r\n                placeholderTextColor={palette.muted}\r\n                value={addressLine2}\r\n                onChangeText={setAddressLine2}\r\n                style={{\r\n                  borderWidth: 1,\r\n                  borderColor: palette.border,\r\n                  borderRadius: 12,\r\n                  padding: spacing(2),\r\n                  color: palette.text,\r\n                  backgroundColor: palette.surfaceMuted,\r\n                  marginBottom: spacing(1.5),\r\n                }}\r\n              />\r\n              <View style={{ flexDirection:'row', columnGap: spacing(1.5) }}>\r\n                <View style={{ flex:1 }}>\r\n                  <TextInput\r\n                    placeholder=\"City\"\r\n                    placeholderTextColor={palette.muted}\r\n                    value={city}\r\n                    onChangeText={setCity}\r\n                    style={{\r\n                      borderWidth: 1,\r\n                      borderColor: palette.border,\r\n                      borderRadius: 12,\r\n                      padding: spacing(2),\r\n                      color: palette.text,\r\n                      backgroundColor: palette.surfaceMuted,\r\n                      marginBottom: spacing(1.5),\r\n                    }}\r\n                  />\r\n                </View>\r\n                <View style={{ width: 80 }}>\r\n                  <TextInput\r\n                    placeholder=\"State\"\r\n                    placeholderTextColor={palette.muted}\r\n                    value={stateCode}\r\n                    onChangeText={setStateCode}\r\n                    style={{\r\n                      borderWidth: 1,\r\n                      borderColor: palette.border,\r\n                      borderRadius: 12,\r\n                      padding: spacing(2),\r\n                      color: palette.text,\r\n                      backgroundColor: palette.surfaceMuted,\r\n                      marginBottom: spacing(1.5),\r\n                    }}\r\n                  />\r\n                </View>\r\n                <View style={{ width: 100 }}>\r\n                  <TextInput\r\n                    placeholder=\"ZIP\"\r\n                    placeholderTextColor={palette.muted}\r\n                    value={zip}\r\n                    onChangeText={setZip}\r\n                    style={{\r\n                      borderWidth: 1,\r\n                      borderColor: palette.border,\r\n                      borderRadius: 12,\r\n                      padding: spacing(2),\r\n                      color: palette.text,\r\n                      backgroundColor: palette.surfaceMuted,\r\n                      marginBottom: spacing(1.5),\r\n                    }}\r\n                  />\r\n                </View>\r\n              </View>\r\n            </View>\r\n          ) : (\r\n            <Text style={{ color: palette.muted, marginTop: spacing(1.5) }}>Add a jobsite to keep crews aligned.</Text>\r\n          )}\r\n        </SurfaceCard>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\nfunction EstimateEditorScreen({ route, navigation }){\r\n  const { token, user } = useAuth();\r\n  const { leadId } = route.params || {};\r\n  const [estimateId, setEstimateId] = useState(null);\r\n  const [items, setItems] = useState([]);\r\n  const [desc, setDesc] = useState('');\r\n  const [qty, setQty] = useState('1');\r\n  const [price, setPrice] = useState('0');\r\n  const [notes, setNotes] = useState('');\r\n  const [photoUrl, setPhotoUrl] = useState(null);\r\n  const [subtotal, setSubtotal] = useState(0);\r\n  const [taxRate, setTaxRate] = useState('7');\r\n  const [tax, setTax] = useState(0);\r\n  const [total, setTotal] = useState(0);\r\n  const [leadDetails, setLeadDetails] = useState(null);\r\n  const [leadStatus, setLeadStatus] = useState('NEW');\r\n  const [leadScope, setLeadScope] = useState('');\r\n  const [leadCustomerName, setLeadCustomerName] = useState('');\r\n  const [leadCustomerPhone, setLeadCustomerPhone] = useState('');\r\n  const [leadCustomerEmail, setLeadCustomerEmail] = useState('');\r\n  const [leadAddressLine1, setLeadAddressLine1] = useState('');\r\n  const [leadAddressLine2, setLeadAddressLine2] = useState('');\r\n  const [leadCity, setLeadCity] = useState('');\r\n  const [leadStateCode, setLeadStateCode] = useState('');\r\n  const [leadZip, setLeadZip] = useState('');\r\n  const leadStatuses = ['NEW','CONTACTED','ESTIMATING','CONVERTED','CLOSED_LOST'];\r\n\r\n  const loadLead = useCallback(async () => {\r\n    if (!leadId) return;\r\n    try {\r\n      const data = await api(`/leads/${leadId}`,'GET',null,token);\r\n      setLeadDetails(data);\r\n      setLeadStatus(data.status || 'NEW');\r\n      setLeadScope(data.description || '');\r\n      const customer = data.Customer || {};\r\n      const jobsite = data.Jobsite || {};\r\n      setLeadCustomerName(customer.name || '');\r\n      setLeadCustomerPhone(customer.phone || '');\r\n      setLeadCustomerEmail(customer.email || '');\r\n      setLeadAddressLine1(jobsite.addressLine1 || '');\r\n      setLeadAddressLine2(jobsite.addressLine2 || '');\r\n      setLeadCity(jobsite.city || '');\r\n      setLeadStateCode(jobsite.state || '');\r\n      setLeadZip(jobsite.zip || '');\r\n    } catch(e) { }\r\n  }, [leadId, token]);\r\n\r\n  useEffect(() => {\r\n    loadLead();\r\n  }, [loadLead]);\r\n\r\n  const createEstimate = async () => {\r\n    const est = await api('/estimates', 'POST', {\r\n      leadId,\r\n      customerId: leadDetails?.customerId ?? null,\r\n      jobsiteId: leadDetails?.jobsiteId ?? null,\r\n      subtotal: 0,\r\n      taxRate: parseFloat(taxRate) || 0,\r\n      total: 0\r\n    }, token);\r\n    setEstimateId(est.id);\r\n    return est;\r\n  };\r\n\r\n  const ensureEstimate = useCallback(async () => {\r\n    if (estimateId) return estimateId;\r\n    const created = await createEstimate();\r\n    setEstimateId(created.id);\r\n    return created.id;\r\n  }, [estimateId, createEstimate]);\r\n\r\n  useEffect(() => {\r\n    const rate = parseFloat(taxRate) || 0;\r\n    const newSubtotal = items.reduce((sum, item) => sum + (parseFloat(item.qty || 0) * parseFloat(item.unitPrice || 0)), 0);\r\n    const newTax = newSubtotal * (rate / 100);\r\n    setSubtotal(newSubtotal);\r\n    setTax(newTax);\r\n    setTotal(newSubtotal + newTax);\r\n  }, [items, taxRate]);\r\n\r\n  const addItem = async () => {\r\n    if (!desc.trim()) {\r\n      Alert.alert('Line item', 'Please add a description.');\r\n      return;\r\n    }\r\n    try {\r\n      const targetId = await ensureEstimate();\r\n      const payload = {\r\n        description: desc.trim(),\r\n        qty: parseFloat(qty) || 1,\r\n        unitPrice: parseFloat(price) || 0,\r\n      };\r\n      const item = await api(`/estimates/${targetId}/items`, 'POST', payload, token);\r\n      setItems(prev => [item, ...prev]);\r\n      setDesc('');\r\n      setQty('1');\r\n      setPrice('0');\r\n    } catch (e) {\r\n      Alert.alert('Error', e.message || 'Unable to add line item');\r\n    }\r\n  };\r\n\r\n  const saveLeadDetails = async () => {\r\n    if (!leadId) return;\r\n    const customerPayload = [leadCustomerName, leadCustomerPhone, leadCustomerEmail].some(v => v && v.trim()) ? {\r\n      name: leadCustomerName.trim(),\r\n      phone: leadCustomerPhone.trim(),\r\n      email: leadCustomerEmail.trim(),\r\n    } : null;\r\n    const jobsitePayload = [leadAddressLine1, leadAddressLine2, leadCity, leadStateCode, leadZip].some(v => v && v.trim()) ? {\r\n      addressLine1: leadAddressLine1.trim(),\r\n      addressLine2: leadAddressLine2.trim(),\r\n      city: leadCity.trim(),\r\n      state: leadStateCode.trim(),\r\n      zip: leadZip.trim(),\r\n    } : null;\r\n    try {\r\n      await api(`/leads/${leadId}`,'PATCH',{\r\n        description: leadScope,\r\n        status: leadStatus,\r\n        customer: customerPayload,\r\n        jobsite: jobsitePayload,\r\n      }, token);\r\n      Alert.alert('Saved', 'Lead details updated.');\r\n    } catch (e) {\r\n      Alert.alert('Error', e.message || 'Unable to save lead details');\r\n    }\r\n  };\r\n\r\n  const pickPhoto = async () => {\r\n    const result = await ImagePicker.launchImageLibraryAsync({\r\n      allowsEditing: false,\r\n      quality: 0.6,\r\n    });\r\n    if (!result.canceled && result.assets?.length) {\r\n      setPhotoUrl(result.assets[0].uri);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\r\n      <ScrollView contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(6) }}>\r\n        <SurfaceCard style={{ marginBottom: spacing(3) }}>\r\n          <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700', marginBottom: spacing(1.5) }}>Lead summary</Text>\r\n          <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1.5), marginBottom: spacing(2) }}>\r\n            {leadStatuses.map(s => {\r\n              const selected = leadStatus === s;\r\n              return (\r\n                <QuickAction\r\n                  key={s}\r\n                  label={s.replace('_',' ')}\r\n                  tone={selected ? 'primary' : 'muted'}\r\n                  onPress={() => setLeadStatus(s)}\r\n                />\r\n              );\r\n            })}\r\n          </View>\r\n          <TextInput\r\n            placeholder=\"Scope / project notes\"\r\n            placeholderTextColor={palette.muted}\r\n            value={leadScope}\r\n            onChangeText={setLeadScope}\r\n            multiline\r\n            style={{\r\n              borderWidth:1,\r\n              borderColor: palette.border,\r\n              borderRadius: 12,\r\n              padding: spacing(2),\r\n              minHeight: 120,\r\n              color: palette.text,\r\n              backgroundColor: palette.surfaceMuted,\r\n              textAlignVertical: 'top',\r\n            }}\r\n          />\r\n          <View style={{ flexDirection:'row', justifyContent:'flex-end', marginTop: spacing(2) }}>\r\n            <QuickAction label=\"Save lead\" onPress={saveLeadDetails} />\r\n          </View>\r\n        </SurfaceCard>\r\n\r\n        <SurfaceCard style={{ marginBottom: spacing(3) }}>\r\n          <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700', marginBottom: spacing(1.5) }}>Line items</Text>\r\n          <TextInput\r\n            placeholder=\"Describe the work or material\"\r\n            placeholderTextColor={palette.muted}\r\n            value={desc}\r\n            onChangeText={setDesc}\r\n            style={{\r\n              borderWidth:1,\r\n              borderColor: palette.border,\r\n              borderRadius: 12,\r\n              padding: spacing(2),\r\n              color: palette.text,\r\n              backgroundColor: palette.surfaceMuted,\r\n              marginBottom: spacing(1.5),\r\n            }}\r\n          />\r\n          <View style={{ flexDirection:'row', columnGap: spacing(1.5), marginBottom: spacing(1.5) }}>\r\n            <TextInput\r\n              placeholder=\"Qty\"\r\n              placeholderTextColor={palette.muted}\r\n              value={qty}\r\n              onChangeText={setQty}\r\n              keyboardType=\"numeric\"\r\n              style={{\r\n                flex:1,\r\n                borderWidth:1,\r\n                borderColor: palette.border,\r\n                borderRadius: 12,\r\n                padding: spacing(2),\r\n                color: palette.text,\r\n                backgroundColor: palette.surfaceMuted,\r\n              }}\r\n            />\r\n            <TextInput\r\n              placeholder=\"Unit price\"\r\n              placeholderTextColor={palette.muted}\r\n              value={price}\r\n              onChangeText={setPrice}\r\n              keyboardType=\"numeric\"\r\n              style={{\r\n                flex:1,\r\n                borderWidth:1,\r\n                borderColor: palette.border,\r\n                borderRadius: 12,\r\n                padding: spacing(2),\r\n                color: palette.text,\r\n                backgroundColor: palette.surfaceMuted,\r\n              }}\r\n            />\r\n            <QuickAction label=\"Add\" onPress={addItem} />\r\n          </View>\r\n          {items.length === 0 ? (\r\n            <Text style={{ color: palette.muted }}>No line items yet.</Text>\r\n          ) : (\r\n            items.map((item, idx) => (\r\n              <SurfaceCard key={item.id || idx} style={{ marginBottom: spacing(1.5) }}>\r\n                <Text style={{ color: palette.text, fontWeight:'600' }}>{item.description}</Text>\r\n                <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>\r\n                  Qty {item.qty} x ${parseFloat(item.unitPrice || 0).toFixed(2)} = {(parseFloat(item.qty || 0) * parseFloat(item.unitPrice || 0)).toFixed(2)}\r\n                </Text>\r\n              </SurfaceCard>\r\n            ))\r\n          )}\r\n          <View style={{ marginTop: spacing(2), borderTopWidth:1, borderTopColor: palette.border, paddingTop: spacing(2) }}>\r\n            <Text style={{ color: palette.muted }}>Tax rate (%)</Text>\r\n            <TextInput\r\n              value={String(taxRate)}\r\n              onChangeText={setTaxRate}\r\n              keyboardType=\"numeric\"\r\n              placeholderTextColor={palette.muted}\r\n              style={{\r\n                marginTop: spacing(1),\r\n                borderWidth:1,\r\n                borderColor: palette.border,\r\n                borderRadius: 12,\r\n                padding: spacing(2),\r\n                color: palette.text,\r\n                backgroundColor: palette.surfaceMuted,\r\n              }}\r\n            />\r\n            <View style={{ marginTop: spacing(2) }}>\r\n              <Text style={{ color: palette.text }}>Subtotal: ${subtotal.toFixed(2)}</Text>\r\n              <Text style={{ color: palette.text }}>Tax: ${tax.toFixed(2)}</Text>\r\n              <Text style={{ color: palette.text, fontWeight:'700' }}>Total: ${total.toFixed(2)}</Text>\r\n            </View>\r\n          </View>\r\n        </SurfaceCard>\r\n\r\n        <SurfaceCard>\r\n          <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700', marginBottom: spacing(1.5) }}>Attachments & notes</Text>\r\n          <TextInput\r\n            placeholder=\"Internal notes\"\r\n            placeholderTextColor={palette.muted}\r\n            value={notes}\r\n            onChangeText={setNotes}\r\n            multiline\r\n            style={{\r\n              borderWidth:1,\r\n              borderColor: palette.border,\r\n              borderRadius: 12,\r\n              padding: spacing(2),\r\n              minHeight: 100,\r\n              color: palette.text,\r\n              backgroundColor: palette.surfaceMuted,\r\n              textAlignVertical: 'top',\r\n            }}\r\n          />\r\n          <View style={{ flexDirection:'row', columnGap: spacing(1.5), marginTop: spacing(1.5) }}>\r\n            <QuickAction label=\"Add photo\" onPress={pickPhoto} />\r\n          </View>\r\n          {photoUrl ? (\r\n            <Image source={{ uri: photoUrl }} style={{ height: 160, borderRadius: 12, marginTop: spacing(2) }} />\r\n          ) : null}\r\n        </SurfaceCard>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nfunction ScheduleScreen({ navigation }){\r\n  const { token } = useAuth();\r\n  const [jobs, setJobs] = useState([]);\r\n  const [filter, setFilter] = useState('ALL');\r\n  const [queueCount, setQueueCount] = useState(0);\r\n  const [syncing, setSyncing] = useState(false);\r\n\r\n  const loadQueueCount = useCallback(() => {\r\n    db.transaction(tx => tx.executeSql('SELECT COUNT(*) as c FROM queue', [], (_, { rows }) => setQueueCount((rows._array?.[0]?.c)||0)));\r\n  }, []);\r\n\r\n  const load = useCallback(async () => {\r\n    try {\r\n      const data = await api('/jobs','GET',null,token);\r\n      setJobs(data);\r\n      db.transaction(tx => {\r\n        tx.executeSql('DELETE FROM jobs_cache;');\r\n        data.forEach(j => tx.executeSql('INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)', [j.id, j.name||'', j.status||'SCHEDULED', j.startDate||'', j.endDate||'', j.notes||'']));\r\n      });\r\n    } catch(e) {\r\n      db.transaction(tx => tx.executeSql('SELECT id, name, status, startDate, endDate, notes FROM jobs_cache', [], (_, { rows }) => setJobs(rows._array || [])));\r\n    }\r\n  }, [token]);\r\n\r\n  useEffect(() => {\r\n    load();\r\n    loadQueueCount();\r\n  }, [load, loadQueueCount]);\r\n\r\n  const filters = [\r\n    { key:'ALL', label:'All' },\r\n    { key:'TODAY', label:'Today' },\r\n    { key:'WEEK', label:'This week' },\r\n  ];\r\n\r\n  const inRange = useCallback((dateValue) => {\r\n    if (filter === 'ALL') return true;\r\n    if (!dateValue) return false;\r\n    const today = new Date();\r\n    const dt = new Date(dateValue);\r\n    if (Number.isNaN(dt.getTime())) return false;\r\n    if (filter === 'TODAY') {\r\n      return dt.getFullYear() === today.getFullYear() && dt.getMonth() === today.getMonth() && dt.getDate() === today.getDate();\r\n    }\r\n    const start = new Date(today);\r\n    start.setHours(0, 0, 0, 0);\r\n    start.setDate(today.getDate() - today.getDay());\r\n    const end = new Date(start);\r\n    end.setDate(start.getDate() + 6);\r\n    return dt >= start && dt <= end;\r\n  }, [filter]);\r\n\r\n  const filteredJobs = useMemo(() => (\r\n    jobs\r\n      .filter(job => inRange(job.startDate))\r\n      .sort((a, b) => new Date(a.startDate || 0) - new Date(b.startDate || 0))\r\n  ), [jobs, inRange]);\r\n\r\n  const handleSync = useCallback(async () => {\r\n    setSyncing(true);\r\n    try {\r\n      await processQueue(token);\r\n      await load();\r\n      loadQueueCount();\r\n    } finally {\r\n      setSyncing(false);\r\n    }\r\n  }, [token, load, loadQueueCount]);\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\r\n      <ScrollView contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(6) }}>\r\n        <Text style={{ color: palette.text, fontSize: typography.h1, fontWeight:'700', marginBottom: spacing(2) }}>Schedule</Text>\r\n        <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1.5), marginBottom: spacing(2) }}>\r\n          {filters.map(option => (\r\n            <QuickAction\r\n              key={option.key}\r\n              label={option.label}\r\n              tone={filter === option.key ? 'primary' : 'muted'}\r\n              onPress={() => setFilter(option.key)}\r\n            />\r\n          ))}\r\n        </View>\r\n        <SurfaceCard style={{ marginBottom: spacing(3), flexDirection:'row', justifyContent:'space-between', alignItems:'center' }}>\r\n          <View>\r\n            <Text style={{ color: palette.text, fontWeight:'600' }}>Offline queue</Text>\r\n            <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>{queueCount} items waiting to sync</Text>\r\n          </View>\r\n          <QuickAction label={syncing ? 'Syncing...' : 'Sync now'} tone={syncing ? 'muted' : 'primary'} onPress={syncing ? undefined : handleSync} />\r\n        </SurfaceCard>\r\n\r\n        {filteredJobs.length === 0 ? (\r\n          <SurfaceCard>\r\n            <Text style={{ color: palette.muted }}>No jobs {filter !== 'ALL' ? 'in this range' : 'scheduled yet'}. Convert a lead or create a job to populate your schedule.</Text>\r\n          </SurfaceCard>\r\n        ) : (\r\n          filteredJobs.map(job => {\r\n            const jobsite = job.Jobsite || {};\r\n            const addressParts = [\r\n              jobsite.addressLine1,\r\n              jobsite.addressLine2,\r\n              [jobsite.city, jobsite.state].filter(Boolean).join(', '),\r\n              jobsite.zip,\r\n            ].filter(Boolean);\r\n            const address = addressParts.join(', ');\r\n            const startLabel = job.startDate ? `Starts ${formatDate(job.startDate)}` : 'No start date';\r\n            const endLabel = job.endDate ? ` - Due ${formatDate(job.endDate)}` : '';\r\n            return (\r\n              <SurfaceCard key={job.id} style={{ marginBottom: spacing(2) }}>\r\n                <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center' }}>\r\n                  <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600' }}>{job.name || `Job #${job.id}`}</Text>\r\n                  <StatusPill status={job.status || 'SCHEDULED'} />\r\n                </View>\r\n                <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>\r\n                  {startLabel}{endLabel}\r\n                </Text>\r\n                {address ? <Text style={{ color: palette.muted, marginTop: spacing(1) }}>{address}</Text> : null}\r\n                {job.notes ? <Text style={{ color: palette.muted, marginTop: spacing(1) }}>{job.notes}</Text> : null}\r\n                <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginTop: spacing(2) }}>\r\n                  <QuickAction label=\"Open job\" onPress={() => navigation.navigate('JobDetail', { jobId: job.id })} />\r\n                  <QuickAction label=\"View tasks\" onPress={() => navigation.navigate('JobDetail', { jobId: job.id, tab: 'tasks' })} tone=\"muted\" />\r\n                </View>\r\n              </SurfaceCard>\r\n            );\r\n          })\r\n        )}\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\nfunction ProfileScreen({ navigation }){\r\n  const { setToken, user } = useAuth();\r\n  const isAdmin = (user?.role || '').toUpperCase() === 'ADMIN';\r\n  return (\r\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\r\n      <ScrollView contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(6) }}>\r\n        <Text style={{ color: palette.text, fontSize: typography.h1, fontWeight:'700', marginBottom: spacing(2) }}>Profile</Text>\r\n        <SurfaceCard style={{ marginBottom: spacing(3) }}>\r\n          <Text style={{ color: palette.muted, fontSize: typography.small, textTransform:'uppercase', fontWeight:'600' }}>Account</Text>\r\n          <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700', marginTop: spacing(1) }}>{user?.name || user?.fullName || 'Team member'}</Text>\r\n          <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>{user?.email || 'No email on file'}</Text>\r\n          <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>Role: {user?.role || 'TECH'}</Text>\r\n        </SurfaceCard>\r\n\r\n        <SurfaceCard>\r\n          <Text style={{ color: palette.muted, fontSize: typography.small, textTransform:'uppercase', fontWeight:'600', marginBottom: spacing(1.5) }}>Actions</Text>\r\n          {isAdmin ? (\r\n            <View style={{ marginBottom: spacing(1.5) }}>\r\n              <QuickAction label=\"Manage users\" onPress={() => navigation.navigate('UsersAdmin')} />\r\n            </View>\r\n          ) : null}\r\n          <QuickAction label=\"Sign out\" tone=\"danger\" onPress={() => setToken(null)} />\r\n        </SurfaceCard>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\nconst Stack = createNativeStackNavigator();\r\nconst Tabs = createBottomTabNavigator();\r\n\r\nfunction TabsNav(){\r\n  const { user } = useAuth();\r\n  const isAdmin = (user?.role || '').toUpperCase() === 'ADMIN';\r\n  const { width } = useWindowDimensions();\r\n  const isCompact = Platform.OS !== 'web' ? true : width < 768;\r\n  const hideTabs = isCompact;\r\n  return (\r\n    <Tabs.Navigator\r\n      screenOptions={{\r\n        headerShown: false,\r\n        tabBarActiveTintColor: palette.primary,\r\n        tabBarStyle: { backgroundColor: '#fff', display: hideTabs ? 'none' : 'flex' },\r\n      }}\r\n    >\r\n      <Tabs.Screen name=\"Dashboard\" component={DashboardScreen} options={{ title: 'Home' }} />\r\n      <Tabs.Screen name=\"Leads\" component={LeadsScreen} />\r\n      <Tabs.Screen name=\"Jobs\" component={JobsKanbanScreen} options={{ title:'Jobs' }} />\r\n      {isAdmin ? <Tabs.Screen name=\"Invoices\" component={InvoicesScreen} /> : null}\r\n      <Tabs.Screen name=\"Schedule\" component={ScheduleScreen} />\r\n      <Tabs.Screen name=\"Profile\" component={ProfileScreen} options={{ title:\"Profile\" }} />\r\n    </Tabs.Navigator>\r\n  );\r\n}\r\n\r\nfunction MobileHeader({ currentRoute, onNavigate, isAdmin }){\r\n  const [menuVisible, setMenuVisible] = useState(false);\r\n  const activeRoute = useMemo(() => {\r\n    if (currentRoute === 'JobDetail') return 'Jobs';\r\n    return currentRoute;\r\n  }, [currentRoute]);\r\n\r\n  const menuItems = useMemo(() => {\r\n    const items = [\r\n      { label: 'Dashboard', route: 'Dashboard' },\r\n      { label: 'Leads', route: 'Leads' },\r\n      { label: 'Jobs', route: 'Jobs' },\r\n    ];\r\n    if (isAdmin) {\r\n      items.push({ label: 'Invoices', route: 'Invoices' });\r\n    }\r\n    items.push(\r\n      { label: 'Schedule', route: 'Schedule' },\r\n      { label: 'Profile', route: 'Profile' },\r\n    );\r\n    if (isAdmin) {\r\n      items.push({ label: 'Manage users', route: 'UsersAdmin' });\r\n    }\r\n    return items;\r\n  }, [isAdmin]);\r\n\r\n  const handleSelect = useCallback((route) => {\r\n    setMenuVisible(false);\r\n    onNavigate(route);\r\n  }, [onNavigate]);\r\n\r\n  return (\r\n    <>\r\n      <SafeAreaView style={{ backgroundColor: '#0B0C10' }}>\r\n        <View style={{ paddingHorizontal: spacing(2), paddingVertical: spacing(1.5), flexDirection:'row', alignItems:'center', justifyContent:'space-between' }}>\r\n          <TouchableOpacity\r\n            onPress={() => setMenuVisible(true)}\r\n            accessibilityLabel=\"Open navigation menu\"\r\n            accessibilityRole=\"button\"\r\n            style={{ padding: spacing(1) }}\r\n          >\r\n            <View style={{ width: 24, height: 2, backgroundColor: '#fff', borderRadius: 999, marginBottom: 4 }} />\r\n            <View style={{ width: 24, height: 2, backgroundColor: '#fff', borderRadius: 999, marginBottom: 4 }} />\r\n            <View style={{ width: 24, height: 2, backgroundColor: '#fff', borderRadius: 999 }} />\r\n          </TouchableOpacity>\r\n          <Text style={{ color:'#fff', fontSize: typography.h1, fontWeight:'700' }}>Precision Tracker</Text>\r\n          <View style={{ width: 24 }} />\r\n        </View>\r\n      </SafeAreaView>\r\n      <Modal\r\n        visible={menuVisible}\r\n        animationType=\"fade\"\r\n        transparent\r\n        onRequestClose={() => setMenuVisible(false)}\r\n      >\r\n        <View style={{ flex:1, backgroundColor:'rgba(15,23,42,0.6)', justifyContent:'flex-start', padding: spacing(3) }}>\r\n          <View style={{ backgroundColor: palette.surface, borderRadius: 16, padding: spacing(2.5) }}>\r\n            <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center', marginBottom: spacing(2) }}>\r\n              <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700' }}>Navigate</Text>\r\n              <TouchableOpacity onPress={() => setMenuVisible(false)} accessibilityRole=\"button\" accessibilityLabel=\"Close menu\">\r\n                <Text style={{ color: palette.muted, fontWeight:'600' }}>Close</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n            {menuItems.map(item => {\r\n              const selected = activeRoute === item.route;\r\n              return (\r\n                <TouchableOpacity\r\n                  key={item.route}\r\n                  onPress={() => handleSelect(item.route)}\r\n                  activeOpacity={0.85}\r\n                  style={{\r\n                    paddingVertical: spacing(1.25),\r\n                    paddingHorizontal: spacing(1.5),\r\n                    borderRadius: 12,\r\n                    backgroundColor: selected ? '#d9f2ed' : palette.surfaceMuted,\r\n                    marginBottom: spacing(1),\r\n                  }}\r\n                >\r\n                  <Text style={{ color: selected ? palette.primaryStrong : palette.text, fontWeight:'600', fontSize: typography.body }}>\r\n                    {item.label}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              );\r\n            })}\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction LoginScreen() {\r\n  const [email, setEmail] = useState('admin@example.com');\r\n  // If you kept the hardcoded backend login, default to test123:\r\n  const [password, setPassword] = useState('test123');\r\n  const [busy, setBusy] = useState(false);\r\n\r\n  // <-- use the auth context to flip the app into \"logged-in\" mode\r\n  const { setToken, setUser } = useAuth();\r\n\r\n  async function login() {\r\n    try {\r\n      setBusy(true);\r\n      const res = await fetch(`${API_URL}/auth/login`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n      const data = await res.json();\r\n      if (!res.ok) throw new Error(data?.message || data?.error || 'Login failed');\r\n\r\n      // Accept dev or real payload shape\r\n      const tok = data.token || data.accessToken;\r\n      if (!tok) throw new Error('No token returned from server');\r\n\r\n      // Store token/user in global auth state + persist\r\n      const normalizedUser = data.user ? { ...data.user, role: normalizeRole(data.user.role) } : { email, role: 'ADMIN', name: 'Admin' };\r\n      setToken(tok);\r\n      setUser(normalizedUser);\r\n      try {\r\n        await SecureStore.setItemAsync('auth_token', tok);\r\n        await SecureStore.setItemAsync('auth_user', JSON.stringify(normalizedUser));\r\n      } catch {}\r\n\r\n      // Optional: toast\r\n      Alert.alert('Welcome', 'Logged in');\r\n    } catch (e) {\r\n      Alert.alert('Error', e.message);\r\n    } finally {\r\n      setBusy(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View style={{ flex: 1, padding: 20, justifyContent: 'center' }}>\r\n      <Text style={{ fontSize: 24, marginBottom: 16 }}>PrecisionTracker</Text>\r\n      <TextInput\r\n        placeholder=\"Email\"\r\n        autoCapitalize=\"none\"\r\n        value={email}\r\n        onChangeText={setEmail}\r\n        style={{ borderWidth: 1, padding: 12, marginBottom: 12 }}\r\n      />\r\n      <TextInput\r\n        placeholder=\"Password\"\r\n        secureTextEntry\r\n        value={password}\r\n        onChangeText={setPassword}\r\n        style={{ borderWidth: 1, padding: 12, marginBottom: 12 }}\r\n      />\r\n      <Button title={busy ? 'Signing in...' : 'Sign in'} onPress={login} disabled={busy} />\r\n    </View>\r\n  );\r\n}\r\n\r\n\r\nexport default function App(){\r\n  const [token, setToken] = useState(null);\r\n  const [user, setUser] = useState(null);\r\n  const [booting, setBooting] = useState(true);\r\n  const navigationRef = useRef(null);\r\n  const [currentRoute, setCurrentRoute] = useState('Dashboard');\r\n  const { width } = useWindowDimensions();\r\n  const isCompactLayout = Platform.OS !== 'web' ? true : width < 768;\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    (async () => {\r\n      try {\r\n        const [tok, usr] = await Promise.all([\r\n          SecureStore.getItemAsync('auth_token'),\r\n          SecureStore.getItemAsync('auth_user')\r\n        ]);\r\n        if (mounted && tok) {\r\n          setToken(tok);\r\n          if (usr) {\r\n            const parsed = JSON.parse(usr);\r\n            parsed.role = normalizeRole(parsed.role);\r\n            setUser(parsed);\r\n          }\r\n        }\r\n      } catch {}\r\n      finally { if (mounted) setBooting(false); }\r\n    })();\r\n    return () => { mounted = false; };\r\n  }, []);\r\n\r\n  const authValue = {\r\n    token,\r\n    setToken: (t) => {\r\n      setToken(t);\r\n      if (!t) { try { SecureStore.deleteItemAsync('auth_token'); SecureStore.deleteItemAsync('auth_user'); } catch {} }\r\n    },\r\n    user,\r\n    setUser\r\n  };\r\n\r\n  const updateCurrentRoute = useCallback(() => {\r\n    if (!navigationRef.current) return;\r\n    const current = navigationRef.current.getCurrentRoute();\r\n    if (!current) return;\r\n    let name = current.name;\r\n    let state = current.state;\r\n    while (state && typeof state.index === 'number' && state.routes && state.routes[state.index]) {\r\n      const nested = state.routes[state.index];\r\n      name = nested.name;\r\n      state = nested.state;\r\n    }\r\n    if (name) setCurrentRoute(name);\r\n  }, []);\r\n\r\n  const handleNavigate = useCallback((routeName) => {\r\n    if (!navigationRef.current) return;\r\n    const tabRoutes = ['Dashboard','Leads','Jobs','Invoices','Schedule','Profile'];\r\n    if (tabRoutes.includes(routeName)) {\r\n      navigationRef.current.navigate('Tabs', { screen: routeName });\r\n    } else {\r\n      navigationRef.current.navigate(routeName);\r\n    }\r\n  }, []);\r\n\r\n  if (booting) {\r\n    return (\r\n      <SafeAreaView style={{ flex:1, alignItems:'center', justifyContent:'center' }}>\r\n        <Text>Loading...</Text>\r\n      </SafeAreaView>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={authValue}>\r\n      <View style={{ flex:1, backgroundColor: palette.background }}>\r\n        {isCompactLayout && token ? (\r\n          <MobileHeader\r\n            currentRoute={currentRoute}\r\n            onNavigate={handleNavigate}\r\n            isAdmin={(user?.role || '').toUpperCase() === 'ADMIN'}\r\n          />\r\n        ) : null}\r\n        <View style={{ flex:1 }}>\r\n          <NavigationContainer\r\n            ref={navigationRef}\r\n            onReady={updateCurrentRoute}\r\n            onStateChange={updateCurrentRoute}\r\n          >\r\n            {!token ? (\r\n              <Stack.Navigator>\r\n                <Stack.Screen name=\"Login\" component={LoginScreen} />\r\n              </Stack.Navigator>\r\n            ) : (\r\n              <Stack.Navigator>\r\n                <Stack.Screen name=\"Tabs\" component={TabsNav} options={{ headerShown:false }} />\r\n                <Stack.Screen name=\"NewLead\" component={NewLeadScreen} options={{ title:'New Lead' }} />\r\n                <Stack.Screen name=\"EstimateEditor\" component={EstimateEditorScreen} options={{ title:'Estimate' }} />\r\n                <Stack.Screen name=\"Signature\" component={SignatureScreen} options={{ title:'Signature' }} />\r\n                <Stack.Screen name=\"UsersAdmin\" component={UsersAdminScreen} options={{ title:'Users (Admin)' }} />\r\n                <Stack.Screen name=\"JobDetail\" component={JobDetailScreen} options={{ title:'Job' }} />\r\n              </Stack.Navigator>\r\n            )}\r\n          </NavigationContainer>\r\n        </View>\r\n      </View>\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}