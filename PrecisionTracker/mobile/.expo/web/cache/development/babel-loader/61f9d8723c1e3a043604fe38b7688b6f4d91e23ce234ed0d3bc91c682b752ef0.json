{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tyler\\\\Downloads\\\\PrecisionTracker-v4-wired\\\\PrecisionTracker\\\\mobile\\\\App.js\";\nimport React, { useEffect, useState, createContext, useContext, useRef, useCallback, useMemo } from 'react';\nimport { NavigationContainer, useFocusEffect } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport * as ImagePicker from 'expo-image-picker';\nimport * as FileSystem from 'expo-file-system';\nimport * as SQLite from 'expo-sqlite';\nimport Svg, { Path } from 'react-native-svg';\nimport ViewShot from 'react-native-view-shot';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"react-native-web/dist/exports/View\";\nimport * as SecureStore from 'expo-secure-store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.EXPO_PUBLIC_API_URL || 'http://localhost:4000';\nfunction initOfflineTables(database) {\n  try {\n    if (!database || typeof database.transaction !== 'function') return;\n    database.transaction(tx => {\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS queue (id INTEGER PRIMARY KEY AUTOINCREMENT, type TEXT, payload TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS uploads (id INTEGER PRIMARY KEY AUTOINCREMENT, dataUrl TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS leads_cache (id INTEGER PRIMARY KEY, description TEXT, status TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS jobs_cache (id INTEGER PRIMARY KEY, name TEXT, status TEXT, startDate TEXT, endDate TEXT, notes TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS tasks_cache (id INTEGER PRIMARY KEY, jobId INTEGER, title TEXT, status TEXT, dueDate TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS calendar_cache (id INTEGER PRIMARY KEY, jobId INTEGER, title TEXT, startAt TEXT, endAt TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS estimates_cache (id INTEGER PRIMARY KEY, leadId INTEGER, subtotal REAL, taxRate REAL, total REAL, status TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS estimate_items_cache (id INTEGER PRIMARY KEY, estimateId INTEGER, description TEXT, qty REAL, unitPrice REAL);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS change_orders_cache (id INTEGER PRIMARY KEY, jobId INTEGER, title TEXT, amountDelta REAL, status TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS users_cache (id INTEGER PRIMARY KEY, email TEXT, fullName TEXT, role TEXT);');\n    });\n  } catch (e) {}\n}\nlet db;\nexport function getDb() {\n  if (db) return db;\n  if (Platform.OS === 'web') {\n    db = {\n      transaction: fn => fn({\n        executeSql: () => {}\n      }),\n      execAsync: async () => {},\n      runAsync: async () => {}\n    };\n    return db;\n  }\n  if ('openDatabaseSync' in SQLite) {\n    db = SQLite.openDatabaseSync('offline.db');\n    return db;\n  }\n  if ('openDatabaseAsync' in SQLite) {\n    db = {\n      transaction: fn => fn({\n        executeSql: () => {}\n      }),\n      execAsync: async () => {},\n      runAsync: async () => {}\n    };\n    return db;\n  }\n  db = {\n    transaction: fn => fn({\n      executeSql: () => {}\n    }),\n    execAsync: async () => {},\n    runAsync: async () => {}\n  };\n  return db;\n}\nconst dbHandle = getDb();\ninitOfflineTables(dbHandle);\nconst normalizeRole = role => {\n  if (!role) return 'TECH';\n  const r = String(role).toUpperCase();\n  if (['ADMIN', 'ESTIMATOR', 'SUPERVISOR', 'TECH'].includes(r)) return r;\n  if (r === 'STANDARD' || r === 'USER') return 'TECH';\n  return r;\n};\nconst AuthContext = createContext(null);\nfunction useAuth() {\n  return useContext(AuthContext);\n}\nasync function api(path, method = 'GET', body, token) {\n  const res = await fetch(`${API_URL}${path}`, {\n    method,\n    headers: Object.assign({\n      'Content-Type': 'application/json'\n    }, token ? {\n      Authorization: `Bearer ${token}`\n    } : {}),\n    body: body ? JSON.stringify(body) : undefined\n  });\n  if (!res.ok) {\n    throw new Error((await res.json()).error || 'Request failed');\n  }\n  return res.json();\n}\nconst palette = {\n  background: '#f4f6f8',\n  surface: '#ffffff',\n  surfaceMuted: '#f1f5f9',\n  border: '#e2e8f0',\n  text: '#0f172a',\n  muted: '#5f6b7d',\n  primary: '#2c8a7d',\n  primaryStrong: '#1f6a60',\n  success: '#219653',\n  warning: '#f59e0b',\n  danger: '#d14343',\n  info: '#2563eb'\n};\nconst spacing = (step = 1) => step * 8;\nconst typography = {\n  h1: 24,\n  h2: 18,\n  body: 15,\n  small: 12\n};\nconst floatingShadow = Platform.select({\n  ios: {\n    shadowColor: '#0f172a',\n    shadowOpacity: 0.08,\n    shadowRadius: 14,\n    shadowOffset: {\n      width: 0,\n      height: 6\n    }\n  },\n  android: {\n    elevation: 2\n  },\n  default: {}\n});\nconst pillTone = {\n  NEW: {\n    fg: palette.info,\n    bg: '#e6eeff',\n    label: 'New'\n  },\n  CONTACTED: {\n    fg: palette.primary,\n    bg: '#e6f4f2',\n    label: 'Contacted'\n  },\n  ESTIMATING: {\n    fg: palette.warning,\n    bg: '#fdf1d6',\n    label: 'Estimating'\n  },\n  CONVERTED: {\n    fg: palette.success,\n    bg: '#e6f6ec',\n    label: 'Converted'\n  },\n  CLOSED_LOST: {\n    fg: palette.muted,\n    bg: '#e2e8f0',\n    label: 'Lost'\n  },\n  SCHEDULED: {\n    fg: palette.primary,\n    bg: '#e6f4f2',\n    label: 'Scheduled'\n  },\n  IN_PROGRESS: {\n    fg: palette.info,\n    bg: '#e6eeff',\n    label: 'In progress'\n  },\n  COMPLETE: {\n    fg: palette.success,\n    bg: '#e6f6ec',\n    label: 'Complete'\n  },\n  DONE: {\n    fg: palette.success,\n    bg: '#e6f6ec',\n    label: 'Complete'\n  },\n  ON_HOLD: {\n    fg: palette.warning,\n    bg: '#fdf1d6',\n    label: 'On hold'\n  },\n  CANCELLED: {\n    fg: palette.muted,\n    bg: '#e2e8f0',\n    label: 'Cancelled'\n  }\n};\nconst toneMap = {\n  primary: {\n    fg: palette.primaryStrong,\n    bg: '#e0f3f0'\n  },\n  success: {\n    fg: palette.success,\n    bg: '#e6f6ec'\n  },\n  warning: {\n    fg: palette.warning,\n    bg: '#fdf1d6'\n  },\n  danger: {\n    fg: palette.danger,\n    bg: '#fde4e4'\n  },\n  info: {\n    fg: palette.info,\n    bg: '#e6eeff'\n  }\n};\nconst formatCurrency = value => {\n  const amount = Number(value || 0);\n  if (Number.isNaN(amount)) return '$0';\n  return `$${amount.toLocaleString(undefined, {\n    minimumFractionDigits: amount % 1 ? 2 : 0,\n    maximumFractionDigits: 2\n  })}`;\n};\nconst formatDate = value => {\n  if (!value) return null;\n  const d = new Date(value);\n  if (Number.isNaN(d.getTime())) return value;\n  return d.toLocaleDateString(undefined, {\n    month: 'short',\n    day: 'numeric'\n  });\n};\nconst isTaskCompleted = status => {\n  if (!status) return false;\n  const key = String(status).toUpperCase();\n  return key === 'DONE' || key === 'COMPLETE';\n};\nfunction SurfaceCard({\n  children,\n  style,\n  onPress\n}) {\n  const content = _jsxDEV(View, {\n    style: [{\n      backgroundColor: palette.surface,\n      borderRadius: 16,\n      borderWidth: 1,\n      borderColor: palette.border,\n      padding: spacing(2)\n    }, floatingShadow, style],\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n  if (!onPress) return content;\n  return _jsxDEV(TouchableOpacity, {\n    activeOpacity: 0.85,\n    onPress: onPress,\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 5\n  }, this);\n}\nfunction StatusPill({\n  status\n}) {\n  if (!status) return null;\n  const key = String(status).toUpperCase();\n  const cfg = pillTone[key] || {\n    fg: palette.muted,\n    bg: '#e2e8f0',\n    label: status\n  };\n  return _jsxDEV(View, {\n    style: {\n      backgroundColor: cfg.bg,\n      borderRadius: 999,\n      paddingHorizontal: spacing(1.5),\n      paddingVertical: spacing(0.5)\n    },\n    children: _jsxDEV(Text, {\n      style: {\n        color: cfg.fg,\n        fontSize: typography.small,\n        fontWeight: '600'\n      },\n      children: cfg.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 5\n  }, this);\n}\nfunction SummaryCard({\n  title,\n  value,\n  subtitle,\n  tone = 'primary',\n  onPress\n}) {\n  const colors = toneMap[tone] || toneMap.primary;\n  return _jsxDEV(SurfaceCard, {\n    onPress: onPress,\n    style: {\n      backgroundColor: colors.bg,\n      borderColor: 'transparent',\n      padding: spacing(2.5)\n    },\n    children: [_jsxDEV(Text, {\n      style: {\n        color: palette.muted,\n        fontSize: typography.small,\n        textTransform: 'uppercase',\n        fontWeight: '700'\n      },\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), _jsxDEV(Text, {\n      style: {\n        color: colors.fg,\n        fontSize: 28,\n        fontWeight: '800',\n        marginTop: spacing(0.5)\n      },\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), subtitle ? _jsxDEV(Text, {\n      style: {\n        color: palette.muted,\n        fontSize: typography.small,\n        marginTop: spacing(0.5)\n      },\n      children: subtitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 19\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 5\n  }, this);\n}\nfunction SectionHeader({\n  title,\n  actionLabel,\n  onAction\n}) {\n  return _jsxDEV(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      marginBottom: spacing(1.5)\n    },\n    children: [_jsxDEV(Text, {\n      style: {\n        color: palette.text,\n        fontSize: typography.h2,\n        fontWeight: '700'\n      },\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), actionLabel && onAction ? _jsxDEV(TouchableOpacity, {\n      onPress: onAction,\n      style: {\n        paddingHorizontal: spacing(1),\n        paddingVertical: spacing(0.5)\n      },\n      children: _jsxDEV(Text, {\n        style: {\n          color: palette.primary,\n          fontWeight: '600',\n          fontSize: typography.small\n        },\n        children: actionLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 5\n  }, this);\n}\nfunction QuickAction({\n  label,\n  onPress,\n  tone = 'primary'\n}) {\n  const toneStyles = (() => {\n    switch (tone) {\n      case 'danger':\n        return {\n          borderColor: '#fecdd3',\n          backgroundColor: '#fee2e2',\n          textColor: palette.danger\n        };\n      case 'success':\n        return {\n          borderColor: '#bbf7d0',\n          backgroundColor: '#dcfce7',\n          textColor: palette.success\n        };\n      case 'warning':\n        return {\n          borderColor: '#fde68a',\n          backgroundColor: '#fef3c7',\n          textColor: palette.warning\n        };\n      case 'muted':\n        return {\n          borderColor: palette.border,\n          backgroundColor: palette.surface,\n          textColor: palette.muted\n        };\n      default:\n        return {\n          borderColor: palette.border,\n          backgroundColor: palette.surfaceMuted,\n          textColor: palette.primary\n        };\n    }\n  })();\n  return _jsxDEV(TouchableOpacity, {\n    onPress: onPress,\n    activeOpacity: 0.85,\n    style: {\n      borderRadius: 10,\n      paddingHorizontal: spacing(1.5),\n      paddingVertical: spacing(0.75),\n      borderWidth: 1,\n      borderColor: toneStyles.borderColor,\n      backgroundColor: toneStyles.backgroundColor\n    },\n    children: _jsxDEV(Text, {\n      style: {\n        color: toneStyles.textColor,\n        fontWeight: '600',\n        fontSize: typography.small\n      },\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 257,\n    columnNumber: 5\n  }, this);\n}\nfunction DashboardScreen({\n  navigation\n}) {\n  const {\n    token\n  } = useAuth();\n  const [loading, setLoading] = useState(true);\n  const [refreshing, setRefreshing] = useState(false);\n  const [leads, setLeads] = useState([]);\n  const [jobs, setJobs] = useState([]);\n  const [tasks, setTasks] = useState([]);\n  const [invoiceSummary, setInvoiceSummary] = useState({\n    outstanding: 0,\n    collected: 0\n  });\n  const [lastUpdated, setLastUpdated] = useState(null);\n  const loadData = useCallback(async (isPullRefresh = false) => {\n    if (!token) return;\n    isPullRefresh ? setRefreshing(true) : setLoading(true);\n    const fetchLeads = async () => {\n      try {\n        const data = await api('/leads', 'GET', null, token);\n        setLeads(data);\n        db.transaction(tx => {\n          tx.executeSql && tx.executeSql('DELETE FROM leads_cache;');\n          data.forEach(l => tx.executeSql && tx.executeSql('INSERT OR REPLACE INTO leads_cache (id, description, status) VALUES (?,?,?)', [l.id, l.description || '', l.status || 'NEW']));\n        });\n        return data;\n      } catch (e) {\n        return await new Promise(resolve => {\n          db.transaction(tx => tx.executeSql && tx.executeSql('SELECT id, description, status FROM leads_cache', [], (_, {\n            rows\n          }) => {\n            const fallback = rows?._array || [];\n            setLeads(fallback);\n            resolve(fallback);\n          }));\n        });\n      }\n    };\n    const fetchJobs = async () => {\n      try {\n        const data = await api('/jobs', 'GET', null, token);\n        setJobs(data);\n        db.transaction(tx => {\n          tx.executeSql && tx.executeSql('DELETE FROM jobs_cache;');\n          data.forEach(j => tx.executeSql && tx.executeSql('INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)', [j.id, j.name || '', j.status || 'SCHEDULED', j.startDate || '', j.endDate || '', j.notes || '']));\n        });\n        return data;\n      } catch (e) {\n        return await new Promise(resolve => {\n          db.transaction(tx => tx.executeSql && tx.executeSql('SELECT id, name, status, startDate, endDate, notes FROM jobs_cache', [], (_, {\n            rows\n          }) => {\n            const fallback = rows?._array || [];\n            setJobs(fallback);\n            resolve(fallback);\n          }));\n        });\n      }\n    };\n    const fetchTasks = async () => {\n      try {\n        const data = await api('/tasks', 'GET', null, token);\n        setTasks(data);\n        db.transaction(tx => {\n          data.forEach(t => tx.executeSql && tx.executeSql('INSERT OR REPLACE INTO tasks_cache (id, jobId, title, status, dueDate) VALUES (?,?,?,?,?)', [t.id, t.jobId || null, t.title || '', t.status || 'TODO', t.dueDate || '']));\n        });\n        return data;\n      } catch (e) {\n        return await new Promise(resolve => {\n          db.transaction(tx => tx.executeSql && tx.executeSql('SELECT id, jobId, title, status, dueDate FROM tasks_cache ORDER BY id DESC', [], (_, {\n            rows\n          }) => {\n            const fallback = rows?._array || [];\n            setTasks(fallback);\n            resolve(fallback);\n          }));\n        });\n      }\n    };\n    try {\n      await Promise.all([fetchLeads(), fetchJobs(), fetchTasks()]);\n      setInvoiceSummary(prev => ({\n        outstanding: prev?.outstanding ?? 0,\n        collected: prev?.collected ?? 0\n      }));\n      setLastUpdated(new Date());\n    } finally {\n      isPullRefresh ? setRefreshing(false) : setLoading(false);\n    }\n  }, [token]);\n  useFocusEffect(useCallback(() => {\n    loadData(false);\n  }, [loadData]));\n  const onRefresh = useCallback(() => loadData(true), [loadData]);\n  const newLeads = leads.filter(l => (l.status || '').toUpperCase() === 'NEW').length;\n  const activeJobs = jobs.filter(j => ['SCHEDULED', 'IN_PROGRESS'].includes((j.status || '').toUpperCase())).length;\n  const openTasks = tasks.filter(t => !isTaskCompleted(t.status)).length;\n  const outstandingValue = invoiceSummary?.outstanding || 0;\n  const topLeads = leads.slice(0, 3);\n  const topJobs = jobs.slice(0, 3);\n  const nextTasks = tasks.filter(t => !isTaskCompleted(t.status)).slice(0, 3);\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(5)\n      },\n      refreshControl: _jsxDEV(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh,\n        tintColor: palette.primary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 25\n      }, this),\n      children: [_jsxDEV(Text, {\n        style: {\n          color: palette.text,\n          fontSize: typography.h1,\n          fontWeight: '700',\n          marginBottom: spacing(2)\n        },\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          justifyContent: 'space-between'\n        },\n        children: [_jsxDEV(View, {\n          style: {\n            flexBasis: '48%',\n            marginBottom: spacing(2)\n          },\n          children: _jsxDEV(SummaryCard, {\n            title: \"Leads\",\n            value: leads.length,\n            subtitle: `${newLeads} new to triage`,\n            tone: \"info\",\n            onPress: () => navigation.navigate('Leads')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexBasis: '48%',\n            marginBottom: spacing(2)\n          },\n          children: _jsxDEV(SummaryCard, {\n            title: \"Jobs\",\n            value: jobs.length,\n            subtitle: `${activeJobs} active`,\n            tone: \"primary\",\n            onPress: () => navigation.navigate('Jobs')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexBasis: '48%',\n            marginBottom: spacing(2)\n          },\n          children: _jsxDEV(SummaryCard, {\n            title: \"Tasks\",\n            value: openTasks,\n            subtitle: `Open of ${tasks.length}`,\n            tone: \"warning\",\n            onPress: () => navigation.navigate('Jobs')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexBasis: '48%',\n            marginBottom: spacing(2)\n          },\n          children: _jsxDEV(SummaryCard, {\n            title: \"Invoices\",\n            value: formatCurrency(outstandingValue),\n            subtitle: \"Payments tracking coming soon\",\n            tone: \"success\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 9\n      }, this), loading && !refreshing ? _jsxDEV(SurfaceCard, {\n        style: {\n          alignItems: 'center',\n          justifyContent: 'center',\n          paddingVertical: spacing(6)\n        },\n        children: [_jsxDEV(ActivityIndicator, {\n          color: palette.primary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 13\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(1.5)\n          },\n          children: \"Loading summary\\u2026\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 11\n      }, this) : null, _jsxDEV(SectionHeader, {\n        title: \"Next Jobs\",\n        actionLabel: \"View all\",\n        onAction: () => navigation.navigate('Jobs')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: topJobs.length === 0 ? _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: \"No jobs yet. Create one from the Jobs tab.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 13\n        }, this) : topJobs.map((job, idx) => _jsxDEV(View, {\n          style: {\n            marginBottom: idx === topJobs.length - 1 ? 0 : spacing(2.5)\n          },\n          children: [_jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center'\n            },\n            children: [_jsxDEV(Text, {\n              style: {\n                color: palette.text,\n                fontSize: typography.h2,\n                fontWeight: '600'\n              },\n              children: job.name || `Job #${job.id}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 19\n            }, this), _jsxDEV(StatusPill, {\n              status: job.status || 'SCHEDULED'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 17\n          }, this), job.startDate || job.endDate ? _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.5)\n            },\n            children: [job.startDate ? `Start ${formatDate(job.startDate)}` : '', job.startDate && job.endDate ? ' • ' : '', job.endDate ? `Due ${formatDate(job.endDate)}` : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 19\n          }, this) : null, job.notes ? _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(1)\n            },\n            numberOfLines: 2,\n            children: job.notes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 19\n          }, this) : null, _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              columnGap: spacing(1.5),\n              marginTop: spacing(1.5)\n            },\n            children: [_jsxDEV(QuickAction, {\n              label: \"Open job\",\n              onPress: () => navigation.navigate('JobDetail', {\n                jobId: job.id\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 19\n            }, this), _jsxDEV(QuickAction, {\n              label: \"Tasks\",\n              onPress: () => navigation.navigate('JobDetail', {\n                jobId: job.id,\n                tab: 'tasks'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 17\n          }, this)]\n        }, job.id || idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 9\n      }, this), _jsxDEV(SectionHeader, {\n        title: \"Hot Leads\",\n        actionLabel: \"Leads\",\n        onAction: () => navigation.navigate('Leads')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: topLeads.length === 0 ? _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: \"No leads yet. Capture leads to keep the funnel full.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 13\n        }, this) : topLeads.map((lead, idx) => _jsxDEV(View, {\n          style: {\n            marginBottom: idx === topLeads.length - 1 ? 0 : spacing(2)\n          },\n          children: [_jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center'\n            },\n            children: [_jsxDEV(Text, {\n              style: {\n                color: palette.text,\n                fontWeight: '600',\n                fontSize: typography.h2\n              },\n              children: [\"Lead #\", lead.id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 19\n            }, this), _jsxDEV(StatusPill, {\n              status: lead.status || 'NEW'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 17\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.5)\n            },\n            numberOfLines: 3,\n            children: lead.description || 'No scope captured yet.'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 17\n          }, this), _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              columnGap: spacing(1.5),\n              marginTop: spacing(1.5)\n            },\n            children: [_jsxDEV(QuickAction, {\n              label: \"Follow up\",\n              onPress: () => navigation.navigate('EstimateEditor', {\n                leadId: lead.id\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 19\n            }, this), _jsxDEV(QuickAction, {\n              label: \"Convert\",\n              onPress: () => navigation.navigate('Jobs')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 17\n          }, this)]\n        }, lead.id || idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 9\n      }, this), _jsxDEV(SectionHeader, {\n        title: \"Open Tasks\",\n        actionLabel: \"Jobs\",\n        onAction: () => navigation.navigate('Jobs')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        children: nextTasks.length === 0 ? _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: \"All clear. Add tasks from a job to keep crews aligned.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 13\n        }, this) : nextTasks.map((task, idx) => _jsxDEV(View, {\n          style: {\n            marginBottom: idx === nextTasks.length - 1 ? 0 : spacing(2)\n          },\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.text,\n              fontWeight: '600'\n            },\n            children: task.title || 'Task'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 17\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.5)\n            },\n            children: task.dueDate ? `Due ${formatDate(task.dueDate)}` : 'No due date'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 17\n          }, this), _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              columnGap: spacing(1.5),\n              marginTop: spacing(1.5)\n            },\n            children: [_jsxDEV(QuickAction, {\n              label: \"Mark done\",\n              onPress: () => navigation.navigate('JobDetail', {\n                jobId: task.jobId\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 19\n            }, this), _jsxDEV(QuickAction, {\n              label: \"View job\",\n              onPress: () => navigation.navigate('JobDetail', {\n                jobId: task.jobId\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 529,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 17\n          }, this)]\n        }, task.id || idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 9\n      }, this), lastUpdated ? _jsxDEV(Text, {\n        style: {\n          color: palette.muted,\n          fontSize: typography.small,\n          marginTop: spacing(2),\n          textAlign: 'center'\n        },\n        children: [\"Updated \", lastUpdated.toLocaleTimeString([], {\n          hour: 'numeric',\n          minute: '2-digit'\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 410,\n    columnNumber: 5\n  }, this);\n}\nfunction SignaturePad({\n  onCapturePng\n}) {\n  const [points, setPoints] = useState([]);\n  const [path, setPath] = useState('');\n  const shotRef = useRef(null);\n  return _jsxDEV(ViewShot, {\n    ref: shotRef,\n    options: {\n      format: 'png',\n      quality: 0.9,\n      result: 'base64'\n    },\n    style: {\n      height: 220,\n      borderWidth: 1,\n      backgroundColor: '#fff'\n    },\n    children: _jsxDEV(View, {\n      onStartShouldSetResponder: () => true,\n      onResponderMove: e => {\n        const x = e.nativeEvent.locationX,\n          y = e.nativeEvent.locationY;\n        setPath(p => p + (p ? ` L ${x} ${y}` : ` M ${x} ${y}`));\n      },\n      onResponderRelease: async () => {\n        const base64 = await shotRef.current.capture();\n        onCapturePng && onCapturePng('data:image/png;base64,' + base64);\n      },\n      style: {\n        flex: 1\n      },\n      children: _jsxDEV(Svg, {\n        height: \"100%\",\n        width: \"100%\",\n        children: _jsxDEV(Path, {\n          d: path,\n          stroke: \"black\",\n          strokeWidth: \"2\",\n          fill: \"none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 555,\n    columnNumber: 5\n  }, this);\n}\nfunction SignatureScreen({\n  route,\n  navigation\n}) {\n  const {\n    token\n  } = useAuth();\n  const {\n    estimateId\n  } = route.params;\n  const [sigPng, setSigPng] = useState(null);\n  const save = async () => {\n    if (!sigPng) {\n      Alert.alert('Please sign first');\n      return;\n    }\n    const resp = await api(`/estimates/${estimateId}/approve`, 'POST', {\n      signaturePngUrl: sigPng\n    }, token);\n    Alert.alert('Approved', `Payment link:\\n${resp && resp.paymentLink ? resp.paymentLink : 'Unavailable'}`);\n    navigation.goBack();\n  };\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      padding: 16\n    },\n    children: [_jsxDEV(Text, {\n      style: {\n        fontSize: 18,\n        marginBottom: 8\n      },\n      children: [\"Sign Estimate #\", estimateId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 7\n    }, this), _jsxDEV(SignaturePad, {\n      onCapturePng: setSigPng\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: {\n        height: 12\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 7\n    }, this), _jsxDEV(Button, {\n      title: \"Save Signature\",\n      onPress: save\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 584,\n    columnNumber: 5\n  }, this);\n}\nfunction UsersAdminScreen() {\n  const {\n    token\n  } = useAuth();\n  const [users, setUsers] = useState([]);\n  const [email, setEmail] = useState('');\n  const [fullName, setFullName] = useState('');\n  const [role, setRole] = useState('TECH');\n  const load = async () => setUsers(await api('/users', 'GET', null, token));\n  useEffect(() => {\n    load();\n  }, []);\n  const invite = async () => {\n    await api('/users', 'POST', {\n      email,\n      fullName,\n      role: normalizeRole(role)\n    }, token);\n    setEmail('');\n    setFullName('');\n    setRole('TECH');\n    load();\n  };\n  const promote = async (id, newRole) => {\n    await api(`/users/${id}`, 'PATCH', {\n      role: normalizeRole(newRole)\n    }, token);\n    load();\n  };\n  const remove = async id => {\n    Alert.alert('Delete user', 'Are you sure?', [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Delete',\n      style: 'destructive',\n      onPress: async () => {\n        await api(`/users/${id}`, 'DELETE', null, token);\n        load();\n      }\n    }]);\n  };\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      padding: 16\n    },\n    children: [_jsxDEV(Text, {\n      style: {\n        fontSize: 18,\n        fontWeight: '600'\n      },\n      children: \"Invite User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 617,\n      columnNumber: 7\n    }, this), _jsxDEV(TextInput, {\n      placeholder: \"Full name\",\n      value: fullName,\n      onChangeText: setFullName,\n      style: {\n        borderWidth: 1,\n        padding: 8,\n        marginVertical: 6\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 618,\n      columnNumber: 7\n    }, this), _jsxDEV(TextInput, {\n      placeholder: \"Email\",\n      value: email,\n      onChangeText: setEmail,\n      autoCapitalize: \"none\",\n      style: {\n        borderWidth: 1,\n        padding: 8,\n        marginVertical: 6\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 619,\n      columnNumber: 7\n    }, this), _jsxDEV(TextInput, {\n      placeholder: \"Role (ADMIN/ESTIMATOR/SUPERVISOR/TECH)\",\n      value: role,\n      onChangeText: setRole,\n      style: {\n        borderWidth: 1,\n        padding: 8,\n        marginVertical: 6\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 620,\n      columnNumber: 7\n    }, this), _jsxDEV(Button, {\n      title: \"Create User\",\n      onPress: invite\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: {\n        height: 16\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 622,\n      columnNumber: 7\n    }, this), _jsxDEV(FlatList, {\n      data: users,\n      keyExtractor: u => String(u.id),\n      renderItem: ({\n        item\n      }) => _jsxDEV(View, {\n        style: {\n          padding: 12,\n          borderWidth: 1,\n          marginBottom: 8\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            fontWeight: '600'\n          },\n          children: item.fullName || item.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 625,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          children: item.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 626,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          children: [\"Role: \", item.role]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            gap: 8,\n            marginTop: 8,\n            flexWrap: 'wrap'\n          },\n          children: [_jsxDEV(Button, {\n            title: \"Admin\",\n            onPress: () => promote(item.id, 'ADMIN')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 629,\n            columnNumber: 13\n          }, this), _jsxDEV(Button, {\n            title: \"Estimator\",\n            onPress: () => promote(item.id, 'ESTIMATOR')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 630,\n            columnNumber: 13\n          }, this), _jsxDEV(Button, {\n            title: \"Supervisor\",\n            onPress: () => promote(item.id, 'SUPERVISOR')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 631,\n            columnNumber: 13\n          }, this), _jsxDEV(Button, {\n            title: \"Tech\",\n            onPress: () => promote(item.id, 'TECH')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 632,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: {\n              width: 8\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 633,\n            columnNumber: 13\n          }, this), _jsxDEV(Button, {\n            title: \"Delete\",\n            color: \"#c00\",\n            onPress: () => remove(item.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 634,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 624,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 623,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 616,\n    columnNumber: 5\n  }, this);\n}\nfunction JobsKanbanScreen({\n  navigation\n}) {\n  const {\n    token\n  } = useAuth();\n  const [jobs, setJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [refreshing, setRefreshing] = useState(false);\n  const [newJobName, setNewJobName] = useState('');\n  const [newJobStartDate, setNewJobStartDate] = useState('');\n  const [newJobDueDate, setNewJobDueDate] = useState('');\n  const [newJobNotes, setNewJobNotes] = useState('');\n  const [newCustomerName, setNewCustomerName] = useState('');\n  const [newCustomerPhone, setNewCustomerPhone] = useState('');\n  const [newCustomerEmail, setNewCustomerEmail] = useState('');\n  const [newAddressLine1, setNewAddressLine1] = useState('');\n  const [newAddressLine2, setNewAddressLine2] = useState('');\n  const [newCity, setNewCity] = useState('');\n  const [newStateCode, setNewStateCode] = useState('');\n  const [newZip, setNewZip] = useState('');\n  const [jobFormTab, setJobFormTab] = useState('BASICS');\n  const statusOrder = ['SCHEDULED', 'IN_PROGRESS', 'ON_HOLD', 'DONE', 'COMPLETE', 'CANCELLED'];\n  const load = useCallback(async (isRefresh = false) => {\n    isRefresh ? setRefreshing(true) : setLoading(true);\n    try {\n      const data = await api('/jobs', 'GET', null, token);\n      setJobs(data);\n      db.transaction(tx => {\n        tx.executeSql && tx.executeSql('DELETE FROM jobs_cache;');\n        data.forEach(j => tx.executeSql && tx.executeSql('INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)', [j.id, j.name || '', j.status || 'SCHEDULED', j.startDate || '', j.endDate || '', j.notes || '']));\n      });\n    } catch (e) {\n      db.transaction(tx => tx.executeSql && tx.executeSql('SELECT id, name, status, startDate, endDate, notes FROM jobs_cache', [], (_, {\n        rows\n      }) => setJobs(rows._array || [])));\n    } finally {\n      isRefresh ? setRefreshing(false) : setLoading(false);\n    }\n  }, [token]);\n  useFocusEffect(useCallback(() => {\n    load(false);\n  }, [load]));\n  const onRefresh = useCallback(() => load(true), [load]);\n  const resetForm = () => {\n    setNewJobName('');\n    setNewJobStartDate('');\n    setNewJobDueDate('');\n    setNewJobNotes('');\n    setNewCustomerName('');\n    setNewCustomerPhone('');\n    setNewCustomerEmail('');\n    setNewAddressLine1('');\n    setNewAddressLine2('');\n    setNewCity('');\n    setNewStateCode('');\n    setNewZip('');\n    setJobFormTab('BASICS');\n  };\n  const createJob = async () => {\n    if (!newJobName.trim()) {\n      Alert.alert('Missing info', 'Please add a job name.');\n      setJobFormTab('BASICS');\n      return;\n    }\n    const hasCustomer = [newCustomerName, newCustomerPhone, newCustomerEmail].some(v => v && v.trim());\n    const hasAddress = [newAddressLine1, newCity, newStateCode, newZip].some(v => v && v.trim());\n    const payload = {\n      name: newJobName.trim(),\n      status: 'SCHEDULED',\n      startDate: newJobStartDate || null,\n      endDate: newJobDueDate || null,\n      notes: newJobNotes.trim() || null\n    };\n    if (hasCustomer) {\n      payload.customer = {\n        name: newCustomerName.trim(),\n        phone: newCustomerPhone.trim(),\n        email: newCustomerEmail.trim(),\n        billingAddress: newAddressLine1 ? `${newAddressLine1}${newAddressLine2 ? `\\n${newAddressLine2}` : ''}${newCity ? `\\n${newCity}, ${newStateCode} ${newZip}` : ''}` : null\n      };\n    }\n    if (hasAddress) {\n      payload.jobsite = {\n        addressLine1: newAddressLine1.trim(),\n        addressLine2: newAddressLine2.trim(),\n        city: newCity.trim(),\n        state: newStateCode.trim(),\n        zip: newZip.trim()\n      };\n    }\n    try {\n      const created = await api('/jobs', 'POST', payload, token);\n      setJobs(prev => [created, ...prev]);\n      db.transaction(tx => tx.executeSql && tx.executeSql('INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)', [created.id, created.name || '', created.status || 'SCHEDULED', created.startDate || '', created.endDate || '', created.notes || '']));\n      resetForm();\n      Alert.alert('Job created', `Job #${created.id} ready to schedule.`);\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to create job');\n    }\n  };\n  const updateJobStatus = async (id, status) => {\n    try {\n      const updated = await api(`/jobs/${id}`, 'PATCH', {\n        status\n      }, token);\n      setJobs(prev => prev.map(job => job.id === id ? updated : job));\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to update job status');\n    }\n  };\n  const removeJob = async id => {\n    Alert.alert('Delete Job', `Delete job #${id}?`, [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Delete',\n      style: 'destructive',\n      onPress: async () => {\n        try {\n          await api(`/jobs/${id}`, 'DELETE', null, token);\n          setJobs(prev => prev.filter(job => job.id !== id));\n          db.transaction(tx => tx.executeSql && tx.executeSql('DELETE FROM jobs_cache WHERE id=?', [id]));\n        } catch (e) {\n          Alert.alert('Error', e.message || 'Unable to delete job');\n        }\n      }\n    }]);\n  };\n  const sortedJobs = useMemo(() => {\n    const normalize = status => (status || 'SCHEDULED').toUpperCase();\n    const rank = status => {\n      const key = normalize(status);\n      const idx = statusOrder.indexOf(key);\n      return idx === -1 ? statusOrder.length : idx;\n    };\n    const parseDateSafe = value => {\n      if (!value) return null;\n      const d = new Date(value);\n      return Number.isNaN(d.getTime()) ? null : d;\n    };\n    return [...jobs].sort((a, b) => {\n      const statusDiff = rank(a.status) - rank(b.status);\n      if (statusDiff !== 0) return statusDiff;\n      const startA = parseDateSafe(a.startDate);\n      const startB = parseDateSafe(b.startDate);\n      if (startA && startB) return startA - startB;\n      if (startA) return -1;\n      if (startB) return 1;\n      return (b.id || 0) - (a.id || 0);\n    });\n  }, [jobs, statusOrder]);\n  const groupedJobs = useMemo(() => {\n    const groups = [];\n    let currentStatus = null;\n    sortedJobs.forEach(job => {\n      const statusKey = (job.status || 'SCHEDULED').toUpperCase();\n      if (statusKey !== currentStatus) {\n        groups.push({\n          status: statusKey,\n          jobs: [job]\n        });\n        currentStatus = statusKey;\n      } else {\n        groups[groups.length - 1].jobs.push(job);\n      }\n    });\n    return groups;\n  }, [sortedJobs]);\n  const statusLabel = status => {\n    const key = (status || 'SCHEDULED').toUpperCase();\n    return pillTone[key]?.label || key.charAt(0) + key.slice(1).toLowerCase();\n  };\n  const quickStatusActions = [{\n    label: 'Start job',\n    value: 'IN_PROGRESS',\n    tone: 'primary'\n  }, {\n    label: 'Pause',\n    value: 'ON_HOLD',\n    tone: 'warning'\n  }, {\n    label: 'Wrap up',\n    value: 'DONE',\n    tone: 'success'\n  }];\n  const inputStyle = {\n    borderWidth: 1,\n    borderColor: palette.border,\n    borderRadius: 12,\n    paddingHorizontal: spacing(1.5),\n    paddingVertical: spacing(1.25),\n    backgroundColor: palette.surfaceMuted,\n    color: palette.text,\n    fontSize: typography.body,\n    marginBottom: spacing(1.5)\n  };\n  const jobTabs = [{\n    key: 'BASICS',\n    label: 'Basics'\n  }, {\n    key: 'CUSTOMER',\n    label: 'Customer'\n  }, {\n    key: 'JOBSITE',\n    label: 'Jobsite'\n  }, {\n    key: 'NOTES',\n    label: 'Notes'\n  }];\n  const renderJobFormFields = () => {\n    if (jobFormTab === 'BASICS') {\n      return _jsxDEV(View, {\n        children: [_jsxDEV(TextInput, {\n          placeholder: \"Job name\",\n          placeholderTextColor: palette.muted,\n          value: newJobName,\n          onChangeText: setNewJobName,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 859,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Start date (YYYY-MM-DD)\",\n          placeholderTextColor: palette.muted,\n          value: newJobStartDate,\n          onChangeText: setNewJobStartDate,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 866,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Due date (YYYY-MM-DD)\",\n          placeholderTextColor: palette.muted,\n          value: newJobDueDate,\n          onChangeText: setNewJobDueDate,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 873,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 858,\n        columnNumber: 9\n      }, this);\n    }\n    if (jobFormTab === 'CUSTOMER') {\n      return _jsxDEV(View, {\n        children: [_jsxDEV(TextInput, {\n          placeholder: \"Customer name\",\n          placeholderTextColor: palette.muted,\n          value: newCustomerName,\n          onChangeText: setNewCustomerName,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 886,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Phone\",\n          placeholderTextColor: palette.muted,\n          keyboardType: \"phone-pad\",\n          value: newCustomerPhone,\n          onChangeText: setNewCustomerPhone,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 893,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Email\",\n          placeholderTextColor: palette.muted,\n          keyboardType: \"email-address\",\n          autoCapitalize: \"none\",\n          value: newCustomerEmail,\n          onChangeText: setNewCustomerEmail,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 901,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 885,\n        columnNumber: 9\n      }, this);\n    }\n    if (jobFormTab === 'JOBSITE') {\n      return _jsxDEV(View, {\n        children: [_jsxDEV(TextInput, {\n          placeholder: \"Address line 1\",\n          placeholderTextColor: palette.muted,\n          value: newAddressLine1,\n          onChangeText: setNewAddressLine1,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 916,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Address line 2\",\n          placeholderTextColor: palette.muted,\n          value: newAddressLine2,\n          onChangeText: setNewAddressLine2,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 923,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            columnGap: spacing(1.5)\n          },\n          children: [_jsxDEV(View, {\n            style: {\n              flex: 1\n            },\n            children: _jsxDEV(TextInput, {\n              placeholder: \"City\",\n              placeholderTextColor: palette.muted,\n              value: newCity,\n              onChangeText: setNewCity,\n              style: [inputStyle, {\n                marginBottom: 0\n              }]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 932,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 931,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: {\n              width: 80\n            },\n            children: _jsxDEV(TextInput, {\n              placeholder: \"State\",\n              placeholderTextColor: palette.muted,\n              value: newStateCode,\n              onChangeText: setNewStateCode,\n              style: [inputStyle, {\n                marginBottom: 0\n              }]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 941,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 940,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: {\n              width: 100\n            },\n            children: _jsxDEV(TextInput, {\n              placeholder: \"ZIP\",\n              placeholderTextColor: palette.muted,\n              value: newZip,\n              onChangeText: setNewZip,\n              style: [inputStyle, {\n                marginBottom: 0\n              }]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 950,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 949,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 930,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 915,\n        columnNumber: 9\n      }, this);\n    }\n    return _jsxDEV(TextInput, {\n      placeholder: \"Internal notes\",\n      placeholderTextColor: palette.muted,\n      value: newJobNotes,\n      onChangeText: setNewJobNotes,\n      multiline: true,\n      style: [inputStyle, {\n        minHeight: 96,\n        textAlignVertical: 'top'\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 963,\n      columnNumber: 7\n    }, this);\n  };\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(4)\n      },\n      refreshControl: _jsxDEV(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh,\n        tintColor: palette.primary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 978,\n        columnNumber: 25\n      }, this),\n      children: [_jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3),\n          padding: spacing(2.5)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontSize: typography.h2,\n            fontWeight: '700',\n            marginBottom: spacing(2)\n          },\n          children: \"Create job\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 981,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            columnGap: spacing(1),\n            rowGap: spacing(1.5),\n            marginBottom: spacing(2)\n          },\n          children: jobTabs.map(tab => {\n            const selected = tab.key === jobFormTab;\n            return _jsxDEV(TouchableOpacity, {\n              onPress: () => setJobFormTab(tab.key),\n              activeOpacity: 0.85,\n              style: {\n                paddingHorizontal: spacing(2),\n                paddingVertical: spacing(1),\n                borderRadius: 999,\n                borderWidth: 1,\n                borderColor: selected ? palette.primary : palette.border,\n                backgroundColor: selected ? '#d9f2ed' : palette.surface\n              },\n              children: _jsxDEV(Text, {\n                style: {\n                  color: selected ? palette.primaryStrong : palette.muted,\n                  fontWeight: '600',\n                  fontSize: typography.small\n                },\n                children: tab.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 999,\n                columnNumber: 19\n              }, this)\n            }, tab.key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 986,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 982,\n          columnNumber: 11\n        }, this), renderJobFormFields(), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginTop: spacing(2)\n          },\n          children: [_jsxDEV(QuickAction, {\n            label: \"Reset\",\n            tone: \"muted\",\n            onPress: resetForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1008,\n            columnNumber: 13\n          }, this), _jsxDEV(TouchableOpacity, {\n            onPress: createJob,\n            activeOpacity: 0.85,\n            style: {\n              backgroundColor: palette.primary,\n              paddingHorizontal: spacing(2.5),\n              paddingVertical: spacing(1.5),\n              borderRadius: 12\n            },\n            children: _jsxDEV(Text, {\n              style: {\n                color: '#fff',\n                fontWeight: '700'\n              },\n              children: \"Create job\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1014,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1009,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1007,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 980,\n        columnNumber: 9\n      }, this), loading && !refreshing && jobs.length === 0 ? _jsxDEV(SurfaceCard, {\n        style: {\n          alignItems: 'center',\n          paddingVertical: spacing(6),\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(ActivityIndicator, {\n          color: palette.primary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1021,\n          columnNumber: 13\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(1.5)\n          },\n          children: \"Loading jobs...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1022,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1020,\n        columnNumber: 11\n      }, this) : null, groupedJobs.length === 0 ? _jsxDEV(SurfaceCard, {\n        children: _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: \"No jobs yet. Convert a lead or add a job to get started.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1028,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1027,\n        columnNumber: 11\n      }, this) : groupedJobs.map(group => _jsxDEV(View, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontWeight: '700',\n            fontSize: typography.small,\n            textTransform: 'uppercase',\n            marginBottom: spacing(1)\n          },\n          children: statusLabel(group.status)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1033,\n          columnNumber: 15\n        }, this), group.jobs.map(job => {\n          const customer = job.Customer || {};\n          const jobsite = job.Jobsite || {};\n          const addressParts = [jobsite.addressLine1, jobsite.addressLine2, [jobsite.city, jobsite.state].filter(Boolean).join(', '), jobsite.zip].filter(Boolean);\n          const address = addressParts.join(', ');\n          const statusKey = (job.status || 'SCHEDULED').toUpperCase();\n          return _jsxDEV(SurfaceCard, {\n            style: {\n              marginBottom: spacing(1.5)\n            },\n            children: [_jsxDEV(View, {\n              style: {\n                flexDirection: 'row',\n                justifyContent: 'space-between',\n                alignItems: 'center'\n              },\n              children: [_jsxDEV(Text, {\n                style: {\n                  color: palette.text,\n                  fontSize: typography.h2,\n                  fontWeight: '600'\n                },\n                children: job.name || `Job #${job.id}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1050,\n                columnNumber: 23\n              }, this), _jsxDEV(StatusPill, {\n                status: statusKey\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1051,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1049,\n              columnNumber: 21\n            }, this), job.startDate || job.endDate ? _jsxDEV(Text, {\n              style: {\n                color: palette.muted,\n                marginTop: spacing(0.75)\n              },\n              children: [job.startDate ? `Start ${formatDate(job.startDate)}` : null, job.endDate ? `Due ${formatDate(job.endDate)}` : null].filter(Boolean).join(' | ')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1054,\n              columnNumber: 23\n            }, this) : null, customer.name ? _jsxDEV(Text, {\n              style: {\n                color: palette.text,\n                fontWeight: '600',\n                marginTop: spacing(1)\n              },\n              children: customer.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1058,\n              columnNumber: 38\n            }, this) : null, customer.phone ? _jsxDEV(Text, {\n              style: {\n                color: palette.muted\n              },\n              children: customer.phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1059,\n              columnNumber: 39\n            }, this) : null, customer.email ? _jsxDEV(Text, {\n              style: {\n                color: palette.muted\n              },\n              children: customer.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1060,\n              columnNumber: 39\n            }, this) : null, address ? _jsxDEV(Text, {\n              style: {\n                color: palette.muted,\n                marginTop: spacing(1)\n              },\n              children: address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1061,\n              columnNumber: 32\n            }, this) : null, job.notes ? _jsxDEV(Text, {\n              style: {\n                color: palette.muted,\n                marginTop: spacing(1)\n              },\n              numberOfLines: 3,\n              children: job.notes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1062,\n              columnNumber: 34\n            }, this) : null, _jsxDEV(View, {\n              style: {\n                flexDirection: 'row',\n                flexWrap: 'wrap',\n                columnGap: spacing(1),\n                rowGap: spacing(1),\n                marginTop: spacing(2)\n              },\n              children: [_jsxDEV(QuickAction, {\n                label: \"View job\",\n                onPress: () => navigation.navigate('JobDetail', {\n                  jobId: job.id\n                }),\n                tone: \"muted\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1064,\n                columnNumber: 23\n              }, this), quickStatusActions.map(action => action.value === statusKey ? null : _jsxDEV(QuickAction, {\n                label: action.label,\n                tone: action.tone,\n                onPress: () => updateJobStatus(job.id, action.value)\n              }, action.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1067,\n                columnNumber: 27\n              }, this)), _jsxDEV(QuickAction, {\n                label: \"Delete\",\n                tone: \"danger\",\n                onPress: () => removeJob(job.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1075,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1063,\n              columnNumber: 21\n            }, this)]\n          }, job.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1048,\n            columnNumber: 19\n          }, this);\n        })]\n      }, group.status, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1032,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 976,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 975,\n    columnNumber: 5\n  }, this);\n}\nfunction JobDetailScreen({\n  route,\n  navigation\n}) {\n  const {\n    jobId\n  } = route.params;\n  const {\n    token,\n    user\n  } = useAuth();\n  const [jobName, setJobName] = useState('');\n  const [jobStartDate, setJobStartDate] = useState('');\n  const [jobEndDate, setJobEndDate] = useState('');\n  const [jobNotes, setJobNotes] = useState('');\n  const [jobCustomerName, setJobCustomerName] = useState('');\n  const [jobCustomerPhone, setJobCustomerPhone] = useState('');\n  const [jobCustomerEmail, setJobCustomerEmail] = useState('');\n  const [jobAddressLine1, setJobAddressLine1] = useState('');\n  const [jobAddressLine2, setJobAddressLine2] = useState('');\n  const [jobCity, setJobCity] = useState('');\n  const [jobStateCode, setJobStateCode] = useState('');\n  const [jobZip, setJobZip] = useState('');\n  const [changeOrders, setCO] = useState([]);\n  const [title, setTitle] = useState('');\n  const [amountDelta, setAmountDelta] = useState('0');\n  const loadCO = useCallback(async () => {\n    setCO(await api(`/change-orders/job/${jobId}`, 'GET', null, token));\n  }, [jobId, token]);\n  const loadJob = useCallback(async () => {\n    try {\n      const j = await api(`/jobs/${jobId}`, 'GET', null, token);\n      setJobName(j.name || '');\n      setJobStartDate(j.startDate || '');\n      setJobEndDate(j.endDate || '');\n      setJobNotes(j.notes || '');\n      const customer = j.Customer || {};\n      const jobsite = j.Jobsite || {};\n      setJobCustomerName(customer.name || '');\n      setJobCustomerPhone(customer.phone || '');\n      setJobCustomerEmail(customer.email || '');\n      setJobAddressLine1(jobsite.addressLine1 || '');\n      setJobAddressLine2(jobsite.addressLine2 || '');\n      setJobCity(jobsite.city || '');\n      setJobStateCode(jobsite.state || '');\n      setJobZip(jobsite.zip || '');\n    } catch (e) {}\n  }, [jobId, token]);\n  useEffect(() => {\n    loadJob();\n    loadCO();\n  }, [loadJob, loadCO]);\n  const addCO = async () => {\n    if (!title.trim()) {\n      Alert.alert('Missing info', 'Add a title for the change order.');\n      return;\n    }\n    await api(`/change-orders/job/${jobId}`, 'POST', {\n      title: title.trim(),\n      amountDelta: parseFloat(amountDelta) || 0\n    }, token);\n    setTitle('');\n    setAmountDelta('0');\n    loadCO();\n  };\n  const saveJobDetails = async () => {\n    try {\n      await api(`/jobs/${jobId}`, 'PATCH', {\n        name: jobName,\n        startDate: jobStartDate || null,\n        endDate: jobEndDate || null,\n        notes: jobNotes,\n        customer: {\n          name: jobCustomerName,\n          phone: jobCustomerPhone,\n          email: jobCustomerEmail,\n          billingAddress: jobAddressLine1 ? `${jobAddressLine1}${jobAddressLine2 ? `\\n${jobAddressLine2}` : ''}${jobCity ? `\\n${jobCity}, ${jobStateCode} ${jobZip}` : ''}` : null\n        },\n        jobsite: {\n          addressLine1: jobAddressLine1,\n          addressLine2: jobAddressLine2,\n          city: jobCity,\n          state: jobStateCode,\n          zip: jobZip\n        }\n      }, token);\n      Alert.alert('Saved', 'Job details updated.');\n      loadJob();\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to save job');\n    }\n  };\n  const deleteJob = () => {\n    Alert.alert('Delete job', `Delete job #${jobId}?`, [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Delete',\n      style: 'destructive',\n      onPress: async () => {\n        try {\n          await api(`/jobs/${jobId}`, 'DELETE', null, token);\n          db.transaction(tx => tx.executeSql('DELETE FROM jobs_cache WHERE id=?', [jobId]));\n          Alert.alert('Deleted', 'Job removed.');\n          navigation.navigate('Tabs', {\n            screen: 'Jobs'\n          });\n        } catch (e) {\n          Alert.alert('Error', e.message || 'Unable to delete job');\n        }\n      }\n    }]);\n  };\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: {\n        padding: 16,\n        paddingBottom: 32\n      },\n      children: [_jsxDEV(Text, {\n        style: {\n          fontSize: 18,\n          fontWeight: '600',\n          marginBottom: 8\n        },\n        children: [\"Job #\", jobId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1180,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: {\n          fontWeight: '600',\n          marginBottom: 6\n        },\n        children: \"Job Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1181,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        placeholder: \"Job name\",\n        value: jobName,\n        onChangeText: setJobName,\n        style: {\n          borderWidth: 1,\n          padding: 8,\n          marginBottom: 6\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1182,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          gap: 8\n        },\n        children: [_jsxDEV(TextInput, {\n          placeholder: \"Start date (YYYY-MM-DD)\",\n          value: jobStartDate,\n          onChangeText: setJobStartDate,\n          style: {\n            flex: 1,\n            borderWidth: 1,\n            padding: 8\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1184,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"End date (YYYY-MM-DD)\",\n          value: jobEndDate,\n          onChangeText: setJobEndDate,\n          style: {\n            flex: 1,\n            borderWidth: 1,\n            padding: 8\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1183,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        placeholder: \"Notes / scope\",\n        value: jobNotes,\n        onChangeText: setJobNotes,\n        multiline: true,\n        style: {\n          borderWidth: 1,\n          padding: 8,\n          marginTop: 6,\n          minHeight: 80\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1187,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: {\n          fontWeight: '600',\n          marginTop: 16\n        },\n        children: \"Customer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1189,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        placeholder: \"Name\",\n        value: jobCustomerName,\n        onChangeText: setJobCustomerName,\n        style: {\n          borderWidth: 1,\n          padding: 8,\n          marginBottom: 6\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1190,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        placeholder: \"Phone\",\n        value: jobCustomerPhone,\n        onChangeText: setJobCustomerPhone,\n        keyboardType: \"phone-pad\",\n        style: {\n          borderWidth: 1,\n          padding: 8,\n          marginBottom: 6\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1191,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        placeholder: \"Email\",\n        value: jobCustomerEmail,\n        onChangeText: setJobCustomerEmail,\n        keyboardType: \"email-address\",\n        style: {\n          borderWidth: 1,\n          padding: 8,\n          marginBottom: 6\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1192,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: {\n          fontWeight: '600',\n          marginTop: 16\n        },\n        children: \"Job Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1194,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        placeholder: \"Address line 1\",\n        value: jobAddressLine1,\n        onChangeText: setJobAddressLine1,\n        style: {\n          borderWidth: 1,\n          padding: 8,\n          marginBottom: 6\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1195,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        placeholder: \"Address line 2\",\n        value: jobAddressLine2,\n        onChangeText: setJobAddressLine2,\n        style: {\n          borderWidth: 1,\n          padding: 8,\n          marginBottom: 6\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1196,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          gap: 8\n        },\n        children: [_jsxDEV(TextInput, {\n          placeholder: \"City\",\n          value: jobCity,\n          onChangeText: setJobCity,\n          style: {\n            flex: 1,\n            borderWidth: 1,\n            padding: 8\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1198,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"State\",\n          value: jobStateCode,\n          onChangeText: setJobStateCode,\n          style: {\n            width: 80,\n            borderWidth: 1,\n            padding: 8\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1199,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"ZIP\",\n          value: jobZip,\n          onChangeText: setJobZip,\n          style: {\n            width: 100,\n            borderWidth: 1,\n            padding: 8\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1200,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1197,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          marginTop: 12\n        },\n        children: _jsxDEV(Button, {\n          title: \"Save details\",\n          onPress: saveJobDetails\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1203,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1202,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          marginTop: 12\n        },\n        children: _jsxDEV(Button, {\n          color: \"#d11a2a\",\n          title: \"Delete job\",\n          onPress: deleteJob\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1206,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1205,\n        columnNumber: 9\n      }, this), (user?.role === 'ADMIN' || user?.role === 'SUPERVISOR' || user?.role === 'ESTIMATOR') && _jsxDEV(View, {\n        style: {\n          marginVertical: 16\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            fontWeight: '600'\n          },\n          children: \"New Change Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1211,\n          columnNumber: 13\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Title\",\n          value: title,\n          onChangeText: setTitle,\n          style: {\n            borderWidth: 1,\n            padding: 8,\n            marginVertical: 6\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1212,\n          columnNumber: 13\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Amount $\",\n          value: amountDelta,\n          onChangeText: setAmountDelta,\n          keyboardType: \"decimal-pad\",\n          style: {\n            borderWidth: 1,\n            padding: 8,\n            marginVertical: 6\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1213,\n          columnNumber: 13\n        }, this), _jsxDEV(Button, {\n          title: \"Add Change Order\",\n          onPress: addCO\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1214,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1210,\n        columnNumber: 11\n      }, this), _jsxDEV(Text, {\n        style: {\n          fontWeight: '600',\n          marginTop: 12\n        },\n        children: \"Change Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1217,\n        columnNumber: 9\n      }, this), changeOrders.length === 0 ? _jsxDEV(Text, {\n        style: {\n          marginVertical: 6\n        },\n        children: \"No change orders yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1219,\n        columnNumber: 11\n      }, this) : changeOrders.map(item => _jsxDEV(View, {\n        style: {\n          borderWidth: 1,\n          padding: 10,\n          borderRadius: 8,\n          marginVertical: 6\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            fontWeight: '600'\n          },\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1222,\n          columnNumber: 13\n        }, this), _jsxDEV(Text, {\n          children: [\"Status: \", item.status, \" | $\", item.amountDelta]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1223,\n          columnNumber: 13\n        }, this), (user?.role === 'ADMIN' || user?.role === 'SUPERVISOR' || user?.role === 'ESTIMATOR') && _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            gap: 8,\n            marginTop: 8\n          },\n          children: [_jsxDEV(Button, {\n            title: \"Approve\",\n            onPress: async () => {\n              await api(`/change-orders/${item.id}`, 'PATCH', {\n                status: 'APPROVED'\n              }, token);\n              loadCO();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1226,\n            columnNumber: 17\n          }, this), _jsxDEV(Button, {\n            title: \"Reject\",\n            onPress: async () => {\n              await api(`/change-orders/${item.id}`, 'PATCH', {\n                status: 'REJECTED'\n              }, token);\n              loadCO();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1227,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1225,\n          columnNumber: 15\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1221,\n        columnNumber: 11\n      }, this)), _jsxDEV(Text, {\n        style: {\n          fontWeight: '600',\n          marginTop: 16\n        },\n        children: \"Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1233,\n        columnNumber: 9\n      }, this), _jsxDEV(JobTasks, {\n        jobId: jobId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1234,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: {\n          fontWeight: '600',\n          marginTop: 16\n        },\n        children: \"Schedule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1236,\n        columnNumber: 9\n      }, this), _jsxDEV(JobSchedule, {\n        jobId: jobId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1237,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1179,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1178,\n    columnNumber: 5\n  }, this);\n}\nfunction JobTasks({\n  jobId\n}) {\n  const {\n    token\n  } = useAuth();\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState('');\n  const [dueDate, setDueDate] = useState('');\n  const load = async () => {\n    try {\n      const data = await api(`/tasks?jobId=${jobId}`, 'GET', null, token);\n      setTasks(data);\n      db.transaction(tx => {\n        tx.executeSql('DELETE FROM tasks_cache WHERE jobId=?', [jobId]);\n        data.forEach(t => tx.executeSql('INSERT OR REPLACE INTO tasks_cache (id, jobId, title, status, dueDate) VALUES (?,?,?,?,?)', [t.id, jobId, t.title || '', t.status || 'TODO', t.dueDate || '']));\n      });\n    } catch (e) {\n      db.transaction(tx => tx.executeSql('SELECT id, jobId, title, status, dueDate FROM tasks_cache WHERE jobId=?', [jobId], (_, {\n        rows\n      }) => setTasks(rows._array || [])));\n    }\n  };\n  useEffect(() => {\n    load();\n  }, []);\n  const add = async () => {\n    if (!title.trim()) return Alert.alert('Title required');\n    await api('/tasks', 'POST', {\n      title,\n      jobId,\n      dueDate\n    }, token);\n    setTitle('');\n    setDueDate('');\n    load();\n  };\n  const done = async id => {\n    await api(`/tasks/${id}`, 'PATCH', {\n      status: 'DONE'\n    }, token);\n    load();\n  };\n  const remove = async id => {\n    await api(`/tasks/${id}`, 'DELETE', null, token);\n    load();\n  };\n  return _jsxDEV(View, {\n    children: [_jsxDEV(View, {\n      style: {\n        flexDirection: 'row',\n        gap: 8,\n        marginVertical: 8\n      },\n      children: [_jsxDEV(TextInput, {\n        placeholder: \"Task title\",\n        value: title,\n        onChangeText: setTitle,\n        style: {\n          flex: 1,\n          borderWidth: 1,\n          padding: 8\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1271,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        placeholder: \"Due YYYY-MM-DD\",\n        value: dueDate,\n        onChangeText: setDueDate,\n        style: {\n          width: 140,\n          borderWidth: 1,\n          padding: 8\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1272,\n        columnNumber: 9\n      }, this), _jsxDEV(Button, {\n        title: \"Add\",\n        onPress: add\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1273,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1270,\n      columnNumber: 7\n    }, this), tasks.map(t => _jsxDEV(View, {\n      style: {\n        borderWidth: 1,\n        padding: 10,\n        borderRadius: 8,\n        marginVertical: 6\n      },\n      children: [_jsxDEV(Text, {\n        style: {\n          fontWeight: '600'\n        },\n        children: t.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1277,\n        columnNumber: 11\n      }, this), _jsxDEV(Text, {\n        children: [\"Due: \", t.dueDate || '-', \" | Status: \", t.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1278,\n        columnNumber: 11\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          gap: 8,\n          marginTop: 6\n        },\n        children: [_jsxDEV(Button, {\n          title: \"Mark Done\",\n          onPress: () => done(t.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1280,\n          columnNumber: 13\n        }, this), _jsxDEV(Button, {\n          title: \"Delete\",\n          color: \"#c00\",\n          onPress: () => remove(t.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1281,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1279,\n        columnNumber: 11\n      }, this)]\n    }, t.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1276,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1269,\n    columnNumber: 5\n  }, this);\n}\nfunction JobSchedule({\n  jobId\n}) {\n  const {\n    token\n  } = useAuth();\n  const [events, setEvents] = useState([]);\n  const [title, setTitle] = useState('');\n  const [startAt, setStartAt] = useState('');\n  const [endAt, setEndAt] = useState('');\n  const load = async () => {\n    try {\n      const data = await api(`/calendar?jobId=${jobId}`, 'GET', null, token);\n      setEvents(data);\n      db.transaction(tx => {\n        tx.executeSql('DELETE FROM calendar_cache WHERE jobId=?', [jobId]);\n        data.forEach(ev => tx.executeSql('INSERT OR REPLACE INTO calendar_cache (id, jobId, title, startAt, endAt) VALUES (?,?,?,?,?)', [ev.id, jobId, ev.title || '', ev.startAt || '', ev.endAt || '']));\n      });\n    } catch (e) {\n      db.transaction(tx => tx.executeSql('SELECT id, jobId, title, startAt, endAt FROM calendar_cache WHERE jobId=?', [jobId], (_, {\n        rows\n      }) => setEvents(rows._array || [])));\n    }\n  };\n  useEffect(() => {\n    load();\n  }, []);\n  const add = async () => {\n    if (!title.trim() || !startAt) return Alert.alert('Title and start time required');\n    await api('/calendar', 'POST', {\n      title,\n      jobId,\n      startAt,\n      endAt\n    }, token);\n    setTitle('');\n    setStartAt('');\n    setEndAt('');\n    load();\n  };\n  const remove = async id => {\n    await api(`/calendar/${id}`, 'DELETE', null, token);\n    load();\n  };\n  return _jsxDEV(View, {\n    children: [_jsxDEV(View, {\n      style: {\n        marginVertical: 8\n      },\n      children: [_jsxDEV(TextInput, {\n        placeholder: \"Event title\",\n        value: title,\n        onChangeText: setTitle,\n        style: {\n          borderWidth: 1,\n          padding: 8,\n          marginBottom: 6\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1317,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        placeholder: \"Start (YYYY-MM-DDTHH:mm:ssZ)\",\n        value: startAt,\n        onChangeText: setStartAt,\n        style: {\n          borderWidth: 1,\n          padding: 8,\n          marginBottom: 6\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1318,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        placeholder: \"End (YYYY-MM-DDTHH:mm:ssZ)\",\n        value: endAt,\n        onChangeText: setEndAt,\n        style: {\n          borderWidth: 1,\n          padding: 8,\n          marginBottom: 6\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1319,\n        columnNumber: 9\n      }, this), _jsxDEV(Button, {\n        title: \"Add Event\",\n        onPress: add\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1320,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1316,\n      columnNumber: 7\n    }, this), events.map(ev => _jsxDEV(View, {\n      style: {\n        borderWidth: 1,\n        padding: 10,\n        borderRadius: 8,\n        marginVertical: 6\n      },\n      children: [_jsxDEV(Text, {\n        style: {\n          fontWeight: '600'\n        },\n        children: ev.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1324,\n        columnNumber: 11\n      }, this), _jsxDEV(Text, {\n        children: [ev.startAt, \" -> \", ev.endAt || '-']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1325,\n        columnNumber: 11\n      }, this), _jsxDEV(Button, {\n        title: \"Delete\",\n        color: \"#c00\",\n        onPress: () => remove(ev.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1326,\n        columnNumber: 11\n      }, this)]\n    }, ev.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1323,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1315,\n    columnNumber: 5\n  }, this);\n}\nasync function processQueue(token) {\n  return new Promise(resolve => {\n    db.transaction(tx => {\n      tx.executeSql('SELECT * FROM queue', [], async (_, {\n        rows\n      }) => {\n        const items = rows._array || [];\n        for (const q of items) {\n          try {\n            const payload = JSON.parse(q.payload);\n            if (q.type === 'createLead') {\n              await api('/leads', 'POST', payload, token);\n            }\n            if (q.type === 'uploadPhoto') {\n              await api('/upload/image', 'POST', {\n                dataUrl: payload.dataUrl\n              }, token);\n            }\n            db.transaction(txx => txx.executeSql('DELETE FROM queue WHERE id=?', [q.id]));\n          } catch (e) {}\n        }\n        resolve();\n      });\n    });\n  });\n}\nfunction LeadsScreen({\n  navigation\n}) {\n  const {\n    token\n  } = useAuth();\n  const [leads, setLeads] = useState([]);\n  const [refreshing, setRefreshing] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const fetchLeads = useCallback(async () => {\n    setLoading(true);\n    try {\n      const data = await api('/leads', 'GET', null, token);\n      setLeads(data);\n      db.transaction(tx => {\n        tx.executeSql && tx.executeSql('DELETE FROM leads_cache;');\n        data.forEach(l => tx.executeSql && tx.executeSql('INSERT OR REPLACE INTO leads_cache (id, description, status) VALUES (?,?,?)', [l.id, l.description || '', l.status || 'NEW']));\n      });\n    } catch (e) {\n      db.transaction(tx => tx.executeSql && tx.executeSql('SELECT id, description, status FROM leads_cache', [], (_, {\n        rows\n      }) => setLeads(rows._array || [])));\n    } finally {\n      setLoading(false);\n    }\n  }, [token]);\n  useFocusEffect(useCallback(() => {\n    fetchLeads();\n  }, [fetchLeads]));\n  const onRefresh = useCallback(async () => {\n    setRefreshing(true);\n    await fetchLeads();\n    setRefreshing(false);\n  }, [fetchLeads]);\n  const deleteLead = useCallback(lead => {\n    Alert.alert('Delete lead', `Delete lead #${lead.id}?`, [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Delete',\n      style: 'destructive',\n      onPress: async () => {\n        try {\n          await api(`/leads/${lead.id}`, 'DELETE', null, token);\n          setLeads(prev => prev.filter(l => l.id !== lead.id));\n          db.transaction(tx => tx.executeSql && tx.executeSql('DELETE FROM leads_cache WHERE id=?', [lead.id]));\n        } catch (err) {\n          Alert.alert('Error', err.message || 'Unable to delete lead');\n        }\n      }\n    }]);\n  }, [token]);\n  const newLeadsCount = leads.filter(l => (l.status || '').toUpperCase() === 'NEW').length;\n  const renderLeadCard = lead => {\n    const customer = lead.Customer || {};\n    const jobsite = lead.Jobsite || {};\n    const addressParts = [jobsite.addressLine1, jobsite.addressLine2, [jobsite.city, jobsite.state].filter(Boolean).join(', '), jobsite.zip].filter(Boolean);\n    const address = addressParts.join(', ');\n    const statusKey = (lead.status || 'NEW').toUpperCase();\n    return _jsxDEV(SurfaceCard, {\n      children: [_jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        children: [_jsxDEV(View, {\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.text,\n              fontSize: typography.h2,\n              fontWeight: '600'\n            },\n            children: [\"Lead #\", lead.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1423,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.5)\n            },\n            children: customer.name || 'Unknown customer'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1424,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1422,\n          columnNumber: 11\n        }, this), _jsxDEV(StatusPill, {\n          status: statusKey\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1426,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1421,\n        columnNumber: 9\n      }, this), customer.phone ? _jsxDEV(Text, {\n        style: {\n          color: palette.muted,\n          marginTop: spacing(0.5)\n        },\n        children: customer.phone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1428,\n        columnNumber: 27\n      }, this) : null, customer.email ? _jsxDEV(Text, {\n        style: {\n          color: palette.muted\n        },\n        children: customer.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1429,\n        columnNumber: 27\n      }, this) : null, address ? _jsxDEV(Text, {\n        style: {\n          color: palette.muted,\n          marginTop: spacing(1)\n        },\n        children: address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1430,\n        columnNumber: 20\n      }, this) : null, _jsxDEV(Text, {\n        numberOfLines: 3,\n        style: {\n          color: palette.text,\n          marginTop: spacing(1.5)\n        },\n        children: lead.description || 'No scope captured yet.'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1431,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          columnGap: spacing(1),\n          rowGap: spacing(1),\n          marginTop: spacing(2)\n        },\n        children: [_jsxDEV(QuickAction, {\n          label: \"Open\",\n          onPress: () => navigation.navigate('EstimateEditor', {\n            leadId: lead.id\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1433,\n          columnNumber: 11\n        }, this), _jsxDEV(QuickAction, {\n          label: \"Convert\",\n          tone: \"success\",\n          onPress: () => navigation.navigate('Jobs')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1434,\n          columnNumber: 11\n        }, this), _jsxDEV(QuickAction, {\n          label: \"Delete\",\n          tone: \"danger\",\n          onPress: () => deleteLead(lead)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1435,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1432,\n        columnNumber: 9\n      }, this)]\n    }, lead.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1420,\n      columnNumber: 7\n    }, this);\n  };\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(FlatList, {\n      data: leads,\n      keyExtractor: item => String(item.id),\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(4)\n      },\n      refreshControl: _jsxDEV(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh,\n        tintColor: palette.primary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1447,\n        columnNumber: 25\n      }, this),\n      ListHeaderComponent: _jsxDEV(View, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginBottom: spacing(2)\n          },\n          children: [_jsxDEV(View, {\n            children: [_jsxDEV(Text, {\n              style: {\n                color: palette.text,\n                fontSize: typography.h1,\n                fontWeight: '700'\n              },\n              children: \"Leads\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1452,\n              columnNumber: 17\n            }, this), _jsxDEV(Text, {\n              style: {\n                color: palette.muted,\n                marginTop: spacing(0.5)\n              },\n              children: \"Keep the funnel moving\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1453,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1451,\n            columnNumber: 15\n          }, this), _jsxDEV(QuickAction, {\n            label: \"New lead\",\n            onPress: () => navigation.navigate('NewLead')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1455,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1450,\n          columnNumber: 13\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            columnGap: spacing(2),\n            rowGap: spacing(2)\n          },\n          children: [_jsxDEV(View, {\n            style: {\n              flexBasis: '48%',\n              minWidth: 160\n            },\n            children: _jsxDEV(SummaryCard, {\n              title: \"Total\",\n              value: leads.length,\n              subtitle: `${newLeadsCount} new`,\n              tone: \"info\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1459,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1458,\n            columnNumber: 15\n          }, this), _jsxDEV(View, {\n            style: {\n              flexBasis: '48%',\n              minWidth: 160\n            },\n            children: _jsxDEV(SummaryCard, {\n              title: \"Outstanding\",\n              value: newLeadsCount,\n              subtitle: \"Require follow up\",\n              tone: \"warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1462,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1461,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1457,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1449,\n        columnNumber: 11\n      }, this),\n      renderItem: ({\n        item\n      }) => renderLeadCard(item),\n      ListEmptyComponent: loading ? _jsxDEV(SurfaceCard, {\n        style: {\n          alignItems: 'center',\n          paddingVertical: spacing(4)\n        },\n        children: [_jsxDEV(ActivityIndicator, {\n          color: palette.primary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1471,\n          columnNumber: 15\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(1)\n          },\n          children: \"Loading leads...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1472,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1470,\n        columnNumber: 13\n      }, this) : _jsxDEV(SurfaceCard, {\n        children: _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: \"No leads yet. Capture a lead to get started.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1476,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1475,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1443,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1442,\n    columnNumber: 5\n  }, this);\n}\nfunction NewLeadScreen({\n  navigation\n}) {\n  const {\n    token\n  } = useAuth();\n  const [description, setDescription] = useState('');\n  const [status, setStatus] = useState('NEW');\n  const [customerName, setCustomerName] = useState('');\n  const [customerPhone, setCustomerPhone] = useState('');\n  const [customerEmail, setCustomerEmail] = useState('');\n  const [addressLine1, setAddressLine1] = useState('');\n  const [addressLine2, setAddressLine2] = useState('');\n  const [city, setCity] = useState('');\n  const [stateCode, setStateCode] = useState('');\n  const [zip, setZip] = useState('');\n  const [showCustomerSection, setShowCustomerSection] = useState(false);\n  const [showJobsiteSection, setShowJobsiteSection] = useState(false);\n  const statuses = ['NEW', 'CONTACTED', 'ESTIMATING', 'CONVERTED', 'CLOSED_LOST'];\n  const buildPayload = () => {\n    const customer = [customerName, customerPhone, customerEmail].some(v => v && v.trim()) ? {\n      name: customerName.trim(),\n      phone: customerPhone.trim(),\n      email: customerEmail.trim()\n    } : null;\n    const jobsite = [addressLine1, addressLine2, city, stateCode, zip].some(v => v && v.trim()) ? {\n      addressLine1: addressLine1.trim(),\n      addressLine2: addressLine2.trim(),\n      city: city.trim(),\n      state: stateCode.trim(),\n      zip: zip.trim()\n    } : null;\n    return {\n      description,\n      status,\n      customer,\n      jobsite\n    };\n  };\n  const createLeadOnline = async () => {\n    const payload = buildPayload();\n    const created = await api('/leads', 'POST', payload, token);\n    navigation.replace('EstimateEditor', {\n      leadId: created.id\n    });\n    Alert.alert('Lead created', `Lead #${created.id} ready to estimate.`);\n  };\n  const queueLead = () => {\n    const payload = buildPayload();\n    db.transaction(tx => tx.executeSql('INSERT INTO queue (type, payload) VALUES (?,?)', ['createLead', JSON.stringify(payload)]));\n    Alert.alert('Saved offline', 'We will submit this lead when you reconnect.');\n    navigation.goBack();\n  };\n  const submit = async () => {\n    if (!description.trim()) {\n      Alert.alert('Missing scope', 'Please describe the job or scope of work.');\n      return;\n    }\n    try {\n      await createLeadOnline();\n    } catch (e) {\n      queueLead();\n    }\n  };\n  const chipStyle = active => ({\n    paddingHorizontal: spacing(2),\n    paddingVertical: spacing(1),\n    borderRadius: 999,\n    borderWidth: 1,\n    borderColor: active ? palette.primary : palette.border,\n    backgroundColor: active ? '#d9f2ed' : palette.surface\n  });\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(6)\n      },\n      children: [_jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontSize: typography.h1,\n            fontWeight: '700',\n            marginBottom: spacing(2)\n          },\n          children: \"New lead\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1563,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontWeight: '600',\n            marginBottom: spacing(1)\n          },\n          children: \"Scope\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1564,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Describe the job...\",\n          placeholderTextColor: palette.muted,\n          value: description,\n          onChangeText: setDescription,\n          multiline: true,\n          style: {\n            borderWidth: 1,\n            borderColor: palette.border,\n            borderRadius: 12,\n            padding: spacing(2),\n            minHeight: 120,\n            color: palette.text,\n            backgroundColor: palette.surfaceMuted,\n            textAlignVertical: 'top'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1565,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontWeight: '600',\n            marginTop: spacing(2),\n            marginBottom: spacing(1)\n          },\n          children: \"Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1582,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            columnGap: spacing(1),\n            rowGap: spacing(1)\n          },\n          children: statuses.map(s => {\n            const active = status === s;\n            return _jsxDEV(TouchableOpacity, {\n              onPress: () => setStatus(s),\n              activeOpacity: 0.85,\n              style: chipStyle(active),\n              children: _jsxDEV(Text, {\n                style: {\n                  color: active ? palette.primaryStrong : palette.muted,\n                  fontWeight: '600',\n                  fontSize: typography.small\n                },\n                children: s.replace('_', ' ')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1588,\n                columnNumber: 19\n              }, this)\n            }, s, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1587,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1583,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginTop: spacing(3)\n          },\n          children: [_jsxDEV(QuickAction, {\n            label: \"Save offline\",\n            tone: \"muted\",\n            onPress: queueLead\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1594,\n            columnNumber: 13\n          }, this), _jsxDEV(TouchableOpacity, {\n            onPress: submit,\n            activeOpacity: 0.85,\n            style: {\n              backgroundColor: palette.primary,\n              paddingHorizontal: spacing(3),\n              paddingVertical: spacing(1.5),\n              borderRadius: 12\n            },\n            children: _jsxDEV(Text, {\n              style: {\n                color: '#fff',\n                fontWeight: '700'\n              },\n              children: \"Create lead\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1600,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1595,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1593,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1562,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(TouchableOpacity, {\n          onPress: () => setShowCustomerSection(v => !v),\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n          },\n          activeOpacity: 0.8,\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.text,\n              fontSize: typography.h2,\n              fontWeight: '600'\n            },\n            children: \"Customer details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1611,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.primary,\n              fontWeight: '600'\n            },\n            children: showCustomerSection ? 'Hide' : 'Add'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1612,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1606,\n          columnNumber: 11\n        }, this), showCustomerSection ? _jsxDEV(View, {\n          style: {\n            marginTop: spacing(2)\n          },\n          children: [_jsxDEV(TextInput, {\n            placeholder: \"Name\",\n            placeholderTextColor: palette.muted,\n            value: customerName,\n            onChangeText: setCustomerName,\n            style: {\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted,\n              marginBottom: spacing(1.5)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1616,\n            columnNumber: 15\n          }, this), _jsxDEV(TextInput, {\n            placeholder: \"Phone\",\n            placeholderTextColor: palette.muted,\n            keyboardType: \"phone-pad\",\n            value: customerPhone,\n            onChangeText: setCustomerPhone,\n            style: {\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted,\n              marginBottom: spacing(1.5)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1631,\n            columnNumber: 15\n          }, this), _jsxDEV(TextInput, {\n            placeholder: \"Email\",\n            placeholderTextColor: palette.muted,\n            keyboardType: \"email-address\",\n            autoCapitalize: \"none\",\n            value: customerEmail,\n            onChangeText: setCustomerEmail,\n            style: {\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1647,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1615,\n          columnNumber: 13\n        }, this) : _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(1.5)\n          },\n          children: \"Add contact details to help follow up faster.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1665,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1605,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        children: [_jsxDEV(TouchableOpacity, {\n          onPress: () => setShowJobsiteSection(v => !v),\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n          },\n          activeOpacity: 0.8,\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.text,\n              fontSize: typography.h2,\n              fontWeight: '600'\n            },\n            children: \"Jobsite address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1675,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.primary,\n              fontWeight: '600'\n            },\n            children: showJobsiteSection ? 'Hide' : 'Add'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1676,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1670,\n          columnNumber: 11\n        }, this), showJobsiteSection ? _jsxDEV(View, {\n          style: {\n            marginTop: spacing(2)\n          },\n          children: [_jsxDEV(TextInput, {\n            placeholder: \"Address line 1\",\n            placeholderTextColor: palette.muted,\n            value: addressLine1,\n            onChangeText: setAddressLine1,\n            style: {\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted,\n              marginBottom: spacing(1.5)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1680,\n            columnNumber: 15\n          }, this), _jsxDEV(TextInput, {\n            placeholder: \"Address line 2\",\n            placeholderTextColor: palette.muted,\n            value: addressLine2,\n            onChangeText: setAddressLine2,\n            style: {\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted,\n              marginBottom: spacing(1.5)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1695,\n            columnNumber: 15\n          }, this), _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              columnGap: spacing(1.5)\n            },\n            children: [_jsxDEV(View, {\n              style: {\n                flex: 1\n              },\n              children: _jsxDEV(TextInput, {\n                placeholder: \"City\",\n                placeholderTextColor: palette.muted,\n                value: city,\n                onChangeText: setCity,\n                style: {\n                  borderWidth: 1,\n                  borderColor: palette.border,\n                  borderRadius: 12,\n                  padding: spacing(2),\n                  color: palette.text,\n                  backgroundColor: palette.surfaceMuted,\n                  marginBottom: spacing(1.5)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1712,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1711,\n              columnNumber: 17\n            }, this), _jsxDEV(View, {\n              style: {\n                width: 80\n              },\n              children: _jsxDEV(TextInput, {\n                placeholder: \"State\",\n                placeholderTextColor: palette.muted,\n                value: stateCode,\n                onChangeText: setStateCode,\n                style: {\n                  borderWidth: 1,\n                  borderColor: palette.border,\n                  borderRadius: 12,\n                  padding: spacing(2),\n                  color: palette.text,\n                  backgroundColor: palette.surfaceMuted,\n                  marginBottom: spacing(1.5)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1729,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1728,\n              columnNumber: 17\n            }, this), _jsxDEV(View, {\n              style: {\n                width: 100\n              },\n              children: _jsxDEV(TextInput, {\n                placeholder: \"ZIP\",\n                placeholderTextColor: palette.muted,\n                value: zip,\n                onChangeText: setZip,\n                style: {\n                  borderWidth: 1,\n                  borderColor: palette.border,\n                  borderRadius: 12,\n                  padding: spacing(2),\n                  color: palette.text,\n                  backgroundColor: palette.surfaceMuted,\n                  marginBottom: spacing(1.5)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1746,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1745,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1710,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1679,\n          columnNumber: 13\n        }, this) : _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(1.5)\n          },\n          children: \"Add a jobsite to keep crews aligned.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1765,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1669,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1561,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1560,\n    columnNumber: 5\n  }, this);\n}\nfunction EstimateEditorScreen({\n  route,\n  navigation\n}) {\n  const {\n    token,\n    user\n  } = useAuth();\n  const {\n    leadId\n  } = route.params || {};\n  const [estimateId, setEstimateId] = useState(null);\n  const [items, setItems] = useState([]);\n  const [desc, setDesc] = useState('');\n  const [qty, setQty] = useState('1');\n  const [price, setPrice] = useState('0');\n  const [notes, setNotes] = useState('');\n  const [photoUrl, setPhotoUrl] = useState(null);\n  const [subtotal, setSubtotal] = useState(0);\n  const [taxRate, setTaxRate] = useState(7.0);\n  const [tax, setTax] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [leadDetails, setLeadDetails] = useState(null);\n  const [leadStatus, setLeadStatus] = useState('NEW');\n  const [leadScope, setLeadScope] = useState('');\n  const [leadCustomerName, setLeadCustomerName] = useState('');\n  const [leadCustomerPhone, setLeadCustomerPhone] = useState('');\n  const [leadCustomerEmail, setLeadCustomerEmail] = useState('');\n  const [leadAddressLine1, setLeadAddressLine1] = useState('');\n  const [leadAddressLine2, setLeadAddressLine2] = useState('');\n  const [leadCity, setLeadCity] = useState('');\n  const [leadStateCode, setLeadStateCode] = useState('');\n  const [leadZip, setLeadZip] = useState('');\n  const leadStatuses = ['NEW', 'CONTACTED', 'ESTIMATING', 'CONVERTED', 'CLOSED_LOST'];\n  const loadLead = useCallback(async () => {\n    if (!leadId) return;\n    try {\n      const data = await api(`/leads/${leadId}`, 'GET', null, token);\n      setLeadDetails(data);\n      setLeadStatus(data.status || 'NEW');\n      setLeadScope(data.description || '');\n      const customer = data.Customer || {};\n      const jobsite = data.Jobsite || {};\n      setLeadCustomerName(customer.name || '');\n      setLeadCustomerPhone(customer.phone || '');\n      setLeadCustomerEmail(customer.email || '');\n      setLeadAddressLine1(jobsite.addressLine1 || '');\n      setLeadAddressLine2(jobsite.addressLine2 || '');\n      setLeadCity(jobsite.city || '');\n      setLeadStateCode(jobsite.state || '');\n      setLeadZip(jobsite.zip || '');\n    } catch (e) {}\n  }, [leadId, token]);\n  useEffect(() => {\n    loadLead();\n  }, [loadLead]);\n  const createEstimate = async () => {\n    const est = await api('/estimates', 'POST', {\n      leadId,\n      customerId: leadDetails?.customerId ?? null,\n      jobsiteId: leadDetails?.jobsiteId ?? null,\n      subtotal: 0,\n      taxRate: parseFloat(taxRate) || 0,\n      total: 0\n    }, token);\n    setEstimateId(est.id);\n    return est;\n  };\n  const addItem = async () => {\n    if (!estimateId) {\n      Alert.alert('Create estimate first');\n      return;\n    }\n    _jsxDEV(Text, {\n      children: [\"Qty: \", item.qty, \" x $\", item.unitPrice, \" = \", (parseFloat(item.qty || 0) * parseFloat(item.unitPrice || 0)).toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1837,\n      columnNumber: 13\n    }, this);\n    setItems(prev => [data, ...prev]);\n    setDesc('');\n    setQty('1');\n    setPrice('0');\n  };\n  const suggest = async () => {\n    const r = await api('/ai/estimate-suggest', 'POST', {\n      notes\n    }, token);\n    let targetId = estimateId;\n    if (!targetId) {\n      const est = await createEstimate();\n      targetId = est.id;\n    }\n    for (const it of r.items) {\n      await api(`/estimates/${targetId}/items`, 'POST', it, token);\n    }\n    if (!estimateId) setEstimateId(targetId);\n    Alert.alert('Added', 'Suggested line-items added');\n  };\n  const pickPhoto = async () => {\n    const res = await ImagePicker.launchImageLibraryAsync({\n      base64: true,\n      quality: 0.6\n    });\n    if (!res.canceled && res.assets && res.assets[0].base64) {\n      const dataUrl = `data:image/jpeg;base64,${res.assets[0].base64}`;\n      try {\n        const up = await api('/upload/image', 'POST', {\n          dataUrl\n        }, token);\n        setPhotoUrl(up.url);\n      } catch (e) {\n        db.transaction(tx => tx.executeSql('INSERT INTO queue (type, payload) VALUES (?,?)', ['uploadPhoto', JSON.stringify({\n          dataUrl\n        })]));\n        Alert.alert('Queued upload', 'Will send when online');\n      }\n    }\n  };\n  const saveLeadDetails = async () => {\n    if (!leadId) return;\n    try {\n      const updated = await api(`/leads/${leadId}`, 'PATCH', {\n        description: leadScope,\n        status: leadStatus,\n        customer: [leadCustomerName, leadCustomerPhone, leadCustomerEmail].some(v => v && v.trim()) ? {\n          name: leadCustomerName,\n          phone: leadCustomerPhone,\n          email: leadCustomerEmail\n        } : null,\n        jobsite: [leadAddressLine1, leadAddressLine2, leadCity, leadStateCode, leadZip].some(v => v && v.trim()) ? {\n          addressLine1: leadAddressLine1,\n          addressLine2: leadAddressLine2,\n          city: leadCity,\n          state: leadStateCode,\n          zip: leadZip\n        } : null\n      }, token);\n      setLeadDetails(updated);\n      Alert.alert('Saved', 'Lead details updated.');\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to update lead');\n    }\n  };\n  const approveAndSign = () => {\n    if (!estimateId) {\n      Alert.alert('Create estimate');\n      return;\n    }\n    navigation.navigate('Signature', {\n      estimateId\n    });\n  };\n  const canEstimate = user?.role === 'ADMIN' || user?.role === 'ESTIMATOR';\n  useEffect(() => {\n    const s = items.reduce((acc, it) => acc + parseFloat(it.qty || 0) * parseFloat(it.unitPrice || 0), 0);\n    const t = s * (parseFloat(taxRate || 0) / 100);\n    setSubtotal(s);\n    setTax(t);\n    setTotal(s + t);\n  }, [items, taxRate]);\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: {\n        padding: 16,\n        paddingBottom: 32\n      },\n      children: [_jsxDEV(Text, {\n        style: {\n          fontSize: 18,\n          marginBottom: 8\n        },\n        children: [\"Lead #\", leadId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1910,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: {\n          fontWeight: '600',\n          marginBottom: 6\n        },\n        children: \"Lead status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1911,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          gap: 8,\n          marginBottom: 12\n        },\n        children: leadStatuses.map(s => _jsxDEV(TouchableOpacity, {\n          onPress: () => setLeadStatus(s),\n          style: {\n            paddingVertical: 6,\n            paddingHorizontal: 12,\n            borderRadius: 16,\n            borderWidth: 1,\n            borderColor: leadStatus === s ? '#007AFF' : '#ccc',\n            backgroundColor: leadStatus === s ? '#E6F0FF' : '#fff'\n          },\n          children: _jsxDEV(Text, {\n            style: {\n              color: leadStatus === s ? '#007AFF' : '#333'\n            },\n            children: s\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1926,\n            columnNumber: 15\n          }, this)\n        }, s, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1914,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1912,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: {\n          fontWeight: '600',\n          marginBottom: 6\n        },\n        children: \"Scope / notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1930,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        placeholder: \"What does this lead need? Add notes, access info, budget...\",\n        value: leadScope,\n        onChangeText: setLeadScope,\n        multiline: true,\n        style: {\n          borderWidth: 1,\n          padding: 10,\n          minHeight: 100,\n          marginBottom: 12\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1931,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: {\n          fontWeight: '600',\n          marginBottom: 6\n        },\n        children: \"Customer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1938,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        placeholder: \"Name\",\n        value: leadCustomerName,\n        onChangeText: setLeadCustomerName,\n        style: {\n          borderWidth: 1,\n          padding: 8,\n          marginBottom: 6\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1939,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        placeholder: \"Phone\",\n        value: leadCustomerPhone,\n        onChangeText: setLeadCustomerPhone,\n        keyboardType: \"phone-pad\",\n        style: {\n          borderWidth: 1,\n          padding: 8,\n          marginBottom: 6\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1940,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        placeholder: \"Email\",\n        value: leadCustomerEmail,\n        onChangeText: setLeadCustomerEmail,\n        keyboardType: \"email-address\",\n        style: {\n          borderWidth: 1,\n          padding: 8,\n          marginBottom: 12\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1941,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: {\n          fontWeight: '600',\n          marginBottom: 6\n        },\n        children: \"Job address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1942,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        placeholder: \"Address line 1\",\n        value: leadAddressLine1,\n        onChangeText: setLeadAddressLine1,\n        style: {\n          borderWidth: 1,\n          padding: 8,\n          marginBottom: 6\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1943,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        placeholder: \"Address line 2\",\n        value: leadAddressLine2,\n        onChangeText: setLeadAddressLine2,\n        style: {\n          borderWidth: 1,\n          padding: 8,\n          marginBottom: 6\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1944,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          gap: 8\n        },\n        children: [_jsxDEV(TextInput, {\n          placeholder: \"City\",\n          value: leadCity,\n          onChangeText: setLeadCity,\n          style: {\n            flex: 1,\n            borderWidth: 1,\n            padding: 8\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1946,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"State\",\n          value: leadStateCode,\n          onChangeText: setLeadStateCode,\n          style: {\n            width: 80,\n            borderWidth: 1,\n            padding: 8\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1947,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"ZIP\",\n          value: leadZip,\n          onChangeText: setLeadZip,\n          style: {\n            width: 100,\n            borderWidth: 1,\n            padding: 8\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1948,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1945,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          marginTop: 12\n        },\n        children: _jsxDEV(Button, {\n          title: \"Save lead details\",\n          onPress: saveLeadDetails\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1951,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1950,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          height: 24\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1954,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: {\n          fontSize: 18,\n          fontWeight: '600',\n          marginBottom: 8\n        },\n        children: \"Estimate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1955,\n        columnNumber: 9\n      }, this), canEstimate ? _jsxDEV(Button, {\n        title: estimateId ? `Estimate #${estimateId}` : \"Create Estimate\",\n        onPress: createEstimate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1956,\n        columnNumber: 24\n      }, this) : _jsxDEV(Text, {\n        children: \"View only (insufficient role)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1956,\n        columnNumber: 129\n      }, this), _jsxDEV(View, {\n        style: {\n          height: 12\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1957,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        placeholder: \"Item description\",\n        value: desc,\n        onChangeText: setDesc,\n        style: {\n          borderWidth: 1,\n          padding: 8,\n          marginBottom: 6\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1958,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        placeholder: \"Qty\",\n        value: qty,\n        onChangeText: setQty,\n        keyboardType: \"decimal-pad\",\n        style: {\n          borderWidth: 1,\n          padding: 8,\n          marginBottom: 6\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1959,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        placeholder: \"Unit Price\",\n        value: price,\n        onChangeText: setPrice,\n        keyboardType: \"decimal-pad\",\n        style: {\n          borderWidth: 1,\n          padding: 8,\n          marginBottom: 6\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1960,\n        columnNumber: 9\n      }, this), canEstimate && _jsxDEV(Button, {\n        title: \"Add Item\",\n        onPress: addItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1961,\n        columnNumber: 25\n      }, this), _jsxDEV(View, {\n        style: {\n          height: 16\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1962,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: {\n          fontWeight: '600'\n        },\n        children: \"AI helper\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1963,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        placeholder: \"Paste field notes...\",\n        value: notes,\n        onChangeText: setNotes,\n        multiline: true,\n        style: {\n          borderWidth: 1,\n          minHeight: 80,\n          padding: 8,\n          marginBottom: 6\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1964,\n        columnNumber: 9\n      }, this), canEstimate && _jsxDEV(Button, {\n        title: \"Suggest Line Items\",\n        onPress: suggest\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1965,\n        columnNumber: 25\n      }, this), _jsxDEV(View, {\n        style: {\n          height: 16\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1966,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: {\n          fontWeight: '600',\n          marginBottom: 6\n        },\n        children: \"Totals\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1967,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          marginBottom: 6\n        },\n        children: [_jsxDEV(Text, {\n          children: \"Subtotal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1969,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          children: [\"$\", subtotal.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1969,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1968,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n          marginBottom: 6\n        },\n        children: [_jsxDEV(Text, {\n          children: \"Tax Rate (%)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1972,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          value: String(taxRate),\n          onChangeText: v => setTaxRate(parseFloat(v) || 0),\n          keyboardType: \"decimal-pad\",\n          style: {\n            borderWidth: 1,\n            padding: 6,\n            width: 80,\n            textAlign: 'right'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1973,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1971,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          marginBottom: 6\n        },\n        children: [_jsxDEV(Text, {\n          children: \"Tax\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1976,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          children: [\"$\", tax.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1976,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1975,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          marginBottom: 12\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            fontWeight: '700'\n          },\n          children: \"Total\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1979,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            fontWeight: '700'\n          },\n          children: [\"$\", total.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1979,\n          columnNumber: 58\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1978,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          height: 8\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1981,\n        columnNumber: 9\n      }, this), _jsxDEV(Button, {\n        title: \"Attach Photo\",\n        onPress: pickPhoto\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1982,\n        columnNumber: 9\n      }, this), photoUrl ? _jsxDEV(Image, {\n        source: {\n          uri: `${API_URL}${photoUrl}`\n        },\n        style: {\n          height: 120,\n          marginTop: 8\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1983,\n        columnNumber: 21\n      }, this) : null, _jsxDEV(View, {\n        style: {\n          height: 16\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1984,\n        columnNumber: 9\n      }, this), _jsxDEV(Button, {\n        title: \"Create Job from Estimate\",\n        onPress: async () => {\n          try {\n            let targetId = estimateId;\n            if (!targetId) {\n              const est = await createEstimate();\n              targetId = est.id;\n            }\n            const hasCustomer = [leadCustomerName, leadCustomerPhone, leadCustomerEmail].some(v => v && v.trim());\n            const hasAddress = [leadAddressLine1, leadAddressLine2, leadCity, leadStateCode, leadZip].some(v => v && v.trim());\n            const payload = {\n              name: leadCustomerName ? `${leadCustomerName} - ${(leadScope || 'Job').slice(0, 40)}` : `Job for Estimate #${targetId}`,\n              status: 'SCHEDULED',\n              estimateId: targetId,\n              notes: leadScope || null\n            };\n            if (hasCustomer) {\n              payload.customer = {\n                name: leadCustomerName,\n                phone: leadCustomerPhone,\n                email: leadCustomerEmail\n              };\n            }\n            if (hasAddress) {\n              payload.jobsite = {\n                addressLine1: leadAddressLine1,\n                addressLine2: leadAddressLine2,\n                city: leadCity,\n                state: leadStateCode,\n                zip: leadZip\n              };\n            }\n            const job = await api('/jobs', 'POST', payload, token);\n            Alert.alert('Job Created', `Job #${job.id}`, [{\n              text: 'Open job',\n              onPress: () => navigation.navigate('JobDetail', {\n                jobId: job.id\n              })\n            }, {\n              text: 'OK'\n            }]);\n          } catch (e) {\n            Alert.alert('Error', e.message);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1985,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          height: 8\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2023,\n        columnNumber: 9\n      }, this), _jsxDEV(Button, {\n        title: \"Approve & Sign\",\n        onPress: approveAndSign\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2024,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          height: 8\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2025,\n        columnNumber: 9\n      }, this), _jsxDEV(Button, {\n        title: \"Send Estimate\",\n        onPress: async () => {\n          if (!estimateId) return Alert.alert('Create estimate first');\n          try {\n            await api(`/estimates/${estimateId}/send`, 'POST', {}, token);\n            Alert.alert('Sent', 'Estimate sent');\n          } catch (e) {\n            Alert.alert('Error', e.message);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2026,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          height: 8\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2030,\n        columnNumber: 9\n      }, this), _jsxDEV(Button, {\n        title: \"Download PDF\",\n        onPress: async () => {\n          if (!estimateId) return Alert.alert('Create estimate first');\n          const fileUri = `${FileSystem.documentDirectory}estimate-${estimateId}.pdf`;\n          try {\n            await FileSystem.downloadAsync(`${API_URL}/pdf/estimate/${estimateId}`, fileUri, {\n              headers: {\n                Authorization: `Bearer ${token}`\n              }\n            });\n            Alert.alert('Saved', `PDF saved to:\\n${fileUri}`);\n          } catch (e) {\n            Alert.alert('Error', e.message);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2031,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          height: 16\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2039,\n        columnNumber: 9\n      }, this), items.length === 0 ? _jsxDEV(Text, {\n        style: {\n          color: '#555'\n        },\n        children: \"No line-items yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2041,\n        columnNumber: 11\n      }, this) : items.map((item, idx) => _jsxDEV(View, {\n        style: {\n          padding: 10,\n          borderWidth: 1,\n          marginBottom: 8\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            fontWeight: '600'\n          },\n          children: item.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2044,\n          columnNumber: 13\n        }, this), _jsxDEV(Text, {\n          children: [\"Qty: \", item.qty, \" \\xC3\\u2014 $\", item.unitPrice, \" = \", (parseFloat(item.qty || 0) * parseFloat(item.unitPrice || 0)).toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2045,\n          columnNumber: 13\n        }, this)]\n      }, item.id || idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2043,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1909,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1908,\n    columnNumber: 5\n  }, this);\n}\nfunction ScheduleScreen() {\n  const {\n    token\n  } = useAuth();\n  const [jobs, setJobs] = useState([]);\n  const [filter, setFilter] = useState('ALL');\n  const [queueCount, setQueueCount] = useState(0);\n  const loadQueueCount = () => {\n    db.transaction(tx => tx.executeSql('SELECT COUNT(*) as c FROM queue', [], (_, {\n      rows\n    }) => setQueueCount(rows._array?.[0]?.c || 0)));\n  };\n  const load = async () => {\n    try {\n      const data = await api('/jobs', 'GET', null, token);\n      setJobs(data);\n      db.transaction(tx => {\n        tx.executeSql('DELETE FROM jobs_cache;');\n        data.forEach(j => tx.executeSql('INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)', [j.id, j.name || '', j.status || 'SCHEDULED', j.startDate || '', j.endDate || '', j.notes || '']));\n      });\n    } catch (e) {\n      db.transaction(tx => tx.executeSql('SELECT id, name, status, startDate, endDate, notes FROM jobs_cache', [], (_, {\n        rows\n      }) => setJobs(rows._array || [])));\n    }\n  };\n  useEffect(() => {\n    load();\n    loadQueueCount();\n  }, [token]);\n  const inRange = d => {\n    if (!d) return false;\n    const today = new Date();\n    const dt = new Date(d);\n    if (filter === 'TODAY') {\n      return dt.getFullYear() === today.getFullYear() && dt.getMonth() === today.getMonth() && dt.getDate() === today.getDate();\n    }\n    if (filter === 'WEEK') {\n      const start = new Date(today);\n      start.setDate(today.getDate() - today.getDay());\n      const end = new Date(start);\n      end.setDate(start.getDate() + 6);\n      return dt >= start && dt <= end;\n    }\n    return true;\n  };\n  const filtered = jobs.filter(j => filter === 'ALL' ? true : inRange(j.startDate));\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    children: [_jsxDEV(View, {\n      style: {\n        padding: 12,\n        borderBottomWidth: 1\n      },\n      children: [_jsxDEV(Text, {\n        style: {\n          fontWeight: '700',\n          marginBottom: 6\n        },\n        children: \"Schedule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2097,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          gap: 8,\n          marginBottom: 8\n        },\n        children: [_jsxDEV(Button, {\n          title: \"All\",\n          onPress: () => setFilter('ALL')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2099,\n          columnNumber: 11\n        }, this), _jsxDEV(Button, {\n          title: \"Today\",\n          onPress: () => setFilter('TODAY')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2100,\n          columnNumber: 11\n        }, this), _jsxDEV(Button, {\n          title: \"This Week\",\n          onPress: () => setFilter('WEEK')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2098,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        children: [_jsxDEV(Text, {\n          children: [\"Offline queue: \", queueCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2104,\n          columnNumber: 11\n        }, this), _jsxDEV(Button, {\n          title: \"Sync now\",\n          onPress: async () => {\n            await processQueue(token);\n            load();\n            loadQueueCount();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2096,\n      columnNumber: 7\n    }, this), _jsxDEV(FlatList, {\n      data: filtered,\n      keyExtractor: j => String(j.id),\n      contentContainerStyle: {\n        padding: 12\n      },\n      renderItem: ({\n        item\n      }) => {\n        const jobsite = item.Jobsite;\n        const address = jobsite ? [jobsite.addressLine1, jobsite.addressLine2, [jobsite.city, jobsite.state].filter(Boolean).join(', '), jobsite.zip].filter(Boolean).join(' - ') : '';\n        return _jsxDEV(View, {\n          style: {\n            borderWidth: 1,\n            padding: 10,\n            borderRadius: 8,\n            marginBottom: 8\n          },\n          children: [_jsxDEV(Text, {\n            style: {\n              fontWeight: '600'\n            },\n            children: item.name || `Job #${item.id}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2122,\n            columnNumber: 15\n          }, this), _jsxDEV(Text, {\n            children: [\"Status: \", item.status]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2123,\n            columnNumber: 15\n          }, this), _jsxDEV(Text, {\n            children: [\"Date: \", item.startDate || '-', item.endDate ? ` Ã¢â€ â€™ ${item.endDate}` : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2124,\n            columnNumber: 15\n          }, this), address ? _jsxDEV(Text, {\n            style: {\n              color: '#555',\n              marginTop: 4\n            },\n            children: address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2125,\n            columnNumber: 26\n          }, this) : null, item.notes ? _jsxDEV(Text, {\n            style: {\n              marginTop: 4\n            },\n            children: [\"Notes: \", item.notes]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2126,\n            columnNumber: 29\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2121,\n          columnNumber: 13\n        }, this);\n      },\n      ListEmptyComponent: _jsxDEV(Text, {\n        style: {\n          textAlign: 'center',\n          marginTop: 20\n        },\n        children: [\"No jobs\", filter !== 'ALL' ? ' in range' : '', \" - add one!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2130,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 2095,\n    columnNumber: 5\n  }, this);\n}\nfunction MeScreen({\n  navigation\n}) {\n  const {\n    setToken,\n    user\n  } = useAuth();\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      padding: 16\n    },\n    children: [_jsxDEV(Text, {\n      style: {\n        fontSize: 20,\n        fontWeight: '600'\n      },\n      children: \"PrecisionTracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2140,\n      columnNumber: 7\n    }, this), _jsxDEV(Text, {\n      children: [\"User: \", user?.email, \" (\", user?.role, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2141,\n      columnNumber: 7\n    }, this), user?.role === 'ADMIN' && _jsxDEV(View, {\n      style: {\n        height: 12\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2142,\n      columnNumber: 32\n    }, this), user?.role === 'ADMIN' && _jsxDEV(Button, {\n      title: \"Manage Users\",\n      onPress: () => navigation.navigate('UsersAdmin')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2143,\n      columnNumber: 32\n    }, this), _jsxDEV(View, {\n      style: {\n        height: 20\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2144,\n      columnNumber: 7\n    }, this), _jsxDEV(Button, {\n      title: \"Sign out\",\n      onPress: () => setToken(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 2139,\n    columnNumber: 5\n  }, this);\n}\nconst Stack = createNativeStackNavigator();\nconst Tabs = createBottomTabNavigator();\nfunction TabsNav() {\n  return _jsxDEV(Tabs.Navigator, {\n    screenOptions: {\n      headerShown: false,\n      tabBarActiveTintColor: palette.primary,\n      tabBarStyle: {\n        backgroundColor: '#fff'\n      }\n    },\n    children: [_jsxDEV(Tabs.Screen, {\n      name: \"Dashboard\",\n      component: DashboardScreen,\n      options: {\n        title: 'Home'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2162,\n      columnNumber: 7\n    }, this), _jsxDEV(Tabs.Screen, {\n      name: \"Leads\",\n      component: LeadsScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2163,\n      columnNumber: 7\n    }, this), _jsxDEV(Tabs.Screen, {\n      name: \"Jobs\",\n      component: JobsKanbanScreen,\n      options: {\n        title: 'Jobs'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2164,\n      columnNumber: 7\n    }, this), _jsxDEV(Tabs.Screen, {\n      name: \"Schedule\",\n      component: ScheduleScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2165,\n      columnNumber: 7\n    }, this), _jsxDEV(Tabs.Screen, {\n      name: \"Me\",\n      component: MeScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2166,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 2155,\n    columnNumber: 5\n  }, this);\n}\nfunction LoginScreen() {\n  const [email, setEmail] = useState('admin@example.com');\n  const [password, setPassword] = useState('test123');\n  const [busy, setBusy] = useState(false);\n  const {\n    setToken,\n    setUser\n  } = useAuth();\n  async function login() {\n    try {\n      setBusy(true);\n      const res = await fetch(`${API_URL}/auth/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await res.json();\n      if (!res.ok) throw new Error(data?.message || data?.error || 'Login failed');\n      const tok = data.token || data.accessToken;\n      if (!tok) throw new Error('No token returned from server');\n      const normalizedUser = data.user ? Object.assign({}, data.user, {\n        role: normalizeRole(data.user.role)\n      }) : {\n        email,\n        role: 'ADMIN',\n        name: 'Admin'\n      };\n      setToken(tok);\n      setUser(normalizedUser);\n      try {\n        await SecureStore.setItemAsync('auth_token', tok);\n        await SecureStore.setItemAsync('auth_user', JSON.stringify(normalizedUser));\n      } catch {}\n      Alert.alert('Welcome', 'Logged in');\n    } catch (e) {\n      Alert.alert('Error', e.message);\n    } finally {\n      setBusy(false);\n    }\n  }\n  return _jsxDEV(View, {\n    style: {\n      flex: 1,\n      padding: 20,\n      justifyContent: 'center'\n    },\n    children: [_jsxDEV(Text, {\n      style: {\n        fontSize: 24,\n        marginBottom: 16\n      },\n      children: \"PrecisionTracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2216,\n      columnNumber: 7\n    }, this), _jsxDEV(TextInput, {\n      placeholder: \"Email\",\n      autoCapitalize: \"none\",\n      value: email,\n      onChangeText: setEmail,\n      style: {\n        borderWidth: 1,\n        padding: 12,\n        marginBottom: 12\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2217,\n      columnNumber: 7\n    }, this), _jsxDEV(TextInput, {\n      placeholder: \"Password\",\n      secureTextEntry: true,\n      value: password,\n      onChangeText: setPassword,\n      style: {\n        borderWidth: 1,\n        padding: 12,\n        marginBottom: 12\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2224,\n      columnNumber: 7\n    }, this), _jsxDEV(Button, {\n      title: busy ? 'Signing in...' : 'Sign in',\n      onPress: login,\n      disabled: busy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2231,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 2215,\n    columnNumber: 5\n  }, this);\n}\nexport default function App() {\n  const [token, setToken] = useState(null);\n  const [user, setUser] = useState(null);\n  const [booting, setBooting] = useState(true);\n  useEffect(() => {\n    let mounted = true;\n    (async () => {\n      try {\n        const [tok, usr] = await Promise.all([SecureStore.getItemAsync('auth_token'), SecureStore.getItemAsync('auth_user')]);\n        if (mounted && tok) {\n          setToken(tok);\n          if (usr) {\n            const parsed = JSON.parse(usr);\n            parsed.role = normalizeRole(parsed.role);\n            setUser(parsed);\n          }\n        }\n      } catch {} finally {\n        if (mounted) setBooting(false);\n      }\n    })();\n    return () => {\n      mounted = false;\n    };\n  }, []);\n  const authValue = {\n    token,\n    setToken: t => {\n      setToken(t);\n      if (!t) {\n        try {\n          SecureStore.deleteItemAsync('auth_token');\n          SecureStore.deleteItemAsync('auth_user');\n        } catch {}\n      }\n    },\n    user,\n    setUser\n  };\n  if (booting) {\n    return _jsxDEV(SafeAreaView, {\n      style: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: _jsxDEV(Text, {\n        children: \"Loading\\xC3\\u0192\\xC2\\xA2\\xC3\\xA2\\xE2\\u20AC\\u0161\\xC2\\xAC\\xC3\\u201A\\xC2\\xA6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2277,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2276,\n      columnNumber: 7\n    }, this);\n  }\n  return _jsxDEV(AuthContext.Provider, {\n    value: authValue,\n    children: _jsxDEV(NavigationContainer, {\n      children: !token ? _jsxDEV(Stack.Navigator, {\n        children: _jsxDEV(Stack.Screen, {\n          name: \"Login\",\n          component: LoginScreen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2287,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2286,\n        columnNumber: 11\n      }, this) : _jsxDEV(Stack.Navigator, {\n        children: [_jsxDEV(Stack.Screen, {\n          name: \"Tabs\",\n          component: TabsNav,\n          options: {\n            headerShown: false\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2291,\n          columnNumber: 13\n        }, this), _jsxDEV(Stack.Screen, {\n          name: \"NewLead\",\n          component: NewLeadScreen,\n          options: {\n            title: 'New Lead'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2292,\n          columnNumber: 13\n        }, this), _jsxDEV(Stack.Screen, {\n          name: \"EstimateEditor\",\n          component: EstimateEditorScreen,\n          options: {\n            title: 'Estimate'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2293,\n          columnNumber: 13\n        }, this), _jsxDEV(Stack.Screen, {\n          name: \"Signature\",\n          component: SignatureScreen,\n          options: {\n            title: 'Signature'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2294,\n          columnNumber: 13\n        }, this), _jsxDEV(Stack.Screen, {\n          name: \"UsersAdmin\",\n          component: UsersAdminScreen,\n          options: {\n            title: 'Users (Admin)'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2295,\n          columnNumber: 13\n        }, this), _jsxDEV(Stack.Screen, {\n          name: \"JobDetail\",\n          component: JobDetailScreen,\n          options: {\n            title: 'Job'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2296,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2290,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2284,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 2283,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"names":["React","useEffect","useState","createContext","useContext","useRef","useCallback","useMemo","NavigationContainer","useFocusEffect","createNativeStackNavigator","createBottomTabNavigator","Text","TextInput","Button","FlatList","TouchableOpacity","SafeAreaView","Alert","Image","ScrollView","RefreshControl","ActivityIndicator","ImagePicker","FileSystem","SQLite","Svg","Path","ViewShot","Platform","View","SecureStore","jsxDEV","_jsxDEV","API_URL","process","env","EXPO_PUBLIC_API_URL","initOfflineTables","database","transaction","tx","executeSql","e","db","getDb","OS","fn","execAsync","runAsync","openDatabaseSync","dbHandle","normalizeRole","role","r","String","toUpperCase","includes","AuthContext","useAuth","api","path","method","body","token","res","fetch","headers","Object","assign","Authorization","JSON","stringify","undefined","ok","Error","json","error","palette","background","surface","surfaceMuted","border","text","muted","primary","primaryStrong","success","warning","danger","info","spacing","step","typography","h1","h2","small","floatingShadow","select","ios","shadowColor","shadowOpacity","shadowRadius","shadowOffset","width","height","android","elevation","default","pillTone","NEW","fg","bg","label","CONTACTED","ESTIMATING","CONVERTED","CLOSED_LOST","SCHEDULED","IN_PROGRESS","COMPLETE","DONE","ON_HOLD","CANCELLED","toneMap","formatCurrency","value","amount","Number","isNaN","toLocaleString","minimumFractionDigits","maximumFractionDigits","formatDate","d","Date","getTime","toLocaleDateString","month","day","isTaskCompleted","status","key","SurfaceCard","children","style","onPress","content","backgroundColor","borderRadius","borderWidth","borderColor","padding","fileName","_jsxFileName","lineNumber","columnNumber","activeOpacity","StatusPill","cfg","paddingHorizontal","paddingVertical","color","fontSize","fontWeight","SummaryCard","title","subtitle","tone","colors","textTransform","marginTop","SectionHeader","actionLabel","onAction","flexDirection","justifyContent","alignItems","marginBottom","QuickAction","toneStyles","textColor","DashboardScreen","navigation","loading","setLoading","refreshing","setRefreshing","leads","setLeads","jobs","setJobs","tasks","setTasks","invoiceSummary","setInvoiceSummary","outstanding","collected","lastUpdated","setLastUpdated","loadData","isPullRefresh","fetchLeads","data","forEach","l","id","description","Promise","resolve","_","rows","fallback","_array","fetchJobs","j","name","startDate","endDate","notes","fetchTasks","t","jobId","dueDate","all","prev","onRefresh","newLeads","filter","length","activeJobs","openTasks","outstandingValue","topLeads","slice","topJobs","nextTasks","flex","contentContainerStyle","paddingBottom","refreshControl","tintColor","flexWrap","flexBasis","navigate","map","job","idx","numberOfLines","columnGap","tab","lead","leadId","task","textAlign","toLocaleTimeString","hour","minute","SignaturePad","onCapturePng","points","setPoints","setPath","shotRef","ref","options","format","quality","result","onStartShouldSetResponder","onResponderMove","x","nativeEvent","locationX","y","locationY","p","onResponderRelease","base64","current","capture","stroke","strokeWidth","fill","SignatureScreen","route","estimateId","params","sigPng","setSigPng","save","alert","resp","signaturePngUrl","paymentLink","goBack","UsersAdminScreen","users","setUsers","email","setEmail","fullName","setFullName","setRole","load","invite","promote","newRole","remove","placeholder","onChangeText","marginVertical","autoCapitalize","keyExtractor","u","renderItem","item","gap","JobsKanbanScreen","newJobName","setNewJobName","newJobStartDate","setNewJobStartDate","newJobDueDate","setNewJobDueDate","newJobNotes","setNewJobNotes","newCustomerName","setNewCustomerName","newCustomerPhone","setNewCustomerPhone","newCustomerEmail","setNewCustomerEmail","newAddressLine1","setNewAddressLine1","newAddressLine2","setNewAddressLine2","newCity","setNewCity","newStateCode","setNewStateCode","newZip","setNewZip","jobFormTab","setJobFormTab","statusOrder","isRefresh","resetForm","createJob","trim","hasCustomer","some","v","hasAddress","payload","customer","phone","billingAddress","jobsite","addressLine1","addressLine2","city","state","zip","created","message","updateJobStatus","updated","removeJob","sortedJobs","normalize","rank","indexOf","parseDateSafe","sort","a","b","statusDiff","startA","startB","groupedJobs","groups","currentStatus","statusKey","push","statusLabel","charAt","toLowerCase","quickStatusActions","inputStyle","jobTabs","renderJobFormFields","placeholderTextColor","keyboardType","multiline","minHeight","textAlignVertical","rowGap","selected","group","Customer","Jobsite","addressParts","Boolean","join","address","action","JobDetailScreen","user","jobName","setJobName","jobStartDate","setJobStartDate","jobEndDate","setJobEndDate","jobNotes","setJobNotes","jobCustomerName","setJobCustomerName","jobCustomerPhone","setJobCustomerPhone","jobCustomerEmail","setJobCustomerEmail","jobAddressLine1","setJobAddressLine1","jobAddressLine2","setJobAddressLine2","jobCity","setJobCity","jobStateCode","setJobStateCode","jobZip","setJobZip","changeOrders","setCO","setTitle","amountDelta","setAmountDelta","loadCO","loadJob","addCO","parseFloat","saveJobDetails","deleteJob","screen","JobTasks","JobSchedule","setDueDate","add","done","events","setEvents","startAt","setStartAt","endAt","setEndAt","ev","processQueue","items","q","parse","type","dataUrl","txx","LeadsScreen","deleteLead","err","newLeadsCount","renderLeadCard","ListHeaderComponent","minWidth","ListEmptyComponent","NewLeadScreen","setDescription","setStatus","customerName","setCustomerName","customerPhone","setCustomerPhone","customerEmail","setCustomerEmail","setAddressLine1","setAddressLine2","setCity","stateCode","setStateCode","setZip","showCustomerSection","setShowCustomerSection","showJobsiteSection","setShowJobsiteSection","statuses","buildPayload","createLeadOnline","replace","queueLead","submit","chipStyle","active","s","EstimateEditorScreen","setEstimateId","setItems","desc","setDesc","qty","setQty","price","setPrice","setNotes","photoUrl","setPhotoUrl","subtotal","setSubtotal","taxRate","setTaxRate","tax","setTax","total","setTotal","leadDetails","setLeadDetails","leadStatus","setLeadStatus","leadScope","setLeadScope","leadCustomerName","setLeadCustomerName","leadCustomerPhone","setLeadCustomerPhone","leadCustomerEmail","setLeadCustomerEmail","leadAddressLine1","setLeadAddressLine1","leadAddressLine2","setLeadAddressLine2","leadCity","setLeadCity","leadStateCode","setLeadStateCode","leadZip","setLeadZip","leadStatuses","loadLead","createEstimate","est","customerId","jobsiteId","addItem","unitPrice","toFixed","suggest","targetId","it","pickPhoto","launchImageLibraryAsync","canceled","assets","up","url","saveLeadDetails","approveAndSign","canEstimate","reduce","acc","source","uri","fileUri","documentDirectory","downloadAsync","ScheduleScreen","setFilter","queueCount","setQueueCount","loadQueueCount","c","inRange","today","dt","getFullYear","getMonth","getDate","start","setDate","getDay","end","filtered","borderBottomWidth","MeScreen","setToken","Stack","Tabs","TabsNav","Navigator","screenOptions","headerShown","tabBarActiveTintColor","tabBarStyle","Screen","component","LoginScreen","password","setPassword","busy","setBusy","setUser","login","tok","accessToken","normalizedUser","setItemAsync","secureTextEntry","disabled","App","booting","setBooting","mounted","usr","getItemAsync","parsed","authValue","deleteItemAsync","Provider"],"sources":["C:/Users/Tyler/Downloads/PrecisionTracker-v4-wired/PrecisionTracker/mobile/App.js"],"sourcesContent":["\r\nimport React, { useEffect, useState, createContext, useContext, useRef, useCallback, useMemo } from 'react';\r\nimport { NavigationContainer, useFocusEffect } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport {Text, TextInput, Button, FlatList, TouchableOpacity, SafeAreaView, Alert, Image, ScrollView, RefreshControl, ActivityIndicator } from 'react-native';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport * as FileSystem from 'expo-file-system';\r\nimport * as SQLite from 'expo-sqlite';\r\nimport Svg, { Path } from 'react-native-svg';\r\nimport ViewShot from 'react-native-view-shot';\r\nimport { Platform, View } from 'react-native';\r\nimport * as SecureStore from 'expo-secure-store';\r\n// import * as SQLite from 'expo-sqlite';\r\n\r\n\r\nconst API_URL = process.env.EXPO_PUBLIC_API_URL || 'http://localhost:4000';\r\n// const db = SQLite.openDatabase('offline.db');\r\n\r\n// function initDB(){\r\n//   db.transaction(tx => {\r\n//     tx.executeSql('CREATE TABLE IF NOT EXISTS queue (id INTEGER PRIMARY KEY AUTOINCREMENT, type TEXT, payload TEXT);');\r\n//     tx.executeSql('CREATE TABLE IF NOT EXISTS uploads (id INTEGER PRIMARY KEY AUTOINCREMENT, dataUrl TEXT);');\r\n//     tx.executeSql('CREATE TABLE IF NOT EXISTS leads_cache (id INTEGER PRIMARY KEY, description TEXT, status TEXT);');\r\n//   });\r\n// }\r\n\r\nfunction initOfflineTables(database){\r\n  try {\r\n    if (!database || typeof database.transaction !== 'function') return;\r\n    database.transaction(tx => {\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS queue (id INTEGER PRIMARY KEY AUTOINCREMENT, type TEXT, payload TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS uploads (id INTEGER PRIMARY KEY AUTOINCREMENT, dataUrl TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS leads_cache (id INTEGER PRIMARY KEY, description TEXT, status TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS jobs_cache (id INTEGER PRIMARY KEY, name TEXT, status TEXT, startDate TEXT, endDate TEXT, notes TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS tasks_cache (id INTEGER PRIMARY KEY, jobId INTEGER, title TEXT, status TEXT, dueDate TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS calendar_cache (id INTEGER PRIMARY KEY, jobId INTEGER, title TEXT, startAt TEXT, endAt TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS estimates_cache (id INTEGER PRIMARY KEY, leadId INTEGER, subtotal REAL, taxRate REAL, total REAL, status TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS estimate_items_cache (id INTEGER PRIMARY KEY, estimateId INTEGER, description TEXT, qty REAL, unitPrice REAL);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS change_orders_cache (id INTEGER PRIMARY KEY, jobId INTEGER, title TEXT, amountDelta REAL, status TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS users_cache (id INTEGER PRIMARY KEY, email TEXT, fullName TEXT, role TEXT);');\r\n    });\r\n  } catch (e) {\r\n    // best-effort; avoid noisy alerts in offline mode\r\n  }\r\n}\r\n\r\nlet db;\r\nexport function getDb() {\r\n  if (db) return db;\r\n\r\n  // Web: safe no-op DB\r\n  if (Platform.OS === 'web') {\r\n    db = {\r\n      transaction: (fn) => fn({ executeSql: () => {} }),\r\n      execAsync: async () => {},\r\n      runAsync: async () => {},\r\n    };\r\n    return db;\r\n  }\r\n\r\n  // SDK 51+: prefer sync, then async; DO NOT reference openDatabase (removed)\r\n  if ('openDatabaseSync' in SQLite) {\r\n    db = SQLite.openDatabaseSync('offline.db');\r\n    return db;\r\n  }\r\n\r\n  if ('openDatabaseAsync' in SQLite) {\r\n    // Minimal adapter so existing code won't crash; refactor later if needed\r\n    db = {\r\n      transaction: (fn) => fn({ executeSql: () => {} }),\r\n      execAsync: async () => {},\r\n      runAsync: async () => {},\r\n    };\r\n    return db;\r\n  }\r\n\r\n  // Safety fallback\r\n  db = {\r\n    transaction: (fn) => fn({ executeSql: () => {} }),\r\n    execAsync: async () => {},\r\n    runAsync: async () => {},\r\n  };\r\n  return db;\r\n}\r\n\r\n// DB handle\r\nconst dbHandle = getDb();\r\ninitOfflineTables(dbHandle);\r\n\r\n// ---------- Helpers ----------\r\nconst normalizeRole = (role) => {\r\n  if (!role) return 'TECH';\r\n  const r = String(role).toUpperCase();\r\n  if (['ADMIN','ESTIMATOR','SUPERVISOR','TECH'].includes(r)) return r;\r\n  if (r === 'STANDARD' || r === 'USER') return 'TECH';\r\n  return r;\r\n};\r\n\r\nconst AuthContext = createContext(null);\r\nfunction useAuth(){ return useContext(AuthContext); }\r\nasync function api(path, method='GET', body, token){\r\n  const res = await fetch(`${API_URL}${path}`, {\r\n    method, headers: { 'Content-Type':'application/json', ...(token?{Authorization:`Bearer ${token}`}:{}) },\r\n    body: body?JSON.stringify(body):undefined\r\n  });\r\n  if(!res.ok){ throw new Error((await res.json()).error || 'Request failed'); }\r\n  return res.json();\r\n}\r\n\r\n// ---------- Design tokens ----------\r\nconst palette = {\r\n  background: '#f4f6f8',\r\n  surface: '#ffffff',\r\n  surfaceMuted: '#f1f5f9',\r\n  border: '#e2e8f0',\r\n  text: '#0f172a',\r\n  muted: '#5f6b7d',\r\n  primary: '#2c8a7d',\r\n  primaryStrong: '#1f6a60',\r\n  success: '#219653',\r\n  warning: '#f59e0b',\r\n  danger: '#d14343',\r\n  info: '#2563eb',\r\n};\r\n\r\nconst spacing = (step = 1) => step * 8;\r\n\r\nconst typography = {\r\n  h1: 24,\r\n  h2: 18,\r\n  body: 15,\r\n  small: 12,\r\n};\r\n\r\nconst floatingShadow = Platform.select({\r\n  ios: { shadowColor: '#0f172a', shadowOpacity: 0.08, shadowRadius: 14, shadowOffset: { width: 0, height: 6 } },\r\n  android: { elevation: 2 },\r\n  default: {},\r\n});\r\n\r\nconst pillTone = {\r\n  NEW: { fg: palette.info, bg: '#e6eeff', label: 'New' },\r\n  CONTACTED: { fg: palette.primary, bg: '#e6f4f2', label: 'Contacted' },\r\n  ESTIMATING: { fg: palette.warning, bg: '#fdf1d6', label: 'Estimating' },\r\n  CONVERTED: { fg: palette.success, bg: '#e6f6ec', label: 'Converted' },\r\n  CLOSED_LOST: { fg: palette.muted, bg: '#e2e8f0', label: 'Lost' },\r\n  SCHEDULED: { fg: palette.primary, bg: '#e6f4f2', label: 'Scheduled' },\r\n  IN_PROGRESS: { fg: palette.info, bg: '#e6eeff', label: 'In progress' },\r\n  COMPLETE: { fg: palette.success, bg: '#e6f6ec', label: 'Complete' },\r\n  DONE: { fg: palette.success, bg: '#e6f6ec', label: 'Complete' },\r\n  ON_HOLD: { fg: palette.warning, bg: '#fdf1d6', label: 'On hold' },\r\n  CANCELLED: { fg: palette.muted, bg: '#e2e8f0', label: 'Cancelled' },\r\n};\r\n\r\nconst toneMap = {\r\n  primary: { fg: palette.primaryStrong, bg: '#e0f3f0' },\r\n  success: { fg: palette.success, bg: '#e6f6ec' },\r\n  warning: { fg: palette.warning, bg: '#fdf1d6' },\r\n  danger: { fg: palette.danger, bg: '#fde4e4' },\r\n  info: { fg: palette.info, bg: '#e6eeff' },\r\n};\r\n\r\nconst formatCurrency = (value) => {\r\n  const amount = Number(value || 0);\r\n  if (Number.isNaN(amount)) return '$0';\r\n  return `$${amount.toLocaleString(undefined, { minimumFractionDigits: amount % 1 ? 2 : 0, maximumFractionDigits: 2 })}`;\r\n};\r\n\r\nconst formatDate = (value) => {\r\n  if (!value) return null;\r\n  const d = new Date(value);\r\n  if (Number.isNaN(d.getTime())) return value;\r\n  return d.toLocaleDateString(undefined, { month: 'short', day: 'numeric' });\r\n};\r\n\r\nconst isTaskCompleted = (status) => {\r\n  if (!status) return false;\r\n  const key = String(status).toUpperCase();\r\n  return key === 'DONE' || key === 'COMPLETE';\r\n};\r\n\r\nfunction SurfaceCard({ children, style, onPress }) {\r\n  const content = (\r\n    <View\r\n      style={[\r\n        { backgroundColor: palette.surface, borderRadius: 16, borderWidth: 1, borderColor: palette.border, padding: spacing(2) },\r\n        floatingShadow,\r\n        style,\r\n      ]}\r\n    >\r\n      {children}\r\n    </View>\r\n  );\r\n  if (!onPress) return content;\r\n  return (\r\n    <TouchableOpacity activeOpacity={0.85} onPress={onPress}>\r\n      {content}\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n\r\nfunction StatusPill({ status }) {\r\n  if (!status) return null;\r\n  const key = String(status).toUpperCase();\r\n  const cfg = pillTone[key] || { fg: palette.muted, bg: '#e2e8f0', label: status };\r\n  return (\r\n    <View style={{ backgroundColor: cfg.bg, borderRadius: 999, paddingHorizontal: spacing(1.5), paddingVertical: spacing(0.5) }}>\r\n      <Text style={{ color: cfg.fg, fontSize: typography.small, fontWeight: '600' }}>{cfg.label}</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction SummaryCard({ title, value, subtitle, tone = 'primary', onPress }) {\r\n  const colors = toneMap[tone] || toneMap.primary;\r\n  return (\r\n    <SurfaceCard\r\n      onPress={onPress}\r\n      style={{ backgroundColor: colors.bg, borderColor: 'transparent', padding: spacing(2.5) }}\r\n    >\r\n      <Text style={{ color: palette.muted, fontSize: typography.small, textTransform: 'uppercase', fontWeight: '700' }}>{title}</Text>\r\n      <Text style={{ color: colors.fg, fontSize: 28, fontWeight: '800', marginTop: spacing(0.5) }}>{value}</Text>\r\n      {subtitle ? <Text style={{ color: palette.muted, fontSize: typography.small, marginTop: spacing(0.5) }}>{subtitle}</Text> : null}\r\n    </SurfaceCard>\r\n  );\r\n}\r\n\r\nfunction SectionHeader({ title, actionLabel, onAction }) {\r\n  return (\r\n    <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', marginBottom: spacing(1.5) }}>\r\n      <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight: '700' }}>{title}</Text>\r\n      {actionLabel && onAction ? (\r\n        <TouchableOpacity onPress={onAction} style={{ paddingHorizontal: spacing(1), paddingVertical: spacing(0.5) }}>\r\n          <Text style={{ color: palette.primary, fontWeight: '600', fontSize: typography.small }}>{actionLabel}</Text>\r\n        </TouchableOpacity>\r\n      ) : null}\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction QuickAction({ label, onPress, tone = 'primary' }) {\r\n  const toneStyles = (() => {\r\n    switch (tone) {\r\n      case 'danger':\r\n        return { borderColor: '#fecdd3', backgroundColor: '#fee2e2', textColor: palette.danger };\r\n      case 'success':\r\n        return { borderColor: '#bbf7d0', backgroundColor: '#dcfce7', textColor: palette.success };\r\n      case 'warning':\r\n        return { borderColor: '#fde68a', backgroundColor: '#fef3c7', textColor: palette.warning };\r\n      case 'muted':\r\n        return { borderColor: palette.border, backgroundColor: palette.surface, textColor: palette.muted };\r\n      default:\r\n        return { borderColor: palette.border, backgroundColor: palette.surfaceMuted, textColor: palette.primary };\r\n    }\r\n  })();\r\n  return (\r\n    <TouchableOpacity\r\n      onPress={onPress}\r\n      activeOpacity={0.85}\r\n      style={{\r\n        borderRadius: 10,\r\n        paddingHorizontal: spacing(1.5),\r\n        paddingVertical: spacing(0.75),\r\n        borderWidth: 1,\r\n        borderColor: toneStyles.borderColor,\r\n        backgroundColor: toneStyles.backgroundColor,\r\n      }}\r\n    >\r\n      <Text style={{ color: toneStyles.textColor, fontWeight: '600', fontSize: typography.small }}>{label}</Text>\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n\r\nfunction DashboardScreen({ navigation }) {\r\n  const { token } = useAuth();\r\n  const [loading, setLoading] = useState(true);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [leads, setLeads] = useState([]);\r\n  const [jobs, setJobs] = useState([]);\r\n  const [tasks, setTasks] = useState([]);\r\n  const [invoiceSummary, setInvoiceSummary] = useState({ outstanding: 0, collected: 0 });\r\n  const [lastUpdated, setLastUpdated] = useState(null);\r\n\r\n  const loadData = useCallback(async (isPullRefresh = false) => {\r\n    if (!token) return;\r\n    isPullRefresh ? setRefreshing(true) : setLoading(true);\r\n\r\n    const fetchLeads = async () => {\r\n      try {\r\n        const data = await api('/leads', 'GET', null, token);\r\n        setLeads(data);\r\n        db.transaction(tx => {\r\n          tx.executeSql && tx.executeSql('DELETE FROM leads_cache;');\r\n          data.forEach(l =>\r\n            tx.executeSql && tx.executeSql(\r\n              'INSERT OR REPLACE INTO leads_cache (id, description, status) VALUES (?,?,?)',\r\n              [l.id, l.description || '', l.status || 'NEW']\r\n            )\r\n          );\r\n        });\r\n        return data;\r\n      } catch (e) {\r\n        return await new Promise(resolve => {\r\n          db.transaction(tx =>\r\n            tx.executeSql && tx.executeSql(\r\n              'SELECT id, description, status FROM leads_cache',\r\n              [],\r\n              (_, { rows }) => {\r\n                const fallback = rows?._array || [];\r\n                setLeads(fallback);\r\n                resolve(fallback);\r\n              }\r\n            )\r\n          );\r\n        });\r\n      }\r\n    };\r\n\r\n    const fetchJobs = async () => {\r\n      try {\r\n        const data = await api('/jobs', 'GET', null, token);\r\n        setJobs(data);\r\n        db.transaction(tx => {\r\n          tx.executeSql && tx.executeSql('DELETE FROM jobs_cache;');\r\n          data.forEach(j =>\r\n            tx.executeSql && tx.executeSql(\r\n              'INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)',\r\n              [j.id, j.name || '', j.status || 'SCHEDULED', j.startDate || '', j.endDate || '', j.notes || '']\r\n            )\r\n          );\r\n        });\r\n        return data;\r\n      } catch (e) {\r\n        return await new Promise(resolve => {\r\n          db.transaction(tx =>\r\n            tx.executeSql && tx.executeSql(\r\n              'SELECT id, name, status, startDate, endDate, notes FROM jobs_cache',\r\n              [],\r\n              (_, { rows }) => {\r\n                const fallback = rows?._array || [];\r\n                setJobs(fallback);\r\n                resolve(fallback);\r\n              }\r\n            )\r\n          );\r\n        });\r\n      }\r\n    };\r\n\r\n    const fetchTasks = async () => {\r\n      try {\r\n        const data = await api('/tasks', 'GET', null, token);\r\n        setTasks(data);\r\n        db.transaction(tx => {\r\n          data.forEach(t =>\r\n            tx.executeSql && tx.executeSql(\r\n              'INSERT OR REPLACE INTO tasks_cache (id, jobId, title, status, dueDate) VALUES (?,?,?,?,?)',\r\n              [t.id, t.jobId || null, t.title || '', t.status || 'TODO', t.dueDate || '']\r\n            )\r\n          );\r\n        });\r\n        return data;\r\n      } catch (e) {\r\n        return await new Promise(resolve => {\r\n          db.transaction(tx =>\r\n            tx.executeSql && tx.executeSql(\r\n              'SELECT id, jobId, title, status, dueDate FROM tasks_cache ORDER BY id DESC',\r\n              [],\r\n              (_, { rows }) => {\r\n                const fallback = rows?._array || [];\r\n                setTasks(fallback);\r\n                resolve(fallback);\r\n              }\r\n            )\r\n          );\r\n        });\r\n      }\r\n    };\r\n\r\n    try {\r\n      await Promise.all([fetchLeads(), fetchJobs(), fetchTasks()]);\r\n      setInvoiceSummary(prev => ({\r\n        outstanding: prev?.outstanding ?? 0,\r\n        collected: prev?.collected ?? 0,\r\n      }));\r\n      setLastUpdated(new Date());\r\n    } finally {\r\n      isPullRefresh ? setRefreshing(false) : setLoading(false);\r\n    }\r\n  }, [token]);\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      loadData(false);\r\n    }, [loadData])\r\n  );\r\n\r\n  const onRefresh = useCallback(() => loadData(true), [loadData]);\r\n\r\n  const newLeads = leads.filter(l => (l.status || '').toUpperCase() === 'NEW').length;\r\n  const activeJobs = jobs.filter(j => ['SCHEDULED', 'IN_PROGRESS'].includes((j.status || '').toUpperCase())).length;\r\n  const openTasks = tasks.filter(t => !isTaskCompleted(t.status)).length;\r\n  const outstandingValue = invoiceSummary?.outstanding || 0;\r\n\r\n  const topLeads = leads.slice(0, 3);\r\n  const topJobs = jobs.slice(0, 3);\r\n  const nextTasks = tasks.filter(t => !isTaskCompleted(t.status)).slice(0, 3);\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex: 1, backgroundColor: palette.background }}>\r\n      <ScrollView\r\n        contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(5) }}\r\n        refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} tintColor={palette.primary} />}\r\n      >\r\n        <Text style={{ color: palette.text, fontSize: typography.h1, fontWeight: '700', marginBottom: spacing(2) }}>Dashboard</Text>\r\n\r\n        <View style={{ flexDirection: 'row', flexWrap: 'wrap', justifyContent: 'space-between' }}>\r\n          <View style={{ flexBasis: '48%', marginBottom: spacing(2) }}>\r\n            <SummaryCard\r\n              title=\"Leads\"\r\n              value={leads.length}\r\n              subtitle={`${newLeads} new to triage`}\r\n              tone=\"info\"\r\n              onPress={() => navigation.navigate('Leads')}\r\n            />\r\n          </View>\r\n          <View style={{ flexBasis: '48%', marginBottom: spacing(2) }}>\r\n            <SummaryCard\r\n              title=\"Jobs\"\r\n              value={jobs.length}\r\n              subtitle={`${activeJobs} active`}\r\n              tone=\"primary\"\r\n              onPress={() => navigation.navigate('Jobs')}\r\n            />\r\n          </View>\r\n          <View style={{ flexBasis: '48%', marginBottom: spacing(2) }}>\r\n            <SummaryCard\r\n              title=\"Tasks\"\r\n              value={openTasks}\r\n              subtitle={`Open of ${tasks.length}`}\r\n              tone=\"warning\"\r\n              onPress={() => navigation.navigate('Jobs')}\r\n            />\r\n          </View>\r\n          <View style={{ flexBasis: '48%', marginBottom: spacing(2) }}>\r\n            <SummaryCard\r\n              title=\"Invoices\"\r\n              value={formatCurrency(outstandingValue)}\r\n              subtitle=\"Payments tracking coming soon\"\r\n              tone=\"success\"\r\n            />\r\n          </View>\r\n        </View>\r\n\r\n        {loading && !refreshing ? (\r\n          <SurfaceCard style={{ alignItems: 'center', justifyContent: 'center', paddingVertical: spacing(6) }}>\r\n            <ActivityIndicator color={palette.primary} />\r\n            <Text style={{ color: palette.muted, marginTop: spacing(1.5) }}>Loading summary…</Text>\r\n          </SurfaceCard>\r\n        ) : null}\r\n\r\n        <SectionHeader title=\"Next Jobs\" actionLabel=\"View all\" onAction={() => navigation.navigate('Jobs')} />\r\n        <SurfaceCard style={{ marginBottom: spacing(3) }}>\r\n          {topJobs.length === 0 ? (\r\n            <Text style={{ color: palette.muted }}>No jobs yet. Create one from the Jobs tab.</Text>\r\n          ) : (\r\n            topJobs.map((job, idx) => (\r\n              <View key={job.id || idx} style={{ marginBottom: idx === topJobs.length - 1 ? 0 : spacing(2.5) }}>\r\n                <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                  <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight: '600' }}>{job.name || `Job #${job.id}`}</Text>\r\n                  <StatusPill status={job.status || 'SCHEDULED'} />\r\n                </View>\r\n                {job.startDate || job.endDate ? (\r\n                  <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>\r\n                    {job.startDate ? `Start ${formatDate(job.startDate)}` : ''}{job.startDate && job.endDate ? ' • ' : ''}{job.endDate ? `Due ${formatDate(job.endDate)}` : ''}\r\n                  </Text>\r\n                ) : null}\r\n                {job.notes ? (\r\n                  <Text style={{ color: palette.muted, marginTop: spacing(1) }} numberOfLines={2}>{job.notes}</Text>\r\n                ) : null}\r\n                <View style={{ flexDirection: 'row', columnGap: spacing(1.5), marginTop: spacing(1.5) }}>\r\n                  <QuickAction label=\"Open job\" onPress={() => navigation.navigate('JobDetail', { jobId: job.id })} />\r\n                  <QuickAction label=\"Tasks\" onPress={() => navigation.navigate('JobDetail', { jobId: job.id, tab: 'tasks' })} />\r\n                </View>\r\n              </View>\r\n            ))\r\n          )}\r\n        </SurfaceCard>\r\n\r\n        <SectionHeader title=\"Hot Leads\" actionLabel=\"Leads\" onAction={() => navigation.navigate('Leads')} />\r\n        <SurfaceCard style={{ marginBottom: spacing(3) }}>\r\n          {topLeads.length === 0 ? (\r\n            <Text style={{ color: palette.muted }}>No leads yet. Capture leads to keep the funnel full.</Text>\r\n          ) : (\r\n            topLeads.map((lead, idx) => (\r\n              <View key={lead.id || idx} style={{ marginBottom: idx === topLeads.length - 1 ? 0 : spacing(2) }}>\r\n                <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                  <Text style={{ color: palette.text, fontWeight: '600', fontSize: typography.h2 }}>Lead #{lead.id}</Text>\r\n                  <StatusPill status={lead.status || 'NEW'} />\r\n                </View>\r\n                <Text style={{ color: palette.muted, marginTop: spacing(0.5) }} numberOfLines={3}>\r\n                  {lead.description || 'No scope captured yet.'}\r\n                </Text>\r\n                <View style={{ flexDirection: 'row', columnGap: spacing(1.5), marginTop: spacing(1.5) }}>\r\n                  <QuickAction label=\"Follow up\" onPress={() => navigation.navigate('EstimateEditor', { leadId: lead.id })} />\r\n                  <QuickAction label=\"Convert\" onPress={() => navigation.navigate('Jobs')} />\r\n                </View>\r\n              </View>\r\n            ))\r\n          )}\r\n        </SurfaceCard>\r\n\r\n        <SectionHeader title=\"Open Tasks\" actionLabel=\"Jobs\" onAction={() => navigation.navigate('Jobs')} />\r\n        <SurfaceCard>\r\n          {nextTasks.length === 0 ? (\r\n            <Text style={{ color: palette.muted }}>All clear. Add tasks from a job to keep crews aligned.</Text>\r\n          ) : (\r\n            nextTasks.map((task, idx) => (\r\n              <View key={task.id || idx} style={{ marginBottom: idx === nextTasks.length - 1 ? 0 : spacing(2) }}>\r\n                <Text style={{ color: palette.text, fontWeight: '600' }}>{task.title || 'Task'}</Text>\r\n                <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>\r\n                  {task.dueDate ? `Due ${formatDate(task.dueDate)}` : 'No due date'}\r\n                </Text>\r\n                <View style={{ flexDirection: 'row', columnGap: spacing(1.5), marginTop: spacing(1.5) }}>\r\n                  <QuickAction\r\n                    label=\"Mark done\"\r\n                    onPress={() => navigation.navigate('JobDetail', { jobId: task.jobId })}\r\n                  />\r\n                  <QuickAction\r\n                    label=\"View job\"\r\n                    onPress={() => navigation.navigate('JobDetail', { jobId: task.jobId })}\r\n                  />\r\n                </View>\r\n              </View>\r\n            ))\r\n          )}\r\n        </SurfaceCard>\r\n\r\n        {lastUpdated ? (\r\n          <Text style={{ color: palette.muted, fontSize: typography.small, marginTop: spacing(2), textAlign: 'center' }}>\r\n            Updated {lastUpdated.toLocaleTimeString([], { hour: 'numeric', minute: '2-digit' })}\r\n          </Text>\r\n        ) : null}\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\n// ---------- Signature Pad to PNG ----------\r\nfunction SignaturePad({ onCapturePng }){\r\n  const [points, setPoints] = useState([]);\r\n  const [path, setPath] = useState('');\r\n  const shotRef = useRef(null);\r\n  return (\r\n    <ViewShot ref={shotRef} options={{ format: 'png', quality: 0.9, result: 'base64' }} style={{ height:220, borderWidth:1, backgroundColor:'#fff' }}>\r\n      <View\r\n        onStartShouldSetResponder={()=>true}\r\n        onResponderMove={(e)=>{\r\n          const x = e.nativeEvent.locationX, y = e.nativeEvent.locationY;\r\n          setPath(p => p + (p ? ` L ${x} ${y}` : ` M ${x} ${y}`));\r\n        }}\r\n        onResponderRelease={async ()=>{\r\n          const base64 = await shotRef.current.capture();\r\n          onCapturePng && onCapturePng('data:image/png;base64,' + base64);\r\n        }}\r\n        style={{ flex:1 }}\r\n      >\r\n        <Svg height=\"100%\" width=\"100%\"><Path d={path} stroke=\"black\" strokeWidth=\"2\" fill=\"none\" /></Svg>\r\n      </View>\r\n    </ViewShot>\r\n  );\r\n}\r\n\r\nfunction SignatureScreen({ route, navigation }){\r\n  const { token } = useAuth();\r\n  const { estimateId } = route.params;\r\n  const [sigPng, setSigPng] = useState(null);\r\n  const save = async () => {\r\n    if(!sigPng){ Alert.alert('Please sign first'); return; }\r\n    const resp = await api(`/estimates/${estimateId}/approve`, 'POST', { signaturePngUrl: sigPng }, token);\r\n    Alert.alert('Approved', `Payment link:\\n${(resp && resp.paymentLink) ? resp.paymentLink : 'Unavailable'}`); navigation.goBack();\r\n  };\r\n  return (\r\n    <SafeAreaView style={{ padding:16 }}>\r\n      <Text style={{ fontSize:18, marginBottom:8 }}>Sign Estimate #{estimateId}</Text>\r\n      <SignaturePad onCapturePng={setSigPng} />\r\n      <View style={{ height:12 }} />\r\n      <Button title=\"Save Signature\" onPress={save} />\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\n// ---------- Admin: Users ----------\r\nfunction UsersAdminScreen(){\r\n  const { token } = useAuth();\r\n  const [users, setUsers] = useState([]);\r\n  const [email, setEmail] = useState('');\r\n  const [fullName, setFullName] = useState('');\r\n  const [role, setRole] = useState('TECH');\r\n  const load = async ()=> setUsers(await api('/users','GET',null,token));\r\n  useEffect(()=>{ load(); },[]);\r\n  const invite = async ()=>{\r\n    await api('/users','POST', { email, fullName, role: normalizeRole(role) }, token);\r\n    setEmail(''); setFullName(''); setRole('TECH'); load();\r\n  };\r\n  const promote = async (id, newRole)=>{\r\n    await api(`/users/${id}`,'PATCH',{ role: normalizeRole(newRole) }, token); load();\r\n  };\r\n  const remove = async (id) => {\r\n    Alert.alert('Delete user', 'Are you sure?', [\r\n      { text: 'Cancel', style: 'cancel' },\r\n      { text: 'Delete', style: 'destructive', onPress: async ()=>{ await api(`/users/${id}`,'DELETE',null,token); load(); } }\r\n    ]);\r\n  };\r\n  return (\r\n    <SafeAreaView style={{ flex:1, padding:16 }}>\r\n      <Text style={{ fontSize:18, fontWeight:'600' }}>Invite User</Text>\r\n      <TextInput placeholder=\"Full name\" value={fullName} onChangeText={setFullName} style={{ borderWidth:1, padding:8, marginVertical:6 }} />\r\n      <TextInput placeholder=\"Email\" value={email} onChangeText={setEmail} autoCapitalize='none' style={{ borderWidth:1, padding:8, marginVertical:6 }} />\r\n      <TextInput placeholder=\"Role (ADMIN/ESTIMATOR/SUPERVISOR/TECH)\" value={role} onChangeText={setRole} style={{ borderWidth:1, padding:8, marginVertical:6 }} />\r\n      <Button title=\"Create User\" onPress={invite} />\r\n      <View style={{ height:16 }} />\r\n      <FlatList data={users} keyExtractor={u=>String(u.id)} renderItem={({item}) => (\r\n        <View style={{ padding:12, borderWidth:1, marginBottom:8 }}>\r\n          <Text style={{ fontWeight:'600' }}>{item.fullName || item.email}</Text>\r\n          <Text>{item.email}</Text>\r\n          <Text>Role: {item.role}</Text>\r\n          <View style={{ flexDirection:'row', gap:8, marginTop:8, flexWrap:'wrap' }}>\r\n            <Button title=\"Admin\" onPress={()=>promote(item.id,'ADMIN')} />\r\n            <Button title=\"Estimator\" onPress={()=>promote(item.id,'ESTIMATOR')} />\r\n            <Button title=\"Supervisor\" onPress={()=>promote(item.id,'SUPERVISOR')} />\r\n            <Button title=\"Tech\" onPress={()=>promote(item.id,'TECH')} />\r\n            <View style={{ width:8 }} />\r\n            <Button title=\"Delete\" color=\"#c00\" onPress={()=>remove(item.id)} />\r\n          </View>\r\n        </View>\r\n      )}/>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\n// ---------- Jobs Kanban + Change Orders ----------\r\nfunction JobsKanbanScreen({ navigation }){\n  const { token } = useAuth();\n  const [jobs, setJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [refreshing, setRefreshing] = useState(false);\n  const [newJobName, setNewJobName] = useState('');\n  const [newJobStartDate, setNewJobStartDate] = useState('');\n  const [newJobDueDate, setNewJobDueDate] = useState('');\n  const [newJobNotes, setNewJobNotes] = useState('');\n  const [newCustomerName, setNewCustomerName] = useState('');\n  const [newCustomerPhone, setNewCustomerPhone] = useState('');\n  const [newCustomerEmail, setNewCustomerEmail] = useState('');\n  const [newAddressLine1, setNewAddressLine1] = useState('');\n  const [newAddressLine2, setNewAddressLine2] = useState('');\n  const [newCity, setNewCity] = useState('');\n  const [newStateCode, setNewStateCode] = useState('');\n  const [newZip, setNewZip] = useState('');\n  const [jobFormTab, setJobFormTab] = useState('BASICS');\n  const statusOrder = ['SCHEDULED','IN_PROGRESS','ON_HOLD','DONE','COMPLETE','CANCELLED'];\n\n  const load = useCallback(async (isRefresh = false) => {\n    isRefresh ? setRefreshing(true) : setLoading(true);\n    try {\n      const data = await api('/jobs','GET',null,token);\n      setJobs(data);\n      db.transaction(tx => {\n        tx.executeSql && tx.executeSql('DELETE FROM jobs_cache;');\n        data.forEach(j => tx.executeSql && tx.executeSql(\n          'INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)',\n          [j.id, j.name||'', j.status||'SCHEDULED', j.startDate||'', j.endDate||'', j.notes||'']\n        ));\n      });\n    } catch(e) {\n      db.transaction(tx =>\n        tx.executeSql && tx.executeSql(\n          'SELECT id, name, status, startDate, endDate, notes FROM jobs_cache',\n          [],\n          (_, { rows }) => setJobs(rows._array || [])\n        )\n      );\n    } finally {\n      isRefresh ? setRefreshing(false) : setLoading(false);\n    }\n  }, [token]);\n\n  useFocusEffect(\n    useCallback(() => {\n      load(false);\n    }, [load])\n  );\n\n  const onRefresh = useCallback(() => load(true), [load]);\n\n  const resetForm = () => {\n    setNewJobName('');\n    setNewJobStartDate('');\n    setNewJobDueDate('');\n    setNewJobNotes('');\n    setNewCustomerName('');\n    setNewCustomerPhone('');\n    setNewCustomerEmail('');\n    setNewAddressLine1('');\n    setNewAddressLine2('');\n    setNewCity('');\n    setNewStateCode('');\n    setNewZip('');\n    setJobFormTab('BASICS');\n  };\n\n  const createJob = async () => {\n    if(!newJobName.trim()){\n      Alert.alert('Missing info', 'Please add a job name.');\n      setJobFormTab('BASICS');\n      return;\n    }\n    const hasCustomer = [newCustomerName, newCustomerPhone, newCustomerEmail].some(v => v && v.trim());\n    const hasAddress = [newAddressLine1, newCity, newStateCode, newZip].some(v => v && v.trim());\n    const payload = {\n      name: newJobName.trim(),\n      status: 'SCHEDULED',\n      startDate: newJobStartDate || null,\n      endDate: newJobDueDate || null,\n      notes: newJobNotes.trim() || null,\n    };\n    if (hasCustomer) {\n      payload.customer = {\n        name: newCustomerName.trim(),\n        phone: newCustomerPhone.trim(),\n        email: newCustomerEmail.trim(),\n        billingAddress: newAddressLine1\n          ? `${newAddressLine1}${newAddressLine2 ? `\\n${newAddressLine2}` : ''}${newCity ? `\\n${newCity}, ${newStateCode} ${newZip}` : ''}`\n          : null,\n      };\n    }\n    if (hasAddress) {\n      payload.jobsite = {\n        addressLine1: newAddressLine1.trim(),\n        addressLine2: newAddressLine2.trim(),\n        city: newCity.trim(),\n        state: newStateCode.trim(),\n        zip: newZip.trim(),\n      };\n    }\n    try {\n      const created = await api('/jobs','POST', payload, token);\n      setJobs(prev => [created, ...prev]);\n      db.transaction(tx =>\n        tx.executeSql && tx.executeSql(\n          'INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)',\n          [created.id, created.name||'', created.status||'SCHEDULED', created.startDate||'', created.endDate||'', created.notes||'']\n        )\n      );\n      resetForm();\n      Alert.alert('Job created', `Job #${created.id} ready to schedule.`);\n    } catch(e) {\n      Alert.alert('Error', e.message || 'Unable to create job');\n    }\n  };\n\n  const updateJobStatus = async (id, status) => {\n    try {\n      const updated = await api(`/jobs/${id}`,'PATCH',{ status }, token);\n      setJobs(prev => prev.map(job => job.id === id ? updated : job));\n    } catch(e) {\n      Alert.alert('Error', e.message || 'Unable to update job status');\n    }\n  };\n\n  const removeJob = async (id) => {\n    Alert.alert('Delete Job', `Delete job #${id}?`, [\n      { text:'Cancel', style:'cancel' },\n      { text:'Delete', style:'destructive', onPress: async () => {\n        try {\n          await api(`/jobs/${id}`,'DELETE',null,token);\n          setJobs(prev => prev.filter(job => job.id !== id));\n          db.transaction(tx => tx.executeSql && tx.executeSql('DELETE FROM jobs_cache WHERE id=?', [id]));\n        } catch(e) {\n          Alert.alert('Error', e.message || 'Unable to delete job');\n        }\n      } }\n    ]);\n  };\n\n  const sortedJobs = useMemo(() => {\n    const normalize = (status) => (status || 'SCHEDULED').toUpperCase();\n    const rank = (status) => {\n      const key = normalize(status);\n      const idx = statusOrder.indexOf(key);\n      return idx === -1 ? statusOrder.length : idx;\n    };\n    const parseDateSafe = (value) => {\n      if (!value) return null;\n      const d = new Date(value);\n      return Number.isNaN(d.getTime()) ? null : d;\n    };\n    return [...jobs].sort((a, b) => {\n      const statusDiff = rank(a.status) - rank(b.status);\n      if (statusDiff !== 0) return statusDiff;\n      const startA = parseDateSafe(a.startDate);\n      const startB = parseDateSafe(b.startDate);\n      if (startA && startB) return startA - startB;\n      if (startA) return -1;\n      if (startB) return 1;\n      return (b.id || 0) - (a.id || 0);\n    });\n  }, [jobs, statusOrder]);\n\n  const groupedJobs = useMemo(() => {\n    const groups = [];\n    let currentStatus = null;\n    sortedJobs.forEach(job => {\n      const statusKey = (job.status || 'SCHEDULED').toUpperCase();\n      if (statusKey !== currentStatus) {\n        groups.push({ status: statusKey, jobs: [job] });\n        currentStatus = statusKey;\n      } else {\n        groups[groups.length - 1].jobs.push(job);\n      }\n    });\n    return groups;\n  }, [sortedJobs]);\n\n  const statusLabel = (status) => {\n    const key = (status || 'SCHEDULED').toUpperCase();\n    return pillTone[key]?.label || key.charAt(0) + key.slice(1).toLowerCase();\n  };\n\n  const quickStatusActions = [\n    { label:'Start job', value:'IN_PROGRESS', tone:'primary' },\n    { label:'Pause', value:'ON_HOLD', tone:'warning' },\n    { label:'Wrap up', value:'DONE', tone:'success' },\n  ];\n\n  const inputStyle = {\n    borderWidth: 1,\n    borderColor: palette.border,\n    borderRadius: 12,\n    paddingHorizontal: spacing(1.5),\n    paddingVertical: spacing(1.25),\n    backgroundColor: palette.surfaceMuted,\n    color: palette.text,\n    fontSize: typography.body,\n    marginBottom: spacing(1.5),\n  };\n\n  const jobTabs = [\n    { key:'BASICS', label:'Basics' },\n    { key:'CUSTOMER', label:'Customer' },\n    { key:'JOBSITE', label:'Jobsite' },\n    { key:'NOTES', label:'Notes' },\n  ];\n\n  const renderJobFormFields = () => {\n    if (jobFormTab === 'BASICS') {\n      return (\n        <View>\n          <TextInput\n            placeholder=\"Job name\"\n            placeholderTextColor={palette.muted}\n            value={newJobName}\n            onChangeText={setNewJobName}\n            style={inputStyle}\n          />\n          <TextInput\n            placeholder=\"Start date (YYYY-MM-DD)\"\n            placeholderTextColor={palette.muted}\n            value={newJobStartDate}\n            onChangeText={setNewJobStartDate}\n            style={inputStyle}\n          />\n          <TextInput\n            placeholder=\"Due date (YYYY-MM-DD)\"\n            placeholderTextColor={palette.muted}\n            value={newJobDueDate}\n            onChangeText={setNewJobDueDate}\n            style={inputStyle}\n          />\n        </View>\n      );\n    }\n    if (jobFormTab === 'CUSTOMER') {\n      return (\n        <View>\n          <TextInput\n            placeholder=\"Customer name\"\n            placeholderTextColor={palette.muted}\n            value={newCustomerName}\n            onChangeText={setNewCustomerName}\n            style={inputStyle}\n          />\n          <TextInput\n            placeholder=\"Phone\"\n            placeholderTextColor={palette.muted}\n            keyboardType=\"phone-pad\"\n            value={newCustomerPhone}\n            onChangeText={setNewCustomerPhone}\n            style={inputStyle}\n          />\n          <TextInput\n            placeholder=\"Email\"\n            placeholderTextColor={palette.muted}\n            keyboardType=\"email-address\"\n            autoCapitalize=\"none\"\n            value={newCustomerEmail}\n            onChangeText={setNewCustomerEmail}\n            style={inputStyle}\n          />\n        </View>\n      );\n    }\n    if (jobFormTab === 'JOBSITE') {\n      return (\n        <View>\n          <TextInput\n            placeholder=\"Address line 1\"\n            placeholderTextColor={palette.muted}\n            value={newAddressLine1}\n            onChangeText={setNewAddressLine1}\n            style={inputStyle}\n          />\n          <TextInput\n            placeholder=\"Address line 2\"\n            placeholderTextColor={palette.muted}\n            value={newAddressLine2}\n            onChangeText={setNewAddressLine2}\n            style={inputStyle}\n          />\n          <View style={{ flexDirection:'row', columnGap: spacing(1.5) }}>\n            <View style={{ flex:1 }}>\n              <TextInput\n                placeholder=\"City\"\n                placeholderTextColor={palette.muted}\n                value={newCity}\n                onChangeText={setNewCity}\n                style={[inputStyle, { marginBottom: 0 }]}\n              />\n            </View>\n            <View style={{ width: 80 }}>\n              <TextInput\n                placeholder=\"State\"\n                placeholderTextColor={palette.muted}\n                value={newStateCode}\n                onChangeText={setNewStateCode}\n                style={[inputStyle, { marginBottom: 0 }]}\n              />\n            </View>\n            <View style={{ width: 100 }}>\n              <TextInput\n                placeholder=\"ZIP\"\n                placeholderTextColor={palette.muted}\n                value={newZip}\n                onChangeText={setNewZip}\n                style={[inputStyle, { marginBottom: 0 }]}\n              />\n            </View>\n          </View>\n        </View>\n      );\n    }\n    return (\n      <TextInput\n        placeholder=\"Internal notes\"\n        placeholderTextColor={palette.muted}\n        value={newJobNotes}\n        onChangeText={setNewJobNotes}\n        multiline\n        style={[inputStyle, { minHeight: 96, textAlignVertical: 'top' }]}\n      />\n    );\n  };\n\n  return (\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\n      <ScrollView\n        contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(4) }}\n        refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} tintColor={palette.primary} />}\n      >\n        <SurfaceCard style={{ marginBottom: spacing(3), padding: spacing(2.5) }}>\n          <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700', marginBottom: spacing(2) }}>Create job</Text>\n          <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1.5), marginBottom: spacing(2) }}>\n            {jobTabs.map(tab => {\n              const selected = tab.key === jobFormTab;\n              return (\n                <TouchableOpacity\n                  key={tab.key}\n                  onPress={() => setJobFormTab(tab.key)}\n                  activeOpacity={0.85}\n                  style={{\n                    paddingHorizontal: spacing(2),\n                    paddingVertical: spacing(1),\n                    borderRadius: 999,\n                    borderWidth: 1,\n                    borderColor: selected ? palette.primary : palette.border,\n                    backgroundColor: selected ? '#d9f2ed' : palette.surface,\n                  }}\n                >\n                  <Text style={{ color: selected ? palette.primaryStrong : palette.muted, fontWeight:'600', fontSize: typography.small }}>\n                    {tab.label}\n                  </Text>\n                </TouchableOpacity>\n              );\n            })}\n          </View>\n          {renderJobFormFields()}\n          <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center', marginTop: spacing(2) }}>\n            <QuickAction label=\"Reset\" tone=\"muted\" onPress={resetForm} />\n            <TouchableOpacity\n              onPress={createJob}\n              activeOpacity={0.85}\n              style={{ backgroundColor: palette.primary, paddingHorizontal: spacing(2.5), paddingVertical: spacing(1.5), borderRadius: 12 }}\n            >\n              <Text style={{ color:'#fff', fontWeight:'700' }}>Create job</Text>\n            </TouchableOpacity>\n          </View>\n        </SurfaceCard>\n\n        {loading && !refreshing && jobs.length === 0 ? (\n          <SurfaceCard style={{ alignItems:'center', paddingVertical: spacing(6), marginBottom: spacing(3) }}>\n            <ActivityIndicator color={palette.primary} />\n            <Text style={{ color: palette.muted, marginTop: spacing(1.5) }}>Loading jobs...</Text>\n          </SurfaceCard>\n        ) : null}\n\n        {groupedJobs.length === 0 ? (\n          <SurfaceCard>\n            <Text style={{ color: palette.muted }}>No jobs yet. Convert a lead or add a job to get started.</Text>\n          </SurfaceCard>\n        ) : (\n          groupedJobs.map(group => (\n            <View key={group.status} style={{ marginBottom: spacing(3) }}>\n              <Text style={{ color: palette.muted, fontWeight:'700', fontSize: typography.small, textTransform:'uppercase', marginBottom: spacing(1) }}>\n                {statusLabel(group.status)}\n              </Text>\n              {group.jobs.map(job => {\n                const customer = job.Customer || {};\n                const jobsite = job.Jobsite || {};\n                const addressParts = [\n                  jobsite.addressLine1,\n                  jobsite.addressLine2,\n                  [jobsite.city, jobsite.state].filter(Boolean).join(', '),\n                  jobsite.zip\n                ].filter(Boolean);\n                const address = addressParts.join(', ');\n                const statusKey = (job.status || 'SCHEDULED').toUpperCase();\n                return (\n                  <SurfaceCard key={job.id} style={{ marginBottom: spacing(1.5) }}>\n                    <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center' }}>\n                      <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600' }}>{job.name || `Job #${job.id}`}</Text>\n                      <StatusPill status={statusKey} />\n                    </View>\n                    {(job.startDate || job.endDate) ? (\n                      <Text style={{ color: palette.muted, marginTop: spacing(0.75) }}>\n                        {[job.startDate ? `Start ${formatDate(job.startDate)}` : null, job.endDate ? `Due ${formatDate(job.endDate)}` : null].filter(Boolean).join(' | ')}\n                      </Text>\n                    ) : null}\n                    {customer.name ? <Text style={{ color: palette.text, fontWeight:'600', marginTop: spacing(1) }}>{customer.name}</Text> : null}\n                    {customer.phone ? <Text style={{ color: palette.muted }}>{customer.phone}</Text> : null}\n                    {customer.email ? <Text style={{ color: palette.muted }}>{customer.email}</Text> : null}\n                    {address ? <Text style={{ color: palette.muted, marginTop: spacing(1) }}>{address}</Text> : null}\n                    {job.notes ? <Text style={{ color: palette.muted, marginTop: spacing(1) }} numberOfLines={3}>{job.notes}</Text> : null}\n                    <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginTop: spacing(2) }}>\n                      <QuickAction label=\"View job\" onPress={() => navigation.navigate('JobDetail', { jobId: job.id })} tone=\"muted\" />\n                      {quickStatusActions.map(action => (\n                        action.value === statusKey ? null : (\n                          <QuickAction\n                            key={action.value}\n                            label={action.label}\n                            tone={action.tone}\n                            onPress={() => updateJobStatus(job.id, action.value)}\n                          />\n                        )\n                      ))}\n                      <QuickAction label=\"Delete\" tone=\"danger\" onPress={() => removeJob(job.id)} />\n                    </View>\n                  </SurfaceCard>\n                );\n              })}\n            </View>\n          ))\n        )}\n      </ScrollView>\n    </SafeAreaView>\n  );\n}function JobDetailScreen({ route, navigation }){\r\n  const { jobId } = route.params;\r\n  const { token, user } = useAuth();\r\n  const [jobName, setJobName] = useState('');\r\n  const [jobStartDate, setJobStartDate] = useState('');\r\n  const [jobEndDate, setJobEndDate] = useState('');\r\n  const [jobNotes, setJobNotes] = useState('');\r\n  const [jobCustomerName, setJobCustomerName] = useState('');\r\n  const [jobCustomerPhone, setJobCustomerPhone] = useState('');\r\n  const [jobCustomerEmail, setJobCustomerEmail] = useState('');\r\n  const [jobAddressLine1, setJobAddressLine1] = useState('');\r\n  const [jobAddressLine2, setJobAddressLine2] = useState('');\r\n  const [jobCity, setJobCity] = useState('');\r\n  const [jobStateCode, setJobStateCode] = useState('');\r\n  const [jobZip, setJobZip] = useState('');\r\n  const [changeOrders, setCO] = useState([]);\r\n  const [title, setTitle] = useState('');\r\n  const [amountDelta, setAmountDelta] = useState('0');\r\n  const loadCO = useCallback(async () => {\r\n    setCO(await api(`/change-orders/job/${jobId}`,'GET',null,token));\r\n  }, [jobId, token]);\r\n  const loadJob = useCallback(async () => {\r\n    try {\r\n      const j = await api(`/jobs/${jobId}`,'GET',null,token);\r\n      setJobName(j.name||'');\r\n      setJobStartDate(j.startDate||'');\r\n      setJobEndDate(j.endDate||'');\r\n      setJobNotes(j.notes||'');\r\n      const customer = j.Customer || {};\r\n      const jobsite = j.Jobsite || {};\r\n      setJobCustomerName(customer.name || '');\r\n      setJobCustomerPhone(customer.phone || '');\r\n      setJobCustomerEmail(customer.email || '');\r\n      setJobAddressLine1(jobsite.addressLine1 || '');\r\n      setJobAddressLine2(jobsite.addressLine2 || '');\r\n      setJobCity(jobsite.city || '');\r\n      setJobStateCode(jobsite.state || '');\r\n      setJobZip(jobsite.zip || '');\r\n    } catch(e) { }\r\n  }, [jobId, token]);\r\n  useEffect(()=>{ loadJob(); loadCO(); },[loadJob, loadCO]);\r\n  const addCO = async ()=>{\r\n    if(!title.trim()){\r\n      Alert.alert('Missing info', 'Add a title for the change order.');\r\n      return;\r\n    }\r\n    await api(`/change-orders/job/${jobId}`,'POST',{ title: title.trim(), amountDelta: parseFloat(amountDelta) || 0 }, token);\r\n    setTitle(''); setAmountDelta('0'); loadCO();\r\n  };\r\n  const saveJobDetails = async () => {\r\n    try {\r\n      await api(`/jobs/${jobId}`,'PATCH',{\r\n        name: jobName,\r\n        startDate: jobStartDate || null,\r\n        endDate: jobEndDate || null,\r\n        notes: jobNotes,\r\n        customer: {\r\n          name: jobCustomerName,\r\n          phone: jobCustomerPhone,\r\n          email: jobCustomerEmail,\r\n          billingAddress: jobAddressLine1 ? `${jobAddressLine1}${jobAddressLine2 ? `\\n${jobAddressLine2}` : ''}${jobCity ? `\\n${jobCity}, ${jobStateCode} ${jobZip}` : ''}` : null,\r\n        },\r\n        jobsite: {\r\n          addressLine1: jobAddressLine1,\r\n          addressLine2: jobAddressLine2,\r\n          city: jobCity,\r\n          state: jobStateCode,\r\n          zip: jobZip,\r\n        },\r\n      }, token);\r\n      Alert.alert('Saved', 'Job details updated.');\r\n      loadJob();\r\n    } catch(e) {\r\n      Alert.alert('Error', e.message || 'Unable to save job');\r\n    }\r\n  };\r\n  const deleteJob = () => {\r\n    Alert.alert('Delete job', `Delete job #${jobId}?`, [\r\n      { text:'Cancel', style:'cancel' },\r\n      { text:'Delete', style:'destructive', onPress: async ()=>{\r\n        try{\r\n          await api(`/jobs/${jobId}`,'DELETE',null,token);\r\n          db.transaction(tx => tx.executeSql('DELETE FROM jobs_cache WHERE id=?', [jobId]));\r\n          Alert.alert('Deleted', 'Job removed.');\r\n          navigation.navigate('Tabs', { screen:'Jobs' });\r\n        }catch(e){\r\n          Alert.alert('Error', e.message || 'Unable to delete job');\r\n        }\r\n      }}\r\n    ]);\r\n  };\r\n  return (\r\n    <SafeAreaView style={{ flex:1 }}>\r\n      <ScrollView contentContainerStyle={{ padding:16, paddingBottom:32 }}>\r\n        <Text style={{ fontSize:18, fontWeight:'600', marginBottom:8 }}>Job #{jobId}</Text>\r\n        <Text style={{ fontWeight:'600', marginBottom:6 }}>Job Details</Text>\r\n        <TextInput placeholder=\"Job name\" value={jobName} onChangeText={setJobName} style={{ borderWidth:1, padding:8, marginBottom:6 }} />\r\n        <View style={{ flexDirection:'row', gap:8 }}>\r\n          <TextInput placeholder=\"Start date (YYYY-MM-DD)\" value={jobStartDate} onChangeText={setJobStartDate} style={{ flex:1, borderWidth:1, padding:8 }} />\r\n          <TextInput placeholder=\"End date (YYYY-MM-DD)\" value={jobEndDate} onChangeText={setJobEndDate} style={{ flex:1, borderWidth:1, padding:8 }} />\r\n        </View>\r\n        <TextInput placeholder=\"Notes / scope\" value={jobNotes} onChangeText={setJobNotes} multiline style={{ borderWidth:1, padding:8, marginTop:6, minHeight:80 }} />\r\n\r\n        <Text style={{ fontWeight:'600', marginTop:16 }}>Customer</Text>\r\n        <TextInput placeholder=\"Name\" value={jobCustomerName} onChangeText={setJobCustomerName} style={{ borderWidth:1, padding:8, marginBottom:6 }} />\r\n        <TextInput placeholder=\"Phone\" value={jobCustomerPhone} onChangeText={setJobCustomerPhone} keyboardType=\"phone-pad\" style={{ borderWidth:1, padding:8, marginBottom:6 }} />\r\n        <TextInput placeholder=\"Email\" value={jobCustomerEmail} onChangeText={setJobCustomerEmail} keyboardType=\"email-address\" style={{ borderWidth:1, padding:8, marginBottom:6 }} />\r\n\r\n        <Text style={{ fontWeight:'600', marginTop:16 }}>Job Address</Text>\r\n        <TextInput placeholder=\"Address line 1\" value={jobAddressLine1} onChangeText={setJobAddressLine1} style={{ borderWidth:1, padding:8, marginBottom:6 }} />\r\n        <TextInput placeholder=\"Address line 2\" value={jobAddressLine2} onChangeText={setJobAddressLine2} style={{ borderWidth:1, padding:8, marginBottom:6 }} />\r\n        <View style={{ flexDirection:'row', gap:8 }}>\r\n          <TextInput placeholder=\"City\" value={jobCity} onChangeText={setJobCity} style={{ flex:1, borderWidth:1, padding:8 }} />\r\n          <TextInput placeholder=\"State\" value={jobStateCode} onChangeText={setJobStateCode} style={{ width:80, borderWidth:1, padding:8 }} />\r\n          <TextInput placeholder=\"ZIP\" value={jobZip} onChangeText={setJobZip} style={{ width:100, borderWidth:1, padding:8 }} />\r\n        </View>\r\n        <View style={{ marginTop:12 }}>\r\n          <Button title=\"Save details\" onPress={saveJobDetails} />\r\n        </View>\r\n        <View style={{ marginTop:12 }}>\r\n          <Button color=\"#d11a2a\" title=\"Delete job\" onPress={deleteJob} />\r\n        </View>\r\n\r\n        {(user?.role==='ADMIN'||user?.role==='SUPERVISOR'||user?.role==='ESTIMATOR') && (\r\n          <View style={{ marginVertical:16 }}>\r\n            <Text style={{ fontWeight:'600' }}>New Change Order</Text>\r\n            <TextInput placeholder=\"Title\" value={title} onChangeText={setTitle} style={{ borderWidth:1, padding:8, marginVertical:6 }} />\r\n            <TextInput placeholder=\"Amount $\" value={amountDelta} onChangeText={setAmountDelta} keyboardType=\"decimal-pad\" style={{ borderWidth:1, padding:8, marginVertical:6 }} />\r\n            <Button title=\"Add Change Order\" onPress={addCO} />\r\n          </View>\r\n        )}\r\n        <Text style={{ fontWeight:'600', marginTop:12 }}>Change Orders</Text>\r\n        {changeOrders.length === 0 ? (\r\n          <Text style={{ marginVertical:6 }}>No change orders yet.</Text>\r\n        ) : changeOrders.map(item => (\r\n          <View key={item.id} style={{ borderWidth:1, padding:10, borderRadius:8, marginVertical:6 }}>\r\n            <Text style={{ fontWeight:'600' }}>{item.title}</Text>\r\n            <Text>Status: {item.status} | ${item.amountDelta}</Text>\r\n            {(user?.role==='ADMIN'||user?.role==='SUPERVISOR'||user?.role==='ESTIMATOR') && (\r\n              <View style={{ flexDirection:'row', gap:8, marginTop:8 }}>\r\n                <Button title=\"Approve\" onPress={async ()=>{ await api(`/change-orders/${item.id}`,'PATCH',{ status:'APPROVED' }, token); loadCO(); }} />\r\n                <Button title=\"Reject\" onPress={async ()=>{ await api(`/change-orders/${item.id}`,'PATCH',{ status:'REJECTED' }, token); loadCO(); }} />\r\n              </View>\r\n            )}\r\n          </View>\r\n        ))}\r\n\r\n        <Text style={{ fontWeight:'600', marginTop:16 }}>Tasks</Text>\r\n        <JobTasks jobId={jobId} />\r\n\r\n        <Text style={{ fontWeight:'600', marginTop:16 }}>Schedule</Text>\r\n        <JobSchedule jobId={jobId} />\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nfunction JobTasks({ jobId }){\r\n  const { token } = useAuth();\r\n  const [tasks, setTasks] = useState([]);\r\n  const [title, setTitle] = useState('');\r\n  const [dueDate, setDueDate] = useState('');\r\n  const load = async()=> {\r\n    try {\r\n      const data = await api(`/tasks?jobId=${jobId}`,'GET',null,token);\r\n      setTasks(data);\r\n      db.transaction(tx => {\r\n        tx.executeSql('DELETE FROM tasks_cache WHERE jobId=?', [jobId]);\r\n        data.forEach(t => tx.executeSql('INSERT OR REPLACE INTO tasks_cache (id, jobId, title, status, dueDate) VALUES (?,?,?,?,?)', [t.id, jobId, t.title||'', t.status||'TODO', t.dueDate||'']));\r\n      });\r\n    } catch(e) {\r\n      db.transaction(tx => tx.executeSql('SELECT id, jobId, title, status, dueDate FROM tasks_cache WHERE jobId=?', [jobId], (_, { rows }) => setTasks(rows._array || [])));\r\n    }\r\n  };\r\n  useEffect(()=>{ load(); },[]);\r\n  const add = async()=>{\r\n    if(!title.trim()) return Alert.alert('Title required');\r\n    await api('/tasks','POST',{ title, jobId, dueDate }, token);\r\n    setTitle(''); setDueDate(''); load();\r\n  };\r\n  const done = async(id)=>{ await api(`/tasks/${id}`,'PATCH',{ status:'DONE' }, token); load(); };\r\n  const remove = async(id)=>{ await api(`/tasks/${id}`,'DELETE',null,token); load(); };\r\n  return (\r\n    <View>\r\n      <View style={{ flexDirection:'row', gap:8, marginVertical:8 }}>\r\n        <TextInput placeholder=\"Task title\" value={title} onChangeText={setTitle} style={{ flex:1, borderWidth:1, padding:8 }} />\r\n        <TextInput placeholder=\"Due YYYY-MM-DD\" value={dueDate} onChangeText={setDueDate} style={{ width:140, borderWidth:1, padding:8 }} />\r\n        <Button title=\"Add\" onPress={add} />\r\n      </View>\r\n      {tasks.map(t => (\r\n        <View key={t.id} style={{ borderWidth:1, padding:10, borderRadius:8, marginVertical:6 }}>\r\n          <Text style={{ fontWeight:'600' }}>{t.title}</Text>\r\n          <Text>Due: {t.dueDate || '-'} | Status: {t.status}</Text>\r\n          <View style={{ flexDirection:'row', gap:8, marginTop:6 }}>\r\n            <Button title=\"Mark Done\" onPress={()=>done(t.id)} />\r\n            <Button title=\"Delete\" color=\"#c00\" onPress={()=>remove(t.id)} />\r\n          </View>\r\n        </View>\r\n      ))}\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction JobSchedule({ jobId }){\r\n  const { token } = useAuth();\r\n  const [events, setEvents] = useState([]);\r\n  const [title, setTitle] = useState('');\r\n  const [startAt, setStartAt] = useState('');\r\n  const [endAt, setEndAt] = useState('');\r\n  const load = async()=> {\r\n    try {\r\n      const data = await api(`/calendar?jobId=${jobId}`,'GET',null,token);\r\n      setEvents(data);\r\n      db.transaction(tx => {\r\n        tx.executeSql('DELETE FROM calendar_cache WHERE jobId=?', [jobId]);\r\n        data.forEach(ev => tx.executeSql('INSERT OR REPLACE INTO calendar_cache (id, jobId, title, startAt, endAt) VALUES (?,?,?,?,?)', [ev.id, jobId, ev.title||'', ev.startAt||'', ev.endAt||'']));\r\n      });\r\n    } catch(e) {\r\n      db.transaction(tx => tx.executeSql('SELECT id, jobId, title, startAt, endAt FROM calendar_cache WHERE jobId=?', [jobId], (_, { rows }) => setEvents(rows._array || [])));\r\n    }\r\n  };\r\n  useEffect(()=>{ load(); },[]);\r\n  const add = async()=>{\r\n    if(!title.trim() || !startAt) return Alert.alert('Title and start time required');\r\n    await api('/calendar','POST',{ title, jobId, startAt, endAt }, token);\r\n    setTitle(''); setStartAt(''); setEndAt(''); load();\r\n  };\r\n  const remove = async(id)=>{ await api(`/calendar/${id}`,'DELETE',null,token); load(); };\r\n  return (\r\n    <View>\r\n      <View style={{ marginVertical:8 }}>\r\n        <TextInput placeholder=\"Event title\" value={title} onChangeText={setTitle} style={{ borderWidth:1, padding:8, marginBottom:6 }} />\r\n        <TextInput placeholder=\"Start (YYYY-MM-DDTHH:mm:ssZ)\" value={startAt} onChangeText={setStartAt} style={{ borderWidth:1, padding:8, marginBottom:6 }} />\r\n        <TextInput placeholder=\"End (YYYY-MM-DDTHH:mm:ssZ)\" value={endAt} onChangeText={setEndAt} style={{ borderWidth:1, padding:8, marginBottom:6 }} />\r\n        <Button title=\"Add Event\" onPress={add} />\r\n      </View>\r\n      {events.map(ev => (\r\n        <View key={ev.id} style={{ borderWidth:1, padding:10, borderRadius:8, marginVertical:6 }}>\r\n          <Text style={{ fontWeight:'600' }}>{ev.title}</Text>\r\n          <Text>{ev.startAt} -> {ev.endAt || '-'}</Text>\r\n          <Button title=\"Delete\" color=\"#c00\" onPress={()=>remove(ev.id)} />\r\n        </View>\r\n      ))}\r\n    </View>\r\n  );\r\n}\r\n\r\n// ---------- Leads / Estimates (with photo queue) ----------\r\nasync function processQueue(token){\r\n  return new Promise(resolve => {\r\n    db.transaction(tx => {\r\n      tx.executeSql('SELECT * FROM queue', [], async (_, { rows }) => {\r\n        const items = rows._array || [];\r\n        for(const q of items){\r\n          try{\r\n            const payload = JSON.parse(q.payload);\r\n            if(q.type === 'createLead'){ await api('/leads', 'POST', payload, token); }\r\n            if(q.type === 'uploadPhoto'){ await api('/upload/image', 'POST', { dataUrl: payload.dataUrl }, token); }\r\n            db.transaction(txx => txx.executeSql('DELETE FROM queue WHERE id=?', [q.id]));\r\n          }catch(e){ /* keep for later */ }\r\n        }\r\n        resolve();\r\n      });\r\n    });\r\n  });\r\n}\r\n\r\nfunction LeadsScreen({ navigation }){\n  const { token } = useAuth();\n  const [leads, setLeads] = useState([]);\n  const [refreshing, setRefreshing] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  const fetchLeads = useCallback(async () => {\n    setLoading(true);\n    try {\n      const data = await api('/leads', 'GET', null, token);\n      setLeads(data);\n      db.transaction(tx => {\n        tx.executeSql && tx.executeSql('DELETE FROM leads_cache;');\n        data.forEach(l => tx.executeSql && tx.executeSql(\n          'INSERT OR REPLACE INTO leads_cache (id, description, status) VALUES (?,?,?)',\n          [l.id, l.description || '', l.status || 'NEW']\n        ));\n      });\n    } catch(e){\n      db.transaction(tx =>\n        tx.executeSql && tx.executeSql('SELECT id, description, status FROM leads_cache', [], (_, { rows }) => setLeads(rows._array || []))\n      );\n    }\n    finally {\n      setLoading(false);\n    }\n  }, [token]);\n\n  useFocusEffect(useCallback(() => {\n    fetchLeads();\n  }, [fetchLeads]));\n\n  const onRefresh = useCallback(async () => {\n    setRefreshing(true);\n    await fetchLeads();\n    setRefreshing(false);\n  }, [fetchLeads]);\n\n  const deleteLead = useCallback((lead) => {\n    Alert.alert('Delete lead', `Delete lead #${lead.id}?`, [\n      { text:'Cancel', style:'cancel' },\n      { text:'Delete', style:'destructive', onPress: async () => {\n        try {\n          await api(`/leads/${lead.id}`,'DELETE',null,token);\n          setLeads(prev => prev.filter(l => l.id !== lead.id));\n          db.transaction(tx => tx.executeSql && tx.executeSql('DELETE FROM leads_cache WHERE id=?', [lead.id]));\n        } catch(err) {\n          Alert.alert('Error', err.message || 'Unable to delete lead');\n        }\n      }}\n    ]);\n  }, [token]);\n\n  const newLeadsCount = leads.filter(l => (l.status || '').toUpperCase() === 'NEW').length;\n\n  const renderLeadCard = (lead) => {\n    const customer = lead.Customer || {};\n    const jobsite = lead.Jobsite || {};\n    const addressParts = [\n      jobsite.addressLine1,\n      jobsite.addressLine2,\n      [jobsite.city, jobsite.state].filter(Boolean).join(', '),\n      jobsite.zip\n    ].filter(Boolean);\n    const address = addressParts.join(', ');\n    const statusKey = (lead.status || 'NEW').toUpperCase();\n    return (\n      <SurfaceCard key={lead.id}>\n        <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center' }}>\n          <View>\n            <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600' }}>Lead #{lead.id}</Text>\n            <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>{customer.name || 'Unknown customer'}</Text>\n          </View>\n          <StatusPill status={statusKey} />\n        </View>\n        {customer.phone ? <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>{customer.phone}</Text> : null}\n        {customer.email ? <Text style={{ color: palette.muted }}>{customer.email}</Text> : null}\n        {address ? <Text style={{ color: palette.muted, marginTop: spacing(1) }}>{address}</Text> : null}\n        <Text numberOfLines={3} style={{ color: palette.text, marginTop: spacing(1.5) }}>{lead.description || 'No scope captured yet.'}</Text>\n        <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginTop: spacing(2) }}>\n          <QuickAction label=\"Open\" onPress={() => navigation.navigate('EstimateEditor', { leadId: lead.id })} />\n          <QuickAction label=\"Convert\" tone=\"success\" onPress={() => navigation.navigate('Jobs')} />\n          <QuickAction label=\"Delete\" tone=\"danger\" onPress={() => deleteLead(lead)} />\n        </View>\n      </SurfaceCard>\n    );\n  };\n\n  return (\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\n      <FlatList\n        data={leads}\n        keyExtractor={item => String(item.id)}\n        contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(4) }}\n        refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} tintColor={palette.primary} />}\n        ListHeaderComponent={\n          <View style={{ marginBottom: spacing(3) }}>\n            <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center', marginBottom: spacing(2) }}>\n              <View>\n                <Text style={{ color: palette.text, fontSize: typography.h1, fontWeight:'700' }}>Leads</Text>\n                <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>Keep the funnel moving</Text>\n              </View>\n              <QuickAction label=\"New lead\" onPress={() => navigation.navigate('NewLead')} />\n            </View>\n            <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(2), rowGap: spacing(2) }}>\n              <View style={{ flexBasis:'48%', minWidth: 160 }}>\n                <SummaryCard title=\"Total\" value={leads.length} subtitle={`${newLeadsCount} new`} tone=\"info\" />\n              </View>\n              <View style={{ flexBasis:'48%', minWidth: 160 }}>\n                <SummaryCard title=\"Outstanding\" value={newLeadsCount} subtitle=\"Require follow up\" tone=\"warning\" />\n              </View>\n            </View>\n          </View>\n        }\n        renderItem={({ item }) => renderLeadCard(item)}\n        ListEmptyComponent={\n          loading ? (\n            <SurfaceCard style={{ alignItems:'center', paddingVertical: spacing(4) }}>\n              <ActivityIndicator color={palette.primary} />\n              <Text style={{ color: palette.muted, marginTop: spacing(1) }}>Loading leads...</Text>\n            </SurfaceCard>\n          ) : (\n            <SurfaceCard>\n              <Text style={{ color: palette.muted }}>No leads yet. Capture a lead to get started.</Text>\n            </SurfaceCard>\n          )\n        }\n      />\n    </SafeAreaView>\n  );\n}function NewLeadScreen({ navigation }){\n  const { token } = useAuth();\n  const [description, setDescription] = useState('');\n  const [status, setStatus] = useState('NEW');\n  const [customerName, setCustomerName] = useState('');\n  const [customerPhone, setCustomerPhone] = useState('');\n  const [customerEmail, setCustomerEmail] = useState('');\n  const [addressLine1, setAddressLine1] = useState('');\n  const [addressLine2, setAddressLine2] = useState('');\n  const [city, setCity] = useState('');\n  const [stateCode, setStateCode] = useState('');\n  const [zip, setZip] = useState('');\n  const [showCustomerSection, setShowCustomerSection] = useState(false);\n  const [showJobsiteSection, setShowJobsiteSection] = useState(false);\n  const statuses = ['NEW','CONTACTED','ESTIMATING','CONVERTED','CLOSED_LOST'];\n\n  const buildPayload = () => {\n    const customer = [customerName, customerPhone, customerEmail].some(v => v && v.trim())\n      ? {\n          name: customerName.trim(),\n          phone: customerPhone.trim(),\n          email: customerEmail.trim(),\n        }\n      : null;\n    const jobsite = [addressLine1, addressLine2, city, stateCode, zip].some(v => v && v.trim())\n      ? {\n          addressLine1: addressLine1.trim(),\n          addressLine2: addressLine2.trim(),\n          city: city.trim(),\n          state: stateCode.trim(),\n          zip: zip.trim(),\n        }\n      : null;\n    return {\n      description,\n      status,\n      customer,\n      jobsite,\n    };\n  };\n\n  const createLeadOnline = async () => {\n    const payload = buildPayload();\n    const created = await api('/leads', 'POST', payload, token);\n    navigation.replace('EstimateEditor', { leadId: created.id });\n    Alert.alert('Lead created', `Lead #${created.id} ready to estimate.`);\n  };\n\n  const queueLead = () => {\n    const payload = buildPayload();\n    db.transaction(tx => tx.executeSql('INSERT INTO queue (type, payload) VALUES (?,?)', ['createLead', JSON.stringify(payload)]));\n    Alert.alert('Saved offline', 'We will submit this lead when you reconnect.');\n    navigation.goBack();\n  };\n\n  const submit = async () => {\n    if(!description.trim()){\n      Alert.alert('Missing scope', 'Please describe the job or scope of work.');\n      return;\n    }\n    try {\n      await createLeadOnline();\n    } catch(e){\n      queueLead();\n    }\n  };\n\n  const chipStyle = (active) => ({\n    paddingHorizontal: spacing(2),\n    paddingVertical: spacing(1),\n    borderRadius: 999,\n    borderWidth: 1,\n    borderColor: active ? palette.primary : palette.border,\n    backgroundColor: active ? '#d9f2ed' : palette.surface,\n  });\n\n  return (\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\n      <ScrollView contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(6) }}>\n        <SurfaceCard style={{ marginBottom: spacing(3) }}>\n          <Text style={{ color: palette.text, fontSize: typography.h1, fontWeight:'700', marginBottom: spacing(2) }}>New lead</Text>\n          <Text style={{ color: palette.muted, fontWeight:'600', marginBottom: spacing(1) }}>Scope</Text>\n          <TextInput\n            placeholder=\"Describe the job...\"\n            placeholderTextColor={palette.muted}\n            value={description}\n            onChangeText={setDescription}\n            multiline\n            style={{\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              minHeight: 120,\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted,\n              textAlignVertical: 'top',\n            }}\n          />\n          <Text style={{ color: palette.muted, fontWeight:'600', marginTop: spacing(2), marginBottom: spacing(1) }}>Status</Text>\n          <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1) }}>\n            {statuses.map(s => {\n              const active = status === s;\n              return (\n                <TouchableOpacity key={s} onPress={() => setStatus(s)} activeOpacity={0.85} style={chipStyle(active)}>\n                  <Text style={{ color: active ? palette.primaryStrong : palette.muted, fontWeight:'600', fontSize: typography.small }}>{s.replace('_',' ')}</Text>\n                </TouchableOpacity>\n              );\n            })}\n          </View>\n          <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center', marginTop: spacing(3) }}>\n            <QuickAction label=\"Save offline\" tone=\"muted\" onPress={queueLead} />\n            <TouchableOpacity\n              onPress={submit}\n              activeOpacity={0.85}\n              style={{ backgroundColor: palette.primary, paddingHorizontal: spacing(3), paddingVertical: spacing(1.5), borderRadius: 12 }}\n            >\n              <Text style={{ color:'#fff', fontWeight:'700' }}>Create lead</Text>\n            </TouchableOpacity>\n          </View>\n        </SurfaceCard>\n\n        <SurfaceCard style={{ marginBottom: spacing(3) }}>\n          <TouchableOpacity\n            onPress={() => setShowCustomerSection(v => !v)}\n            style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center' }}\n            activeOpacity={0.8}\n          >\n            <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600' }}>Customer details</Text>\n            <Text style={{ color: palette.primary, fontWeight:'600' }}>{showCustomerSection ? 'Hide' : 'Add'}</Text>\n          </TouchableOpacity>\n          {showCustomerSection ? (\n            <View style={{ marginTop: spacing(2) }}>\n              <TextInput\n                placeholder=\"Name\"\n                placeholderTextColor={palette.muted}\n                value={customerName}\n                onChangeText={setCustomerName}\n                style={{\n                  borderWidth: 1,\n                  borderColor: palette.border,\n                  borderRadius: 12,\n                  padding: spacing(2),\n                  color: palette.text,\n                  backgroundColor: palette.surfaceMuted,\n                  marginBottom: spacing(1.5),\n                }}\n              />\n              <TextInput\n                placeholder=\"Phone\"\n                placeholderTextColor={palette.muted}\n                keyboardType=\"phone-pad\"\n                value={customerPhone}\n                onChangeText={setCustomerPhone}\n                style={{\n                  borderWidth: 1,\n                  borderColor: palette.border,\n                  borderRadius: 12,\n                  padding: spacing(2),\n                  color: palette.text,\n                  backgroundColor: palette.surfaceMuted,\n                  marginBottom: spacing(1.5),\n                }}\n              />\n              <TextInput\n                placeholder=\"Email\"\n                placeholderTextColor={palette.muted}\n                keyboardType=\"email-address\"\n                autoCapitalize=\"none\"\n                value={customerEmail}\n                onChangeText={setCustomerEmail}\n                style={{\n                  borderWidth: 1,\n                  borderColor: palette.border,\n                  borderRadius: 12,\n                  padding: spacing(2),\n                  color: palette.text,\n                  backgroundColor: palette.surfaceMuted,\n                }}\n              />\n            </View>\n          ) : (\n            <Text style={{ color: palette.muted, marginTop: spacing(1.5) }}>Add contact details to help follow up faster.</Text>\n          )}\n        </SurfaceCard>\n\n        <SurfaceCard>\n          <TouchableOpacity\n            onPress={() => setShowJobsiteSection(v => !v)}\n            style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center' }}\n            activeOpacity={0.8}\n          >\n            <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600' }}>Jobsite address</Text>\n            <Text style={{ color: palette.primary, fontWeight:'600' }}>{showJobsiteSection ? 'Hide' : 'Add'}</Text>\n          </TouchableOpacity>\n          {showJobsiteSection ? (\n            <View style={{ marginTop: spacing(2) }}>\n              <TextInput\n                placeholder=\"Address line 1\"\n                placeholderTextColor={palette.muted}\n                value={addressLine1}\n                onChangeText={setAddressLine1}\n                style={{\n                  borderWidth: 1,\n                  borderColor: palette.border,\n                  borderRadius: 12,\n                  padding: spacing(2),\n                  color: palette.text,\n                  backgroundColor: palette.surfaceMuted,\n                  marginBottom: spacing(1.5),\n                }}\n              />\n              <TextInput\n                placeholder=\"Address line 2\"\n                placeholderTextColor={palette.muted}\n                value={addressLine2}\n                onChangeText={setAddressLine2}\n                style={{\n                  borderWidth: 1,\n                  borderColor: palette.border,\n                  borderRadius: 12,\n                  padding: spacing(2),\n                  color: palette.text,\n                  backgroundColor: palette.surfaceMuted,\n                  marginBottom: spacing(1.5),\n                }}\n              />\n              <View style={{ flexDirection:'row', columnGap: spacing(1.5) }}>\n                <View style={{ flex:1 }}>\n                  <TextInput\n                    placeholder=\"City\"\n                    placeholderTextColor={palette.muted}\n                    value={city}\n                    onChangeText={setCity}\n                    style={{\n                      borderWidth: 1,\n                      borderColor: palette.border,\n                      borderRadius: 12,\n                      padding: spacing(2),\n                      color: palette.text,\n                      backgroundColor: palette.surfaceMuted,\n                      marginBottom: spacing(1.5),\n                    }}\n                  />\n                </View>\n                <View style={{ width: 80 }}>\n                  <TextInput\n                    placeholder=\"State\"\n                    placeholderTextColor={palette.muted}\n                    value={stateCode}\n                    onChangeText={setStateCode}\n                    style={{\n                      borderWidth: 1,\n                      borderColor: palette.border,\n                      borderRadius: 12,\n                      padding: spacing(2),\n                      color: palette.text,\n                      backgroundColor: palette.surfaceMuted,\n                      marginBottom: spacing(1.5),\n                    }}\n                  />\n                </View>\n                <View style={{ width: 100 }}>\n                  <TextInput\n                    placeholder=\"ZIP\"\n                    placeholderTextColor={palette.muted}\n                    value={zip}\n                    onChangeText={setZip}\n                    style={{\n                      borderWidth: 1,\n                      borderColor: palette.border,\n                      borderRadius: 12,\n                      padding: spacing(2),\n                      color: palette.text,\n                      backgroundColor: palette.surfaceMuted,\n                      marginBottom: spacing(1.5),\n                    }}\n                  />\n                </View>\n              </View>\n            </View>\n          ) : (\n            <Text style={{ color: palette.muted, marginTop: spacing(1.5) }}>Add a jobsite to keep crews aligned.</Text>\n          )}\n        </SurfaceCard>\n      </ScrollView>\n    </SafeAreaView>\n  );\n}function EstimateEditorScreen({ route, navigation }){\r\n  const { token, user } = useAuth();\r\n  const { leadId } = route.params || {};\r\n  const [estimateId, setEstimateId] = useState(null);\r\n  const [items, setItems] = useState([]);\r\n  const [desc, setDesc] = useState('');\r\n  const [qty, setQty] = useState('1');\r\n  const [price, setPrice] = useState('0');\r\n  const [notes, setNotes] = useState('');\r\n  const [photoUrl, setPhotoUrl] = useState(null);\r\n  const [subtotal, setSubtotal] = useState(0);\r\n  const [taxRate, setTaxRate] = useState(7.0);\r\n  const [tax, setTax] = useState(0);\r\n  const [total, setTotal] = useState(0);\r\n  const [leadDetails, setLeadDetails] = useState(null);\r\n  const [leadStatus, setLeadStatus] = useState('NEW');\r\n  const [leadScope, setLeadScope] = useState('');\r\n  const [leadCustomerName, setLeadCustomerName] = useState('');\r\n  const [leadCustomerPhone, setLeadCustomerPhone] = useState('');\r\n  const [leadCustomerEmail, setLeadCustomerEmail] = useState('');\r\n  const [leadAddressLine1, setLeadAddressLine1] = useState('');\r\n  const [leadAddressLine2, setLeadAddressLine2] = useState('');\r\n  const [leadCity, setLeadCity] = useState('');\r\n  const [leadStateCode, setLeadStateCode] = useState('');\r\n  const [leadZip, setLeadZip] = useState('');\r\n  const leadStatuses = ['NEW','CONTACTED','ESTIMATING','CONVERTED','CLOSED_LOST'];\r\n\r\n  const loadLead = useCallback(async () => {\r\n    if (!leadId) return;\r\n    try {\r\n      const data = await api(`/leads/${leadId}`,'GET',null,token);\r\n      setLeadDetails(data);\r\n      setLeadStatus(data.status || 'NEW');\r\n      setLeadScope(data.description || '');\r\n      const customer = data.Customer || {};\r\n      const jobsite = data.Jobsite || {};\r\n      setLeadCustomerName(customer.name || '');\r\n      setLeadCustomerPhone(customer.phone || '');\r\n      setLeadCustomerEmail(customer.email || '');\r\n      setLeadAddressLine1(jobsite.addressLine1 || '');\r\n      setLeadAddressLine2(jobsite.addressLine2 || '');\r\n      setLeadCity(jobsite.city || '');\r\n      setLeadStateCode(jobsite.state || '');\r\n      setLeadZip(jobsite.zip || '');\r\n    } catch(e) { }\r\n  }, [leadId, token]);\r\n\r\n  useEffect(() => {\r\n    loadLead();\r\n  }, [loadLead]);\r\n\r\n  const createEstimate = async () => {\r\n    const est = await api('/estimates', 'POST', {\r\n      leadId,\r\n      customerId: leadDetails?.customerId ?? null,\r\n      jobsiteId: leadDetails?.jobsiteId ?? null,\r\n      subtotal: 0,\r\n      taxRate: parseFloat(taxRate) || 0,\r\n      total: 0\r\n    }, token);\r\n    setEstimateId(est.id);\r\n    return est;\r\n  };\r\n\r\n  const addItem = async () => {\r\n    if(!estimateId){ Alert.alert('Create estimate first'); return; }\r\n            <Text>Qty: {item.qty} x ${item.unitPrice} = {(parseFloat(item.qty||0)*parseFloat(item.unitPrice||0)).toFixed(2)}</Text>\r\n    setItems(prev => [data, ...prev]); setDesc(''); setQty('1'); setPrice('0');\r\n  };\r\n\r\n  const suggest = async () => {\r\n    const r = await api('/ai/estimate-suggest', 'POST', { notes }, token);\r\n    let targetId = estimateId;\r\n    if(!targetId){\r\n      const est = await createEstimate();\r\n      targetId = est.id;\r\n    }\r\n    for(const it of r.items){\r\n      await api(`/estimates/${targetId}/items`, 'POST', it, token);\r\n    }\r\n    if(!estimateId) setEstimateId(targetId);\r\n    Alert.alert('Added', 'Suggested line-items added');\r\n  };\r\n\r\n  const pickPhoto = async () => {\r\n    const res = await ImagePicker.launchImageLibraryAsync({ base64: true, quality: 0.6 });\r\n    if(!res.canceled && res.assets && res.assets[0].base64){\r\n      const dataUrl = `data:image/jpeg;base64,${res.assets[0].base64}`;\r\n      try {\r\n        const up = await api('/upload/image', 'POST', { dataUrl }, token);\r\n        setPhotoUrl(up.url);\r\n      } catch(e){\r\n        db.transaction(tx => tx.executeSql('INSERT INTO queue (type, payload) VALUES (?,?)', ['uploadPhoto', JSON.stringify({ dataUrl })]));\r\n        Alert.alert('Queued upload', 'Will send when online');\r\n      }\r\n    }\r\n  };\r\n\r\n  const saveLeadDetails = async () => {\r\n    if (!leadId) return;\r\n    try {\r\n      const updated = await api(`/leads/${leadId}`,'PATCH',{\r\n        description: leadScope,\r\n        status: leadStatus,\r\n        customer: [leadCustomerName, leadCustomerPhone, leadCustomerEmail].some(v => v && v.trim()) ? {\r\n          name: leadCustomerName,\r\n          phone: leadCustomerPhone,\r\n          email: leadCustomerEmail,\r\n        } : null,\r\n        jobsite: [leadAddressLine1, leadAddressLine2, leadCity, leadStateCode, leadZip].some(v => v && v.trim()) ? {\r\n          addressLine1: leadAddressLine1,\r\n          addressLine2: leadAddressLine2,\r\n          city: leadCity,\r\n          state: leadStateCode,\r\n          zip: leadZip,\r\n        } : null,\r\n      }, token);\r\n      setLeadDetails(updated);\r\n      Alert.alert('Saved', 'Lead details updated.');\r\n    } catch(e) {\r\n      Alert.alert('Error', e.message || 'Unable to update lead');\r\n    }\r\n  };\r\n\r\n  const approveAndSign = () => { if(!estimateId){ Alert.alert('Create estimate'); return; } navigation.navigate('Signature', { estimateId }); };\r\n\r\n  const canEstimate = user?.role === 'ADMIN' || user?.role === 'ESTIMATOR';\r\n\r\n  useEffect(()=>{\r\n    const s = items.reduce((acc, it) => acc + (parseFloat(it.qty||0) * parseFloat(it.unitPrice||0)), 0);\r\n    const t = s * (parseFloat(taxRate||0)/100);\r\n    setSubtotal(s);\r\n    setTax(t);\r\n    setTotal(s + t);\r\n  }, [items, taxRate]);\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex:1 }}>\r\n      <ScrollView contentContainerStyle={{ padding:16, paddingBottom:32 }}>\r\n        <Text style={{ fontSize:18, marginBottom:8 }}>Lead #{leadId}</Text>\r\n        <Text style={{ fontWeight:'600', marginBottom:6 }}>Lead status</Text>\r\n        <View style={{ flexDirection:'row', flexWrap:'wrap', gap:8, marginBottom:12 }}>\r\n          {leadStatuses.map(s => (\r\n            <TouchableOpacity\r\n              key={s}\r\n              onPress={()=>setLeadStatus(s)}\r\n              style={{\r\n                paddingVertical:6,\r\n                paddingHorizontal:12,\r\n                borderRadius:16,\r\n                borderWidth:1,\r\n                borderColor: leadStatus===s ? '#007AFF' : '#ccc',\r\n                backgroundColor: leadStatus===s ? '#E6F0FF' : '#fff'\r\n              }}\r\n            >\r\n              <Text style={{ color: leadStatus===s ? '#007AFF' : '#333' }}>{s}</Text>\r\n            </TouchableOpacity>\r\n          ))}\r\n        </View>\r\n        <Text style={{ fontWeight:'600', marginBottom:6 }}>Scope / notes</Text>\r\n        <TextInput\r\n          placeholder=\"What does this lead need? Add notes, access info, budget...\"\r\n          value={leadScope}\r\n          onChangeText={setLeadScope}\r\n          multiline\r\n          style={{ borderWidth:1, padding:10, minHeight:100, marginBottom:12 }}\r\n        />\r\n        <Text style={{ fontWeight:'600', marginBottom:6 }}>Customer</Text>\r\n        <TextInput placeholder=\"Name\" value={leadCustomerName} onChangeText={setLeadCustomerName} style={{ borderWidth:1, padding:8, marginBottom:6 }} />\r\n        <TextInput placeholder=\"Phone\" value={leadCustomerPhone} onChangeText={setLeadCustomerPhone} keyboardType=\"phone-pad\" style={{ borderWidth:1, padding:8, marginBottom:6 }} />\r\n        <TextInput placeholder=\"Email\" value={leadCustomerEmail} onChangeText={setLeadCustomerEmail} keyboardType=\"email-address\" style={{ borderWidth:1, padding:8, marginBottom:12 }} />\r\n        <Text style={{ fontWeight:'600', marginBottom:6 }}>Job address</Text>\r\n        <TextInput placeholder=\"Address line 1\" value={leadAddressLine1} onChangeText={setLeadAddressLine1} style={{ borderWidth:1, padding:8, marginBottom:6 }} />\r\n        <TextInput placeholder=\"Address line 2\" value={leadAddressLine2} onChangeText={setLeadAddressLine2} style={{ borderWidth:1, padding:8, marginBottom:6 }} />\r\n        <View style={{ flexDirection:'row', gap:8 }}>\r\n          <TextInput placeholder=\"City\" value={leadCity} onChangeText={setLeadCity} style={{ flex:1, borderWidth:1, padding:8 }} />\r\n          <TextInput placeholder=\"State\" value={leadStateCode} onChangeText={setLeadStateCode} style={{ width:80, borderWidth:1, padding:8 }} />\r\n          <TextInput placeholder=\"ZIP\" value={leadZip} onChangeText={setLeadZip} style={{ width:100, borderWidth:1, padding:8 }} />\r\n        </View>\r\n        <View style={{ marginTop:12 }}>\r\n          <Button title=\"Save lead details\" onPress={saveLeadDetails} />\r\n        </View>\r\n\r\n        <View style={{ height:24 }} />\r\n        <Text style={{ fontSize:18, fontWeight:'600', marginBottom:8 }}>Estimate</Text>\r\n        {canEstimate ? <Button title={estimateId ? `Estimate #${estimateId}` : \"Create Estimate\"} onPress={createEstimate} /> : <Text>View only (insufficient role)</Text>}\r\n        <View style={{ height:12 }} />\r\n        <TextInput placeholder=\"Item description\" value={desc} onChangeText={setDesc} style={{ borderWidth:1, padding:8, marginBottom:6 }} />\r\n        <TextInput placeholder=\"Qty\" value={qty} onChangeText={setQty} keyboardType='decimal-pad' style={{ borderWidth:1, padding:8, marginBottom:6 }} />\r\n        <TextInput placeholder=\"Unit Price\" value={price} onChangeText={setPrice} keyboardType='decimal-pad' style={{ borderWidth:1, padding:8, marginBottom:6 }} />\r\n        {canEstimate && <Button title=\"Add Item\" onPress={addItem} />}\r\n        <View style={{ height:16 }} />\r\n        <Text style={{ fontWeight:'600' }}>AI helper</Text>\r\n        <TextInput placeholder=\"Paste field notes...\" value={notes} onChangeText={setNotes} multiline style={{ borderWidth:1, minHeight:80, padding:8, marginBottom:6 }} />\r\n        {canEstimate && <Button title=\"Suggest Line Items\" onPress={suggest} />}\r\n        <View style={{ height:16 }} />\r\n        <Text style={{ fontWeight:'600', marginBottom:6 }}>Totals</Text>\r\n        <View style={{ flexDirection:'row', justifyContent:'space-between', marginBottom:6 }}>\r\n          <Text>Subtotal</Text><Text>${subtotal.toFixed(2)}</Text>\r\n        </View>\r\n        <View style={{ flexDirection:'row', alignItems:'center', justifyContent:'space-between', marginBottom:6 }}>\r\n          <Text>Tax Rate (%)</Text>\r\n          <TextInput value={String(taxRate)} onChangeText={(v)=>setTaxRate(parseFloat(v)||0)} keyboardType='decimal-pad' style={{ borderWidth:1, padding:6, width:80, textAlign:'right' }} />\r\n        </View>\r\n        <View style={{ flexDirection:'row', justifyContent:'space-between', marginBottom:6 }}>\r\n          <Text>Tax</Text><Text>${tax.toFixed(2)}</Text>\r\n        </View>\r\n        <View style={{ flexDirection:'row', justifyContent:'space-between', marginBottom:12 }}>\r\n          <Text style={{ fontWeight:'700' }}>Total</Text><Text style={{ fontWeight:'700' }}>${total.toFixed(2)}</Text>\r\n        </View>\r\n        <View style={{ height:8 }} />\r\n        <Button title=\"Attach Photo\" onPress={pickPhoto} />\r\n        {photoUrl ? <Image source={{ uri: `${API_URL}${photoUrl}` }} style={{ height:120, marginTop:8 }} /> : null}\r\n        <View style={{ height:16 }} />\r\n        <Button title=\"Create Job from Estimate\" onPress={async ()=>{\r\n          try {\r\n            let targetId = estimateId;\r\n            if(!targetId){\r\n              const est = await createEstimate();\r\n              targetId = est.id;\r\n            }\r\n            const hasCustomer = [leadCustomerName, leadCustomerPhone, leadCustomerEmail].some(v => v && v.trim());\r\n            const hasAddress = [leadAddressLine1, leadAddressLine2, leadCity, leadStateCode, leadZip].some(v => v && v.trim());\r\n            const payload = {\r\n              name: leadCustomerName ? `${leadCustomerName} - ${(leadScope || 'Job').slice(0,40)}` : `Job for Estimate #${targetId}`,\r\n              status: 'SCHEDULED',\r\n              estimateId: targetId,\r\n              notes: leadScope || null,\r\n            };\r\n            if (hasCustomer) {\r\n              payload.customer = {\r\n                name: leadCustomerName,\r\n                phone: leadCustomerPhone,\r\n                email: leadCustomerEmail,\r\n              };\r\n            }\r\n            if (hasAddress) {\r\n              payload.jobsite = {\r\n                addressLine1: leadAddressLine1,\r\n                addressLine2: leadAddressLine2,\r\n                city: leadCity,\r\n                state: leadStateCode,\r\n                zip: leadZip,\r\n              };\r\n            }\r\n            const job = await api('/jobs','POST',payload, token);\r\n            Alert.alert('Job Created', `Job #${job.id}`, [\r\n              { text:'Open job', onPress: ()=>navigation.navigate('JobDetail', { jobId: job.id }) },\r\n              { text:'OK' }\r\n            ]);\r\n          } catch(e){ Alert.alert('Error', e.message); }\r\n        }} />\r\n        <View style={{ height:8 }} />\r\n        <Button title=\"Approve & Sign\" onPress={approveAndSign} />\r\n        <View style={{ height:8 }} />\r\n        <Button title=\"Send Estimate\" onPress={async ()=>{\r\n          if(!estimateId) return Alert.alert('Create estimate first');\r\n          try { await api(`/estimates/${estimateId}/send`, 'POST', {}, token); Alert.alert('Sent', 'Estimate sent'); } catch(e){ Alert.alert('Error', e.message); }\r\n        }} />\r\n        <View style={{ height:8 }} />\r\n        <Button title=\"Download PDF\" onPress={async ()=>{\r\n          if(!estimateId) return Alert.alert('Create estimate first');\r\n          const fileUri = `${FileSystem.documentDirectory}estimate-${estimateId}.pdf`;\r\n          try {\r\n            await FileSystem.downloadAsync(`${API_URL}/pdf/estimate/${estimateId}`, fileUri, { headers: { Authorization: `Bearer ${token}` } });\r\n            Alert.alert('Saved', `PDF saved to:\\n${fileUri}`);\r\n          } catch (e) { Alert.alert('Error', e.message); }\r\n        }} />\r\n        <View style={{ height:16 }} />\r\n        {items.length === 0 ? (\r\n          <Text style={{ color:'#555' }}>No line-items yet.</Text>\r\n        ) : items.map((item, idx) => (\r\n          <View key={item.id || idx} style={{ padding:10, borderWidth:1, marginBottom:8 }}>\r\n            <Text style={{ fontWeight:'600' }}>{item.description}</Text>\r\n            <Text>Qty: {item.qty} Ã— ${item.unitPrice} = {(parseFloat(item.qty||0)*parseFloat(item.unitPrice||0)).toFixed(2)}</Text>\r\n          </View>\r\n        ))}\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\nfunction ScheduleScreen(){\r\n  const { token } = useAuth();\r\n  const [jobs, setJobs] = useState([]);\r\n  const [filter, setFilter] = useState('ALL'); // ALL | TODAY | WEEK\r\n  const [queueCount, setQueueCount] = useState(0);\r\n\r\n  const loadQueueCount = () => {\r\n    db.transaction(tx => tx.executeSql('SELECT COUNT(*) as c FROM queue', [], (_, { rows }) => setQueueCount((rows._array?.[0]?.c)||0)));\r\n  };\r\n\r\n  const load = async ()=> {\r\n    try {\r\n      const data = await api('/jobs','GET',null,token);\r\n      setJobs(data);\r\n      db.transaction(tx => {\r\n        tx.executeSql('DELETE FROM jobs_cache;');\r\n        data.forEach(j => tx.executeSql('INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)', [j.id, j.name||'', j.status||'SCHEDULED', j.startDate||'', j.endDate||'', j.notes||'']));\r\n      });\r\n    } catch(e) {\r\n      db.transaction(tx => tx.executeSql('SELECT id, name, status, startDate, endDate, notes FROM jobs_cache', [], (_, { rows }) => setJobs(rows._array || [])));\r\n    }\r\n  };\r\n\r\n  useEffect(()=>{ load(); loadQueueCount(); }, [token]);\r\n\r\n  const inRange = (d) => {\r\n    if (!d) return false;\r\n    const today = new Date();\r\n    const dt = new Date(d);\r\n    if (filter === 'TODAY') {\r\n      return dt.getFullYear()===today.getFullYear() && dt.getMonth()===today.getMonth() && dt.getDate()===today.getDate();\r\n    }\r\n    if (filter === 'WEEK') {\r\n      const start = new Date(today); start.setDate(today.getDate()-today.getDay());\r\n      const end = new Date(start); end.setDate(start.getDate()+6);\r\n      return dt >= start && dt <= end;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const filtered = jobs.filter(j => filter==='ALL' ? true : inRange(j.startDate));\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex:1 }}>\r\n      <View style={{ padding:12, borderBottomWidth:1 }}>\r\n        <Text style={{ fontWeight:'700', marginBottom:6 }}>Schedule</Text>\r\n        <View style={{ flexDirection:'row', gap:8, marginBottom:8 }}>\r\n          <Button title=\"All\" onPress={()=>setFilter('ALL')} />\r\n          <Button title=\"Today\" onPress={()=>setFilter('TODAY')} />\r\n          <Button title=\"This Week\" onPress={()=>setFilter('WEEK')} />\r\n        </View>\r\n        <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center' }}>\r\n          <Text>Offline queue: {queueCount}</Text>\r\n          <Button title=\"Sync now\" onPress={async ()=>{ await processQueue(token); load(); loadQueueCount(); }} />\r\n        </View>\r\n      </View>\r\n      <FlatList\r\n        data={filtered}\r\n        keyExtractor={j=>String(j.id)}\r\n        contentContainerStyle={{ padding:12 }}\r\n        renderItem={({item})=> {\r\n          const jobsite = item.Jobsite;\r\n          const address = jobsite ? [\r\n            jobsite.addressLine1,\r\n            jobsite.addressLine2,\r\n            [jobsite.city, jobsite.state].filter(Boolean).join(', '),\r\n            jobsite.zip,\r\n          ].filter(Boolean).join(' - ') : '';\r\n          return (\r\n            <View style={{ borderWidth:1, padding:10, borderRadius:8, marginBottom:8 }}>\r\n              <Text style={{ fontWeight:'600' }}>{item.name || `Job #${item.id}`}</Text>\r\n              <Text>Status: {item.status}</Text>\r\n              <Text>Date: {item.startDate || '-'}{item.endDate ? ` Ã¢â€ â€™ ${item.endDate}` : ''}</Text>\r\n              {address ? <Text style={{ color:'#555', marginTop:4 }}>{address}</Text> : null}\r\n              {item.notes ? <Text style={{ marginTop:4 }}>Notes: {item.notes}</Text> : null}\r\n            </View>\r\n          );\r\n        }}\r\n        ListEmptyComponent={<Text style={{ textAlign:'center', marginTop:20 }}>No jobs{filter!=='ALL' ? ' in range' : ''} - add one!</Text>}\r\n      />\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nfunction MeScreen({ navigation }){\r\n  const { setToken, user } = useAuth();\r\n  return (\r\n    <SafeAreaView style={{ flex:1, padding:16 }}>\r\n      <Text style={{ fontSize:20, fontWeight:'600' }}>PrecisionTracker</Text>\r\n      <Text>User: {user?.email} ({user?.role})</Text>\r\n      {user?.role==='ADMIN' && <View style={{ height:12 }} />}\r\n      {user?.role==='ADMIN' && <Button title=\"Manage Users\" onPress={()=>navigation.navigate('UsersAdmin')} />}\r\n      <View style={{ height:20 }} />\r\n      <Button title=\"Sign out\" onPress={()=>setToken(null)} />\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nconst Stack = createNativeStackNavigator();\r\nconst Tabs = createBottomTabNavigator();\r\n\r\nfunction TabsNav(){\r\n  return (\r\n    <Tabs.Navigator\r\n      screenOptions={{\r\n        headerShown: false,\r\n        tabBarActiveTintColor: palette.primary,\r\n        tabBarStyle: { backgroundColor: '#fff' },\r\n      }}\r\n    >\r\n      <Tabs.Screen name=\"Dashboard\" component={DashboardScreen} options={{ title: 'Home' }} />\r\n      <Tabs.Screen name=\"Leads\" component={LeadsScreen} />\r\n      <Tabs.Screen name=\"Jobs\" component={JobsKanbanScreen} options={{ title:'Jobs' }} />\r\n      <Tabs.Screen name=\"Schedule\" component={ScheduleScreen} />\r\n      <Tabs.Screen name=\"Me\" component={MeScreen} />\r\n    </Tabs.Navigator>\r\n  );\r\n}\r\n\r\nfunction LoginScreen() {\r\n  const [email, setEmail] = useState('admin@example.com');\r\n  // If you kept the hardcoded backend login, default to test123:\r\n  const [password, setPassword] = useState('test123');\r\n  const [busy, setBusy] = useState(false);\r\n\r\n  // <-- use the auth context to flip the app into \"logged-in\" mode\r\n  const { setToken, setUser } = useAuth();\r\n\r\n  async function login() {\r\n    try {\r\n      setBusy(true);\r\n      const res = await fetch(`${API_URL}/auth/login`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n      const data = await res.json();\r\n      if (!res.ok) throw new Error(data?.message || data?.error || 'Login failed');\r\n\r\n      // Accept dev or real payload shape\r\n      const tok = data.token || data.accessToken;\r\n      if (!tok) throw new Error('No token returned from server');\r\n\r\n      // ÃƒÂ¢Ã‚Â¬Ã¢â‚¬Â¡ÃƒÂ¯Ã‚Â¸Ã‚Â This is the key: store token/user in global auth state\r\n      // Store token/user in global auth state + persist\r\n      const normalizedUser = data.user ? { ...data.user, role: normalizeRole(data.user.role) } : { email, role: 'ADMIN', name: 'Admin' };\r\n      setToken(tok);\r\n      setUser(normalizedUser);\r\n      try {\r\n        await SecureStore.setItemAsync('auth_token', tok);\r\n        await SecureStore.setItemAsync('auth_user', JSON.stringify(normalizedUser));\r\n      } catch {}\r\n\r\n      // Optional: toast\r\n      Alert.alert('Welcome', 'Logged in');\r\n    } catch (e) {\r\n      Alert.alert('Error', e.message);\r\n    } finally {\r\n      setBusy(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View style={{ flex: 1, padding: 20, justifyContent: 'center' }}>\r\n      <Text style={{ fontSize: 24, marginBottom: 16 }}>PrecisionTracker</Text>\r\n      <TextInput\r\n        placeholder=\"Email\"\r\n        autoCapitalize=\"none\"\r\n        value={email}\r\n        onChangeText={setEmail}\r\n        style={{ borderWidth: 1, padding: 12, marginBottom: 12 }}\r\n      />\r\n      <TextInput\r\n        placeholder=\"Password\"\r\n        secureTextEntry\r\n        value={password}\r\n        onChangeText={setPassword}\r\n        style={{ borderWidth: 1, padding: 12, marginBottom: 12 }}\r\n      />\r\n      <Button title={busy ? 'Signing in...' : 'Sign in'} onPress={login} disabled={busy} />\r\n    </View>\r\n  );\r\n}\r\n\r\n\r\nexport default function App(){\r\n  const [token, setToken] = useState(null);\r\n  const [user, setUser] = useState(null);\r\n  const [booting, setBooting] = useState(true);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    (async () => {\r\n      try {\r\n        const [tok, usr] = await Promise.all([\r\n          SecureStore.getItemAsync('auth_token'),\r\n          SecureStore.getItemAsync('auth_user')\r\n        ]);\r\n        if (mounted && tok) {\r\n          setToken(tok);\r\n          if (usr) {\r\n            const parsed = JSON.parse(usr);\r\n            parsed.role = normalizeRole(parsed.role);\r\n            setUser(parsed);\r\n          }\r\n        }\r\n      } catch {}\r\n      finally { if (mounted) setBooting(false); }\r\n    })();\r\n    return () => { mounted = false; };\r\n  }, []);\r\n\r\n  const authValue = {\r\n    token,\r\n    setToken: (t) => {\r\n      setToken(t);\r\n      if (!t) { try { SecureStore.deleteItemAsync('auth_token'); SecureStore.deleteItemAsync('auth_user'); } catch {} }\r\n    },\r\n    user,\r\n    setUser\r\n  };\r\n\r\n  if (booting) {\r\n    return (\r\n      <SafeAreaView style={{ flex:1, alignItems:'center', justifyContent:'center' }}>\r\n        <Text>LoadingÃƒÂ¢Ã¢â€šÂ¬Ã‚Â¦</Text>\r\n      </SafeAreaView>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={authValue}>\r\n      <NavigationContainer>\r\n        {!token ? (\r\n          <Stack.Navigator>\r\n            <Stack.Screen name=\"Login\" component={LoginScreen} />\r\n          </Stack.Navigator>\r\n        ) : (\r\n          <Stack.Navigator>\r\n            <Stack.Screen name=\"Tabs\" component={TabsNav} options={{ headerShown:false }} />\r\n            <Stack.Screen name=\"NewLead\" component={NewLeadScreen} options={{ title:'New Lead' }} />\r\n            <Stack.Screen name=\"EstimateEditor\" component={EstimateEditorScreen} options={{ title:'Estimate' }} />\r\n            <Stack.Screen name=\"Signature\" component={SignatureScreen} options={{ title:'Signature' }} />\r\n            <Stack.Screen name=\"UsersAdmin\" component={UsersAdminScreen} options={{ title:'Users (Admin)' }} />\r\n            <Stack.Screen name=\"JobDetail\" component={JobDetailScreen} options={{ title:'Job' }} />\r\n          </Stack.Navigator>\r\n        )}\r\n      </NavigationContainer>\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}