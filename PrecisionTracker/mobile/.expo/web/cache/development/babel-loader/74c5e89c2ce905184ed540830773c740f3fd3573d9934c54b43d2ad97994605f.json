{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tyler\\\\Downloads\\\\PrecisionTracker-v4-wired\\\\PrecisionTracker\\\\mobile\\\\App.js\";\nimport React, { useEffect, useState, createContext, useContext, useRef, useCallback, useMemo } from 'react';\nimport { NavigationContainer, useFocusEffect } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport * as ImagePicker from 'expo-image-picker';\nimport * as FileSystem from 'expo-file-system';\nimport * as SQLite from 'expo-sqlite';\nimport Svg, { Path } from 'react-native-svg';\nimport ViewShot from 'react-native-view-shot';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"react-native-web/dist/exports/View\";\nimport * as SecureStore from 'expo-secure-store';\nimport DateTimePicker, { DateTimePickerAndroid } from '@react-native-community/datetimepicker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.EXPO_PUBLIC_API_URL || 'http://localhost:4000';\nfunction initOfflineTables(database) {\n  try {\n    if (!database || typeof database.transaction !== 'function') return;\n    database.transaction(tx => {\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS queue (id INTEGER PRIMARY KEY AUTOINCREMENT, type TEXT, payload TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS uploads (id INTEGER PRIMARY KEY AUTOINCREMENT, dataUrl TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS leads_cache (id INTEGER PRIMARY KEY, description TEXT, status TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS jobs_cache (id INTEGER PRIMARY KEY, name TEXT, status TEXT, startDate TEXT, endDate TEXT, notes TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS tasks_cache (id INTEGER PRIMARY KEY, jobId INTEGER, title TEXT, status TEXT, dueDate TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS calendar_cache (id INTEGER PRIMARY KEY, jobId INTEGER, title TEXT, startAt TEXT, endAt TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS estimates_cache (id INTEGER PRIMARY KEY, leadId INTEGER, subtotal REAL, taxRate REAL, total REAL, status TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS estimate_items_cache (id INTEGER PRIMARY KEY, estimateId INTEGER, description TEXT, qty REAL, unitPrice REAL);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS change_orders_cache (id INTEGER PRIMARY KEY, jobId INTEGER, title TEXT, amountDelta REAL, status TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS users_cache (id INTEGER PRIMARY KEY, email TEXT, fullName TEXT, role TEXT);');\n    });\n  } catch (e) {}\n}\nlet db;\nexport function getDb() {\n  if (db) return db;\n  if (Platform.OS === 'web') {\n    db = {\n      transaction: fn => fn({\n        executeSql: () => {}\n      }),\n      execAsync: async () => {},\n      runAsync: async () => {}\n    };\n    return db;\n  }\n  if ('openDatabaseSync' in SQLite) {\n    db = SQLite.openDatabaseSync('offline.db');\n    return db;\n  }\n  if ('openDatabaseAsync' in SQLite) {\n    db = {\n      transaction: fn => fn({\n        executeSql: () => {}\n      }),\n      execAsync: async () => {},\n      runAsync: async () => {}\n    };\n    return db;\n  }\n  db = {\n    transaction: fn => fn({\n      executeSql: () => {}\n    }),\n    execAsync: async () => {},\n    runAsync: async () => {}\n  };\n  return db;\n}\nconst dbHandle = getDb();\ninitOfflineTables(dbHandle);\nconst normalizeRole = role => {\n  if (!role) return 'TECH';\n  const r = String(role).toUpperCase();\n  if (['ADMIN', 'ESTIMATOR', 'SUPERVISOR', 'TECH'].includes(r)) return r;\n  if (r === 'STANDARD' || r === 'USER') return 'TECH';\n  return r;\n};\nconst AuthContext = createContext(null);\nfunction useAuth() {\n  return useContext(AuthContext);\n}\nasync function api(path, method = 'GET', body, token) {\n  const headers = Object.assign({}, token ? {\n    Authorization: `Bearer ${token}`\n  } : {}, body ? {\n    'Content-Type': 'application/json'\n  } : {});\n  let response;\n  try {\n    response = await fetch(`${API_URL}${path}`, {\n      method,\n      headers,\n      body: body ? JSON.stringify(body) : undefined\n    });\n  } catch (networkError) {\n    throw new Error(networkError?.message || 'Network request failed');\n  }\n  const contentType = response.headers.get('content-type') || '';\n  const rawBody = await response.text();\n  let data = null;\n  if (rawBody) {\n    if (contentType.includes('application/json')) {\n      try {\n        data = JSON.parse(rawBody);\n      } catch {\n        data = rawBody;\n      }\n    } else {\n      data = rawBody;\n    }\n  }\n  if (!response.ok) {\n    const message = data && typeof data === 'object' && (data.error || data.message) || (typeof data === 'string' ? data : 'Request failed');\n    throw new Error(message);\n  }\n  return data;\n}\nconst palette = {\n  background: '#f4f6f8',\n  surface: '#ffffff',\n  surfaceMuted: '#f1f5f9',\n  border: '#e2e8f0',\n  text: '#0f172a',\n  muted: '#5f6b7d',\n  primary: '#2c8a7d',\n  primaryStrong: '#1f6a60',\n  success: '#219653',\n  warning: '#f59e0b',\n  danger: '#d14343',\n  info: '#2563eb'\n};\nconst spacing = (step = 1) => step * 8;\nconst typography = {\n  h1: 24,\n  h2: 18,\n  body: 15,\n  small: 12\n};\nconst floatingShadow = Platform.select({\n  ios: {\n    shadowColor: '#0f172a',\n    shadowOpacity: 0.08,\n    shadowRadius: 14,\n    shadowOffset: {\n      width: 0,\n      height: 6\n    }\n  },\n  android: {\n    elevation: 2\n  },\n  default: {}\n});\nconst pillTone = {\n  NEW: {\n    fg: palette.info,\n    bg: '#e6eeff',\n    label: 'New'\n  },\n  CONTACTED: {\n    fg: palette.primary,\n    bg: '#e6f4f2',\n    label: 'Contacted'\n  },\n  ESTIMATING: {\n    fg: palette.warning,\n    bg: '#fdf1d6',\n    label: 'Estimating'\n  },\n  CONVERTED: {\n    fg: palette.success,\n    bg: '#e6f6ec',\n    label: 'Converted'\n  },\n  CLOSED_LOST: {\n    fg: palette.muted,\n    bg: '#e2e8f0',\n    label: 'Lost'\n  },\n  SCHEDULED: {\n    fg: palette.primary,\n    bg: '#e6f4f2',\n    label: 'Scheduled'\n  },\n  IN_PROGRESS: {\n    fg: palette.info,\n    bg: '#e6eeff',\n    label: 'In progress'\n  },\n  COMPLETE: {\n    fg: palette.success,\n    bg: '#e6f6ec',\n    label: 'Complete'\n  },\n  DONE: {\n    fg: palette.success,\n    bg: '#e6f6ec',\n    label: 'Complete'\n  },\n  ON_HOLD: {\n    fg: palette.warning,\n    bg: '#fdf1d6',\n    label: 'On hold'\n  },\n  CANCELLED: {\n    fg: palette.muted,\n    bg: '#e2e8f0',\n    label: 'Cancelled'\n  },\n  DRAFT: {\n    fg: palette.muted,\n    bg: '#e2e8f0',\n    label: 'Draft'\n  },\n  SENT: {\n    fg: palette.info,\n    bg: '#e6eeff',\n    label: 'Sent'\n  },\n  PART_PAID: {\n    fg: palette.warning,\n    bg: '#fdf1d6',\n    label: 'Part paid'\n  },\n  PAID: {\n    fg: palette.success,\n    bg: '#e6f6ec',\n    label: 'Paid'\n  },\n  VOID: {\n    fg: palette.muted,\n    bg: '#f1f5f9',\n    label: 'Void'\n  }\n};\nconst toneMap = {\n  primary: {\n    fg: palette.primaryStrong,\n    bg: '#e0f3f0'\n  },\n  success: {\n    fg: palette.success,\n    bg: '#e6f6ec'\n  },\n  warning: {\n    fg: palette.warning,\n    bg: '#fdf1d6'\n  },\n  danger: {\n    fg: palette.danger,\n    bg: '#fde4e4'\n  },\n  info: {\n    fg: palette.info,\n    bg: '#e6eeff'\n  }\n};\nconst formInputBaseStyle = {\n  borderWidth: 1,\n  borderColor: palette.border,\n  borderRadius: 12,\n  paddingVertical: spacing(1.5),\n  paddingHorizontal: spacing(2),\n  color: palette.text,\n  backgroundColor: palette.surfaceMuted,\n  fontSize: typography.body,\n  marginBottom: spacing(1.5)\n};\nconst FormInput = React.forwardRef((props, ref) => _jsxDEV(TextInput, Object.assign({\n  ref: ref,\n  placeholderTextColor: palette.muted\n}, props, {\n  style: [formInputBaseStyle, props.style]\n}), void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 216,\n  columnNumber: 3\n}, this));\nFormInput.displayName = 'FormInput';\nconst formatCurrency = value => {\n  const amount = Number(value || 0);\n  if (Number.isNaN(amount)) return '$0';\n  return `$${amount.toLocaleString(undefined, {\n    minimumFractionDigits: amount % 1 ? 2 : 0,\n    maximumFractionDigits: 2\n  })}`;\n};\nconst formatDate = value => {\n  if (!value) return null;\n  const d = new Date(value);\n  if (Number.isNaN(d.getTime())) return value;\n  return d.toLocaleDateString(undefined, {\n    month: 'short',\n    day: 'numeric'\n  });\n};\nconst isTaskCompleted = status => {\n  if (!status) return false;\n  const key = String(status).toUpperCase();\n  return key === 'DONE' || key === 'COMPLETE';\n};\nfunction SurfaceCard({\n  children,\n  style,\n  onPress\n}) {\n  const content = _jsxDEV(View, {\n    style: [{\n      backgroundColor: palette.surface,\n      borderRadius: 16,\n      borderWidth: 1,\n      borderColor: palette.border,\n      padding: spacing(2)\n    }, floatingShadow, style],\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 246,\n    columnNumber: 5\n  }, this);\n  if (!onPress) return content;\n  return _jsxDEV(TouchableOpacity, {\n    activeOpacity: 0.85,\n    onPress: onPress,\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 5\n  }, this);\n}\nfunction StatusPill({\n  status\n}) {\n  if (!status) return null;\n  const key = String(status).toUpperCase();\n  const cfg = pillTone[key] || {\n    fg: palette.muted,\n    bg: '#e2e8f0',\n    label: status\n  };\n  return _jsxDEV(View, {\n    style: {\n      backgroundColor: cfg.bg,\n      borderRadius: 999,\n      paddingHorizontal: spacing(1.5),\n      paddingVertical: spacing(0.5)\n    },\n    children: _jsxDEV(Text, {\n      style: {\n        color: cfg.fg,\n        fontSize: typography.small,\n        fontWeight: '600'\n      },\n      children: cfg.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 269,\n    columnNumber: 5\n  }, this);\n}\nfunction SummaryCard({\n  title,\n  value,\n  subtitle,\n  tone = 'primary',\n  onPress\n}) {\n  const colors = toneMap[tone] || toneMap.primary;\n  return _jsxDEV(SurfaceCard, {\n    onPress: onPress,\n    style: {\n      backgroundColor: colors.bg,\n      borderColor: 'transparent',\n      padding: spacing(2.5)\n    },\n    children: [_jsxDEV(Text, {\n      style: {\n        color: palette.muted,\n        fontSize: typography.small,\n        textTransform: 'uppercase',\n        fontWeight: '700'\n      },\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this), _jsxDEV(Text, {\n      style: {\n        color: colors.fg,\n        fontSize: 28,\n        fontWeight: '800',\n        marginTop: spacing(0.5)\n      },\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), subtitle ? _jsxDEV(Text, {\n      style: {\n        color: palette.muted,\n        fontSize: typography.small,\n        marginTop: spacing(0.5)\n      },\n      children: subtitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 19\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 278,\n    columnNumber: 5\n  }, this);\n}\nfunction SectionHeader({\n  title,\n  actionLabel,\n  onAction\n}) {\n  return _jsxDEV(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      marginBottom: spacing(1.5)\n    },\n    children: [_jsxDEV(Text, {\n      style: {\n        color: palette.text,\n        fontSize: typography.h2,\n        fontWeight: '700'\n      },\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this), actionLabel && onAction ? _jsxDEV(TouchableOpacity, {\n      onPress: onAction,\n      style: {\n        paddingHorizontal: spacing(1),\n        paddingVertical: spacing(0.5)\n      },\n      children: _jsxDEV(Text, {\n        style: {\n          color: palette.primary,\n          fontWeight: '600',\n          fontSize: typography.small\n        },\n        children: actionLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 291,\n    columnNumber: 5\n  }, this);\n}\nfunction QuickAction({\n  label,\n  onPress,\n  tone = 'primary'\n}) {\n  const toneStyles = (() => {\n    switch (tone) {\n      case 'danger':\n        return {\n          borderColor: '#fecdd3',\n          backgroundColor: '#fee2e2',\n          textColor: palette.danger\n        };\n      case 'success':\n        return {\n          borderColor: '#bbf7d0',\n          backgroundColor: '#dcfce7',\n          textColor: palette.success\n        };\n      case 'warning':\n        return {\n          borderColor: '#fde68a',\n          backgroundColor: '#fef3c7',\n          textColor: palette.warning\n        };\n      case 'muted':\n        return {\n          borderColor: palette.border,\n          backgroundColor: palette.surface,\n          textColor: palette.muted\n        };\n      default:\n        return {\n          borderColor: palette.border,\n          backgroundColor: palette.surfaceMuted,\n          textColor: palette.primary\n        };\n    }\n  })();\n  return _jsxDEV(TouchableOpacity, {\n    onPress: onPress,\n    activeOpacity: 0.85,\n    style: {\n      borderRadius: 10,\n      paddingHorizontal: spacing(1.5),\n      paddingVertical: spacing(0.75),\n      borderWidth: 1,\n      borderColor: toneStyles.borderColor,\n      backgroundColor: toneStyles.backgroundColor\n    },\n    children: _jsxDEV(Text, {\n      style: {\n        color: toneStyles.textColor,\n        fontWeight: '600',\n        fontSize: typography.small\n      },\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 318,\n    columnNumber: 5\n  }, this);\n}\nconst toInputDate = dateValue => {\n  const d = dateValue instanceof Date ? dateValue : new Date(dateValue);\n  if (Number.isNaN(d.getTime())) return '';\n  const yyyy = d.getFullYear();\n  const mm = String(d.getMonth() + 1).padStart(2, '0');\n  const dd = String(d.getDate()).padStart(2, '0');\n  return `${yyyy}-${mm}-${dd}`;\n};\nconst parseInputDate = value => {\n  if (!value) return null;\n  const parsed = new Date(value);\n  if (Number.isNaN(parsed.getTime())) return null;\n  return parsed;\n};\nfunction DateInputField({\n  value,\n  onChange,\n  placeholder = 'Select date',\n  minimumDate,\n  maximumDate,\n  style\n}) {\n  const [iosPickerVisible, setIosPickerVisible] = useState(false);\n  const isWeb = Platform.OS === 'web';\n  const toDateOnly = input => {\n    if (!input) return '';\n    if (input instanceof Date) return toInputDate(input);\n    if (typeof input === 'string') {\n      const [datePart] = input.split('T');\n      return datePart;\n    }\n    return '';\n  };\n  const normalizedValue = toDateOnly(value);\n  const minDateString = minimumDate ? toDateOnly(minimumDate) : undefined;\n  const maxDateString = maximumDate ? toDateOnly(maximumDate) : undefined;\n  const parsed = parseInputDate(normalizedValue) || new Date();\n  const displayLabel = value ? formatDate(value) || normalizedValue : '';\n  const applyDate = selectedDate => {\n    if (!selectedDate) return;\n    onChange(toInputDate(selectedDate));\n  };\n  const handleManualChange = text => {\n    if (!text) {\n      onChange('');\n      return;\n    }\n    onChange(text);\n  };\n  const openPicker = () => {\n    if (isWeb) return;\n    const baseDate = parseInputDate(normalizedValue) || new Date();\n    if (Platform.OS === 'android') {\n      DateTimePickerAndroid.open({\n        value: baseDate,\n        mode: 'date',\n        minimumDate: minimumDate ? parseInputDate(minimumDate) || undefined : undefined,\n        maximumDate: maximumDate ? parseInputDate(maximumDate) || undefined : undefined,\n        onChange: (event, selected) => {\n          if (event.type === 'set' && selected) applyDate(selected);\n        }\n      });\n    } else {\n      setIosPickerVisible(true);\n    }\n  };\n  const containerStyle = [{\n    marginBottom: spacing(1.5)\n  }, style];\n  if (isWeb) {\n    return _jsxDEV(View, {\n      style: containerStyle,\n      children: _jsxDEV(TextInput, {\n        value: normalizedValue,\n        placeholder: placeholder,\n        placeholderTextColor: palette.muted,\n        onChangeText: handleManualChange,\n        onChange: event => handleManualChange(event?.nativeEvent?.text ?? event?.target?.value ?? ''),\n        style: [formInputBaseStyle, {\n          marginBottom: 0\n        }],\n        type: \"date\",\n        min: minDateString,\n        max: maxDateString\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 7\n    }, this);\n  }\n  return _jsxDEV(View, {\n    style: containerStyle,\n    children: [_jsxDEV(TouchableOpacity, {\n      onPress: openPicker,\n      activeOpacity: 0.85,\n      style: {\n        borderWidth: 1,\n        borderColor: palette.border,\n        borderRadius: 12,\n        backgroundColor: palette.surfaceMuted,\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(1.5)\n      },\n      children: [_jsxDEV(Text, {\n        style: {\n          flex: 1,\n          color: displayLabel ? palette.text : palette.muted,\n          fontSize: typography.body\n        },\n        children: displayLabel || placeholder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: {\n          fontSize: typography.h2 - 6,\n          color: palette.muted\n        },\n        children: \"CAL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 7\n    }, this), Platform.OS === 'ios' && iosPickerVisible ? _jsxDEV(DateTimePicker, {\n      value: parsed,\n      mode: \"date\",\n      display: \"inline\",\n      onChange: (event, selected) => {\n        if (event.type === 'set' && selected) {\n          applyDate(selected);\n        }\n        if (event.type === 'dismissed') {\n          setIosPickerVisible(false);\n          return;\n        }\n        setIosPickerVisible(false);\n      },\n      style: {\n        marginTop: spacing(1)\n      },\n      minimumDate: minimumDate ? parseInputDate(minimumDate) || undefined : undefined,\n      maximumDate: maximumDate ? parseInputDate(maximumDate) || undefined : undefined\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 426,\n    columnNumber: 5\n  }, this);\n}\nconst TECH_ASSIGN_ROLES = ['TECH', 'SUPERVISOR', 'ESTIMATOR'];\nfunction TechSelector({\n  team = [],\n  value,\n  onSelect,\n  label,\n  allowAllRoles,\n  allowClear\n}) {\n  const options = useMemo(() => {\n    const normalized = team.map(member => Object.assign({}, member, {\n      role: normalizeRole(member.role)\n    }));\n    if (allowAllRoles) return normalized;\n    return normalized.filter(member => TECH_ASSIGN_ROLES.includes(member.role));\n  }, [team, allowAllRoles]);\n  if (!options.length) return null;\n  const renderLabel = label ? _jsxDEV(Text, {\n    style: {\n      color: palette.muted,\n      fontSize: typography.small,\n      marginBottom: spacing(1)\n    },\n    children: label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 485,\n    columnNumber: 5\n  }, this) : null;\n  return _jsxDEV(View, {\n    style: {\n      marginTop: spacing(1.5)\n    },\n    children: [renderLabel, _jsxDEV(View, {\n      style: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        columnGap: spacing(1),\n        rowGap: spacing(1)\n      },\n      children: [options.map(member => {\n        const selected = member.id === value;\n        const displayName = member.fullName || member.email;\n        const shortLabel = displayName.length > 22 ? `${displayName.slice(0, 21)}…` : displayName;\n        return _jsxDEV(QuickAction, {\n          label: shortLabel,\n          tone: selected ? 'primary' : 'muted',\n          onPress: () => onSelect(member.id)\n        }, member.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 13\n        }, this);\n      }), allowClear ? _jsxDEV(QuickAction, {\n        label: \"Clear\",\n        tone: \"muted\",\n        onPress: () => onSelect(null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 23\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 489,\n    columnNumber: 5\n  }, this);\n}\nfunction DashboardScreen({\n  navigation\n}) {\n  const {\n    token\n  } = useAuth();\n  const [loading, setLoading] = useState(true);\n  const [refreshing, setRefreshing] = useState(false);\n  const [leads, setLeads] = useState([]);\n  const [jobs, setJobs] = useState([]);\n  const [tasks, setTasks] = useState([]);\n  const [invoiceSummary, setInvoiceSummary] = useState(null);\n  const [lastUpdated, setLastUpdated] = useState(null);\n  const jobLookup = useMemo(() => {\n    const map = {};\n    for (const job of jobs) {\n      if (job?.id != null) {\n        map[job.id] = job;\n      }\n    }\n    return map;\n  }, [jobs]);\n  const loadData = useCallback(async (isPullRefresh = false) => {\n    if (!token) return;\n    isPullRefresh ? setRefreshing(true) : setLoading(true);\n    const fetchLeads = async () => {\n      try {\n        const data = await api('/leads', 'GET', null, token);\n        setLeads(data);\n        db.transaction(tx => {\n          tx.executeSql && tx.executeSql('DELETE FROM leads_cache;');\n          data.forEach(l => tx.executeSql && tx.executeSql('INSERT OR REPLACE INTO leads_cache (id, description, status) VALUES (?,?,?)', [l.id, l.description || '', l.status || 'NEW']));\n        });\n        return data;\n      } catch (e) {\n        return await new Promise(resolve => {\n          db.transaction(tx => tx.executeSql && tx.executeSql('SELECT id, description, status FROM leads_cache', [], (_, {\n            rows\n          }) => {\n            const fallback = rows?._array || [];\n            setLeads(fallback);\n            resolve(fallback);\n          }));\n        });\n      }\n    };\n    const fetchJobs = async () => {\n      try {\n        const data = await api('/jobs', 'GET', null, token);\n        setJobs(data);\n        db.transaction(tx => {\n          tx.executeSql && tx.executeSql('DELETE FROM jobs_cache;');\n          data.forEach(j => tx.executeSql && tx.executeSql('INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)', [j.id, j.name || '', j.status || 'SCHEDULED', j.startDate || '', j.endDate || '', j.notes || '']));\n        });\n        return data;\n      } catch (e) {\n        return await new Promise(resolve => {\n          db.transaction(tx => tx.executeSql && tx.executeSql('SELECT id, name, status, startDate, endDate, notes FROM jobs_cache', [], (_, {\n            rows\n          }) => {\n            const fallback = rows?._array || [];\n            setJobs(fallback);\n            resolve(fallback);\n          }));\n        });\n      }\n    };\n    const fetchTasks = async () => {\n      try {\n        const data = await api('/tasks', 'GET', null, token);\n        setTasks(data);\n        db.transaction(tx => {\n          data.forEach(t => tx.executeSql && tx.executeSql('INSERT OR REPLACE INTO tasks_cache (id, jobId, title, status, dueDate) VALUES (?,?,?,?,?)', [t.id, t.jobId || null, t.title || '', t.status || 'TODO', t.dueDate || '']));\n        });\n        return data;\n      } catch (e) {\n        return await new Promise(resolve => {\n          db.transaction(tx => tx.executeSql && tx.executeSql('SELECT id, jobId, title, status, dueDate FROM tasks_cache ORDER BY id DESC', [], (_, {\n            rows\n          }) => {\n            const fallback = rows?._array || [];\n            setTasks(fallback);\n            resolve(fallback);\n          }));\n        });\n      }\n    };\n    const fetchInvoiceSummary = async () => {\n      try {\n        const data = await api('/invoices/summary', 'GET', null, token);\n        setInvoiceSummary(data);\n        return data;\n      } catch (e) {\n        return null;\n      }\n    };\n    try {\n      await Promise.all([fetchLeads(), fetchJobs(), fetchTasks(), fetchInvoiceSummary()]);\n      setLastUpdated(new Date());\n    } finally {\n      isPullRefresh ? setRefreshing(false) : setLoading(false);\n    }\n  }, [token]);\n  useFocusEffect(useCallback(() => {\n    loadData(false);\n  }, [loadData]));\n  const onRefresh = useCallback(() => loadData(true), [loadData]);\n  const newLeads = leads.filter(l => (l.status || '').toUpperCase() === 'NEW').length;\n  const activeJobs = jobs.filter(j => ['SCHEDULED', 'IN_PROGRESS'].includes((j.status || '').toUpperCase())).length;\n  const openTasks = tasks.filter(t => !isTaskCompleted(t.status)).length;\n  const outstandingValue = invoiceSummary?.outstanding || 0;\n  const collectedValue = invoiceSummary?.collected || 0;\n  const overdueCount = invoiceSummary?.overdueCount || 0;\n  const topLeads = leads.slice(0, 3);\n  const topJobs = jobs.slice(0, 3);\n  const nextTasks = tasks.filter(t => !isTaskCompleted(t.status)).slice(0, 3);\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(5)\n      },\n      refreshControl: _jsxDEV(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh,\n        tintColor: palette.primary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 668,\n        columnNumber: 25\n      }, this),\n      children: [_jsxDEV(Text, {\n        style: {\n          color: palette.text,\n          fontSize: typography.h1,\n          fontWeight: '700',\n          marginBottom: spacing(2)\n        },\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 670,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          justifyContent: 'space-between'\n        },\n        children: [_jsxDEV(View, {\n          style: {\n            flexBasis: '48%',\n            marginBottom: spacing(2)\n          },\n          children: _jsxDEV(SummaryCard, {\n            title: \"Leads\",\n            value: leads.length,\n            subtitle: `${newLeads} new to triage`,\n            tone: \"info\",\n            onPress: () => navigation.navigate('Leads')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 674,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexBasis: '48%',\n            marginBottom: spacing(2)\n          },\n          children: _jsxDEV(SummaryCard, {\n            title: \"Jobs\",\n            value: jobs.length,\n            subtitle: `${activeJobs} active`,\n            tone: \"primary\",\n            onPress: () => navigation.navigate('Jobs')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 683,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexBasis: '48%',\n            marginBottom: spacing(2)\n          },\n          children: _jsxDEV(SummaryCard, {\n            title: \"Tasks\",\n            value: openTasks,\n            subtitle: `Open of ${tasks.length}`,\n            tone: \"warning\",\n            onPress: () => navigation.navigate('Jobs')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 692,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 691,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexBasis: '48%',\n            marginBottom: spacing(2)\n          },\n          children: _jsxDEV(SummaryCard, {\n            title: \"Invoices\",\n            value: formatCurrency(outstandingValue),\n            subtitle: `${overdueCount} overdue | ${formatCurrency(collectedValue)} collected`,\n            tone: \"success\",\n            onPress: () => navigation.navigate('Invoices')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 701,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 700,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 672,\n        columnNumber: 9\n      }, this), loading && !refreshing ? _jsxDEV(SurfaceCard, {\n        style: {\n          alignItems: 'center',\n          justifyContent: 'center',\n          paddingVertical: spacing(6)\n        },\n        children: [_jsxDEV(ActivityIndicator, {\n          color: palette.primary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 713,\n          columnNumber: 13\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(1.5)\n          },\n          children: \"Loading summary...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 714,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 712,\n        columnNumber: 11\n      }, this) : null, _jsxDEV(SectionHeader, {\n        title: \"Next Jobs\",\n        actionLabel: \"View all\",\n        onAction: () => navigation.navigate('Jobs')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 718,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: topJobs.length === 0 ? _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: \"No jobs yet. Create one from the Jobs tab.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 721,\n          columnNumber: 13\n        }, this) : topJobs.map((job, idx) => {\n          const startLabel = job.startDate ? `Start ${formatDate(job.startDate)}` : null;\n          const endLabel = job.endDate ? `Due ${formatDate(job.endDate)}` : null;\n          return _jsxDEV(View, {\n            style: {\n              marginBottom: idx === topJobs.length - 1 ? 0 : spacing(2.5)\n            },\n            children: [_jsxDEV(View, {\n              style: {\n                flexDirection: 'row',\n                justifyContent: 'space-between',\n                alignItems: 'center'\n              },\n              children: [_jsxDEV(Text, {\n                style: {\n                  color: palette.text,\n                  fontSize: typography.h2,\n                  fontWeight: '600'\n                },\n                children: job.name || `Job #${job.id}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 729,\n                columnNumber: 21\n              }, this), _jsxDEV(StatusPill, {\n                status: job.status || 'SCHEDULED'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 730,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 728,\n              columnNumber: 19\n            }, this), startLabel || endLabel ? _jsxDEV(Text, {\n              style: {\n                color: palette.muted,\n                marginTop: spacing(0.5)\n              },\n              children: [startLabel, endLabel].filter(Boolean).join(' - ')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 733,\n              columnNumber: 21\n            }, this) : null, job.notes ? _jsxDEV(Text, {\n              style: {\n                color: palette.muted,\n                marginTop: spacing(1)\n              },\n              numberOfLines: 2,\n              children: job.notes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 738,\n              columnNumber: 21\n            }, this) : null, _jsxDEV(View, {\n              style: {\n                flexDirection: 'row',\n                columnGap: spacing(1.5),\n                marginTop: spacing(1.5)\n              },\n              children: [_jsxDEV(QuickAction, {\n                label: \"Open job\",\n                onPress: () => navigation.navigate('JobDetail', {\n                  jobId: job.id\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 741,\n                columnNumber: 21\n              }, this), _jsxDEV(QuickAction, {\n                label: \"Tasks\",\n                onPress: () => navigation.navigate('JobDetail', {\n                  jobId: job.id,\n                  tab: 'tasks'\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 742,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 740,\n              columnNumber: 19\n            }, this)]\n          }, job.id || idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 727,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 719,\n        columnNumber: 9\n      }, this), _jsxDEV(SectionHeader, {\n        title: \"Hot Leads\",\n        actionLabel: \"Leads\",\n        onAction: () => navigation.navigate('Leads')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 750,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: topLeads.length === 0 ? _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: \"No leads yet. Capture leads to keep the funnel full.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 753,\n          columnNumber: 13\n        }, this) : topLeads.map((lead, idx) => _jsxDEV(View, {\n          style: {\n            marginBottom: idx === topLeads.length - 1 ? 0 : spacing(2)\n          },\n          children: [_jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center'\n            },\n            children: [_jsxDEV(Text, {\n              style: {\n                color: palette.text,\n                fontWeight: '600',\n                fontSize: typography.h2\n              },\n              children: [\"Lead #\", lead.id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 758,\n              columnNumber: 19\n            }, this), _jsxDEV(StatusPill, {\n              status: lead.status || 'NEW'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 759,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 757,\n            columnNumber: 17\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.5)\n            },\n            numberOfLines: 3,\n            children: lead.description || 'No scope captured yet.'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 761,\n            columnNumber: 17\n          }, this), _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              columnGap: spacing(1.5),\n              marginTop: spacing(1.5)\n            },\n            children: [_jsxDEV(QuickAction, {\n              label: \"Follow up\",\n              onPress: () => navigation.navigate('EstimateEditor', {\n                leadId: lead.id\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 765,\n              columnNumber: 19\n            }, this), _jsxDEV(QuickAction, {\n              label: \"Convert\",\n              onPress: () => navigation.navigate('Jobs')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 766,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 764,\n            columnNumber: 17\n          }, this)]\n        }, lead.id || idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 756,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 751,\n        columnNumber: 9\n      }, this), _jsxDEV(SectionHeader, {\n        title: \"Open Tasks\",\n        actionLabel: \"Jobs\",\n        onAction: () => navigation.navigate('Jobs')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 773,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        children: nextTasks.length === 0 ? _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: \"All clear. Add tasks from a job to keep crews aligned.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 776,\n          columnNumber: 13\n        }, this) : nextTasks.map((task, idx) => _jsxDEV(View, {\n          style: {\n            marginBottom: idx === nextTasks.length - 1 ? 0 : spacing(2)\n          },\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.text,\n              fontWeight: '600'\n            },\n            children: task.title || 'Task'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 780,\n            columnNumber: 17\n          }, this), task.jobId ? _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.25)\n            },\n            children: jobLookup[task.jobId]?.name || `Job #${task.jobId}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 782,\n            columnNumber: 19\n          }, this) : _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.25)\n            },\n            children: \"Unassigned job\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 786,\n            columnNumber: 19\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.5)\n            },\n            children: task.dueDate ? `Due ${formatDate(task.dueDate)}` : 'No due date'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 788,\n            columnNumber: 17\n          }, this), _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              columnGap: spacing(1.5),\n              marginTop: spacing(1.5)\n            },\n            children: [_jsxDEV(QuickAction, {\n              label: \"Mark done\",\n              onPress: () => navigation.navigate('JobDetail', {\n                jobId: task.jobId\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 792,\n              columnNumber: 19\n            }, this), _jsxDEV(QuickAction, {\n              label: \"View job\",\n              onPress: () => navigation.navigate('JobDetail', {\n                jobId: task.jobId\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 796,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 791,\n            columnNumber: 17\n          }, this)]\n        }, task.id || idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 779,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 774,\n        columnNumber: 9\n      }, this), lastUpdated ? _jsxDEV(Text, {\n        style: {\n          color: palette.muted,\n          fontSize: typography.small,\n          marginTop: spacing(2),\n          textAlign: 'center'\n        },\n        children: [\"Updated \", lastUpdated.toLocaleTimeString([], {\n          hour: 'numeric',\n          minute: '2-digit'\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 807,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 666,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 665,\n    columnNumber: 5\n  }, this);\n}\nfunction SignaturePad({\n  onCapturePng\n}) {\n  const [points, setPoints] = useState([]);\n  const [path, setPath] = useState('');\n  const shotRef = useRef(null);\n  return _jsxDEV(ViewShot, {\n    ref: shotRef,\n    options: {\n      format: 'png',\n      quality: 0.9,\n      result: 'base64'\n    },\n    style: {\n      height: 220,\n      borderWidth: 1,\n      backgroundColor: '#fff'\n    },\n    children: _jsxDEV(View, {\n      onStartShouldSetResponder: () => true,\n      onResponderMove: e => {\n        const x = e.nativeEvent.locationX,\n          y = e.nativeEvent.locationY;\n        setPath(p => p + (p ? ` L ${x} ${y}` : ` M ${x} ${y}`));\n      },\n      onResponderRelease: async () => {\n        const base64 = await shotRef.current.capture();\n        onCapturePng && onCapturePng('data:image/png;base64,' + base64);\n      },\n      style: {\n        flex: 1\n      },\n      children: _jsxDEV(Svg, {\n        height: \"100%\",\n        width: \"100%\",\n        children: _jsxDEV(Path, {\n          d: path,\n          stroke: \"black\",\n          strokeWidth: \"2\",\n          fill: \"none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 835,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 835,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 823,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 822,\n    columnNumber: 5\n  }, this);\n}\nfunction SignatureScreen({\n  route,\n  navigation\n}) {\n  const {\n    token\n  } = useAuth();\n  const {\n    estimateId\n  } = route.params;\n  const [sigPng, setSigPng] = useState(null);\n  const save = async () => {\n    if (!sigPng) {\n      Alert.alert('Please sign first');\n      return;\n    }\n    const resp = await api(`/estimates/${estimateId}/approve`, 'POST', {\n      signaturePngUrl: sigPng\n    }, token);\n    Alert.alert('Approved', `Payment link:\n${resp && resp.paymentLink ? resp.paymentLink : 'Unavailable'}`);\n    navigation.goBack();\n  };\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      padding: 16\n    },\n    children: [_jsxDEV(Text, {\n      style: {\n        fontSize: 18,\n        marginBottom: 8\n      },\n      children: [\"Sign Estimate #\", estimateId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 853,\n      columnNumber: 7\n    }, this), _jsxDEV(SignaturePad, {\n      onCapturePng: setSigPng\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 854,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: {\n        height: 12\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 855,\n      columnNumber: 7\n    }, this), _jsxDEV(Button, {\n      title: \"Save Signature\",\n      onPress: save\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 856,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 852,\n    columnNumber: 5\n  }, this);\n}\nconst userRoleOptions = [{\n  label: 'Admin',\n  value: 'ADMIN'\n}, {\n  label: 'Estimator',\n  value: 'ESTIMATOR'\n}, {\n  label: 'Supervisor',\n  value: 'SUPERVISOR'\n}, {\n  label: 'Tech',\n  value: 'TECH'\n}];\nconst invoiceStatusOptions = [{\n  value: 'DRAFT',\n  label: 'Draft'\n}, {\n  value: 'SENT',\n  label: 'Sent'\n}, {\n  value: 'PART_PAID',\n  label: 'Part paid'\n}, {\n  value: 'PAID',\n  label: 'Paid'\n}, {\n  value: 'VOID',\n  label: 'Void'\n}];\nfunction UsersAdminScreen() {\n  const {\n    token\n  } = useAuth();\n  const [users, setUsers] = useState([]);\n  const [email, setEmail] = useState('');\n  const [fullName, setFullName] = useState('');\n  const [role, setRole] = useState('TECH');\n  const [inviting, setInviting] = useState(false);\n  const [refreshing, setRefreshing] = useState(false);\n  const load = useCallback(async () => {\n    try {\n      const response = await api('/users', 'GET', null, token);\n      setUsers(Array.isArray(response) ? response : []);\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to load users.');\n    }\n  }, [token]);\n  useEffect(() => {\n    load();\n  }, [load]);\n  const resetForm = () => {\n    setEmail('');\n    setFullName('');\n    setRole('TECH');\n  };\n  const invite = async () => {\n    const trimmedEmail = email.trim().toLowerCase();\n    const trimmedName = fullName.trim();\n    if (!trimmedEmail) {\n      Alert.alert('Missing email', 'Enter an email address to invite a user.');\n      return;\n    }\n    try {\n      setInviting(true);\n      await api('/users', 'POST', {\n        email: trimmedEmail,\n        fullName: trimmedName || undefined,\n        role: normalizeRole(role)\n      }, token);\n      resetForm();\n      await load();\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to send invite.');\n    } finally {\n      setInviting(false);\n    }\n  };\n  const promote = async (id, newRole) => {\n    try {\n      await api(`/users/${id}`, 'PATCH', {\n        role: normalizeRole(newRole)\n      }, token);\n      await load();\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to update role.');\n    }\n  };\n  const remove = id => {\n    Alert.alert('Remove user', 'Are you sure you want to remove this person?', [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Remove',\n      style: 'destructive',\n      onPress: async () => {\n        try {\n          await api(`/users/${id}`, 'DELETE', null, token);\n          await load();\n        } catch (e) {\n          Alert.alert('Error', e.message || 'Unable to delete user.');\n        }\n      }\n    }]);\n  };\n  const onRefresh = useCallback(async () => {\n    setRefreshing(true);\n    try {\n      await load();\n    } finally {\n      setRefreshing(false);\n    }\n  }, [load]);\n  const renderRolePill = value => {\n    const roleCfg = userRoleOptions.find(option => option.value === normalizeRole(value));\n    const label = roleCfg ? roleCfg.label : normalizeRole(value);\n    return _jsxDEV(View, {\n      style: {\n        backgroundColor: '#e0f3f0',\n        paddingHorizontal: spacing(1.5),\n        paddingVertical: spacing(0.5),\n        borderRadius: 999\n      },\n      children: _jsxDEV(Text, {\n        style: {\n          color: palette.primaryStrong,\n          fontWeight: '600',\n          fontSize: typography.small\n        },\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 963,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 962,\n      columnNumber: 7\n    }, this);\n  };\n  const renderRoleSelector = (selectedRole, onSelect) => _jsxDEV(View, {\n    style: {\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      columnGap: spacing(1),\n      rowGap: spacing(1)\n    },\n    children: userRoleOptions.map(option => {\n      const selected = selectedRole === option.value;\n      return _jsxDEV(TouchableOpacity, {\n        onPress: () => onSelect(option.value),\n        activeOpacity: 0.85,\n        style: {\n          paddingHorizontal: spacing(2),\n          paddingVertical: spacing(1),\n          borderRadius: 999,\n          borderWidth: 1,\n          borderColor: selected ? palette.primary : palette.border,\n          backgroundColor: selected ? '#d9f2ed' : palette.surface\n        },\n        children: _jsxDEV(Text, {\n          style: {\n            color: selected ? palette.primaryStrong : palette.muted,\n            fontWeight: '600',\n            fontSize: typography.small\n          },\n          children: option.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 986,\n          columnNumber: 13\n        }, this)\n      }, option.value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 973,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 969,\n    columnNumber: 5\n  }, this);\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(FlatList, {\n      data: users,\n      keyExtractor: u => String(u.id),\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(6)\n      },\n      refreshControl: _jsxDEV(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh,\n        tintColor: palette.primary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1001,\n        columnNumber: 25\n      }, this),\n      ListHeaderComponent: _jsxDEV(View, {\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontSize: typography.h1,\n            fontWeight: '700',\n            marginBottom: spacing(2)\n          },\n          children: \"Team management\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1004,\n          columnNumber: 13\n        }, this), _jsxDEV(SurfaceCard, {\n          style: {\n            padding: spacing(2.5),\n            marginBottom: spacing(3)\n          },\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.text,\n              fontSize: typography.h2,\n              fontWeight: '700'\n            },\n            children: \"Invite teammate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1006,\n            columnNumber: 15\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.5),\n              marginBottom: spacing(2)\n            },\n            children: \"Send an invite email and choose what they can access.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1007,\n            columnNumber: 15\n          }, this), _jsxDEV(FormInput, {\n            placeholder: \"Full name (optional)\",\n            value: fullName,\n            onChangeText: setFullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1010,\n            columnNumber: 15\n          }, this), _jsxDEV(FormInput, {\n            placeholder: \"Work email\",\n            autoCapitalize: \"none\",\n            keyboardType: \"email-address\",\n            value: email,\n            onChangeText: setEmail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1015,\n            columnNumber: 15\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              fontWeight: '600',\n              fontSize: typography.small,\n              textTransform: 'uppercase',\n              marginBottom: spacing(1)\n            },\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1022,\n            columnNumber: 15\n          }, this), renderRoleSelector(role, setRole), _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              marginTop: spacing(2)\n            },\n            children: [_jsxDEV(QuickAction, {\n              label: \"Clear\",\n              tone: \"muted\",\n              onPress: resetForm\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1025,\n              columnNumber: 17\n            }, this), _jsxDEV(TouchableOpacity, {\n              onPress: invite,\n              activeOpacity: 0.85,\n              disabled: inviting,\n              style: {\n                backgroundColor: palette.primary,\n                paddingHorizontal: spacing(2.5),\n                paddingVertical: spacing(1.5),\n                borderRadius: 12,\n                opacity: inviting ? 0.6 : 1\n              },\n              children: _jsxDEV(Text, {\n                style: {\n                  color: '#fff',\n                  fontWeight: '700'\n                },\n                children: inviting ? 'Sending...' : 'Send invite'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1038,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1026,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1024,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1005,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1003,\n        columnNumber: 11\n      }, this),\n      ListEmptyComponent: _jsxDEV(SurfaceCard, {\n        children: _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: \"Invite your first teammate to collaborate on jobs.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1046,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1045,\n        columnNumber: 11\n      }, this),\n      renderItem: ({\n        item\n      }) => {\n        const normalizedRole = normalizeRole(item.role);\n        return _jsxDEV(SurfaceCard, {\n          style: {\n            marginBottom: spacing(2),\n            padding: spacing(2.5)\n          },\n          children: [_jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              marginBottom: spacing(1.5)\n            },\n            children: [_jsxDEV(View, {\n              children: [_jsxDEV(Text, {\n                style: {\n                  color: palette.text,\n                  fontSize: typography.h2,\n                  fontWeight: '600'\n                },\n                children: item.fullName || item.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1055,\n                columnNumber: 19\n              }, this), _jsxDEV(Text, {\n                style: {\n                  color: palette.muted,\n                  marginTop: spacing(0.5)\n                },\n                children: item.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1056,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1054,\n              columnNumber: 17\n            }, this), renderRolePill(normalizedRole)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1053,\n            columnNumber: 15\n          }, this), _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              flexWrap: 'wrap',\n              columnGap: spacing(1),\n              rowGap: spacing(1)\n            },\n            children: [userRoleOptions.map(option => {\n              const selected = normalizedRole === option.value;\n              return _jsxDEV(TouchableOpacity, {\n                onPress: () => promote(item.id, option.value),\n                disabled: selected,\n                activeOpacity: 0.85,\n                style: {\n                  paddingHorizontal: spacing(1.75),\n                  paddingVertical: spacing(0.75),\n                  borderRadius: 999,\n                  borderWidth: 1,\n                  borderColor: selected ? palette.primary : palette.border,\n                  backgroundColor: selected ? '#d9f2ed' : palette.surface,\n                  opacity: selected ? 0.7 : 1\n                },\n                children: _jsxDEV(Text, {\n                  style: {\n                    color: selected ? palette.primaryStrong : palette.muted,\n                    fontWeight: '600',\n                    fontSize: typography.small\n                  },\n                  children: option.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1079,\n                  columnNumber: 23\n                }, this)\n              }, option.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1064,\n                columnNumber: 21\n              }, this);\n            }), _jsxDEV(TouchableOpacity, {\n              onPress: () => remove(item.id),\n              activeOpacity: 0.85,\n              style: {\n                paddingHorizontal: spacing(1.75),\n                paddingVertical: spacing(0.75),\n                borderRadius: 999,\n                borderWidth: 1,\n                borderColor: '#fecdd3',\n                backgroundColor: '#fee2e2'\n              },\n              children: _jsxDEV(Text, {\n                style: {\n                  color: palette.danger,\n                  fontWeight: '600',\n                  fontSize: typography.small\n                },\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1097,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1085,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1060,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1052,\n          columnNumber: 13\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 997,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 996,\n    columnNumber: 5\n  }, this);\n}\nfunction InvoicesScreen({\n  navigation\n}) {\n  const {\n    token,\n    user\n  } = useAuth();\n  const [loading, setLoading] = useState(true);\n  const [refreshing, setRefreshing] = useState(false);\n  const [summary, setSummary] = useState(null);\n  const [invoices, setInvoices] = useState([]);\n  const [filter, setFilter] = useState('ALL');\n  const load = useCallback(async (isRefresh = false) => {\n    if (!token) return;\n    isRefresh ? setRefreshing(true) : setLoading(true);\n    try {\n      const [summaryData, list] = await Promise.all([api('/invoices/summary', 'GET', null, token), api('/invoices', 'GET', null, token)]);\n      setSummary(summaryData);\n      setInvoices(list);\n    } catch (e) {} finally {\n      isRefresh ? setRefreshing(false) : setLoading(false);\n    }\n  }, [token]);\n  useFocusEffect(useCallback(() => {\n    if (user?.role === 'ADMIN') {\n      load(false);\n    }\n  }, [load, user?.role]));\n  const onRefresh = useCallback(() => load(true), [load]);\n  if (user?.role !== 'ADMIN') {\n    return _jsxDEV(SafeAreaView, {\n      style: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: palette.background\n      },\n      children: _jsxDEV(Text, {\n        style: {\n          color: palette.muted\n        },\n        children: \"Invoices are only available to admin users.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1145,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1144,\n      columnNumber: 7\n    }, this);\n  }\n  const filters = [{\n    key: 'ALL',\n    label: 'All'\n  }, {\n    key: 'OUTSTANDING',\n    label: 'Outstanding'\n  }, {\n    key: 'PAID',\n    label: 'Paid'\n  }];\n  const filteredInvoices = invoices.filter(inv => {\n    if (filter === 'ALL') return true;\n    const status = (inv.status || 'DRAFT').toUpperCase();\n    if (filter === 'PAID') return status === 'PAID';\n    return !['PAID', 'VOID'].includes(status);\n  });\n  const outstanding = formatCurrency(summary?.outstanding || 0);\n  const collected = formatCurrency(summary?.collected || 0);\n  const drafts = formatCurrency(summary?.draftAmount || 0);\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(6)\n      },\n      refreshControl: _jsxDEV(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh,\n        tintColor: palette.primary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1171,\n        columnNumber: 25\n      }, this),\n      children: [_jsxDEV(Text, {\n        style: {\n          color: palette.text,\n          fontSize: typography.h1,\n          fontWeight: '700',\n          marginBottom: spacing(2)\n        },\n        children: \"Invoices\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1173,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: {\n          color: palette.muted,\n          marginBottom: spacing(2)\n        },\n        children: \"Track billing health and spot overdue balances.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1174,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          columnGap: spacing(2),\n          rowGap: spacing(2),\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(View, {\n          style: {\n            flexBasis: '48%',\n            minWidth: 160\n          },\n          children: _jsxDEV(SummaryCard, {\n            title: \"Outstanding\",\n            value: outstanding,\n            subtitle: `${summary?.overdueCount || 0} overdue`,\n            tone: \"warning\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1177,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1176,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexBasis: '48%',\n            minWidth: 160\n          },\n          children: _jsxDEV(SummaryCard, {\n            title: \"Collected\",\n            value: collected,\n            subtitle: \"All payments to date\",\n            tone: \"success\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1180,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1179,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexBasis: '48%',\n            minWidth: 160\n          },\n          children: _jsxDEV(SummaryCard, {\n            title: \"Drafts\",\n            value: drafts,\n            subtitle: `${summary?.totalCount || 0} total invoices`,\n            tone: \"info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1183,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1182,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1175,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          columnGap: spacing(1),\n          rowGap: spacing(1),\n          marginBottom: spacing(2)\n        },\n        children: filters.map(f => {\n          const selected = f.key === filter;\n          return _jsxDEV(TouchableOpacity, {\n            onPress: () => setFilter(f.key),\n            activeOpacity: 0.85,\n            style: {\n              paddingHorizontal: spacing(2),\n              paddingVertical: spacing(1),\n              borderRadius: 999,\n              borderWidth: 1,\n              borderColor: selected ? palette.primary : palette.border,\n              backgroundColor: selected ? '#d9f2ed' : palette.surface\n            },\n            children: _jsxDEV(Text, {\n              style: {\n                color: selected ? palette.primaryStrong : palette.muted,\n                fontWeight: '600',\n                fontSize: typography.small\n              },\n              children: f.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1204,\n              columnNumber: 17\n            }, this)\n          }, f.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1191,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1187,\n        columnNumber: 9\n      }, this), loading ? _jsxDEV(SurfaceCard, {\n        style: {\n          alignItems: 'center',\n          paddingVertical: spacing(6)\n        },\n        children: [_jsxDEV(ActivityIndicator, {\n          color: palette.primary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1212,\n          columnNumber: 13\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(1.5)\n          },\n          children: \"Loading invoices...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1213,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1211,\n        columnNumber: 11\n      }, this) : filteredInvoices.length === 0 ? _jsxDEV(SurfaceCard, {\n        children: _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: \"No invoices match this filter.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1217,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1216,\n        columnNumber: 11\n      }, this) : filteredInvoices.map(inv => {\n        const payments = (inv.Payments || []).reduce((sum, p) => sum + Number(p.amount || 0), 0);\n        const amount = Number(inv.amount || 0);\n        const balance = Math.max(amount - payments, 0);\n        const statusKey = (inv.status || 'DRAFT').toUpperCase();\n        return _jsxDEV(SurfaceCard, {\n          children: [_jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center'\n            },\n            children: [_jsxDEV(View, {\n              children: [_jsxDEV(Text, {\n                style: {\n                  color: palette.text,\n                  fontSize: typography.h2,\n                  fontWeight: '600'\n                },\n                children: [\"Invoice #\", inv.number || inv.id]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1229,\n                columnNumber: 21\n              }, this), _jsxDEV(Text, {\n                style: {\n                  color: palette.muted,\n                  marginTop: spacing(0.5)\n                },\n                children: [\"Issued \", inv.issuedAt ? formatDate(inv.issuedAt) : 'TBD']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1230,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1228,\n              columnNumber: 19\n            }, this), _jsxDEV(StatusPill, {\n              status: statusKey\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1232,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1227,\n            columnNumber: 17\n          }, this), _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              marginTop: spacing(1.5)\n            },\n            children: [_jsxDEV(View, {\n              children: [_jsxDEV(Text, {\n                style: {\n                  color: palette.muted,\n                  fontSize: typography.small\n                },\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1236,\n                columnNumber: 21\n              }, this), _jsxDEV(Text, {\n                style: {\n                  color: palette.text,\n                  fontWeight: '600'\n                },\n                children: formatCurrency(amount)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1237,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1235,\n              columnNumber: 19\n            }, this), _jsxDEV(View, {\n              children: [_jsxDEV(Text, {\n                style: {\n                  color: palette.muted,\n                  fontSize: typography.small\n                },\n                children: \"Collected\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1240,\n                columnNumber: 21\n              }, this), _jsxDEV(Text, {\n                style: {\n                  color: palette.text\n                },\n                children: formatCurrency(payments)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1241,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1239,\n              columnNumber: 19\n            }, this), _jsxDEV(View, {\n              children: [_jsxDEV(Text, {\n                style: {\n                  color: palette.muted,\n                  fontSize: typography.small\n                },\n                children: \"Balance\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1244,\n                columnNumber: 21\n              }, this), _jsxDEV(Text, {\n                style: {\n                  color: balance > 0 ? palette.primaryStrong : palette.muted,\n                  fontWeight: '600'\n                },\n                children: formatCurrency(balance)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1245,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1243,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1234,\n            columnNumber: 17\n          }, this), inv.dueAt ? _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(1)\n            },\n            children: [\"Due \", formatDate(inv.dueAt)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1249,\n            columnNumber: 19\n          }, this) : null, _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              flexWrap: 'wrap',\n              columnGap: spacing(1),\n              rowGap: spacing(1),\n              marginTop: spacing(2)\n            },\n            children: [inv.jobId ? _jsxDEV(QuickAction, {\n              label: \"View job\",\n              onPress: () => navigation.navigate('JobDetail', {\n                jobId: inv.jobId\n              }),\n              tone: \"muted\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1252,\n              columnNumber: 32\n            }, this) : null, _jsxDEV(QuickAction, {\n              label: \"Record payment\",\n              tone: \"success\",\n              onPress: () => Alert.alert('Coming soon', 'Payment logging will land shortly.')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1253,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1251,\n            columnNumber: 17\n          }, this)]\n        }, inv.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1226,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1169,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1168,\n    columnNumber: 5\n  }, this);\n}\nfunction JobsKanbanScreen({\n  navigation\n}) {\n  const {\n    token\n  } = useAuth();\n  const [jobs, setJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [refreshing, setRefreshing] = useState(false);\n  const [newJobName, setNewJobName] = useState('');\n  const [newJobStartDate, setNewJobStartDate] = useState('');\n  const [newJobDueDate, setNewJobDueDate] = useState('');\n  const [newJobNotes, setNewJobNotes] = useState('');\n  const [newCustomerName, setNewCustomerName] = useState('');\n  const [newCustomerPhone, setNewCustomerPhone] = useState('');\n  const [newCustomerEmail, setNewCustomerEmail] = useState('');\n  const [newAddressLine1, setNewAddressLine1] = useState('');\n  const [newAddressLine2, setNewAddressLine2] = useState('');\n  const [newCity, setNewCity] = useState('');\n  const [newStateCode, setNewStateCode] = useState('');\n  const [newZip, setNewZip] = useState('');\n  const [jobFormTab, setJobFormTab] = useState('BASICS');\n  const statusOrder = ['SCHEDULED', 'IN_PROGRESS', 'ON_HOLD', 'DONE', 'COMPLETE', 'CANCELLED'];\n  const load = useCallback(async (isRefresh = false) => {\n    isRefresh ? setRefreshing(true) : setLoading(true);\n    try {\n      const data = await api('/jobs', 'GET', null, token);\n      setJobs(data);\n      db.transaction(tx => {\n        tx.executeSql && tx.executeSql('DELETE FROM jobs_cache;');\n        data.forEach(j => tx.executeSql && tx.executeSql('INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)', [j.id, j.name || '', j.status || 'SCHEDULED', j.startDate || '', j.endDate || '', j.notes || '']));\n      });\n    } catch (e) {\n      db.transaction(tx => tx.executeSql && tx.executeSql('SELECT id, name, status, startDate, endDate, notes FROM jobs_cache', [], (_, {\n        rows\n      }) => setJobs(rows._array || [])));\n    } finally {\n      isRefresh ? setRefreshing(false) : setLoading(false);\n    }\n  }, [token]);\n  useFocusEffect(useCallback(() => {\n    load(false);\n  }, [load]));\n  const onRefresh = useCallback(() => load(true), [load]);\n  const resetForm = () => {\n    setNewJobName('');\n    setNewJobStartDate('');\n    setNewJobDueDate('');\n    setNewJobNotes('');\n    setNewCustomerName('');\n    setNewCustomerPhone('');\n    setNewCustomerEmail('');\n    setNewAddressLine1('');\n    setNewAddressLine2('');\n    setNewCity('');\n    setNewStateCode('');\n    setNewZip('');\n    setJobFormTab('BASICS');\n  };\n  const createJob = async () => {\n    if (!newJobName.trim()) {\n      Alert.alert('Missing info', 'Please add a job name.');\n      setJobFormTab('BASICS');\n      return;\n    }\n    const hasCustomer = [newCustomerName, newCustomerPhone, newCustomerEmail].some(v => v && v.trim());\n    const hasAddress = [newAddressLine1, newCity, newStateCode, newZip].some(v => v && v.trim());\n    const payload = {\n      name: newJobName.trim(),\n      status: 'SCHEDULED',\n      startDate: newJobStartDate || null,\n      endDate: newJobDueDate || null,\n      notes: newJobNotes.trim() || null\n    };\n    if (hasCustomer) {\n      payload.customer = {\n        name: newCustomerName.trim(),\n        phone: newCustomerPhone.trim(),\n        email: newCustomerEmail.trim(),\n        billingAddress: newAddressLine1 ? `${newAddressLine1}${newAddressLine2 ? `\n${newAddressLine2}` : ''}${newCity ? `\n${newCity}, ${newStateCode} ${newZip}` : ''}` : null\n      };\n    }\n    if (hasAddress) {\n      payload.jobsite = {\n        addressLine1: newAddressLine1.trim(),\n        addressLine2: newAddressLine2.trim(),\n        city: newCity.trim(),\n        state: newStateCode.trim(),\n        zip: newZip.trim()\n      };\n    }\n    try {\n      const created = await api('/jobs', 'POST', payload, token);\n      setJobs(prev => [created, ...prev]);\n      db.transaction(tx => tx.executeSql && tx.executeSql('INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)', [created.id, created.name || '', created.status || 'SCHEDULED', created.startDate || '', created.endDate || '', created.notes || '']));\n      resetForm();\n      Alert.alert('Job created', `Job #${created.id} ready to schedule.`);\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to create job');\n    }\n  };\n  const updateJobStatus = async (id, status) => {\n    try {\n      const updated = await api(`/jobs/${id}`, 'PATCH', {\n        status\n      }, token);\n      setJobs(prev => prev.map(job => job.id === id ? updated : job));\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to update job status');\n    }\n  };\n  const removeJob = async id => {\n    Alert.alert('Delete Job', `Delete job #${id}?`, [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Delete',\n      style: 'destructive',\n      onPress: async () => {\n        try {\n          await api(`/jobs/${id}`, 'DELETE', null, token);\n          setJobs(prev => prev.filter(job => job.id !== id));\n          db.transaction(tx => tx.executeSql && tx.executeSql('DELETE FROM jobs_cache WHERE id=?', [id]));\n        } catch (e) {\n          Alert.alert('Error', e.message || 'Unable to delete job');\n        }\n      }\n    }]);\n  };\n  const sortedJobs = useMemo(() => {\n    const normalize = status => (status || 'SCHEDULED').toUpperCase();\n    const rank = status => {\n      const key = normalize(status);\n      const idx = statusOrder.indexOf(key);\n      return idx === -1 ? statusOrder.length : idx;\n    };\n    const parseDateSafe = value => {\n      if (!value) return null;\n      const d = new Date(value);\n      return Number.isNaN(d.getTime()) ? null : d;\n    };\n    return [...jobs].sort((a, b) => {\n      const statusDiff = rank(a.status) - rank(b.status);\n      if (statusDiff !== 0) return statusDiff;\n      const startA = parseDateSafe(a.startDate);\n      const startB = parseDateSafe(b.startDate);\n      if (startA && startB) return startA - startB;\n      if (startA) return -1;\n      if (startB) return 1;\n      return (b.id || 0) - (a.id || 0);\n    });\n  }, [jobs, statusOrder]);\n  const groupedJobs = useMemo(() => {\n    const groups = [];\n    let currentStatus = null;\n    sortedJobs.forEach(job => {\n      const statusKey = (job.status || 'SCHEDULED').toUpperCase();\n      if (statusKey !== currentStatus) {\n        groups.push({\n          status: statusKey,\n          jobs: [job]\n        });\n        currentStatus = statusKey;\n      } else {\n        groups[groups.length - 1].jobs.push(job);\n      }\n    });\n    return groups;\n  }, [sortedJobs]);\n  const statusLabel = status => {\n    const key = (status || 'SCHEDULED').toUpperCase();\n    return pillTone[key]?.label || key.charAt(0) + key.slice(1).toLowerCase();\n  };\n  const quickStatusActions = [{\n    label: 'Start job',\n    value: 'IN_PROGRESS',\n    tone: 'primary'\n  }, {\n    label: 'Pause',\n    value: 'ON_HOLD',\n    tone: 'warning'\n  }, {\n    label: 'Wrap up',\n    value: 'DONE',\n    tone: 'success'\n  }];\n  const inputStyle = {\n    borderWidth: 1,\n    borderColor: palette.border,\n    borderRadius: 12,\n    paddingHorizontal: spacing(1.5),\n    paddingVertical: spacing(1.25),\n    backgroundColor: palette.surfaceMuted,\n    color: palette.text,\n    fontSize: typography.body,\n    marginBottom: spacing(1.5)\n  };\n  const jobTabs = [{\n    key: 'BASICS',\n    label: 'Basics'\n  }, {\n    key: 'CUSTOMER',\n    label: 'Customer'\n  }, {\n    key: 'JOBSITE',\n    label: 'Jobsite'\n  }, {\n    key: 'NOTES',\n    label: 'Notes'\n  }];\n  const renderJobFormFields = () => {\n    if (jobFormTab === 'BASICS') {\n      return _jsxDEV(View, {\n        children: [_jsxDEV(TextInput, {\n          placeholder: \"Job name\",\n          placeholderTextColor: palette.muted,\n          value: newJobName,\n          onChangeText: setNewJobName,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1481,\n          columnNumber: 11\n        }, this), _jsxDEV(DateInputField, {\n          value: newJobStartDate,\n          onChange: setNewJobStartDate,\n          placeholder: \"Start date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1488,\n          columnNumber: 11\n        }, this), _jsxDEV(DateInputField, {\n          value: newJobDueDate,\n          onChange: setNewJobDueDate,\n          placeholder: \"Due date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1493,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1480,\n        columnNumber: 9\n      }, this);\n    }\n    if (jobFormTab === 'CUSTOMER') {\n      return _jsxDEV(View, {\n        children: [_jsxDEV(TextInput, {\n          placeholder: \"Customer name\",\n          placeholderTextColor: palette.muted,\n          value: newCustomerName,\n          onChangeText: setNewCustomerName,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1504,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Phone\",\n          placeholderTextColor: palette.muted,\n          keyboardType: \"phone-pad\",\n          value: newCustomerPhone,\n          onChangeText: setNewCustomerPhone,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1511,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Email\",\n          placeholderTextColor: palette.muted,\n          keyboardType: \"email-address\",\n          autoCapitalize: \"none\",\n          value: newCustomerEmail,\n          onChangeText: setNewCustomerEmail,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1519,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1503,\n        columnNumber: 9\n      }, this);\n    }\n    if (jobFormTab === 'JOBSITE') {\n      return _jsxDEV(View, {\n        children: [_jsxDEV(TextInput, {\n          placeholder: \"Address line 1\",\n          placeholderTextColor: palette.muted,\n          value: newAddressLine1,\n          onChangeText: setNewAddressLine1,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1534,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Address line 2\",\n          placeholderTextColor: palette.muted,\n          value: newAddressLine2,\n          onChangeText: setNewAddressLine2,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1541,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            columnGap: spacing(1.5)\n          },\n          children: [_jsxDEV(View, {\n            style: {\n              flex: 1\n            },\n            children: _jsxDEV(TextInput, {\n              placeholder: \"City\",\n              placeholderTextColor: palette.muted,\n              value: newCity,\n              onChangeText: setNewCity,\n              style: [inputStyle, {\n                marginBottom: 0\n              }]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1550,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1549,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: {\n              width: 80\n            },\n            children: _jsxDEV(TextInput, {\n              placeholder: \"State\",\n              placeholderTextColor: palette.muted,\n              value: newStateCode,\n              onChangeText: setNewStateCode,\n              style: [inputStyle, {\n                marginBottom: 0\n              }]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1559,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1558,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: {\n              width: 100\n            },\n            children: _jsxDEV(TextInput, {\n              placeholder: \"ZIP\",\n              placeholderTextColor: palette.muted,\n              value: newZip,\n              onChangeText: setNewZip,\n              style: [inputStyle, {\n                marginBottom: 0\n              }]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1568,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1567,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1548,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1533,\n        columnNumber: 9\n      }, this);\n    }\n    return _jsxDEV(TextInput, {\n      placeholder: \"Internal notes\",\n      placeholderTextColor: palette.muted,\n      value: newJobNotes,\n      onChangeText: setNewJobNotes,\n      multiline: true,\n      style: [inputStyle, {\n        minHeight: 96,\n        textAlignVertical: 'top'\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1581,\n      columnNumber: 7\n    }, this);\n  };\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(4)\n      },\n      refreshControl: _jsxDEV(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh,\n        tintColor: palette.primary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1596,\n        columnNumber: 25\n      }, this),\n      children: [_jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3),\n          padding: spacing(2.5)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontSize: typography.h2,\n            fontWeight: '700',\n            marginBottom: spacing(2)\n          },\n          children: \"Create job\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1599,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            columnGap: spacing(1),\n            rowGap: spacing(1.5),\n            marginBottom: spacing(2)\n          },\n          children: jobTabs.map(tab => {\n            const selected = tab.key === jobFormTab;\n            return _jsxDEV(TouchableOpacity, {\n              onPress: () => setJobFormTab(tab.key),\n              activeOpacity: 0.85,\n              style: {\n                paddingHorizontal: spacing(2),\n                paddingVertical: spacing(1),\n                borderRadius: 999,\n                borderWidth: 1,\n                borderColor: selected ? palette.primary : palette.border,\n                backgroundColor: selected ? '#d9f2ed' : palette.surface\n              },\n              children: _jsxDEV(Text, {\n                style: {\n                  color: selected ? palette.primaryStrong : palette.muted,\n                  fontWeight: '600',\n                  fontSize: typography.small\n                },\n                children: tab.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1617,\n                columnNumber: 19\n              }, this)\n            }, tab.key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1604,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1600,\n          columnNumber: 11\n        }, this), renderJobFormFields(), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginTop: spacing(2)\n          },\n          children: [_jsxDEV(QuickAction, {\n            label: \"Reset\",\n            tone: \"muted\",\n            onPress: resetForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1626,\n            columnNumber: 13\n          }, this), _jsxDEV(TouchableOpacity, {\n            onPress: createJob,\n            activeOpacity: 0.85,\n            style: {\n              backgroundColor: palette.primary,\n              paddingHorizontal: spacing(2.5),\n              paddingVertical: spacing(1.5),\n              borderRadius: 12\n            },\n            children: _jsxDEV(Text, {\n              style: {\n                color: '#fff',\n                fontWeight: '700'\n              },\n              children: \"Create job\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1632,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1627,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1625,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1598,\n        columnNumber: 9\n      }, this), loading && !refreshing && jobs.length === 0 ? _jsxDEV(SurfaceCard, {\n        style: {\n          alignItems: 'center',\n          paddingVertical: spacing(6),\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(ActivityIndicator, {\n          color: palette.primary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1639,\n          columnNumber: 13\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(1.5)\n          },\n          children: \"Loading jobs...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1640,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1638,\n        columnNumber: 11\n      }, this) : null, groupedJobs.length === 0 ? _jsxDEV(SurfaceCard, {\n        children: _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: \"No jobs yet. Convert a lead or add a job to get started.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1646,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1645,\n        columnNumber: 11\n      }, this) : groupedJobs.map(group => _jsxDEV(View, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontWeight: '700',\n            fontSize: typography.small,\n            textTransform: 'uppercase',\n            marginBottom: spacing(1)\n          },\n          children: statusLabel(group.status)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1651,\n          columnNumber: 15\n        }, this), group.jobs.map(job => {\n          const customer = job.Customer || {};\n          const jobsite = job.Jobsite || {};\n          const addressParts = [jobsite.addressLine1, jobsite.addressLine2, [jobsite.city, jobsite.state].filter(Boolean).join(', '), jobsite.zip].filter(Boolean);\n          const address = addressParts.join(', ');\n          const statusKey = (job.status || 'SCHEDULED').toUpperCase();\n          return _jsxDEV(SurfaceCard, {\n            style: {\n              marginBottom: spacing(1.5)\n            },\n            children: [_jsxDEV(View, {\n              style: {\n                flexDirection: 'row',\n                justifyContent: 'space-between',\n                alignItems: 'center'\n              },\n              children: [_jsxDEV(Text, {\n                style: {\n                  color: palette.text,\n                  fontSize: typography.h2,\n                  fontWeight: '600'\n                },\n                children: job.name || `Job #${job.id}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1668,\n                columnNumber: 23\n              }, this), _jsxDEV(StatusPill, {\n                status: statusKey\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1669,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1667,\n              columnNumber: 21\n            }, this), job.startDate || job.endDate ? _jsxDEV(Text, {\n              style: {\n                color: palette.muted,\n                marginTop: spacing(0.75)\n              },\n              children: [job.startDate ? `Start ${formatDate(job.startDate)}` : null, job.endDate ? `Due ${formatDate(job.endDate)}` : null].filter(Boolean).join(' | ')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1672,\n              columnNumber: 23\n            }, this) : null, customer.name ? _jsxDEV(Text, {\n              style: {\n                color: palette.text,\n                fontWeight: '600',\n                marginTop: spacing(1)\n              },\n              children: customer.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1676,\n              columnNumber: 38\n            }, this) : null, customer.phone ? _jsxDEV(Text, {\n              style: {\n                color: palette.muted\n              },\n              children: customer.phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1677,\n              columnNumber: 39\n            }, this) : null, customer.email ? _jsxDEV(Text, {\n              style: {\n                color: palette.muted\n              },\n              children: customer.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1678,\n              columnNumber: 39\n            }, this) : null, address ? _jsxDEV(Text, {\n              style: {\n                color: palette.muted,\n                marginTop: spacing(1)\n              },\n              children: address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1679,\n              columnNumber: 32\n            }, this) : null, job.notes ? _jsxDEV(Text, {\n              style: {\n                color: palette.muted,\n                marginTop: spacing(1)\n              },\n              numberOfLines: 3,\n              children: job.notes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1680,\n              columnNumber: 34\n            }, this) : null, _jsxDEV(View, {\n              style: {\n                flexDirection: 'row',\n                flexWrap: 'wrap',\n                columnGap: spacing(1),\n                rowGap: spacing(1),\n                marginTop: spacing(2)\n              },\n              children: [_jsxDEV(QuickAction, {\n                label: \"View job\",\n                onPress: () => navigation.navigate('JobDetail', {\n                  jobId: job.id\n                }),\n                tone: \"muted\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1682,\n                columnNumber: 23\n              }, this), quickStatusActions.map(action => action.value === statusKey ? null : _jsxDEV(QuickAction, {\n                label: action.label,\n                tone: action.tone,\n                onPress: () => updateJobStatus(job.id, action.value)\n              }, action.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1685,\n                columnNumber: 27\n              }, this)), _jsxDEV(QuickAction, {\n                label: \"Delete\",\n                tone: \"danger\",\n                onPress: () => removeJob(job.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1693,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1681,\n              columnNumber: 21\n            }, this)]\n          }, job.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1666,\n            columnNumber: 19\n          }, this);\n        })]\n      }, group.status, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1650,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1594,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1593,\n    columnNumber: 5\n  }, this);\n}\nfunction JobDetailScreen({\n  route,\n  navigation\n}) {\n  const {\n    jobId\n  } = route.params;\n  const {\n    token,\n    user\n  } = useAuth();\n  const [jobName, setJobName] = useState('');\n  const [jobStartDate, setJobStartDate] = useState('');\n  const [jobEndDate, setJobEndDate] = useState('');\n  const [jobNotes, setJobNotes] = useState('');\n  const [jobCustomerName, setJobCustomerName] = useState('');\n  const [jobCustomerPhone, setJobCustomerPhone] = useState('');\n  const [jobCustomerEmail, setJobCustomerEmail] = useState('');\n  const [jobAddressLine1, setJobAddressLine1] = useState('');\n  const [jobAddressLine2, setJobAddressLine2] = useState('');\n  const [jobCity, setJobCity] = useState('');\n  const [jobStateCode, setJobStateCode] = useState('');\n  const [jobZip, setJobZip] = useState('');\n  const [changeOrders, setCO] = useState([]);\n  const [title, setTitle] = useState('');\n  const [amountDelta, setAmountDelta] = useState('0');\n  const roleKey = normalizeRole(user?.role);\n  const canManageChangeOrders = ['ADMIN', 'SUPERVISOR', 'ESTIMATOR'].includes(roleKey);\n  const loadCO = useCallback(async () => {\n    setCO(await api(`/change-orders/job/${jobId}`, 'GET', null, token));\n  }, [jobId, token]);\n  const loadJob = useCallback(async () => {\n    try {\n      const j = await api(`/jobs/${jobId}`, 'GET', null, token);\n      setJobName(j.name || '');\n      setJobStartDate(j.startDate || '');\n      setJobEndDate(j.endDate || '');\n      setJobNotes(j.notes || '');\n      const customer = j.Customer || {};\n      const jobsite = j.Jobsite || {};\n      setJobCustomerName(customer.name || '');\n      setJobCustomerPhone(customer.phone || '');\n      setJobCustomerEmail(customer.email || '');\n      setJobAddressLine1(jobsite.addressLine1 || '');\n      setJobAddressLine2(jobsite.addressLine2 || '');\n      setJobCity(jobsite.city || '');\n      setJobStateCode(jobsite.state || '');\n      setJobZip(jobsite.zip || '');\n    } catch (e) {}\n  }, [jobId, token]);\n  useEffect(() => {\n    loadJob();\n    loadCO();\n  }, [loadJob, loadCO]);\n  const addCO = async () => {\n    if (!title.trim()) {\n      Alert.alert('Missing info', 'Add a title for the change order.');\n      return;\n    }\n    await api(`/change-orders/job/${jobId}`, 'POST', {\n      title: title.trim(),\n      amountDelta: parseFloat(amountDelta) || 0\n    }, token);\n    setTitle('');\n    setAmountDelta('0');\n    loadCO();\n  };\n  const saveJobDetails = async () => {\n    try {\n      await api(`/jobs/${jobId}`, 'PATCH', {\n        name: jobName,\n        startDate: jobStartDate || null,\n        endDate: jobEndDate || null,\n        notes: jobNotes,\n        customer: {\n          name: jobCustomerName,\n          phone: jobCustomerPhone,\n          email: jobCustomerEmail,\n          billingAddress: jobAddressLine1 ? `${jobAddressLine1}${jobAddressLine2 ? `\n${jobAddressLine2}` : ''}${jobCity ? `\n${jobCity}, ${jobStateCode} ${jobZip}` : ''}` : null\n        },\n        jobsite: {\n          addressLine1: jobAddressLine1,\n          addressLine2: jobAddressLine2,\n          city: jobCity,\n          state: jobStateCode,\n          zip: jobZip\n        }\n      }, token);\n      Alert.alert('Saved', 'Job details updated.');\n      loadJob();\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to save job');\n    }\n  };\n  const deleteJob = () => {\n    Alert.alert('Delete job', `Delete job #${jobId}?`, [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Delete',\n      style: 'destructive',\n      onPress: async () => {\n        try {\n          await api(`/jobs/${jobId}`, 'DELETE', null, token);\n          db.transaction(tx => tx.executeSql('DELETE FROM jobs_cache WHERE id=?', [jobId]));\n          Alert.alert('Deleted', 'Job removed.');\n          navigation.navigate('Tabs', {\n            screen: 'Jobs'\n          });\n        } catch (e) {\n          Alert.alert('Error', e.message || 'Unable to delete job');\n        }\n      }\n    }]);\n  };\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(6)\n      },\n      children: [_jsxDEV(Text, {\n        style: {\n          color: palette.text,\n          fontSize: typography.h1,\n          fontWeight: '700'\n        },\n        children: [\"Job #\", jobId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1805,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: {\n          color: palette.muted,\n          marginTop: spacing(0.5),\n          marginBottom: spacing(3)\n        },\n        children: \"Keep job information up to date so the field team always has the latest context.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1806,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          padding: spacing(2.5),\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontSize: typography.small,\n            fontWeight: '700',\n            textTransform: 'uppercase',\n            marginBottom: spacing(1)\n          },\n          children: \"Basics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1811,\n          columnNumber: 11\n        }, this), _jsxDEV(FormInput, {\n          placeholder: \"Job name\",\n          value: jobName,\n          onChangeText: setJobName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1814,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            columnGap: spacing(1.5)\n          },\n          children: [_jsxDEV(View, {\n            style: {\n              flex: 1\n            },\n            children: _jsxDEV(DateInputField, {\n              value: jobStartDate,\n              onChange: setJobStartDate,\n              placeholder: \"Start date\",\n              style: {\n                marginBottom: 0\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1817,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1816,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: {\n              flex: 1\n            },\n            children: _jsxDEV(DateInputField, {\n              value: jobEndDate,\n              onChange: setJobEndDate,\n              placeholder: \"End date\",\n              style: {\n                marginBottom: 0\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1820,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1819,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1815,\n          columnNumber: 11\n        }, this), _jsxDEV(FormInput, {\n          placeholder: \"Notes / scope\",\n          value: jobNotes,\n          onChangeText: setJobNotes,\n          multiline: true,\n          style: {\n            minHeight: 112,\n            textAlignVertical: 'top'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1823,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginTop: spacing(2)\n          },\n          children: [_jsxDEV(QuickAction, {\n            label: \"Delete job\",\n            tone: \"danger\",\n            onPress: deleteJob\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1831,\n            columnNumber: 13\n          }, this), _jsxDEV(TouchableOpacity, {\n            onPress: saveJobDetails,\n            activeOpacity: 0.85,\n            style: {\n              backgroundColor: palette.primary,\n              paddingHorizontal: spacing(2.5),\n              paddingVertical: spacing(1.5),\n              borderRadius: 12\n            },\n            children: _jsxDEV(Text, {\n              style: {\n                color: '#fff',\n                fontWeight: '700'\n              },\n              children: \"Save changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1837,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1832,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1830,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1810,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          padding: spacing(2.5),\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontSize: typography.small,\n            fontWeight: '700',\n            textTransform: 'uppercase',\n            marginBottom: spacing(1)\n          },\n          children: \"Customer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1843,\n          columnNumber: 11\n        }, this), _jsxDEV(FormInput, {\n          placeholder: \"Name\",\n          value: jobCustomerName,\n          onChangeText: setJobCustomerName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1846,\n          columnNumber: 11\n        }, this), _jsxDEV(FormInput, {\n          placeholder: \"Phone\",\n          value: jobCustomerPhone,\n          onChangeText: setJobCustomerPhone,\n          keyboardType: \"phone-pad\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1847,\n          columnNumber: 11\n        }, this), _jsxDEV(FormInput, {\n          placeholder: \"Email\",\n          value: jobCustomerEmail,\n          onChangeText: setJobCustomerEmail,\n          keyboardType: \"email-address\",\n          autoCapitalize: \"none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1848,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1842,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          padding: spacing(2.5),\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontSize: typography.small,\n            fontWeight: '700',\n            textTransform: 'uppercase',\n            marginBottom: spacing(1)\n          },\n          children: \"Jobsite\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1858,\n          columnNumber: 11\n        }, this), _jsxDEV(FormInput, {\n          placeholder: \"Address line 1\",\n          value: jobAddressLine1,\n          onChangeText: setJobAddressLine1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1861,\n          columnNumber: 11\n        }, this), _jsxDEV(FormInput, {\n          placeholder: \"Address line 2\",\n          value: jobAddressLine2,\n          onChangeText: setJobAddressLine2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1862,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            columnGap: spacing(1.5)\n          },\n          children: [_jsxDEV(FormInput, {\n            placeholder: \"City\",\n            value: jobCity,\n            onChangeText: setJobCity,\n            style: {\n              flex: 1,\n              marginBottom: 0\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1864,\n            columnNumber: 13\n          }, this), _jsxDEV(FormInput, {\n            placeholder: \"State\",\n            value: jobStateCode,\n            onChangeText: setJobStateCode,\n            autoCapitalize: \"characters\",\n            style: {\n              width: 96,\n              marginBottom: 0\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1865,\n            columnNumber: 13\n          }, this), _jsxDEV(FormInput, {\n            placeholder: \"ZIP\",\n            value: jobZip,\n            onChangeText: setJobZip,\n            keyboardType: \"numeric\",\n            style: {\n              width: 112,\n              marginBottom: 0\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1872,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1863,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1857,\n        columnNumber: 9\n      }, this), canManageChangeOrders ? _jsxDEV(SurfaceCard, {\n        style: {\n          padding: spacing(2.5),\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontSize: typography.small,\n            fontWeight: '700',\n            textTransform: 'uppercase',\n            marginBottom: spacing(1)\n          },\n          children: \"New change order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1884,\n          columnNumber: 13\n        }, this), _jsxDEV(FormInput, {\n          placeholder: \"Title\",\n          value: title,\n          onChangeText: setTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1887,\n          columnNumber: 13\n        }, this), _jsxDEV(FormInput, {\n          placeholder: \"Amount $\",\n          value: amountDelta,\n          onChangeText: setAmountDelta,\n          keyboardType: \"decimal-pad\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1888,\n          columnNumber: 13\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'flex-end',\n            marginTop: spacing(2)\n          },\n          children: _jsxDEV(TouchableOpacity, {\n            onPress: addCO,\n            activeOpacity: 0.85,\n            style: {\n              backgroundColor: palette.primary,\n              paddingHorizontal: spacing(2.5),\n              paddingVertical: spacing(1.5),\n              borderRadius: 12\n            },\n            children: _jsxDEV(Text, {\n              style: {\n                color: '#fff',\n                fontWeight: '700'\n              },\n              children: \"Add change order\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1895,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1890,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1889,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1883,\n        columnNumber: 11\n      }, this) : null, _jsxDEV(View, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontSize: typography.h2,\n            fontWeight: '700',\n            marginBottom: spacing(1.5)\n          },\n          children: \"Change orders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1902,\n          columnNumber: 11\n        }, this), changeOrders.length === 0 ? _jsxDEV(SurfaceCard, {\n          children: _jsxDEV(Text, {\n            style: {\n              color: palette.muted\n            },\n            children: \"No change orders yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1905,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1904,\n          columnNumber: 13\n        }, this) : changeOrders.map(item => {\n          const statusKey = (item.status || 'PENDING').toUpperCase();\n          const statusTone = (() => {\n            if (statusKey === 'APPROVED') return {\n              bg: '#dcfce7',\n              fg: palette.success,\n              label: 'Approved'\n            };\n            if (statusKey === 'REJECTED') return {\n              bg: '#fee2e2',\n              fg: palette.danger,\n              label: 'Rejected'\n            };\n            return {\n              bg: '#e0f3f0',\n              fg: palette.primaryStrong,\n              label: 'Pending'\n            };\n          })();\n          const amountLabel = formatCurrency(item.amountDelta || 0);\n          return _jsxDEV(SurfaceCard, {\n            style: {\n              marginBottom: spacing(1.5),\n              padding: spacing(2.5)\n            },\n            children: [_jsxDEV(View, {\n              style: {\n                flexDirection: 'row',\n                justifyContent: 'space-between',\n                alignItems: 'center'\n              },\n              children: [_jsxDEV(Text, {\n                style: {\n                  color: palette.text,\n                  fontSize: typography.h2,\n                  fontWeight: '600'\n                },\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1918,\n                columnNumber: 19\n              }, this), _jsxDEV(View, {\n                style: {\n                  backgroundColor: statusTone.bg,\n                  borderRadius: 999,\n                  paddingHorizontal: spacing(1.5),\n                  paddingVertical: spacing(0.5)\n                },\n                children: _jsxDEV(Text, {\n                  style: {\n                    color: statusTone.fg,\n                    fontWeight: '600',\n                    fontSize: typography.small\n                  },\n                  children: statusTone.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1920,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1919,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1917,\n              columnNumber: 17\n            }, this), _jsxDEV(Text, {\n              style: {\n                color: palette.muted,\n                marginTop: spacing(0.5)\n              },\n              children: amountLabel\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1923,\n              columnNumber: 17\n            }, this), canManageChangeOrders ? _jsxDEV(View, {\n              style: {\n                flexDirection: 'row',\n                flexWrap: 'wrap',\n                columnGap: spacing(1),\n                rowGap: spacing(1),\n                marginTop: spacing(1.5)\n              },\n              children: [_jsxDEV(QuickAction, {\n                label: \"Approve\",\n                tone: \"success\",\n                onPress: async () => {\n                  await api(`/change-orders/${item.id}`, 'PATCH', {\n                    status: 'APPROVED'\n                  }, token);\n                  loadCO();\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1926,\n                columnNumber: 21\n              }, this), _jsxDEV(QuickAction, {\n                label: \"Reject\",\n                tone: \"danger\",\n                onPress: async () => {\n                  await api(`/change-orders/${item.id}`, 'PATCH', {\n                    status: 'REJECTED'\n                  }, token);\n                  loadCO();\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1931,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1925,\n              columnNumber: 19\n            }, this) : null]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1916,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1901,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: {\n          color: palette.text,\n          fontSize: typography.h2,\n          fontWeight: '700',\n          marginBottom: spacing(1.5)\n        },\n        children: \"Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1943,\n        columnNumber: 9\n      }, this), _jsxDEV(JobTasks, {\n        jobId: jobId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1944,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: {\n          color: palette.text,\n          fontSize: typography.h2,\n          fontWeight: '700',\n          marginTop: spacing(3),\n          marginBottom: spacing(1.5)\n        },\n        children: \"Schedule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1946,\n        columnNumber: 9\n      }, this), _jsxDEV(JobSchedule, {\n        jobId: jobId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1947,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1802,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1801,\n    columnNumber: 5\n  }, this);\n}\nfunction JobTasks({\n  jobId\n}) {\n  const {\n    token\n  } = useAuth();\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState('');\n  const [dueDate, setDueDate] = useState('');\n  const load = async () => {\n    try {\n      const data = await api(`/tasks?jobId=${jobId}`, 'GET', null, token);\n      setTasks(data);\n      db.transaction(tx => {\n        tx.executeSql('DELETE FROM tasks_cache WHERE jobId=?', [jobId]);\n        data.forEach(t => tx.executeSql('INSERT OR REPLACE INTO tasks_cache (id, jobId, title, status, dueDate) VALUES (?,?,?,?,?)', [t.id, jobId, t.title || '', t.status || 'TODO', t.dueDate || '']));\n      });\n    } catch (e) {\n      db.transaction(tx => tx.executeSql('SELECT id, jobId, title, status, dueDate FROM tasks_cache WHERE jobId=?', [jobId], (_, {\n        rows\n      }) => setTasks(rows._array || [])));\n    }\n  };\n  useEffect(() => {\n    load();\n  }, []);\n  const add = async () => {\n    if (!title.trim()) return Alert.alert('Title required');\n    await api('/tasks', 'POST', {\n      title,\n      jobId,\n      dueDate\n    }, token);\n    setTitle('');\n    setDueDate('');\n    load();\n  };\n  const done = async id => {\n    await api(`/tasks/${id}`, 'PATCH', {\n      status: 'DONE'\n    }, token);\n    load();\n  };\n  const remove = id => {\n    Alert.alert('Delete task', 'Remove this task?', [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Delete',\n      style: 'destructive',\n      onPress: async () => {\n        await api(`/tasks/${id}`, 'DELETE', null, token);\n        load();\n      }\n    }]);\n  };\n  return _jsxDEV(View, {\n    children: [_jsxDEV(SurfaceCard, {\n      style: {\n        marginBottom: spacing(2)\n      },\n      children: [_jsxDEV(Text, {\n        style: {\n          color: palette.text,\n          fontSize: typography.h2,\n          fontWeight: '600',\n          marginBottom: spacing(1.5)\n        },\n        children: \"Add task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1986,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        placeholder: \"Task title\",\n        placeholderTextColor: palette.muted,\n        value: title,\n        onChangeText: setTitle,\n        style: {\n          borderWidth: 1,\n          borderColor: palette.border,\n          borderRadius: 12,\n          padding: spacing(2),\n          color: palette.text,\n          backgroundColor: palette.surfaceMuted,\n          marginBottom: spacing(1.5)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1987,\n        columnNumber: 9\n      }, this), _jsxDEV(DateInputField, {\n        value: dueDate,\n        onChange: setDueDate,\n        placeholder: \"Due date (optional)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2002,\n        columnNumber: 9\n      }, this), _jsxDEV(QuickAction, {\n        label: \"Add task\",\n        onPress: add\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2003,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1985,\n      columnNumber: 7\n    }, this), tasks.length === 0 ? _jsxDEV(SurfaceCard, {\n      children: _jsxDEV(Text, {\n        style: {\n          color: palette.muted\n        },\n        children: \"No tasks yet. Add one to start tracking progress.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2008,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2007,\n      columnNumber: 9\n    }, this) : tasks.map(t => _jsxDEV(SurfaceCard, {\n      style: {\n        marginBottom: spacing(1.5)\n      },\n      children: [_jsxDEV(Text, {\n        style: {\n          color: palette.text,\n          fontWeight: '600',\n          fontSize: typography.h2 - 2\n        },\n        children: t.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2013,\n        columnNumber: 13\n      }, this), _jsxDEV(Text, {\n        style: {\n          color: palette.muted,\n          marginTop: spacing(0.5)\n        },\n        children: [\"Status: \", t.status || 'TODO', t.dueDate ? ` - Due ${formatDate(t.dueDate)}` : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2014,\n        columnNumber: 13\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          columnGap: spacing(1),\n          rowGap: spacing(1),\n          marginTop: spacing(1.5)\n        },\n        children: [!isTaskCompleted(t.status) ? _jsxDEV(QuickAction, {\n          label: \"Mark done\",\n          tone: \"success\",\n          onPress: () => done(t.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2019,\n          columnNumber: 17\n        }, this) : null, _jsxDEV(QuickAction, {\n          label: \"Delete\",\n          tone: \"danger\",\n          onPress: () => remove(t.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2021,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2017,\n        columnNumber: 13\n      }, this)]\n    }, t.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2012,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1984,\n    columnNumber: 5\n  }, this);\n}\nfunction JobSchedule({\n  jobId\n}) {\n  const {\n    token\n  } = useAuth();\n  const [events, setEvents] = useState([]);\n  const [title, setTitle] = useState('');\n  const [startAt, setStartAt] = useState('');\n  const [endAt, setEndAt] = useState('');\n  const load = async () => {\n    try {\n      const data = await api(`/calendar?jobId=${jobId}`, 'GET', null, token);\n      setEvents(data);\n      db.transaction(tx => {\n        tx.executeSql('DELETE FROM calendar_cache WHERE jobId=?', [jobId]);\n        data.forEach(ev => tx.executeSql('INSERT OR REPLACE INTO calendar_cache (id, jobId, title, startAt, endAt) VALUES (?,?,?,?,?)', [ev.id, jobId, ev.title || '', ev.startAt || '', ev.endAt || '']));\n      });\n    } catch (e) {\n      db.transaction(tx => tx.executeSql('SELECT id, jobId, title, startAt, endAt FROM calendar_cache WHERE jobId=?', [jobId], (_, {\n        rows\n      }) => setEvents(rows._array || [])));\n    }\n  };\n  useEffect(() => {\n    load();\n  }, []);\n  const add = async () => {\n    if (!title.trim() || !startAt) return Alert.alert('Title and start time required');\n    await api('/calendar', 'POST', {\n      title,\n      jobId,\n      startAt,\n      endAt\n    }, token);\n    setTitle('');\n    setStartAt('');\n    setEndAt('');\n    load();\n  };\n  const remove = id => {\n    Alert.alert('Delete event', 'Remove this schedule item?', [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Delete',\n      style: 'destructive',\n      onPress: async () => {\n        await api(`/calendar/${id}`, 'DELETE', null, token);\n        load();\n      }\n    }]);\n  };\n  return _jsxDEV(View, {\n    children: [_jsxDEV(SurfaceCard, {\n      style: {\n        marginBottom: spacing(2)\n      },\n      children: [_jsxDEV(Text, {\n        style: {\n          color: palette.text,\n          fontSize: typography.h2,\n          fontWeight: '600',\n          marginBottom: spacing(1.5)\n        },\n        children: \"Schedule event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2063,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        placeholder: \"Event title\",\n        placeholderTextColor: palette.muted,\n        value: title,\n        onChangeText: setTitle,\n        style: {\n          borderWidth: 1,\n          borderColor: palette.border,\n          borderRadius: 12,\n          padding: spacing(2),\n          color: palette.text,\n          backgroundColor: palette.surfaceMuted,\n          marginBottom: spacing(1.5)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2064,\n        columnNumber: 9\n      }, this), _jsxDEV(DateInputField, {\n        value: startAt,\n        onChange: date => {\n          const existing = startAt || '';\n          const timePartIndex = existing.indexOf('T');\n          const timePart = timePartIndex > -1 ? existing.substring(timePartIndex) : 'T08:00:00';\n          setStartAt(`${date}${timePart}`);\n        },\n        placeholder: \"Start date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2079,\n        columnNumber: 9\n      }, this), _jsxDEV(DateInputField, {\n        value: endAt,\n        onChange: date => {\n          if (!date) {\n            setEndAt('');\n            return;\n          }\n          const existing = endAt || '';\n          const timePartIndex = existing.indexOf('T');\n          const timePart = timePartIndex > -1 ? existing.substring(timePartIndex) : 'T17:00:00';\n          setEndAt(`${date}${timePart}`);\n        },\n        placeholder: \"End date (optional)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2089,\n        columnNumber: 9\n      }, this), _jsxDEV(QuickAction, {\n        label: \"Add event\",\n        onPress: add\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2062,\n      columnNumber: 7\n    }, this), events.length === 0 ? _jsxDEV(SurfaceCard, {\n      children: _jsxDEV(Text, {\n        style: {\n          color: palette.muted\n        },\n        children: \"No schedule entries yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2108,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2107,\n      columnNumber: 9\n    }, this) : events.map(ev => {\n      const startLabel = ev.startAt ? `Starts ${formatDate(ev.startAt)}` : 'No start date';\n      const endLabel = ev.endAt ? ` - Ends ${formatDate(ev.endAt)}` : '';\n      return _jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(1.5)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontWeight: '600',\n            fontSize: typography.h2 - 2\n          },\n          children: ev.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2116,\n          columnNumber: 15\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(0.5)\n          },\n          children: [startLabel, endLabel]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2117,\n          columnNumber: 15\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            columnGap: spacing(1),\n            marginTop: spacing(1.5)\n          },\n          children: _jsxDEV(QuickAction, {\n            label: \"Delete\",\n            tone: \"danger\",\n            onPress: () => remove(ev.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2121,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2120,\n          columnNumber: 15\n        }, this)]\n      }, ev.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2115,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 2061,\n    columnNumber: 5\n  }, this);\n}\nasync function processQueue(token) {\n  return new Promise(resolve => {\n    db.transaction(tx => {\n      tx.executeSql('SELECT * FROM queue', [], async (_, {\n        rows\n      }) => {\n        const items = rows._array || [];\n        for (const q of items) {\n          try {\n            const payload = JSON.parse(q.payload);\n            if (q.type === 'createLead') {\n              await api('/leads', 'POST', payload, token);\n            }\n            if (q.type === 'uploadPhoto') {\n              await api('/upload/image', 'POST', {\n                dataUrl: payload.dataUrl\n              }, token);\n            }\n            db.transaction(txx => txx.executeSql('DELETE FROM queue WHERE id=?', [q.id]));\n          } catch (e) {}\n        }\n        resolve();\n      });\n    });\n  });\n}\nfunction LeadsScreen({\n  navigation\n}) {\n  const {\n    token\n  } = useAuth();\n  const [leads, setLeads] = useState([]);\n  const [refreshing, setRefreshing] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const fetchLeads = useCallback(async () => {\n    setLoading(true);\n    try {\n      const data = await api('/leads', 'GET', null, token);\n      setLeads(data);\n      db.transaction(tx => {\n        tx.executeSql && tx.executeSql('DELETE FROM leads_cache;');\n        data.forEach(l => tx.executeSql && tx.executeSql('INSERT OR REPLACE INTO leads_cache (id, description, status) VALUES (?,?,?)', [l.id, l.description || '', l.status || 'NEW']));\n      });\n    } catch (e) {\n      db.transaction(tx => tx.executeSql && tx.executeSql('SELECT id, description, status FROM leads_cache', [], (_, {\n        rows\n      }) => setLeads(rows._array || [])));\n    } finally {\n      setLoading(false);\n    }\n  }, [token]);\n  useFocusEffect(useCallback(() => {\n    fetchLeads();\n  }, [fetchLeads]));\n  const onRefresh = useCallback(async () => {\n    setRefreshing(true);\n    await fetchLeads();\n    setRefreshing(false);\n  }, [fetchLeads]);\n  const deleteLead = useCallback(lead => {\n    Alert.alert('Delete lead', `Delete lead #${lead.id}?`, [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Delete',\n      style: 'destructive',\n      onPress: async () => {\n        try {\n          await api(`/leads/${lead.id}`, 'DELETE', null, token);\n          setLeads(prev => prev.filter(l => l.id !== lead.id));\n          db.transaction(tx => tx.executeSql && tx.executeSql('DELETE FROM leads_cache WHERE id=?', [lead.id]));\n        } catch (err) {\n          Alert.alert('Error', err.message || 'Unable to delete lead');\n        }\n      }\n    }]);\n  }, [token]);\n  const newLeadsCount = leads.filter(l => (l.status || '').toUpperCase() === 'NEW').length;\n  const renderLeadCard = lead => {\n    const customer = lead.Customer || {};\n    const jobsite = lead.Jobsite || {};\n    const addressParts = [jobsite.addressLine1, jobsite.addressLine2, [jobsite.city, jobsite.state].filter(Boolean).join(', '), jobsite.zip].filter(Boolean);\n    const address = addressParts.join(', ');\n    const statusKey = (lead.status || 'NEW').toUpperCase();\n    return _jsxDEV(SurfaceCard, {\n      children: [_jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        children: [_jsxDEV(View, {\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.text,\n              fontSize: typography.h2,\n              fontWeight: '600'\n            },\n            children: [\"Lead #\", lead.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2221,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.5)\n            },\n            children: customer.name || 'Unknown customer'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2222,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2220,\n          columnNumber: 11\n        }, this), _jsxDEV(StatusPill, {\n          status: statusKey\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2224,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2219,\n        columnNumber: 9\n      }, this), customer.phone ? _jsxDEV(Text, {\n        style: {\n          color: palette.muted,\n          marginTop: spacing(0.5)\n        },\n        children: customer.phone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2226,\n        columnNumber: 27\n      }, this) : null, customer.email ? _jsxDEV(Text, {\n        style: {\n          color: palette.muted\n        },\n        children: customer.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2227,\n        columnNumber: 27\n      }, this) : null, address ? _jsxDEV(Text, {\n        style: {\n          color: palette.muted,\n          marginTop: spacing(1)\n        },\n        children: address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2228,\n        columnNumber: 20\n      }, this) : null, _jsxDEV(Text, {\n        numberOfLines: 3,\n        style: {\n          color: palette.text,\n          marginTop: spacing(1.5)\n        },\n        children: lead.description || 'No scope captured yet.'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2229,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          columnGap: spacing(1),\n          rowGap: spacing(1),\n          marginTop: spacing(2)\n        },\n        children: [_jsxDEV(QuickAction, {\n          label: \"Open\",\n          onPress: () => navigation.navigate('EstimateEditor', {\n            leadId: lead.id\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2231,\n          columnNumber: 11\n        }, this), _jsxDEV(QuickAction, {\n          label: \"Convert\",\n          tone: \"success\",\n          onPress: () => navigation.navigate('Jobs')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2232,\n          columnNumber: 11\n        }, this), _jsxDEV(QuickAction, {\n          label: \"Delete\",\n          tone: \"danger\",\n          onPress: () => deleteLead(lead)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2233,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2230,\n        columnNumber: 9\n      }, this)]\n    }, lead.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2218,\n      columnNumber: 7\n    }, this);\n  };\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(FlatList, {\n      data: leads,\n      keyExtractor: item => String(item.id),\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(4)\n      },\n      refreshControl: _jsxDEV(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh,\n        tintColor: palette.primary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2245,\n        columnNumber: 25\n      }, this),\n      ListHeaderComponent: _jsxDEV(View, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginBottom: spacing(2)\n          },\n          children: [_jsxDEV(View, {\n            children: [_jsxDEV(Text, {\n              style: {\n                color: palette.text,\n                fontSize: typography.h1,\n                fontWeight: '700'\n              },\n              children: \"Leads\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2250,\n              columnNumber: 17\n            }, this), _jsxDEV(Text, {\n              style: {\n                color: palette.muted,\n                marginTop: spacing(0.5)\n              },\n              children: \"Keep the funnel moving\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2251,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2249,\n            columnNumber: 15\n          }, this), _jsxDEV(QuickAction, {\n            label: \"New lead\",\n            onPress: () => navigation.navigate('NewLead')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2253,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2248,\n          columnNumber: 13\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            columnGap: spacing(2),\n            rowGap: spacing(2)\n          },\n          children: [_jsxDEV(View, {\n            style: {\n              flexBasis: '48%',\n              minWidth: 160\n            },\n            children: _jsxDEV(SummaryCard, {\n              title: \"Total\",\n              value: leads.length,\n              subtitle: `${newLeadsCount} new`,\n              tone: \"info\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2257,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2256,\n            columnNumber: 15\n          }, this), _jsxDEV(View, {\n            style: {\n              flexBasis: '48%',\n              minWidth: 160\n            },\n            children: _jsxDEV(SummaryCard, {\n              title: \"Outstanding\",\n              value: newLeadsCount,\n              subtitle: \"Require follow up\",\n              tone: \"warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2260,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2259,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2255,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2247,\n        columnNumber: 11\n      }, this),\n      renderItem: ({\n        item\n      }) => renderLeadCard(item),\n      ListEmptyComponent: loading ? _jsxDEV(SurfaceCard, {\n        style: {\n          alignItems: 'center',\n          paddingVertical: spacing(4)\n        },\n        children: [_jsxDEV(ActivityIndicator, {\n          color: palette.primary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2269,\n          columnNumber: 15\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(1)\n          },\n          children: \"Loading leads...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2270,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2268,\n        columnNumber: 13\n      }, this) : _jsxDEV(SurfaceCard, {\n        children: _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: \"No leads yet. Capture a lead to get started.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2274,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2273,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2241,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 2240,\n    columnNumber: 5\n  }, this);\n}\nfunction NewLeadScreen({\n  navigation\n}) {\n  const {\n    token\n  } = useAuth();\n  const [description, setDescription] = useState('');\n  const [status, setStatus] = useState('NEW');\n  const [customerName, setCustomerName] = useState('');\n  const [customerPhone, setCustomerPhone] = useState('');\n  const [customerEmail, setCustomerEmail] = useState('');\n  const [addressLine1, setAddressLine1] = useState('');\n  const [addressLine2, setAddressLine2] = useState('');\n  const [city, setCity] = useState('');\n  const [stateCode, setStateCode] = useState('');\n  const [zip, setZip] = useState('');\n  const [showCustomerSection, setShowCustomerSection] = useState(false);\n  const [showJobsiteSection, setShowJobsiteSection] = useState(false);\n  const statuses = ['NEW', 'CONTACTED', 'ESTIMATING', 'CONVERTED', 'CLOSED_LOST'];\n  const buildPayload = () => {\n    const customer = [customerName, customerPhone, customerEmail].some(v => v && v.trim()) ? {\n      name: customerName.trim(),\n      phone: customerPhone.trim(),\n      email: customerEmail.trim()\n    } : null;\n    const jobsite = [addressLine1, addressLine2, city, stateCode, zip].some(v => v && v.trim()) ? {\n      addressLine1: addressLine1.trim(),\n      addressLine2: addressLine2.trim(),\n      city: city.trim(),\n      state: stateCode.trim(),\n      zip: zip.trim()\n    } : null;\n    return {\n      description,\n      status,\n      customer,\n      jobsite\n    };\n  };\n  const createLeadOnline = async () => {\n    const payload = buildPayload();\n    const created = await api('/leads', 'POST', payload, token);\n    navigation.replace('EstimateEditor', {\n      leadId: created.id\n    });\n    Alert.alert('Lead created', `Lead #${created.id} ready to estimate.`);\n  };\n  const queueLead = () => {\n    const payload = buildPayload();\n    db.transaction(tx => tx.executeSql('INSERT INTO queue (type, payload) VALUES (?,?)', ['createLead', JSON.stringify(payload)]));\n    Alert.alert('Saved offline', 'We will submit this lead when you reconnect.');\n    navigation.goBack();\n  };\n  const submit = async () => {\n    if (!description.trim()) {\n      Alert.alert('Missing scope', 'Please describe the job or scope of work.');\n      return;\n    }\n    try {\n      await createLeadOnline();\n    } catch (e) {\n      queueLead();\n    }\n  };\n  const chipStyle = active => ({\n    paddingHorizontal: spacing(2),\n    paddingVertical: spacing(1),\n    borderRadius: 999,\n    borderWidth: 1,\n    borderColor: active ? palette.primary : palette.border,\n    backgroundColor: active ? '#d9f2ed' : palette.surface\n  });\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(6)\n      },\n      children: [_jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontSize: typography.h1,\n            fontWeight: '700',\n            marginBottom: spacing(2)\n          },\n          children: \"New lead\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2362,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontWeight: '600',\n            marginBottom: spacing(1)\n          },\n          children: \"Scope\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2363,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Describe the job...\",\n          placeholderTextColor: palette.muted,\n          value: description,\n          onChangeText: setDescription,\n          multiline: true,\n          style: {\n            borderWidth: 1,\n            borderColor: palette.border,\n            borderRadius: 12,\n            padding: spacing(2),\n            minHeight: 120,\n            color: palette.text,\n            backgroundColor: palette.surfaceMuted,\n            textAlignVertical: 'top'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2364,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontWeight: '600',\n            marginTop: spacing(2),\n            marginBottom: spacing(1)\n          },\n          children: \"Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2381,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            columnGap: spacing(1),\n            rowGap: spacing(1)\n          },\n          children: statuses.map(s => {\n            const active = status === s;\n            return _jsxDEV(TouchableOpacity, {\n              onPress: () => setStatus(s),\n              activeOpacity: 0.85,\n              style: chipStyle(active),\n              children: _jsxDEV(Text, {\n                style: {\n                  color: active ? palette.primaryStrong : palette.muted,\n                  fontWeight: '600',\n                  fontSize: typography.small\n                },\n                children: s.replace('_', ' ')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2387,\n                columnNumber: 19\n              }, this)\n            }, s, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2386,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2382,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginTop: spacing(3)\n          },\n          children: [_jsxDEV(QuickAction, {\n            label: \"Save offline\",\n            tone: \"muted\",\n            onPress: queueLead\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2393,\n            columnNumber: 13\n          }, this), _jsxDEV(TouchableOpacity, {\n            onPress: submit,\n            activeOpacity: 0.85,\n            style: {\n              backgroundColor: palette.primary,\n              paddingHorizontal: spacing(3),\n              paddingVertical: spacing(1.5),\n              borderRadius: 12\n            },\n            children: _jsxDEV(Text, {\n              style: {\n                color: '#fff',\n                fontWeight: '700'\n              },\n              children: \"Create lead\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2399,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2394,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2392,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2361,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(TouchableOpacity, {\n          onPress: () => setShowCustomerSection(v => !v),\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n          },\n          activeOpacity: 0.8,\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.text,\n              fontSize: typography.h2,\n              fontWeight: '600'\n            },\n            children: \"Customer details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2410,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.primary,\n              fontWeight: '600'\n            },\n            children: showCustomerSection ? 'Hide' : 'Add'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2411,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2405,\n          columnNumber: 11\n        }, this), showCustomerSection ? _jsxDEV(View, {\n          style: {\n            marginTop: spacing(2)\n          },\n          children: [_jsxDEV(TextInput, {\n            placeholder: \"Name\",\n            placeholderTextColor: palette.muted,\n            value: customerName,\n            onChangeText: setCustomerName,\n            style: {\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted,\n              marginBottom: spacing(1.5)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2415,\n            columnNumber: 15\n          }, this), _jsxDEV(TextInput, {\n            placeholder: \"Phone\",\n            placeholderTextColor: palette.muted,\n            keyboardType: \"phone-pad\",\n            value: customerPhone,\n            onChangeText: setCustomerPhone,\n            style: {\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted,\n              marginBottom: spacing(1.5)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2430,\n            columnNumber: 15\n          }, this), _jsxDEV(TextInput, {\n            placeholder: \"Email\",\n            placeholderTextColor: palette.muted,\n            keyboardType: \"email-address\",\n            autoCapitalize: \"none\",\n            value: customerEmail,\n            onChangeText: setCustomerEmail,\n            style: {\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2446,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2414,\n          columnNumber: 13\n        }, this) : _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(1.5)\n          },\n          children: \"Add contact details to help follow up faster.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2464,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2404,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        children: [_jsxDEV(TouchableOpacity, {\n          onPress: () => setShowJobsiteSection(v => !v),\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n          },\n          activeOpacity: 0.8,\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.text,\n              fontSize: typography.h2,\n              fontWeight: '600'\n            },\n            children: \"Jobsite address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2474,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.primary,\n              fontWeight: '600'\n            },\n            children: showJobsiteSection ? 'Hide' : 'Add'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2475,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2469,\n          columnNumber: 11\n        }, this), showJobsiteSection ? _jsxDEV(View, {\n          style: {\n            marginTop: spacing(2)\n          },\n          children: [_jsxDEV(TextInput, {\n            placeholder: \"Address line 1\",\n            placeholderTextColor: palette.muted,\n            value: addressLine1,\n            onChangeText: setAddressLine1,\n            style: {\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted,\n              marginBottom: spacing(1.5)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2479,\n            columnNumber: 15\n          }, this), _jsxDEV(TextInput, {\n            placeholder: \"Address line 2\",\n            placeholderTextColor: palette.muted,\n            value: addressLine2,\n            onChangeText: setAddressLine2,\n            style: {\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted,\n              marginBottom: spacing(1.5)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2494,\n            columnNumber: 15\n          }, this), _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              columnGap: spacing(1.5)\n            },\n            children: [_jsxDEV(View, {\n              style: {\n                flex: 1\n              },\n              children: _jsxDEV(TextInput, {\n                placeholder: \"City\",\n                placeholderTextColor: palette.muted,\n                value: city,\n                onChangeText: setCity,\n                style: {\n                  borderWidth: 1,\n                  borderColor: palette.border,\n                  borderRadius: 12,\n                  padding: spacing(2),\n                  color: palette.text,\n                  backgroundColor: palette.surfaceMuted,\n                  marginBottom: spacing(1.5)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2511,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2510,\n              columnNumber: 17\n            }, this), _jsxDEV(View, {\n              style: {\n                width: 80\n              },\n              children: _jsxDEV(TextInput, {\n                placeholder: \"State\",\n                placeholderTextColor: palette.muted,\n                value: stateCode,\n                onChangeText: setStateCode,\n                style: {\n                  borderWidth: 1,\n                  borderColor: palette.border,\n                  borderRadius: 12,\n                  padding: spacing(2),\n                  color: palette.text,\n                  backgroundColor: palette.surfaceMuted,\n                  marginBottom: spacing(1.5)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2528,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2527,\n              columnNumber: 17\n            }, this), _jsxDEV(View, {\n              style: {\n                width: 100\n              },\n              children: _jsxDEV(TextInput, {\n                placeholder: \"ZIP\",\n                placeholderTextColor: palette.muted,\n                value: zip,\n                onChangeText: setZip,\n                style: {\n                  borderWidth: 1,\n                  borderColor: palette.border,\n                  borderRadius: 12,\n                  padding: spacing(2),\n                  color: palette.text,\n                  backgroundColor: palette.surfaceMuted,\n                  marginBottom: spacing(1.5)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2545,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2544,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2509,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2478,\n          columnNumber: 13\n        }, this) : _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(1.5)\n          },\n          children: \"Add a jobsite to keep crews aligned.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2564,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2468,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2360,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 2359,\n    columnNumber: 5\n  }, this);\n}\nfunction EstimateEditorScreen({\n  route,\n  navigation\n}) {\n  const {\n    token,\n    user\n  } = useAuth();\n  const {\n    leadId\n  } = route.params || {};\n  const [estimateId, setEstimateId] = useState(null);\n  const [items, setItems] = useState([]);\n  const [desc, setDesc] = useState('');\n  const [qty, setQty] = useState('1');\n  const [price, setPrice] = useState('0');\n  const [notes, setNotes] = useState('');\n  const [photoUrl, setPhotoUrl] = useState(null);\n  const [subtotal, setSubtotal] = useState(0);\n  const [taxRate, setTaxRate] = useState('7');\n  const [tax, setTax] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [leadDetails, setLeadDetails] = useState(null);\n  const [leadStatus, setLeadStatus] = useState('NEW');\n  const [leadScope, setLeadScope] = useState('');\n  const [leadCustomerName, setLeadCustomerName] = useState('');\n  const [leadCustomerPhone, setLeadCustomerPhone] = useState('');\n  const [leadCustomerEmail, setLeadCustomerEmail] = useState('');\n  const [leadAddressLine1, setLeadAddressLine1] = useState('');\n  const [leadAddressLine2, setLeadAddressLine2] = useState('');\n  const [leadCity, setLeadCity] = useState('');\n  const [leadStateCode, setLeadStateCode] = useState('');\n  const [leadZip, setLeadZip] = useState('');\n  const leadStatuses = ['NEW', 'CONTACTED', 'ESTIMATING', 'CONVERTED', 'CLOSED_LOST'];\n  const loadLead = useCallback(async () => {\n    if (!leadId) return;\n    try {\n      const data = await api(`/leads/${leadId}`, 'GET', null, token);\n      setLeadDetails(data);\n      setLeadStatus(data.status || 'NEW');\n      setLeadScope(data.description || '');\n      const customer = data.Customer || {};\n      const jobsite = data.Jobsite || {};\n      setLeadCustomerName(customer.name || '');\n      setLeadCustomerPhone(customer.phone || '');\n      setLeadCustomerEmail(customer.email || '');\n      setLeadAddressLine1(jobsite.addressLine1 || '');\n      setLeadAddressLine2(jobsite.addressLine2 || '');\n      setLeadCity(jobsite.city || '');\n      setLeadStateCode(jobsite.state || '');\n      setLeadZip(jobsite.zip || '');\n    } catch (e) {}\n  }, [leadId, token]);\n  useEffect(() => {\n    loadLead();\n  }, [loadLead]);\n  const createEstimate = async () => {\n    const est = await api('/estimates', 'POST', {\n      leadId,\n      customerId: leadDetails?.customerId ?? null,\n      jobsiteId: leadDetails?.jobsiteId ?? null,\n      subtotal: 0,\n      taxRate: parseFloat(taxRate) || 0,\n      total: 0\n    }, token);\n    setEstimateId(est.id);\n    return est;\n  };\n  const ensureEstimate = useCallback(async () => {\n    if (estimateId) return estimateId;\n    const created = await createEstimate();\n    setEstimateId(created.id);\n    return created.id;\n  }, [estimateId, createEstimate]);\n  useEffect(() => {\n    const rate = parseFloat(taxRate) || 0;\n    const newSubtotal = items.reduce((sum, item) => sum + parseFloat(item.qty || 0) * parseFloat(item.unitPrice || 0), 0);\n    const newTax = newSubtotal * (rate / 100);\n    setSubtotal(newSubtotal);\n    setTax(newTax);\n    setTotal(newSubtotal + newTax);\n  }, [items, taxRate]);\n  const addItem = async () => {\n    if (!desc.trim()) {\n      Alert.alert('Line item', 'Please add a description.');\n      return;\n    }\n    try {\n      const targetId = await ensureEstimate();\n      const payload = {\n        description: desc.trim(),\n        qty: parseFloat(qty) || 1,\n        unitPrice: parseFloat(price) || 0\n      };\n      const item = await api(`/estimates/${targetId}/items`, 'POST', payload, token);\n      setItems(prev => [item, ...prev]);\n      setDesc('');\n      setQty('1');\n      setPrice('0');\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to add line item');\n    }\n  };\n  const saveLeadDetails = async () => {\n    if (!leadId) return;\n    const customerPayload = [leadCustomerName, leadCustomerPhone, leadCustomerEmail].some(v => v && v.trim()) ? {\n      name: leadCustomerName.trim(),\n      phone: leadCustomerPhone.trim(),\n      email: leadCustomerEmail.trim()\n    } : null;\n    const jobsitePayload = [leadAddressLine1, leadAddressLine2, leadCity, leadStateCode, leadZip].some(v => v && v.trim()) ? {\n      addressLine1: leadAddressLine1.trim(),\n      addressLine2: leadAddressLine2.trim(),\n      city: leadCity.trim(),\n      state: leadStateCode.trim(),\n      zip: leadZip.trim()\n    } : null;\n    try {\n      await api(`/leads/${leadId}`, 'PATCH', {\n        description: leadScope,\n        status: leadStatus,\n        customer: customerPayload,\n        jobsite: jobsitePayload\n      }, token);\n      Alert.alert('Saved', 'Lead details updated.');\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to save lead details');\n    }\n  };\n  const pickPhoto = async () => {\n    const result = await ImagePicker.launchImageLibraryAsync({\n      allowsEditing: false,\n      quality: 0.6\n    });\n    if (!result.canceled && result.assets?.length) {\n      setPhotoUrl(result.assets[0].uri);\n    }\n  };\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(6)\n      },\n      children: [_jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontSize: typography.h2,\n            fontWeight: '700',\n            marginBottom: spacing(1.5)\n          },\n          children: \"Lead summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2714,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            columnGap: spacing(1),\n            rowGap: spacing(1.5),\n            marginBottom: spacing(2)\n          },\n          children: leadStatuses.map(s => {\n            const selected = leadStatus === s;\n            return _jsxDEV(QuickAction, {\n              label: s.replace('_', ' '),\n              tone: selected ? 'primary' : 'muted',\n              onPress: () => setLeadStatus(s)\n            }, s, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2719,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2715,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Scope / project notes\",\n          placeholderTextColor: palette.muted,\n          value: leadScope,\n          onChangeText: setLeadScope,\n          multiline: true,\n          style: {\n            borderWidth: 1,\n            borderColor: palette.border,\n            borderRadius: 12,\n            padding: spacing(2),\n            minHeight: 120,\n            color: palette.text,\n            backgroundColor: palette.surfaceMuted,\n            textAlignVertical: 'top'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2728,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'flex-end',\n            marginTop: spacing(2)\n          },\n          children: _jsxDEV(QuickAction, {\n            label: \"Save lead\",\n            onPress: saveLeadDetails\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2746,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2745,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2713,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontSize: typography.h2,\n            fontWeight: '700',\n            marginBottom: spacing(1.5)\n          },\n          children: \"Line items\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2751,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Describe the work or material\",\n          placeholderTextColor: palette.muted,\n          value: desc,\n          onChangeText: setDesc,\n          style: {\n            borderWidth: 1,\n            borderColor: palette.border,\n            borderRadius: 12,\n            padding: spacing(2),\n            color: palette.text,\n            backgroundColor: palette.surfaceMuted,\n            marginBottom: spacing(1.5)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2752,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            columnGap: spacing(1.5),\n            marginBottom: spacing(1.5)\n          },\n          children: [_jsxDEV(TextInput, {\n            placeholder: \"Qty\",\n            placeholderTextColor: palette.muted,\n            value: qty,\n            onChangeText: setQty,\n            keyboardType: \"numeric\",\n            style: {\n              flex: 1,\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2768,\n            columnNumber: 13\n          }, this), _jsxDEV(TextInput, {\n            placeholder: \"Unit price\",\n            placeholderTextColor: palette.muted,\n            value: price,\n            onChangeText: setPrice,\n            keyboardType: \"numeric\",\n            style: {\n              flex: 1,\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2784,\n            columnNumber: 13\n          }, this), _jsxDEV(QuickAction, {\n            label: \"Add\",\n            onPress: addItem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2800,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2767,\n          columnNumber: 11\n        }, this), items.length === 0 ? _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: \"No line items yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2803,\n          columnNumber: 13\n        }, this) : items.map((item, idx) => _jsxDEV(SurfaceCard, {\n          style: {\n            marginBottom: spacing(1.5)\n          },\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.text,\n              fontWeight: '600'\n            },\n            children: item.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2807,\n            columnNumber: 17\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.5)\n            },\n            children: [\"Qty \", item.qty, \" x $\", parseFloat(item.unitPrice || 0).toFixed(2), \" = \", (parseFloat(item.qty || 0) * parseFloat(item.unitPrice || 0)).toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2808,\n            columnNumber: 17\n          }, this)]\n        }, item.id || idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2806,\n          columnNumber: 15\n        }, this)), _jsxDEV(View, {\n          style: {\n            marginTop: spacing(2),\n            borderTopWidth: 1,\n            borderTopColor: palette.border,\n            paddingTop: spacing(2)\n          },\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.muted\n            },\n            children: \"Tax rate (%)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2815,\n            columnNumber: 13\n          }, this), _jsxDEV(TextInput, {\n            value: String(taxRate),\n            onChangeText: setTaxRate,\n            keyboardType: \"numeric\",\n            placeholderTextColor: palette.muted,\n            style: {\n              marginTop: spacing(1),\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2816,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: {\n              marginTop: spacing(2)\n            },\n            children: [_jsxDEV(Text, {\n              style: {\n                color: palette.text\n              },\n              children: [\"Subtotal: $\", subtotal.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2832,\n              columnNumber: 15\n            }, this), _jsxDEV(Text, {\n              style: {\n                color: palette.text\n              },\n              children: [\"Tax: $\", tax.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2833,\n              columnNumber: 15\n            }, this), _jsxDEV(Text, {\n              style: {\n                color: palette.text,\n                fontWeight: '700'\n              },\n              children: [\"Total: $\", total.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2834,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2831,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2814,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2750,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontSize: typography.h2,\n            fontWeight: '700',\n            marginBottom: spacing(1.5)\n          },\n          children: \"Attachments & notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2840,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Internal notes\",\n          placeholderTextColor: palette.muted,\n          value: notes,\n          onChangeText: setNotes,\n          multiline: true,\n          style: {\n            borderWidth: 1,\n            borderColor: palette.border,\n            borderRadius: 12,\n            padding: spacing(2),\n            minHeight: 100,\n            color: palette.text,\n            backgroundColor: palette.surfaceMuted,\n            textAlignVertical: 'top'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2841,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            columnGap: spacing(1.5),\n            marginTop: spacing(1.5)\n          },\n          children: _jsxDEV(QuickAction, {\n            label: \"Add photo\",\n            onPress: pickPhoto\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2859,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2858,\n          columnNumber: 11\n        }, this), photoUrl ? _jsxDEV(Image, {\n          source: {\n            uri: photoUrl\n          },\n          style: {\n            height: 160,\n            borderRadius: 12,\n            marginTop: spacing(2)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2862,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2839,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2712,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 2711,\n    columnNumber: 5\n  }, this);\n}\nfunction ScheduleScreen({\n  navigation\n}) {\n  const {\n    token\n  } = useAuth();\n  const [jobs, setJobs] = useState([]);\n  const [filter, setFilter] = useState('ALL');\n  const [queueCount, setQueueCount] = useState(0);\n  const [syncing, setSyncing] = useState(false);\n  const loadQueueCount = useCallback(() => {\n    db.transaction(tx => tx.executeSql('SELECT COUNT(*) as c FROM queue', [], (_, {\n      rows\n    }) => setQueueCount(rows._array?.[0]?.c || 0)));\n  }, []);\n  const load = useCallback(async () => {\n    try {\n      const data = await api('/jobs', 'GET', null, token);\n      setJobs(data);\n      db.transaction(tx => {\n        tx.executeSql('DELETE FROM jobs_cache;');\n        data.forEach(j => tx.executeSql('INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)', [j.id, j.name || '', j.status || 'SCHEDULED', j.startDate || '', j.endDate || '', j.notes || '']));\n      });\n    } catch (e) {\n      db.transaction(tx => tx.executeSql('SELECT id, name, status, startDate, endDate, notes FROM jobs_cache', [], (_, {\n        rows\n      }) => setJobs(rows._array || [])));\n    }\n  }, [token]);\n  useEffect(() => {\n    load();\n    loadQueueCount();\n  }, [load, loadQueueCount]);\n  const filters = [{\n    key: 'ALL',\n    label: 'All'\n  }, {\n    key: 'TODAY',\n    label: 'Today'\n  }, {\n    key: 'WEEK',\n    label: 'This week'\n  }];\n  const inRange = useCallback(dateValue => {\n    if (filter === 'ALL') return true;\n    if (!dateValue) return false;\n    const today = new Date();\n    const dt = new Date(dateValue);\n    if (Number.isNaN(dt.getTime())) return false;\n    if (filter === 'TODAY') {\n      return dt.getFullYear() === today.getFullYear() && dt.getMonth() === today.getMonth() && dt.getDate() === today.getDate();\n    }\n    const start = new Date(today);\n    start.setHours(0, 0, 0, 0);\n    start.setDate(today.getDate() - today.getDay());\n    const end = new Date(start);\n    end.setDate(start.getDate() + 6);\n    return dt >= start && dt <= end;\n  }, [filter]);\n  const filteredJobs = useMemo(() => jobs.filter(job => inRange(job.startDate)).sort((a, b) => new Date(a.startDate || 0) - new Date(b.startDate || 0)), [jobs, inRange]);\n  const handleSync = useCallback(async () => {\n    setSyncing(true);\n    try {\n      await processQueue(token);\n      await load();\n      loadQueueCount();\n    } finally {\n      setSyncing(false);\n    }\n  }, [token, load, loadQueueCount]);\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(6)\n      },\n      children: [_jsxDEV(Text, {\n        style: {\n          color: palette.text,\n          fontSize: typography.h1,\n          fontWeight: '700',\n          marginBottom: spacing(2)\n        },\n        children: \"Schedule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2942,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          columnGap: spacing(1),\n          rowGap: spacing(1.5),\n          marginBottom: spacing(2)\n        },\n        children: filters.map(option => _jsxDEV(QuickAction, {\n          label: option.label,\n          tone: filter === option.key ? 'primary' : 'muted',\n          onPress: () => setFilter(option.key)\n        }, option.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2945,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2943,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3),\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        children: [_jsxDEV(View, {\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.text,\n              fontWeight: '600'\n            },\n            children: \"Offline queue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2955,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.5)\n            },\n            children: [queueCount, \" items waiting to sync\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2956,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2954,\n          columnNumber: 11\n        }, this), _jsxDEV(QuickAction, {\n          label: syncing ? 'Syncing...' : 'Sync now',\n          tone: syncing ? 'muted' : 'primary',\n          onPress: syncing ? undefined : handleSync\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2958,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2953,\n        columnNumber: 9\n      }, this), filteredJobs.length === 0 ? _jsxDEV(SurfaceCard, {\n        children: _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: [\"No jobs \", filter !== 'ALL' ? 'in this range' : 'scheduled yet', \". Convert a lead or create a job to populate your schedule.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2963,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2962,\n        columnNumber: 11\n      }, this) : filteredJobs.map(job => {\n        const jobsite = job.Jobsite || {};\n        const addressParts = [jobsite.addressLine1, jobsite.addressLine2, [jobsite.city, jobsite.state].filter(Boolean).join(', '), jobsite.zip].filter(Boolean);\n        const address = addressParts.join(', ');\n        const startLabel = job.startDate ? `Starts ${formatDate(job.startDate)}` : 'No start date';\n        const endLabel = job.endDate ? ` - Due ${formatDate(job.endDate)}` : '';\n        return _jsxDEV(SurfaceCard, {\n          style: {\n            marginBottom: spacing(2)\n          },\n          children: [_jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center'\n            },\n            children: [_jsxDEV(Text, {\n              style: {\n                color: palette.text,\n                fontSize: typography.h2,\n                fontWeight: '600'\n              },\n              children: job.name || `Job #${job.id}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2980,\n              columnNumber: 19\n            }, this), _jsxDEV(StatusPill, {\n              status: job.status || 'SCHEDULED'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2981,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2979,\n            columnNumber: 17\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.5)\n            },\n            children: [startLabel, endLabel]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2983,\n            columnNumber: 17\n          }, this), address ? _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(1)\n            },\n            children: address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2986,\n            columnNumber: 28\n          }, this) : null, job.notes ? _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(1)\n            },\n            children: job.notes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2987,\n            columnNumber: 30\n          }, this) : null, _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              flexWrap: 'wrap',\n              columnGap: spacing(1),\n              rowGap: spacing(1),\n              marginTop: spacing(2)\n            },\n            children: [_jsxDEV(QuickAction, {\n              label: \"Open job\",\n              onPress: () => navigation.navigate('JobDetail', {\n                jobId: job.id\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2989,\n              columnNumber: 19\n            }, this), _jsxDEV(QuickAction, {\n              label: \"View tasks\",\n              onPress: () => navigation.navigate('JobDetail', {\n                jobId: job.id,\n                tab: 'tasks'\n              }),\n              tone: \"muted\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2990,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2988,\n            columnNumber: 17\n          }, this)]\n        }, job.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2978,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2941,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 2940,\n    columnNumber: 5\n  }, this);\n}\nfunction ProfileScreen({\n  navigation\n}) {\n  const {\n    setToken,\n    user\n  } = useAuth();\n  const isAdmin = (user?.role || '').toUpperCase() === 'ADMIN';\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(6)\n      },\n      children: [_jsxDEV(Text, {\n        style: {\n          color: palette.text,\n          fontSize: typography.h1,\n          fontWeight: '700',\n          marginBottom: spacing(2)\n        },\n        children: \"Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3006,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontSize: typography.small,\n            textTransform: 'uppercase',\n            fontWeight: '600'\n          },\n          children: \"Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3008,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontSize: typography.h2,\n            fontWeight: '700',\n            marginTop: spacing(1)\n          },\n          children: user?.name || user?.fullName || 'Team member'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3009,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(0.5)\n          },\n          children: user?.email || 'No email on file'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3010,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(0.5)\n          },\n          children: [\"Role: \", user?.role || 'TECH']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3011,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3007,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontSize: typography.small,\n            textTransform: 'uppercase',\n            fontWeight: '600',\n            marginBottom: spacing(1.5)\n          },\n          children: \"Actions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3015,\n          columnNumber: 11\n        }, this), isAdmin ? _jsxDEV(View, {\n          style: {\n            marginBottom: spacing(1.5)\n          },\n          children: _jsxDEV(QuickAction, {\n            label: \"Manage users\",\n            onPress: () => navigation.navigate('UsersAdmin')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3018,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3017,\n          columnNumber: 13\n        }, this) : null, _jsxDEV(QuickAction, {\n          label: \"Sign out\",\n          tone: \"danger\",\n          onPress: () => setToken(null)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3021,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3014,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 3005,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3004,\n    columnNumber: 5\n  }, this);\n}\nconst Stack = createNativeStackNavigator();\nconst Tabs = createBottomTabNavigator();\nfunction TabsNav() {\n  const {\n    user\n  } = useAuth();\n  const isAdmin = (user?.role || '').toUpperCase() === 'ADMIN';\n  return _jsxDEV(Tabs.Navigator, {\n    screenOptions: {\n      headerShown: false,\n      tabBarActiveTintColor: palette.primary,\n      tabBarStyle: {\n        backgroundColor: '#fff'\n      }\n    },\n    children: [_jsxDEV(Tabs.Screen, {\n      name: \"Dashboard\",\n      component: DashboardScreen,\n      options: {\n        title: 'Home'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3041,\n      columnNumber: 7\n    }, this), _jsxDEV(Tabs.Screen, {\n      name: \"Leads\",\n      component: LeadsScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3042,\n      columnNumber: 7\n    }, this), _jsxDEV(Tabs.Screen, {\n      name: \"Jobs\",\n      component: JobsKanbanScreen,\n      options: {\n        title: 'Jobs'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3043,\n      columnNumber: 7\n    }, this), isAdmin ? _jsxDEV(Tabs.Screen, {\n      name: \"Invoices\",\n      component: InvoicesScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3044,\n      columnNumber: 18\n    }, this) : null, _jsxDEV(Tabs.Screen, {\n      name: \"Schedule\",\n      component: ScheduleScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3045,\n      columnNumber: 7\n    }, this), _jsxDEV(Tabs.Screen, {\n      name: \"Profile\",\n      component: ProfileScreen,\n      options: {\n        title: \"Profile\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3046,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 3034,\n    columnNumber: 5\n  }, this);\n}\nfunction LoginScreen() {\n  const [email, setEmail] = useState('admin@example.com');\n  const [password, setPassword] = useState('test123');\n  const [busy, setBusy] = useState(false);\n  const {\n    setToken,\n    setUser\n  } = useAuth();\n  async function login() {\n    try {\n      setBusy(true);\n      const res = await fetch(`${API_URL}/auth/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await res.json();\n      if (!res.ok) throw new Error(data?.message || data?.error || 'Login failed');\n      const tok = data.token || data.accessToken;\n      if (!tok) throw new Error('No token returned from server');\n      const normalizedUser = data.user ? Object.assign({}, data.user, {\n        role: normalizeRole(data.user.role)\n      }) : {\n        email,\n        role: 'ADMIN',\n        name: 'Admin'\n      };\n      setToken(tok);\n      setUser(normalizedUser);\n      try {\n        await SecureStore.setItemAsync('auth_token', tok);\n        await SecureStore.setItemAsync('auth_user', JSON.stringify(normalizedUser));\n      } catch {}\n      Alert.alert('Welcome', 'Logged in');\n    } catch (e) {\n      Alert.alert('Error', e.message);\n    } finally {\n      setBusy(false);\n    }\n  }\n  return _jsxDEV(View, {\n    style: {\n      flex: 1,\n      padding: 20,\n      justifyContent: 'center'\n    },\n    children: [_jsxDEV(Text, {\n      style: {\n        fontSize: 24,\n        marginBottom: 16\n      },\n      children: \"PrecisionTracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3095,\n      columnNumber: 7\n    }, this), _jsxDEV(TextInput, {\n      placeholder: \"Email\",\n      autoCapitalize: \"none\",\n      value: email,\n      onChangeText: setEmail,\n      style: {\n        borderWidth: 1,\n        padding: 12,\n        marginBottom: 12\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3096,\n      columnNumber: 7\n    }, this), _jsxDEV(TextInput, {\n      placeholder: \"Password\",\n      secureTextEntry: true,\n      value: password,\n      onChangeText: setPassword,\n      style: {\n        borderWidth: 1,\n        padding: 12,\n        marginBottom: 12\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3103,\n      columnNumber: 7\n    }, this), _jsxDEV(Button, {\n      title: busy ? 'Signing in...' : 'Sign in',\n      onPress: login,\n      disabled: busy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 3094,\n    columnNumber: 5\n  }, this);\n}\nexport default function App() {\n  const [token, setToken] = useState(null);\n  const [user, setUser] = useState(null);\n  const [booting, setBooting] = useState(true);\n  useEffect(() => {\n    let mounted = true;\n    (async () => {\n      try {\n        const [tok, usr] = await Promise.all([SecureStore.getItemAsync('auth_token'), SecureStore.getItemAsync('auth_user')]);\n        if (mounted && tok) {\n          setToken(tok);\n          if (usr) {\n            const parsed = JSON.parse(usr);\n            parsed.role = normalizeRole(parsed.role);\n            setUser(parsed);\n          }\n        }\n      } catch {} finally {\n        if (mounted) setBooting(false);\n      }\n    })();\n    return () => {\n      mounted = false;\n    };\n  }, []);\n  const authValue = {\n    token,\n    setToken: t => {\n      setToken(t);\n      if (!t) {\n        try {\n          SecureStore.deleteItemAsync('auth_token');\n          SecureStore.deleteItemAsync('auth_user');\n        } catch {}\n      }\n    },\n    user,\n    setUser\n  };\n  if (booting) {\n    return _jsxDEV(SafeAreaView, {\n      style: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: _jsxDEV(Text, {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3156,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3155,\n      columnNumber: 7\n    }, this);\n  }\n  return _jsxDEV(AuthContext.Provider, {\n    value: authValue,\n    children: _jsxDEV(NavigationContainer, {\n      children: !token ? _jsxDEV(Stack.Navigator, {\n        children: _jsxDEV(Stack.Screen, {\n          name: \"Login\",\n          component: LoginScreen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3166,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3165,\n        columnNumber: 11\n      }, this) : _jsxDEV(Stack.Navigator, {\n        children: [_jsxDEV(Stack.Screen, {\n          name: \"Tabs\",\n          component: TabsNav,\n          options: {\n            headerShown: false\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3170,\n          columnNumber: 13\n        }, this), _jsxDEV(Stack.Screen, {\n          name: \"NewLead\",\n          component: NewLeadScreen,\n          options: {\n            title: 'New Lead'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3171,\n          columnNumber: 13\n        }, this), _jsxDEV(Stack.Screen, {\n          name: \"EstimateEditor\",\n          component: EstimateEditorScreen,\n          options: {\n            title: 'Estimate'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3172,\n          columnNumber: 13\n        }, this), _jsxDEV(Stack.Screen, {\n          name: \"Signature\",\n          component: SignatureScreen,\n          options: {\n            title: 'Signature'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3173,\n          columnNumber: 13\n        }, this), _jsxDEV(Stack.Screen, {\n          name: \"UsersAdmin\",\n          component: UsersAdminScreen,\n          options: {\n            title: 'Users (Admin)'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3174,\n          columnNumber: 13\n        }, this), _jsxDEV(Stack.Screen, {\n          name: \"JobDetail\",\n          component: JobDetailScreen,\n          options: {\n            title: 'Job'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3175,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3169,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3163,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3162,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"names":["React","useEffect","useState","createContext","useContext","useRef","useCallback","useMemo","NavigationContainer","useFocusEffect","createNativeStackNavigator","createBottomTabNavigator","Text","TextInput","Button","FlatList","TouchableOpacity","SafeAreaView","Alert","Image","ScrollView","RefreshControl","ActivityIndicator","Modal","ImagePicker","FileSystem","SQLite","Svg","Path","ViewShot","Platform","View","SecureStore","DateTimePicker","DateTimePickerAndroid","jsxDEV","_jsxDEV","API_URL","process","env","EXPO_PUBLIC_API_URL","initOfflineTables","database","transaction","tx","executeSql","e","db","getDb","OS","fn","execAsync","runAsync","openDatabaseSync","dbHandle","normalizeRole","role","r","String","toUpperCase","includes","AuthContext","useAuth","api","path","method","body","token","headers","Object","assign","Authorization","response","fetch","JSON","stringify","undefined","networkError","Error","message","contentType","get","rawBody","text","data","parse","ok","error","palette","background","surface","surfaceMuted","border","muted","primary","primaryStrong","success","warning","danger","info","spacing","step","typography","h1","h2","small","floatingShadow","select","ios","shadowColor","shadowOpacity","shadowRadius","shadowOffset","width","height","android","elevation","default","pillTone","NEW","fg","bg","label","CONTACTED","ESTIMATING","CONVERTED","CLOSED_LOST","SCHEDULED","IN_PROGRESS","COMPLETE","DONE","ON_HOLD","CANCELLED","DRAFT","SENT","PART_PAID","PAID","VOID","toneMap","formInputBaseStyle","borderWidth","borderColor","borderRadius","paddingVertical","paddingHorizontal","color","backgroundColor","fontSize","marginBottom","FormInput","forwardRef","props","ref","placeholderTextColor","style","fileName","_jsxFileName","lineNumber","columnNumber","displayName","formatCurrency","value","amount","Number","isNaN","toLocaleString","minimumFractionDigits","maximumFractionDigits","formatDate","d","Date","getTime","toLocaleDateString","month","day","isTaskCompleted","status","key","SurfaceCard","children","onPress","content","padding","activeOpacity","StatusPill","cfg","fontWeight","SummaryCard","title","subtitle","tone","colors","textTransform","marginTop","SectionHeader","actionLabel","onAction","flexDirection","justifyContent","alignItems","QuickAction","toneStyles","textColor","toInputDate","dateValue","yyyy","getFullYear","mm","getMonth","padStart","dd","getDate","parseInputDate","parsed","DateInputField","onChange","placeholder","minimumDate","maximumDate","iosPickerVisible","setIosPickerVisible","isWeb","toDateOnly","input","datePart","split","normalizedValue","minDateString","maxDateString","displayLabel","applyDate","selectedDate","handleManualChange","openPicker","baseDate","open","mode","event","selected","type","containerStyle","onChangeText","nativeEvent","target","min","max","flex","display","TECH_ASSIGN_ROLES","TechSelector","team","onSelect","allowAllRoles","allowClear","options","normalized","map","member","filter","length","renderLabel","flexWrap","columnGap","rowGap","id","fullName","email","shortLabel","slice","DashboardScreen","navigation","loading","setLoading","refreshing","setRefreshing","leads","setLeads","jobs","setJobs","tasks","setTasks","invoiceSummary","setInvoiceSummary","lastUpdated","setLastUpdated","jobLookup","job","loadData","isPullRefresh","fetchLeads","forEach","l","description","Promise","resolve","_","rows","fallback","_array","fetchJobs","j","name","startDate","endDate","notes","fetchTasks","t","jobId","dueDate","fetchInvoiceSummary","all","onRefresh","newLeads","activeJobs","openTasks","outstandingValue","outstanding","collectedValue","collected","overdueCount","topLeads","topJobs","nextTasks","contentContainerStyle","paddingBottom","refreshControl","tintColor","flexBasis","navigate","idx","startLabel","endLabel","Boolean","join","numberOfLines","tab","lead","leadId","task","textAlign","toLocaleTimeString","hour","minute","SignaturePad","onCapturePng","points","setPoints","setPath","shotRef","format","quality","result","onStartShouldSetResponder","onResponderMove","x","locationX","y","locationY","p","onResponderRelease","base64","current","capture","stroke","strokeWidth","fill","SignatureScreen","route","estimateId","params","sigPng","setSigPng","save","alert","resp","signaturePngUrl","paymentLink","goBack","userRoleOptions","invoiceStatusOptions","UsersAdminScreen","users","setUsers","setEmail","setFullName","setRole","inviting","setInviting","load","Array","isArray","resetForm","invite","trimmedEmail","trim","toLowerCase","trimmedName","promote","newRole","remove","renderRolePill","roleCfg","find","option","renderRoleSelector","selectedRole","keyExtractor","u","ListHeaderComponent","autoCapitalize","keyboardType","disabled","opacity","ListEmptyComponent","renderItem","item","normalizedRole","InvoicesScreen","user","summary","setSummary","invoices","setInvoices","setFilter","isRefresh","summaryData","list","filters","filteredInvoices","inv","drafts","draftAmount","minWidth","totalCount","f","payments","Payments","reduce","sum","balance","Math","statusKey","number","issuedAt","dueAt","JobsKanbanScreen","newJobName","setNewJobName","newJobStartDate","setNewJobStartDate","newJobDueDate","setNewJobDueDate","newJobNotes","setNewJobNotes","newCustomerName","setNewCustomerName","newCustomerPhone","setNewCustomerPhone","newCustomerEmail","setNewCustomerEmail","newAddressLine1","setNewAddressLine1","newAddressLine2","setNewAddressLine2","newCity","setNewCity","newStateCode","setNewStateCode","newZip","setNewZip","jobFormTab","setJobFormTab","statusOrder","createJob","hasCustomer","some","v","hasAddress","payload","customer","phone","billingAddress","jobsite","addressLine1","addressLine2","city","state","zip","created","prev","updateJobStatus","updated","removeJob","sortedJobs","normalize","rank","indexOf","parseDateSafe","sort","a","b","statusDiff","startA","startB","groupedJobs","groups","currentStatus","push","statusLabel","charAt","quickStatusActions","inputStyle","jobTabs","renderJobFormFields","multiline","minHeight","textAlignVertical","group","Customer","Jobsite","addressParts","address","action","JobDetailScreen","jobName","setJobName","jobStartDate","setJobStartDate","jobEndDate","setJobEndDate","jobNotes","setJobNotes","jobCustomerName","setJobCustomerName","jobCustomerPhone","setJobCustomerPhone","jobCustomerEmail","setJobCustomerEmail","jobAddressLine1","setJobAddressLine1","jobAddressLine2","setJobAddressLine2","jobCity","setJobCity","jobStateCode","setJobStateCode","jobZip","setJobZip","changeOrders","setCO","setTitle","amountDelta","setAmountDelta","roleKey","canManageChangeOrders","loadCO","loadJob","addCO","parseFloat","saveJobDetails","deleteJob","screen","statusTone","amountLabel","JobTasks","JobSchedule","setDueDate","add","done","events","setEvents","startAt","setStartAt","endAt","setEndAt","ev","date","existing","timePartIndex","timePart","substring","processQueue","items","q","dataUrl","txx","LeadsScreen","deleteLead","err","newLeadsCount","renderLeadCard","NewLeadScreen","setDescription","setStatus","customerName","setCustomerName","customerPhone","setCustomerPhone","customerEmail","setCustomerEmail","setAddressLine1","setAddressLine2","setCity","stateCode","setStateCode","setZip","showCustomerSection","setShowCustomerSection","showJobsiteSection","setShowJobsiteSection","statuses","buildPayload","createLeadOnline","replace","queueLead","submit","chipStyle","active","s","EstimateEditorScreen","setEstimateId","setItems","desc","setDesc","qty","setQty","price","setPrice","setNotes","photoUrl","setPhotoUrl","subtotal","setSubtotal","taxRate","setTaxRate","tax","setTax","total","setTotal","leadDetails","setLeadDetails","leadStatus","setLeadStatus","leadScope","setLeadScope","leadCustomerName","setLeadCustomerName","leadCustomerPhone","setLeadCustomerPhone","leadCustomerEmail","setLeadCustomerEmail","leadAddressLine1","setLeadAddressLine1","leadAddressLine2","setLeadAddressLine2","leadCity","setLeadCity","leadStateCode","setLeadStateCode","leadZip","setLeadZip","leadStatuses","loadLead","createEstimate","est","customerId","jobsiteId","ensureEstimate","rate","newSubtotal","unitPrice","newTax","addItem","targetId","saveLeadDetails","customerPayload","jobsitePayload","pickPhoto","launchImageLibraryAsync","allowsEditing","canceled","assets","uri","toFixed","borderTopWidth","borderTopColor","paddingTop","source","ScheduleScreen","queueCount","setQueueCount","syncing","setSyncing","loadQueueCount","c","inRange","today","dt","start","setHours","setDate","getDay","end","filteredJobs","handleSync","ProfileScreen","setToken","isAdmin","Stack","Tabs","TabsNav","Navigator","screenOptions","headerShown","tabBarActiveTintColor","tabBarStyle","Screen","component","LoginScreen","password","setPassword","busy","setBusy","setUser","login","res","json","tok","accessToken","normalizedUser","setItemAsync","secureTextEntry","App","booting","setBooting","mounted","usr","getItemAsync","authValue","deleteItemAsync","Provider"],"sources":["C:/Users/Tyler/Downloads/PrecisionTracker-v4-wired/PrecisionTracker/mobile/App.js"],"sourcesContent":["\r\nimport React, { useEffect, useState, createContext, useContext, useRef, useCallback, useMemo } from 'react';\r\nimport { NavigationContainer, useFocusEffect } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport {Text, TextInput, Button, FlatList, TouchableOpacity, SafeAreaView, Alert, Image, ScrollView, RefreshControl, ActivityIndicator, Modal } from 'react-native';\nimport * as ImagePicker from 'expo-image-picker';\r\nimport * as FileSystem from 'expo-file-system';\r\nimport * as SQLite from 'expo-sqlite';\r\nimport Svg, { Path } from 'react-native-svg';\r\nimport ViewShot from 'react-native-view-shot';\r\nimport { Platform, View } from 'react-native';\r\nimport * as SecureStore from 'expo-secure-store';\r\nimport DateTimePicker, { DateTimePickerAndroid } from '@react-native-community/datetimepicker';\r\n// import * as SQLite from 'expo-sqlite';\r\n\r\n\r\nconst API_URL = process.env.EXPO_PUBLIC_API_URL || 'http://localhost:4000';\r\n// const db = SQLite.openDatabase('offline.db');\r\n\r\n// function initDB(){\r\n//   db.transaction(tx => {\r\n//     tx.executeSql('CREATE TABLE IF NOT EXISTS queue (id INTEGER PRIMARY KEY AUTOINCREMENT, type TEXT, payload TEXT);');\r\n//     tx.executeSql('CREATE TABLE IF NOT EXISTS uploads (id INTEGER PRIMARY KEY AUTOINCREMENT, dataUrl TEXT);');\r\n//     tx.executeSql('CREATE TABLE IF NOT EXISTS leads_cache (id INTEGER PRIMARY KEY, description TEXT, status TEXT);');\r\n//   });\r\n// }\r\n\r\nfunction initOfflineTables(database){\r\n  try {\r\n    if (!database || typeof database.transaction !== 'function') return;\r\n    database.transaction(tx => {\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS queue (id INTEGER PRIMARY KEY AUTOINCREMENT, type TEXT, payload TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS uploads (id INTEGER PRIMARY KEY AUTOINCREMENT, dataUrl TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS leads_cache (id INTEGER PRIMARY KEY, description TEXT, status TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS jobs_cache (id INTEGER PRIMARY KEY, name TEXT, status TEXT, startDate TEXT, endDate TEXT, notes TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS tasks_cache (id INTEGER PRIMARY KEY, jobId INTEGER, title TEXT, status TEXT, dueDate TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS calendar_cache (id INTEGER PRIMARY KEY, jobId INTEGER, title TEXT, startAt TEXT, endAt TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS estimates_cache (id INTEGER PRIMARY KEY, leadId INTEGER, subtotal REAL, taxRate REAL, total REAL, status TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS estimate_items_cache (id INTEGER PRIMARY KEY, estimateId INTEGER, description TEXT, qty REAL, unitPrice REAL);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS change_orders_cache (id INTEGER PRIMARY KEY, jobId INTEGER, title TEXT, amountDelta REAL, status TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS users_cache (id INTEGER PRIMARY KEY, email TEXT, fullName TEXT, role TEXT);');\r\n    });\r\n  } catch (e) {\r\n    // best-effort; avoid noisy alerts in offline mode\r\n  }\r\n}\r\n\r\nlet db;\r\nexport function getDb() {\r\n  if (db) return db;\r\n\r\n  // Web: safe no-op DB\r\n  if (Platform.OS === 'web') {\r\n    db = {\r\n      transaction: (fn) => fn({ executeSql: () => {} }),\r\n      execAsync: async () => {},\r\n      runAsync: async () => {},\r\n    };\r\n    return db;\r\n  }\r\n\r\n  // SDK 51+: prefer sync, then async; DO NOT reference openDatabase (removed)\r\n  if ('openDatabaseSync' in SQLite) {\r\n    db = SQLite.openDatabaseSync('offline.db');\r\n    return db;\r\n  }\r\n\r\n  if ('openDatabaseAsync' in SQLite) {\r\n    // Minimal adapter so existing code won't crash; refactor later if needed\r\n    db = {\r\n      transaction: (fn) => fn({ executeSql: () => {} }),\r\n      execAsync: async () => {},\r\n      runAsync: async () => {},\r\n    };\r\n    return db;\r\n  }\r\n\r\n  // Safety fallback\r\n  db = {\r\n    transaction: (fn) => fn({ executeSql: () => {} }),\r\n    execAsync: async () => {},\r\n    runAsync: async () => {},\r\n  };\r\n  return db;\r\n}\r\n\r\n// DB handle\r\nconst dbHandle = getDb();\r\ninitOfflineTables(dbHandle);\r\n\r\n// ---------- Helpers ----------\r\nconst normalizeRole = (role) => {\r\n  if (!role) return 'TECH';\r\n  const r = String(role).toUpperCase();\r\n  if (['ADMIN','ESTIMATOR','SUPERVISOR','TECH'].includes(r)) return r;\r\n  if (r === 'STANDARD' || r === 'USER') return 'TECH';\r\n  return r;\r\n};\r\n\r\nconst AuthContext = createContext(null);\r\nfunction useAuth(){ return useContext(AuthContext); }\r\nasync function api(path, method='GET', body, token){\n  const headers = {\n    ...(token ? { Authorization: `Bearer ${token}` } : {}),\n    ...(body ? { 'Content-Type': 'application/json' } : {}),\n  };\n  let response;\n  try {\n    response = await fetch(`${API_URL}${path}`, {\n      method,\n      headers,\n      body: body ? JSON.stringify(body) : undefined,\n    });\n  } catch (networkError) {\n    throw new Error(networkError?.message || 'Network request failed');\n  }\n\n  const contentType = response.headers.get('content-type') || '';\n  const rawBody = await response.text();\n  let data = null;\n\n  if (rawBody) {\n    if (contentType.includes('application/json')) {\n      try {\n        data = JSON.parse(rawBody);\n      } catch {\n        data = rawBody;\n      }\n    } else {\n      data = rawBody;\n    }\n  }\n\n  if (!response.ok) {\n    const message =\n      (data && typeof data === 'object' && (data.error || data.message)) ||\n      (typeof data === 'string' ? data : 'Request failed');\n    throw new Error(message);\n  }\n\n  return data;\n}\n\r\n// ---------- Design tokens ----------\r\nconst palette = {\r\n  background: '#f4f6f8',\r\n  surface: '#ffffff',\r\n  surfaceMuted: '#f1f5f9',\r\n  border: '#e2e8f0',\r\n  text: '#0f172a',\r\n  muted: '#5f6b7d',\r\n  primary: '#2c8a7d',\r\n  primaryStrong: '#1f6a60',\r\n  success: '#219653',\r\n  warning: '#f59e0b',\r\n  danger: '#d14343',\r\n  info: '#2563eb',\r\n};\r\n\r\nconst spacing = (step = 1) => step * 8;\r\n\r\nconst typography = {\r\n  h1: 24,\r\n  h2: 18,\r\n  body: 15,\r\n  small: 12,\r\n};\r\n\r\nconst floatingShadow = Platform.select({\r\n  ios: { shadowColor: '#0f172a', shadowOpacity: 0.08, shadowRadius: 14, shadowOffset: { width: 0, height: 6 } },\r\n  android: { elevation: 2 },\r\n  default: {},\r\n});\r\n\r\nconst pillTone = {\r\n  NEW: { fg: palette.info, bg: '#e6eeff', label: 'New' },\r\n  CONTACTED: { fg: palette.primary, bg: '#e6f4f2', label: 'Contacted' },\r\n  ESTIMATING: { fg: palette.warning, bg: '#fdf1d6', label: 'Estimating' },\r\n  CONVERTED: { fg: palette.success, bg: '#e6f6ec', label: 'Converted' },\r\n  CLOSED_LOST: { fg: palette.muted, bg: '#e2e8f0', label: 'Lost' },\r\n  SCHEDULED: { fg: palette.primary, bg: '#e6f4f2', label: 'Scheduled' },\r\n  IN_PROGRESS: { fg: palette.info, bg: '#e6eeff', label: 'In progress' },\r\n  COMPLETE: { fg: palette.success, bg: '#e6f6ec', label: 'Complete' },\r\n  DONE: { fg: palette.success, bg: '#e6f6ec', label: 'Complete' },\r\n  ON_HOLD: { fg: palette.warning, bg: '#fdf1d6', label: 'On hold' },\r\n  CANCELLED: { fg: palette.muted, bg: '#e2e8f0', label: 'Cancelled' },\r\n  DRAFT: { fg: palette.muted, bg: '#e2e8f0', label: 'Draft' },\r\n  SENT: { fg: palette.info, bg: '#e6eeff', label: 'Sent' },\r\n  PART_PAID: { fg: palette.warning, bg: '#fdf1d6', label: 'Part paid' },\r\n  PAID: { fg: palette.success, bg: '#e6f6ec', label: 'Paid' },\r\n  VOID: { fg: palette.muted, bg: '#f1f5f9', label: 'Void' },\r\n};\r\n\r\nconst toneMap = {\n  primary: { fg: palette.primaryStrong, bg: '#e0f3f0' },\n  success: { fg: palette.success, bg: '#e6f6ec' },\n  warning: { fg: palette.warning, bg: '#fdf1d6' },\n  danger: { fg: palette.danger, bg: '#fde4e4' },\n  info: { fg: palette.info, bg: '#e6eeff' },\n};\n\nconst formInputBaseStyle = {\n  borderWidth: 1,\n  borderColor: palette.border,\n  borderRadius: 12,\n  paddingVertical: spacing(1.5),\n  paddingHorizontal: spacing(2),\n  color: palette.text,\n  backgroundColor: palette.surfaceMuted,\n  fontSize: typography.body,\n  marginBottom: spacing(1.5),\n};\n\nconst FormInput = React.forwardRef((props, ref) => (\n  <TextInput\n    ref={ref}\n    placeholderTextColor={palette.muted}\n    {...props}\n    style={[formInputBaseStyle, props.style]}\n  />\n));\nFormInput.displayName = 'FormInput';\n\nconst formatCurrency = (value) => {\n  const amount = Number(value || 0);\n  if (Number.isNaN(amount)) return '$0';\n  return `$${amount.toLocaleString(undefined, { minimumFractionDigits: amount % 1 ? 2 : 0, maximumFractionDigits: 2 })}`;\n};\n\r\nconst formatDate = (value) => {\r\n  if (!value) return null;\r\n  const d = new Date(value);\r\n  if (Number.isNaN(d.getTime())) return value;\r\n  return d.toLocaleDateString(undefined, { month: 'short', day: 'numeric' });\r\n};\r\n\r\nconst isTaskCompleted = (status) => {\r\n  if (!status) return false;\r\n  const key = String(status).toUpperCase();\r\n  return key === 'DONE' || key === 'COMPLETE';\r\n};\r\n\r\nfunction SurfaceCard({ children, style, onPress }) {\r\n  const content = (\r\n    <View\r\n      style={[\r\n        { backgroundColor: palette.surface, borderRadius: 16, borderWidth: 1, borderColor: palette.border, padding: spacing(2) },\r\n        floatingShadow,\r\n        style,\r\n      ]}\r\n    >\r\n      {children}\r\n    </View>\r\n  );\r\n  if (!onPress) return content;\r\n  return (\r\n    <TouchableOpacity activeOpacity={0.85} onPress={onPress}>\r\n      {content}\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n\r\nfunction StatusPill({ status }) {\r\n  if (!status) return null;\r\n  const key = String(status).toUpperCase();\r\n  const cfg = pillTone[key] || { fg: palette.muted, bg: '#e2e8f0', label: status };\r\n  return (\r\n    <View style={{ backgroundColor: cfg.bg, borderRadius: 999, paddingHorizontal: spacing(1.5), paddingVertical: spacing(0.5) }}>\r\n      <Text style={{ color: cfg.fg, fontSize: typography.small, fontWeight: '600' }}>{cfg.label}</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction SummaryCard({ title, value, subtitle, tone = 'primary', onPress }) {\r\n  const colors = toneMap[tone] || toneMap.primary;\r\n  return (\r\n    <SurfaceCard\r\n      onPress={onPress}\r\n      style={{ backgroundColor: colors.bg, borderColor: 'transparent', padding: spacing(2.5) }}\r\n    >\r\n      <Text style={{ color: palette.muted, fontSize: typography.small, textTransform: 'uppercase', fontWeight: '700' }}>{title}</Text>\r\n      <Text style={{ color: colors.fg, fontSize: 28, fontWeight: '800', marginTop: spacing(0.5) }}>{value}</Text>\r\n      {subtitle ? <Text style={{ color: palette.muted, fontSize: typography.small, marginTop: spacing(0.5) }}>{subtitle}</Text> : null}\r\n    </SurfaceCard>\r\n  );\r\n}\r\n\r\nfunction SectionHeader({ title, actionLabel, onAction }) {\r\n  return (\r\n    <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', marginBottom: spacing(1.5) }}>\r\n      <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight: '700' }}>{title}</Text>\r\n      {actionLabel && onAction ? (\r\n        <TouchableOpacity onPress={onAction} style={{ paddingHorizontal: spacing(1), paddingVertical: spacing(0.5) }}>\r\n          <Text style={{ color: palette.primary, fontWeight: '600', fontSize: typography.small }}>{actionLabel}</Text>\r\n        </TouchableOpacity>\r\n      ) : null}\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction QuickAction({ label, onPress, tone = 'primary' }) {\r\n  const toneStyles = (() => {\r\n    switch (tone) {\r\n      case 'danger':\r\n        return { borderColor: '#fecdd3', backgroundColor: '#fee2e2', textColor: palette.danger };\r\n      case 'success':\r\n        return { borderColor: '#bbf7d0', backgroundColor: '#dcfce7', textColor: palette.success };\r\n      case 'warning':\r\n        return { borderColor: '#fde68a', backgroundColor: '#fef3c7', textColor: palette.warning };\r\n      case 'muted':\r\n        return { borderColor: palette.border, backgroundColor: palette.surface, textColor: palette.muted };\r\n      default:\r\n        return { borderColor: palette.border, backgroundColor: palette.surfaceMuted, textColor: palette.primary };\r\n    }\r\n  })();\r\n  return (\r\n    <TouchableOpacity\r\n      onPress={onPress}\r\n      activeOpacity={0.85}\r\n      style={{\r\n        borderRadius: 10,\r\n        paddingHorizontal: spacing(1.5),\r\n        paddingVertical: spacing(0.75),\r\n        borderWidth: 1,\r\n        borderColor: toneStyles.borderColor,\r\n        backgroundColor: toneStyles.backgroundColor,\r\n      }}\r\n    >\r\n      <Text style={{ color: toneStyles.textColor, fontWeight: '600', fontSize: typography.small }}>{label}</Text>\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n\r\nconst toInputDate = (dateValue) => {\r\n  const d = dateValue instanceof Date ? dateValue : new Date(dateValue);\r\n  if (Number.isNaN(d.getTime())) return '';\r\n  const yyyy = d.getFullYear();\r\n  const mm = String(d.getMonth() + 1).padStart(2, '0');\r\n  const dd = String(d.getDate()).padStart(2, '0');\r\n  return `${yyyy}-${mm}-${dd}`;\r\n};\r\n\r\nconst parseInputDate = (value) => {\r\n  if (!value) return null;\r\n  const parsed = new Date(value);\r\n  if (Number.isNaN(parsed.getTime())) return null;\r\n  return parsed;\r\n};\r\n\r\nfunction DateInputField({ value, onChange, placeholder = 'Select date', minimumDate, maximumDate, style }) {\n  const [iosPickerVisible, setIosPickerVisible] = useState(false);\n  const isWeb = Platform.OS === 'web';\n\n  const toDateOnly = (input) => {\n    if (!input) return '';\n    if (input instanceof Date) return toInputDate(input);\n    if (typeof input === 'string') {\n      const [datePart] = input.split('T');\n      return datePart;\n    }\n    return '';\n  };\n\n  const normalizedValue = toDateOnly(value);\n  const minDateString = minimumDate ? toDateOnly(minimumDate) : undefined;\n  const maxDateString = maximumDate ? toDateOnly(maximumDate) : undefined;\n  const parsed = parseInputDate(normalizedValue) || new Date();\n  const displayLabel = value ? (formatDate(value) || normalizedValue) : '';\n\n  const applyDate = (selectedDate) => {\n    if (!selectedDate) return;\n    onChange(toInputDate(selectedDate));\n  };\n\n  const handleManualChange = (text) => {\n    if (!text) {\n      onChange('');\n      return;\n    }\n    onChange(text);\n  };\n\n  const openPicker = () => {\n    if (isWeb) return;\n    const baseDate = parseInputDate(normalizedValue) || new Date();\n    if (Platform.OS === 'android') {\n      DateTimePickerAndroid.open({\n        value: baseDate,\n        mode: 'date',\n        minimumDate: minimumDate ? parseInputDate(minimumDate) || undefined : undefined,\n        maximumDate: maximumDate ? parseInputDate(maximumDate) || undefined : undefined,\n        onChange: (event, selected) => {\n          if (event.type === 'set' && selected) applyDate(selected);\n        },\n      });\n    } else {\n      setIosPickerVisible(true);\n    }\n  };\n\n  const containerStyle = [\n    { marginBottom: spacing(1.5) },\n    style,\n  ];\n\n  if (isWeb) {\n    return (\n      <View style={containerStyle}>\n        <TextInput\n          value={normalizedValue}\n          placeholder={placeholder}\n          placeholderTextColor={palette.muted}\n          onChangeText={handleManualChange}\n          onChange={event => handleManualChange(event?.nativeEvent?.text ?? event?.target?.value ?? '')}\n          style={[formInputBaseStyle, { marginBottom: 0 }]}\n          type=\"date\"\n          min={minDateString}\n          max={maxDateString}\n        />\n      </View>\n    );\n  }\n\n  return (\n    <View style={containerStyle}>\n      <TouchableOpacity\n        onPress={openPicker}\n        activeOpacity={0.85}\n        style={{\n          borderWidth: 1,\n          borderColor: palette.border,\n          borderRadius: 12,\n          backgroundColor: palette.surfaceMuted,\n          flexDirection: 'row',\n          alignItems: 'center',\n          paddingHorizontal: spacing(2),\n          paddingVertical: spacing(1.5),\n        }}\n      >\n        <Text style={{ flex: 1, color: displayLabel ? palette.text : palette.muted, fontSize: typography.body }}>\n          {displayLabel || placeholder}\n        </Text>\n        <Text style={{ fontSize: typography.h2 - 6, color: palette.muted }}>CAL</Text>\n      </TouchableOpacity>\n      {Platform.OS === 'ios' && iosPickerVisible ? (\n        <DateTimePicker\n          value={parsed}\n          mode=\"date\"\n          display=\"inline\"\n          onChange={(event, selected) => {\n            if (event.type === 'set' && selected) {\n              applyDate(selected);\n            }\n            if (event.type === 'dismissed') {\n              setIosPickerVisible(false);\n              return;\n            }\n            setIosPickerVisible(false);\n          }}\n          style={{ marginTop: spacing(1) }}\n          minimumDate={minimumDate ? parseInputDate(minimumDate) || undefined : undefined}\n          maximumDate={maximumDate ? parseInputDate(maximumDate) || undefined : undefined}\n        />\n      ) : null}\n    </View>\n  );\n}\n\nconst TECH_ASSIGN_ROLES = ['TECH','SUPERVISOR','ESTIMATOR'];\n\nfunction TechSelector({ team = [], value, onSelect, label, allowAllRoles, allowClear }) {\n  const options = useMemo(() => {\n    const normalized = team.map(member => ({\n      ...member,\n      role: normalizeRole(member.role),\n    }));\n    if (allowAllRoles) return normalized;\n    return normalized.filter(member => TECH_ASSIGN_ROLES.includes(member.role));\n  }, [team, allowAllRoles]);\n\n  if (!options.length) return null;\n\n  const renderLabel = label ? (\n    <Text style={{ color: palette.muted, fontSize: typography.small, marginBottom: spacing(1) }}>{label}</Text>\n  ) : null;\n\n  return (\n    <View style={{ marginTop: spacing(1.5) }}>\n      {renderLabel}\n      <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1) }}>\n        {options.map(member => {\n          const selected = member.id === value;\n          const displayName = member.fullName || member.email;\n          const shortLabel = displayName.length > 22 ? `${displayName.slice(0, 21)}…` : displayName;\n          return (\n            <QuickAction\n              key={member.id}\n              label={shortLabel}\n              tone={selected ? 'primary' : 'muted'}\n              onPress={() => onSelect(member.id)}\n            />\n          );\n        })}\n        {allowClear ? <QuickAction label=\"Clear\" tone=\"muted\" onPress={() => onSelect(null)} /> : null}\n      </View>\n    </View>\n  );\n}\n\nfunction DashboardScreen({ navigation }) {\n  const { token } = useAuth();\r\n  const [loading, setLoading] = useState(true);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [leads, setLeads] = useState([]);\r\n  const [jobs, setJobs] = useState([]);\r\n  const [tasks, setTasks] = useState([]);\r\n  const [invoiceSummary, setInvoiceSummary] = useState(null);\r\n  const [lastUpdated, setLastUpdated] = useState(null);\r\n\r\n  const jobLookup = useMemo(() => {\r\n    const map = {};\r\n    for (const job of jobs) {\r\n      if (job?.id != null) {\r\n        map[job.id] = job;\r\n      }\r\n    }\r\n    return map;\r\n  }, [jobs]);\r\n\r\n  const loadData = useCallback(async (isPullRefresh = false) => {\r\n    if (!token) return;\r\n    isPullRefresh ? setRefreshing(true) : setLoading(true);\r\n\r\n    const fetchLeads = async () => {\r\n      try {\r\n        const data = await api('/leads', 'GET', null, token);\r\n        setLeads(data);\r\n        db.transaction(tx => {\r\n          tx.executeSql && tx.executeSql('DELETE FROM leads_cache;');\r\n          data.forEach(l =>\r\n            tx.executeSql && tx.executeSql(\r\n              'INSERT OR REPLACE INTO leads_cache (id, description, status) VALUES (?,?,?)',\r\n              [l.id, l.description || '', l.status || 'NEW']\r\n            )\r\n          );\r\n        });\r\n        return data;\r\n      } catch (e) {\r\n        return await new Promise(resolve => {\r\n          db.transaction(tx =>\r\n            tx.executeSql && tx.executeSql(\r\n              'SELECT id, description, status FROM leads_cache',\r\n              [],\r\n              (_, { rows }) => {\r\n                const fallback = rows?._array || [];\r\n                setLeads(fallback);\r\n                resolve(fallback);\r\n              }\r\n            )\r\n          );\r\n        });\r\n      }\r\n    };\r\n\r\n    const fetchJobs = async () => {\r\n      try {\r\n        const data = await api('/jobs', 'GET', null, token);\r\n        setJobs(data);\r\n        db.transaction(tx => {\r\n          tx.executeSql && tx.executeSql('DELETE FROM jobs_cache;');\r\n          data.forEach(j =>\r\n            tx.executeSql && tx.executeSql(\r\n              'INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)',\r\n              [j.id, j.name || '', j.status || 'SCHEDULED', j.startDate || '', j.endDate || '', j.notes || '']\r\n            )\r\n          );\r\n        });\r\n        return data;\r\n      } catch (e) {\r\n        return await new Promise(resolve => {\r\n          db.transaction(tx =>\r\n            tx.executeSql && tx.executeSql(\r\n              'SELECT id, name, status, startDate, endDate, notes FROM jobs_cache',\r\n              [],\r\n              (_, { rows }) => {\r\n                const fallback = rows?._array || [];\r\n                setJobs(fallback);\r\n                resolve(fallback);\r\n              }\r\n            )\r\n          );\r\n        });\r\n      }\r\n    };\r\n\r\n    const fetchTasks = async () => {\r\n      try {\r\n        const data = await api('/tasks', 'GET', null, token);\r\n        setTasks(data);\r\n        db.transaction(tx => {\r\n          data.forEach(t =>\r\n            tx.executeSql && tx.executeSql(\r\n              'INSERT OR REPLACE INTO tasks_cache (id, jobId, title, status, dueDate) VALUES (?,?,?,?,?)',\r\n              [t.id, t.jobId || null, t.title || '', t.status || 'TODO', t.dueDate || '']\r\n            )\r\n          );\r\n        });\r\n        return data;\r\n      } catch (e) {\r\n        return await new Promise(resolve => {\r\n          db.transaction(tx =>\r\n            tx.executeSql && tx.executeSql(\r\n              'SELECT id, jobId, title, status, dueDate FROM tasks_cache ORDER BY id DESC',\r\n              [],\r\n              (_, { rows }) => {\r\n                const fallback = rows?._array || [];\r\n                setTasks(fallback);\r\n                resolve(fallback);\r\n              }\r\n            )\r\n          );\r\n        });\r\n      }\r\n    };\r\n\r\n    const fetchInvoiceSummary = async () => {\r\n      try {\r\n        const data = await api('/invoices/summary', 'GET', null, token);\r\n        setInvoiceSummary(data);\r\n        return data;\r\n      } catch (e) {\r\n        return null;\r\n      }\r\n    };\r\n\r\n    try {\r\n      await Promise.all([fetchLeads(), fetchJobs(), fetchTasks(), fetchInvoiceSummary()]);\r\n      setLastUpdated(new Date());\r\n    } finally {\r\n      isPullRefresh ? setRefreshing(false) : setLoading(false);\r\n    }\r\n  }, [token]);\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      loadData(false);\r\n    }, [loadData])\r\n  );\r\n\r\n  const onRefresh = useCallback(() => loadData(true), [loadData]);\r\n\r\n  const newLeads = leads.filter(l => (l.status || '').toUpperCase() === 'NEW').length;\r\n  const activeJobs = jobs.filter(j => ['SCHEDULED', 'IN_PROGRESS'].includes((j.status || '').toUpperCase())).length;\r\n  const openTasks = tasks.filter(t => !isTaskCompleted(t.status)).length;\r\n  const outstandingValue = invoiceSummary?.outstanding || 0;\r\n  const collectedValue = invoiceSummary?.collected || 0;\r\n  const overdueCount = invoiceSummary?.overdueCount || 0;\r\n\r\n  const topLeads = leads.slice(0, 3);\r\n  const topJobs = jobs.slice(0, 3);\r\n  const nextTasks = tasks.filter(t => !isTaskCompleted(t.status)).slice(0, 3);\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex: 1, backgroundColor: palette.background }}>\r\n      <ScrollView\r\n        contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(5) }}\r\n        refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} tintColor={palette.primary} />}\r\n      >\r\n        <Text style={{ color: palette.text, fontSize: typography.h1, fontWeight: '700', marginBottom: spacing(2) }}>Dashboard</Text>\r\n\r\n        <View style={{ flexDirection: 'row', flexWrap: 'wrap', justifyContent: 'space-between' }}>\r\n          <View style={{ flexBasis: '48%', marginBottom: spacing(2) }}>\r\n            <SummaryCard\r\n              title=\"Leads\"\r\n              value={leads.length}\r\n              subtitle={`${newLeads} new to triage`}\r\n              tone=\"info\"\r\n              onPress={() => navigation.navigate('Leads')}\r\n            />\r\n          </View>\r\n          <View style={{ flexBasis: '48%', marginBottom: spacing(2) }}>\r\n            <SummaryCard\r\n              title=\"Jobs\"\r\n              value={jobs.length}\r\n              subtitle={`${activeJobs} active`}\r\n              tone=\"primary\"\r\n              onPress={() => navigation.navigate('Jobs')}\r\n            />\r\n          </View>\r\n          <View style={{ flexBasis: '48%', marginBottom: spacing(2) }}>\r\n            <SummaryCard\r\n              title=\"Tasks\"\r\n              value={openTasks}\r\n              subtitle={`Open of ${tasks.length}`}\r\n              tone=\"warning\"\r\n              onPress={() => navigation.navigate('Jobs')}\r\n            />\r\n          </View>\r\n          <View style={{ flexBasis: '48%', marginBottom: spacing(2) }}>\r\n            <SummaryCard\r\n              title=\"Invoices\"\r\n              value={formatCurrency(outstandingValue)}\r\n              subtitle={`${overdueCount} overdue | ${formatCurrency(collectedValue)} collected`}\r\n              tone=\"success\"\r\n              onPress={() => navigation.navigate('Invoices')}\r\n            />\r\n          </View>\r\n        </View>\r\n\r\n        {loading && !refreshing ? (\r\n          <SurfaceCard style={{ alignItems: 'center', justifyContent: 'center', paddingVertical: spacing(6) }}>\r\n            <ActivityIndicator color={palette.primary} />\r\n            <Text style={{ color: palette.muted, marginTop: spacing(1.5) }}>Loading summary...</Text>\r\n          </SurfaceCard>\r\n        ) : null}\r\n\r\n        <SectionHeader title=\"Next Jobs\" actionLabel=\"View all\" onAction={() => navigation.navigate('Jobs')} />\r\n        <SurfaceCard style={{ marginBottom: spacing(3) }}>\r\n          {topJobs.length === 0 ? (\r\n            <Text style={{ color: palette.muted }}>No jobs yet. Create one from the Jobs tab.</Text>\r\n          ) : (\n            topJobs.map((job, idx) => {\n              const startLabel = job.startDate ? `Start ${formatDate(job.startDate)}` : null;\n              const endLabel = job.endDate ? `Due ${formatDate(job.endDate)}` : null;\n              return (\n                <View key={job.id || idx} style={{ marginBottom: idx === topJobs.length - 1 ? 0 : spacing(2.5) }}>\n                  <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center' }}>\n                    <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight: '600' }}>{job.name || `Job #${job.id}`}</Text>\n                    <StatusPill status={job.status || 'SCHEDULED'} />\n                  </View>\n                  {startLabel || endLabel ? (\n                    <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>\n                      {[startLabel, endLabel].filter(Boolean).join(' - ')}\n                    </Text>\n                  ) : null}\n                  {job.notes ? (\n                    <Text style={{ color: palette.muted, marginTop: spacing(1) }} numberOfLines={2}>{job.notes}</Text>\n                  ) : null}\n                  <View style={{ flexDirection: 'row', columnGap: spacing(1.5), marginTop: spacing(1.5) }}>\n                    <QuickAction label=\"Open job\" onPress={() => navigation.navigate('JobDetail', { jobId: job.id })} />\n                    <QuickAction label=\"Tasks\" onPress={() => navigation.navigate('JobDetail', { jobId: job.id, tab: 'tasks' })} />\n                  </View>\n                </View>\n              );\n            })\n          )}\n        </SurfaceCard>\r\n\r\n        <SectionHeader title=\"Hot Leads\" actionLabel=\"Leads\" onAction={() => navigation.navigate('Leads')} />\r\n        <SurfaceCard style={{ marginBottom: spacing(3) }}>\r\n          {topLeads.length === 0 ? (\r\n            <Text style={{ color: palette.muted }}>No leads yet. Capture leads to keep the funnel full.</Text>\r\n          ) : (\r\n            topLeads.map((lead, idx) => (\r\n              <View key={lead.id || idx} style={{ marginBottom: idx === topLeads.length - 1 ? 0 : spacing(2) }}>\r\n                <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                  <Text style={{ color: palette.text, fontWeight: '600', fontSize: typography.h2 }}>Lead #{lead.id}</Text>\r\n                  <StatusPill status={lead.status || 'NEW'} />\r\n                </View>\r\n                <Text style={{ color: palette.muted, marginTop: spacing(0.5) }} numberOfLines={3}>\r\n                  {lead.description || 'No scope captured yet.'}\r\n                </Text>\r\n                <View style={{ flexDirection: 'row', columnGap: spacing(1.5), marginTop: spacing(1.5) }}>\r\n                  <QuickAction label=\"Follow up\" onPress={() => navigation.navigate('EstimateEditor', { leadId: lead.id })} />\r\n                  <QuickAction label=\"Convert\" onPress={() => navigation.navigate('Jobs')} />\r\n                </View>\r\n              </View>\r\n            ))\r\n          )}\r\n        </SurfaceCard>\r\n\r\n        <SectionHeader title=\"Open Tasks\" actionLabel=\"Jobs\" onAction={() => navigation.navigate('Jobs')} />\r\n        <SurfaceCard>\r\n          {nextTasks.length === 0 ? (\r\n            <Text style={{ color: palette.muted }}>All clear. Add tasks from a job to keep crews aligned.</Text>\r\n          ) : (\r\n            nextTasks.map((task, idx) => (\r\n              <View key={task.id || idx} style={{ marginBottom: idx === nextTasks.length - 1 ? 0 : spacing(2) }}>\r\n                <Text style={{ color: palette.text, fontWeight: '600' }}>{task.title || 'Task'}</Text>\r\n                {task.jobId ? (\r\n                  <Text style={{ color: palette.muted, marginTop: spacing(0.25) }}>\r\n                    {jobLookup[task.jobId]?.name || `Job #${task.jobId}`}\r\n                  </Text>\r\n                ) : (\r\n                  <Text style={{ color: palette.muted, marginTop: spacing(0.25) }}>Unassigned job</Text>\r\n                )}\r\n                <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>\r\n                  {task.dueDate ? `Due ${formatDate(task.dueDate)}` : 'No due date'}\r\n                </Text>\r\n                <View style={{ flexDirection: 'row', columnGap: spacing(1.5), marginTop: spacing(1.5) }}>\r\n                  <QuickAction\r\n                    label=\"Mark done\"\r\n                    onPress={() => navigation.navigate('JobDetail', { jobId: task.jobId })}\r\n                  />\r\n                  <QuickAction\r\n                    label=\"View job\"\r\n                    onPress={() => navigation.navigate('JobDetail', { jobId: task.jobId })}\r\n                  />\r\n                </View>\r\n              </View>\r\n            ))\r\n          )}\r\n        </SurfaceCard>\r\n\r\n        {lastUpdated ? (\r\n          <Text style={{ color: palette.muted, fontSize: typography.small, marginTop: spacing(2), textAlign: 'center' }}>\r\n            Updated {lastUpdated.toLocaleTimeString([], { hour: 'numeric', minute: '2-digit' })}\r\n          </Text>\r\n        ) : null}\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\n// ---------- Signature Pad to PNG ----------\r\nfunction SignaturePad({ onCapturePng }){\r\n  const [points, setPoints] = useState([]);\r\n  const [path, setPath] = useState('');\r\n  const shotRef = useRef(null);\r\n  return (\r\n    <ViewShot ref={shotRef} options={{ format: 'png', quality: 0.9, result: 'base64' }} style={{ height:220, borderWidth:1, backgroundColor:'#fff' }}>\r\n      <View\r\n        onStartShouldSetResponder={()=>true}\r\n        onResponderMove={(e)=>{\r\n          const x = e.nativeEvent.locationX, y = e.nativeEvent.locationY;\r\n          setPath(p => p + (p ? ` L ${x} ${y}` : ` M ${x} ${y}`));\r\n        }}\r\n        onResponderRelease={async ()=>{\r\n          const base64 = await shotRef.current.capture();\r\n          onCapturePng && onCapturePng('data:image/png;base64,' + base64);\r\n        }}\r\n        style={{ flex:1 }}\r\n      >\r\n        <Svg height=\"100%\" width=\"100%\"><Path d={path} stroke=\"black\" strokeWidth=\"2\" fill=\"none\" /></Svg>\r\n      </View>\r\n    </ViewShot>\r\n  );\r\n}\r\n\r\nfunction SignatureScreen({ route, navigation }){\r\n  const { token } = useAuth();\r\n  const { estimateId } = route.params;\r\n  const [sigPng, setSigPng] = useState(null);\r\n  const save = async () => {\r\n    if(!sigPng){ Alert.alert('Please sign first'); return; }\r\n    const resp = await api(`/estimates/${estimateId}/approve`, 'POST', { signaturePngUrl: sigPng }, token);\r\n    Alert.alert('Approved', `Payment link:\r\n${(resp && resp.paymentLink) ? resp.paymentLink : 'Unavailable'}`); navigation.goBack();\r\n  };\r\n  return (\r\n    <SafeAreaView style={{ padding:16 }}>\r\n      <Text style={{ fontSize:18, marginBottom:8 }}>Sign Estimate #{estimateId}</Text>\r\n      <SignaturePad onCapturePng={setSigPng} />\r\n      <View style={{ height:12 }} />\r\n      <Button title=\"Save Signature\" onPress={save} />\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\n// ---------- Admin: Users ----------\nconst userRoleOptions = [\n  { label: 'Admin', value: 'ADMIN' },\n  { label: 'Estimator', value: 'ESTIMATOR' },\n  { label: 'Supervisor', value: 'SUPERVISOR' },\n  { label: 'Tech', value: 'TECH' },\n];\n\nconst invoiceStatusOptions = [\n  { value: 'DRAFT', label: 'Draft' },\n  { value: 'SENT', label: 'Sent' },\n  { value: 'PART_PAID', label: 'Part paid' },\n  { value: 'PAID', label: 'Paid' },\n  { value: 'VOID', label: 'Void' },\n];\n\nfunction UsersAdminScreen(){\n  const { token } = useAuth();\n  const [users, setUsers] = useState([]);\n  const [email, setEmail] = useState('');\n  const [fullName, setFullName] = useState('');\n  const [role, setRole] = useState('TECH');\n  const [inviting, setInviting] = useState(false);\n  const [refreshing, setRefreshing] = useState(false);\n\n  const load = useCallback(async () => {\n    try {\n      const response = await api('/users','GET',null,token);\n      setUsers(Array.isArray(response) ? response : []);\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to load users.');\n    }\n  }, [token]);\n\n  useEffect(() => { load(); }, [load]);\n\n  const resetForm = () => {\n    setEmail('');\n    setFullName('');\n    setRole('TECH');\n  };\n\n  const invite = async ()=>{\n    const trimmedEmail = email.trim().toLowerCase();\n    const trimmedName = fullName.trim();\n    if (!trimmedEmail) {\n      Alert.alert('Missing email', 'Enter an email address to invite a user.');\n      return;\n    }\n    try {\n      setInviting(true);\n      await api('/users','POST', { email: trimmedEmail, fullName: trimmedName || undefined, role: normalizeRole(role) }, token);\n      resetForm();\n      await load();\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to send invite.');\n    } finally {\n      setInviting(false);\n    }\n  };\n\n  const promote = async (id, newRole)=>{\n    try {\n      await api(`/users/${id}`,'PATCH',{ role: normalizeRole(newRole) }, token);\n      await load();\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to update role.');\n    }\n  };\n\n  const remove = (id) => {\n    Alert.alert('Remove user', 'Are you sure you want to remove this person?', [\n      { text: 'Cancel', style: 'cancel' },\n      {\n        text: 'Remove',\n        style: 'destructive',\n        onPress: async () => {\n          try {\n            await api(`/users/${id}`,'DELETE',null,token);\n            await load();\n          } catch (e) {\n            Alert.alert('Error', e.message || 'Unable to delete user.');\n          }\n        }\n      }\n    ]);\n  };\n\n  const onRefresh = useCallback(async () => {\n    setRefreshing(true);\n    try {\n      await load();\n    } finally {\n      setRefreshing(false);\n    }\n  }, [load]);\n\n  const renderRolePill = (value) => {\n    const roleCfg = userRoleOptions.find(option => option.value === normalizeRole(value));\n    const label = roleCfg ? roleCfg.label : normalizeRole(value);\n    return (\n      <View style={{ backgroundColor: '#e0f3f0', paddingHorizontal: spacing(1.5), paddingVertical: spacing(0.5), borderRadius: 999 }}>\n        <Text style={{ color: palette.primaryStrong, fontWeight:'600', fontSize: typography.small }}>{label}</Text>\n      </View>\n    );\n  };\n\n  const renderRoleSelector = (selectedRole, onSelect) => (\n    <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1) }}>\n      {userRoleOptions.map(option => {\n        const selected = selectedRole === option.value;\n        return (\n          <TouchableOpacity\n            key={option.value}\n            onPress={() => onSelect(option.value)}\n            activeOpacity={0.85}\n            style={{\n              paddingHorizontal: spacing(2),\n              paddingVertical: spacing(1),\n              borderRadius: 999,\n              borderWidth: 1,\n              borderColor: selected ? palette.primary : palette.border,\n              backgroundColor: selected ? '#d9f2ed' : palette.surface,\n            }}\n          >\n            <Text style={{ color: selected ? palette.primaryStrong : palette.muted, fontWeight:'600', fontSize: typography.small }}>\n              {option.label}\n            </Text>\n          </TouchableOpacity>\n        );\n      })}\n    </View>\n  );\n\n  return (\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\n      <FlatList\n        data={users}\n        keyExtractor={u=>String(u.id)}\n        contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(6) }}\n        refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} tintColor={palette.primary} />}\n        ListHeaderComponent={(\n          <View>\n            <Text style={{ color: palette.text, fontSize: typography.h1, fontWeight:'700', marginBottom: spacing(2) }}>Team management</Text>\n            <SurfaceCard style={{ padding: spacing(2.5), marginBottom: spacing(3) }}>\n              <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700' }}>Invite teammate</Text>\n              <Text style={{ color: palette.muted, marginTop: spacing(0.5), marginBottom: spacing(2) }}>\n                Send an invite email and choose what they can access.\n              </Text>\n              <FormInput\n                placeholder=\"Full name (optional)\"\n                value={fullName}\n                onChangeText={setFullName}\n              />\n              <FormInput\n                placeholder=\"Work email\"\n                autoCapitalize=\"none\"\n                keyboardType=\"email-address\"\n                value={email}\n                onChangeText={setEmail}\n              />\n              <Text style={{ color: palette.muted, fontWeight:'600', fontSize: typography.small, textTransform:'uppercase', marginBottom: spacing(1) }}>Role</Text>\n              {renderRoleSelector(role, setRole)}\n              <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center', marginTop: spacing(2) }}>\n                <QuickAction label=\"Clear\" tone=\"muted\" onPress={resetForm} />\n                <TouchableOpacity\n                  onPress={invite}\n                  activeOpacity={0.85}\n                  disabled={inviting}\n                  style={{\n                    backgroundColor: palette.primary,\n                    paddingHorizontal: spacing(2.5),\n                    paddingVertical: spacing(1.5),\n                    borderRadius: 12,\n                    opacity: inviting ? 0.6 : 1,\n                  }}\n                >\n                  <Text style={{ color:'#fff', fontWeight:'700' }}>{inviting ? 'Sending...' : 'Send invite'}</Text>\n                </TouchableOpacity>\n              </View>\n            </SurfaceCard>\n          </View>\n        )}\n        ListEmptyComponent={(\n          <SurfaceCard>\n            <Text style={{ color: palette.muted }}>Invite your first teammate to collaborate on jobs.</Text>\n          </SurfaceCard>\n        )}\n        renderItem={({item}) => {\n          const normalizedRole = normalizeRole(item.role);\n          return (\n            <SurfaceCard style={{ marginBottom: spacing(2), padding: spacing(2.5) }}>\n              <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center', marginBottom: spacing(1.5) }}>\n                <View>\n                  <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600' }}>{item.fullName || item.email}</Text>\n                  <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>{item.email}</Text>\n                </View>\n                {renderRolePill(normalizedRole)}\n              </View>\n              <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1) }}>\n                {userRoleOptions.map(option => {\n                  const selected = normalizedRole === option.value;\n                  return (\n                    <TouchableOpacity\n                      key={option.value}\n                      onPress={() => promote(item.id, option.value)}\n                      disabled={selected}\n                      activeOpacity={0.85}\n                      style={{\n                        paddingHorizontal: spacing(1.75),\n                        paddingVertical: spacing(0.75),\n                        borderRadius: 999,\n                        borderWidth: 1,\n                        borderColor: selected ? palette.primary : palette.border,\n                        backgroundColor: selected ? '#d9f2ed' : palette.surface,\n                        opacity: selected ? 0.7 : 1,\n                      }}\n                    >\n                      <Text style={{ color: selected ? palette.primaryStrong : palette.muted, fontWeight:'600', fontSize: typography.small }}>\n                        {option.label}\n                      </Text>\n                    </TouchableOpacity>\n                  );\n                })}\n                <TouchableOpacity\n                  onPress={() => remove(item.id)}\n                  activeOpacity={0.85}\n                  style={{\n                    paddingHorizontal: spacing(1.75),\n                    paddingVertical: spacing(0.75),\n                    borderRadius: 999,\n                    borderWidth: 1,\n                    borderColor: '#fecdd3',\n                    backgroundColor: '#fee2e2',\n                  }}\n                >\n                  <Text style={{ color: palette.danger, fontWeight:'600', fontSize: typography.small }}>Remove</Text>\n                </TouchableOpacity>\n              </View>\n            </SurfaceCard>\n          );\n        }}\n      />\n    </SafeAreaView>\n  );\n}\n\r\n// ---------- Jobs Kanban + Change Orders ----------\r\nfunction InvoicesScreen({ navigation }){\r\n  const { token, user } = useAuth();\r\n  const [loading, setLoading] = useState(true);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [summary, setSummary] = useState(null);\r\n  const [invoices, setInvoices] = useState([]);\r\n  const [filter, setFilter] = useState('ALL');\r\n\r\n  const load = useCallback(async (isRefresh = false) => {\r\n    if (!token) return;\r\n    isRefresh ? setRefreshing(true) : setLoading(true);\r\n    try {\r\n      const [summaryData, list] = await Promise.all([\r\n        api('/invoices/summary', 'GET', null, token),\r\n        api('/invoices', 'GET', null, token),\r\n      ]);\r\n      setSummary(summaryData);\r\n      setInvoices(list);\r\n    } catch (e) {\r\n      // keep prior data on failure\r\n    } finally {\r\n      isRefresh ? setRefreshing(false) : setLoading(false);\r\n    }\r\n  }, [token]);\r\n\r\n  useFocusEffect(useCallback(() => {\r\n    if (user?.role === 'ADMIN') {\r\n      load(false);\r\n    }\r\n  }, [load, user?.role]));\r\n\r\n  const onRefresh = useCallback(() => load(true), [load]);\r\n\r\n  if (user?.role !== 'ADMIN') {\r\n    return (\r\n      <SafeAreaView style={{ flex:1, alignItems:'center', justifyContent:'center', backgroundColor: palette.background }}>\r\n        <Text style={{ color: palette.muted }}>Invoices are only available to admin users.</Text>\r\n      </SafeAreaView>\r\n    );\r\n  }\r\n\r\n  const filters = [\r\n    { key:'ALL', label:'All' },\r\n    { key:'OUTSTANDING', label:'Outstanding' },\r\n    { key:'PAID', label:'Paid' },\r\n  ];\r\n\r\n  const filteredInvoices = invoices.filter(inv => {\r\n    if (filter === 'ALL') return true;\r\n    const status = (inv.status || 'DRAFT').toUpperCase();\r\n    if (filter === 'PAID') return status === 'PAID';\r\n    return !['PAID','VOID'].includes(status);\r\n  });\r\n\r\n  const outstanding = formatCurrency(summary?.outstanding || 0);\r\n  const collected = formatCurrency(summary?.collected || 0);\r\n  const drafts = formatCurrency(summary?.draftAmount || 0);\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\r\n      <ScrollView\r\n        contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(6) }}\r\n        refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} tintColor={palette.primary} />}\r\n      >\r\n        <Text style={{ color: palette.text, fontSize: typography.h1, fontWeight:'700', marginBottom: spacing(2) }}>Invoices</Text>\r\n        <Text style={{ color: palette.muted, marginBottom: spacing(2) }}>Track billing health and spot overdue balances.</Text>\r\n        <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(2), rowGap: spacing(2), marginBottom: spacing(3) }}>\r\n          <View style={{ flexBasis:'48%', minWidth: 160 }}>\r\n            <SummaryCard title=\"Outstanding\" value={outstanding} subtitle={`${summary?.overdueCount || 0} overdue`} tone=\"warning\" />\r\n          </View>\r\n          <View style={{ flexBasis:'48%', minWidth: 160 }}>\r\n            <SummaryCard title=\"Collected\" value={collected} subtitle=\"All payments to date\" tone=\"success\" />\r\n          </View>\r\n          <View style={{ flexBasis:'48%', minWidth: 160 }}>\r\n            <SummaryCard title=\"Drafts\" value={drafts} subtitle={`${summary?.totalCount || 0} total invoices`} tone=\"info\" />\r\n          </View>\r\n        </View>\r\n\r\n        <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginBottom: spacing(2) }}>\r\n          {filters.map(f => {\r\n            const selected = f.key === filter;\r\n            return (\r\n              <TouchableOpacity\r\n                key={f.key}\r\n                onPress={() => setFilter(f.key)}\r\n                activeOpacity={0.85}\r\n                style={{\r\n                  paddingHorizontal: spacing(2),\r\n                  paddingVertical: spacing(1),\r\n                  borderRadius: 999,\r\n                  borderWidth: 1,\r\n                  borderColor: selected ? palette.primary : palette.border,\r\n                  backgroundColor: selected ? '#d9f2ed' : palette.surface,\r\n                }}\r\n              >\r\n                <Text style={{ color: selected ? palette.primaryStrong : palette.muted, fontWeight:'600', fontSize: typography.small }}>{f.label}</Text>\r\n              </TouchableOpacity>\r\n            );\r\n          })}\r\n        </View>\r\n\r\n        {loading ? (\r\n          <SurfaceCard style={{ alignItems:'center', paddingVertical: spacing(6) }}>\r\n            <ActivityIndicator color={palette.primary} />\r\n            <Text style={{ color: palette.muted, marginTop: spacing(1.5) }}>Loading invoices...</Text>\r\n          </SurfaceCard>\r\n        ) : filteredInvoices.length === 0 ? (\r\n          <SurfaceCard>\r\n            <Text style={{ color: palette.muted }}>No invoices match this filter.</Text>\r\n          </SurfaceCard>\r\n        ) : (\r\n          filteredInvoices.map(inv => {\r\n            const payments = (inv.Payments || []).reduce((sum, p) => sum + Number(p.amount || 0), 0);\r\n            const amount = Number(inv.amount || 0);\r\n            const balance = Math.max(amount - payments, 0);\r\n            const statusKey = (inv.status || 'DRAFT').toUpperCase();\r\n            return (\r\n              <SurfaceCard key={inv.id}>\r\n                <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center' }}>\r\n                  <View>\r\n                    <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600' }}>Invoice #{inv.number || inv.id}</Text>\r\n                    <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>Issued {inv.issuedAt ? formatDate(inv.issuedAt) : 'TBD'}</Text>\r\n                  </View>\r\n                  <StatusPill status={statusKey} />\r\n                </View>\r\n                <View style={{ flexDirection:'row', justifyContent:'space-between', marginTop: spacing(1.5) }}>\r\n                  <View>\r\n                    <Text style={{ color: palette.muted, fontSize: typography.small }}>Amount</Text>\r\n                    <Text style={{ color: palette.text, fontWeight:'600' }}>{formatCurrency(amount)}</Text>\r\n                  </View>\r\n                  <View>\r\n                    <Text style={{ color: palette.muted, fontSize: typography.small }}>Collected</Text>\r\n                    <Text style={{ color: palette.text }}>{formatCurrency(payments)}</Text>\r\n                  </View>\r\n                  <View>\r\n                    <Text style={{ color: palette.muted, fontSize: typography.small }}>Balance</Text>\r\n                    <Text style={{ color: balance > 0 ? palette.primaryStrong : palette.muted, fontWeight:'600' }}>{formatCurrency(balance)}</Text>\r\n                  </View>\r\n                </View>\r\n                {inv.dueAt ? (\r\n                  <Text style={{ color: palette.muted, marginTop: spacing(1) }}>Due {formatDate(inv.dueAt)}</Text>\r\n                ) : null}\r\n                <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginTop: spacing(2) }}>\r\n                  {inv.jobId ? <QuickAction label=\"View job\" onPress={() => navigation.navigate('JobDetail', { jobId: inv.jobId })} tone=\"muted\" /> : null}\r\n                  <QuickAction label=\"Record payment\" tone=\"success\" onPress={() => Alert.alert('Coming soon', 'Payment logging will land shortly.')} />\r\n                </View>\r\n              </SurfaceCard>\r\n            );\r\n          })\r\n        )}\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\nfunction JobsKanbanScreen({ navigation }){\r\n  const { token } = useAuth();\r\n  const [jobs, setJobs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [newJobName, setNewJobName] = useState('');\r\n  const [newJobStartDate, setNewJobStartDate] = useState('');\r\n  const [newJobDueDate, setNewJobDueDate] = useState('');\r\n  const [newJobNotes, setNewJobNotes] = useState('');\r\n  const [newCustomerName, setNewCustomerName] = useState('');\r\n  const [newCustomerPhone, setNewCustomerPhone] = useState('');\r\n  const [newCustomerEmail, setNewCustomerEmail] = useState('');\r\n  const [newAddressLine1, setNewAddressLine1] = useState('');\r\n  const [newAddressLine2, setNewAddressLine2] = useState('');\r\n  const [newCity, setNewCity] = useState('');\r\n  const [newStateCode, setNewStateCode] = useState('');\r\n  const [newZip, setNewZip] = useState('');\r\n  const [jobFormTab, setJobFormTab] = useState('BASICS');\r\n  const statusOrder = ['SCHEDULED','IN_PROGRESS','ON_HOLD','DONE','COMPLETE','CANCELLED'];\r\n\r\n  const load = useCallback(async (isRefresh = false) => {\r\n    isRefresh ? setRefreshing(true) : setLoading(true);\r\n    try {\r\n      const data = await api('/jobs','GET',null,token);\r\n      setJobs(data);\r\n      db.transaction(tx => {\r\n        tx.executeSql && tx.executeSql('DELETE FROM jobs_cache;');\r\n        data.forEach(j => tx.executeSql && tx.executeSql(\r\n          'INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)',\r\n          [j.id, j.name||'', j.status||'SCHEDULED', j.startDate||'', j.endDate||'', j.notes||'']\r\n        ));\r\n      });\r\n    } catch(e) {\r\n      db.transaction(tx =>\r\n        tx.executeSql && tx.executeSql(\r\n          'SELECT id, name, status, startDate, endDate, notes FROM jobs_cache',\r\n          [],\r\n          (_, { rows }) => setJobs(rows._array || [])\r\n        )\r\n      );\r\n    } finally {\r\n      isRefresh ? setRefreshing(false) : setLoading(false);\r\n    }\r\n  }, [token]);\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      load(false);\r\n    }, [load])\r\n  );\r\n\r\n  const onRefresh = useCallback(() => load(true), [load]);\r\n\r\n  const resetForm = () => {\r\n    setNewJobName('');\r\n    setNewJobStartDate('');\r\n    setNewJobDueDate('');\r\n    setNewJobNotes('');\r\n    setNewCustomerName('');\r\n    setNewCustomerPhone('');\r\n    setNewCustomerEmail('');\r\n    setNewAddressLine1('');\r\n    setNewAddressLine2('');\r\n    setNewCity('');\r\n    setNewStateCode('');\r\n    setNewZip('');\r\n    setJobFormTab('BASICS');\r\n  };\r\n\r\n  const createJob = async () => {\r\n    if(!newJobName.trim()){\r\n      Alert.alert('Missing info', 'Please add a job name.');\r\n      setJobFormTab('BASICS');\r\n      return;\r\n    }\r\n    const hasCustomer = [newCustomerName, newCustomerPhone, newCustomerEmail].some(v => v && v.trim());\r\n    const hasAddress = [newAddressLine1, newCity, newStateCode, newZip].some(v => v && v.trim());\r\n    const payload = {\r\n      name: newJobName.trim(),\r\n      status: 'SCHEDULED',\r\n      startDate: newJobStartDate || null,\r\n      endDate: newJobDueDate || null,\r\n      notes: newJobNotes.trim() || null,\r\n    };\r\n    if (hasCustomer) {\r\n      payload.customer = {\r\n        name: newCustomerName.trim(),\r\n        phone: newCustomerPhone.trim(),\r\n        email: newCustomerEmail.trim(),\r\n        billingAddress: newAddressLine1\r\n          ? `${newAddressLine1}${newAddressLine2 ? `\r\n${newAddressLine2}` : ''}${newCity ? `\r\n${newCity}, ${newStateCode} ${newZip}` : ''}`\r\n          : null,\r\n      };\r\n    }\r\n    if (hasAddress) {\r\n      payload.jobsite = {\r\n        addressLine1: newAddressLine1.trim(),\r\n        addressLine2: newAddressLine2.trim(),\r\n        city: newCity.trim(),\r\n        state: newStateCode.trim(),\r\n        zip: newZip.trim(),\r\n      };\r\n    }\r\n    try {\r\n      const created = await api('/jobs','POST', payload, token);\r\n      setJobs(prev => [created, ...prev]);\r\n      db.transaction(tx =>\r\n        tx.executeSql && tx.executeSql(\r\n          'INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)',\r\n          [created.id, created.name||'', created.status||'SCHEDULED', created.startDate||'', created.endDate||'', created.notes||'']\r\n        )\r\n      );\r\n      resetForm();\r\n      Alert.alert('Job created', `Job #${created.id} ready to schedule.`);\r\n    } catch(e) {\r\n      Alert.alert('Error', e.message || 'Unable to create job');\r\n    }\r\n  };\r\n\r\n  const updateJobStatus = async (id, status) => {\r\n    try {\r\n      const updated = await api(`/jobs/${id}`,'PATCH',{ status }, token);\r\n      setJobs(prev => prev.map(job => job.id === id ? updated : job));\r\n    } catch(e) {\r\n      Alert.alert('Error', e.message || 'Unable to update job status');\r\n    }\r\n  };\r\n\r\n  const removeJob = async (id) => {\r\n    Alert.alert('Delete Job', `Delete job #${id}?`, [\r\n      { text:'Cancel', style:'cancel' },\r\n      { text:'Delete', style:'destructive', onPress: async () => {\r\n        try {\r\n          await api(`/jobs/${id}`,'DELETE',null,token);\r\n          setJobs(prev => prev.filter(job => job.id !== id));\r\n          db.transaction(tx => tx.executeSql && tx.executeSql('DELETE FROM jobs_cache WHERE id=?', [id]));\r\n        } catch(e) {\r\n          Alert.alert('Error', e.message || 'Unable to delete job');\r\n        }\r\n      } }\r\n    ]);\r\n  };\r\n\r\n  const sortedJobs = useMemo(() => {\r\n    const normalize = (status) => (status || 'SCHEDULED').toUpperCase();\r\n    const rank = (status) => {\r\n      const key = normalize(status);\r\n      const idx = statusOrder.indexOf(key);\r\n      return idx === -1 ? statusOrder.length : idx;\r\n    };\r\n    const parseDateSafe = (value) => {\r\n      if (!value) return null;\r\n      const d = new Date(value);\r\n      return Number.isNaN(d.getTime()) ? null : d;\r\n    };\r\n    return [...jobs].sort((a, b) => {\r\n      const statusDiff = rank(a.status) - rank(b.status);\r\n      if (statusDiff !== 0) return statusDiff;\r\n      const startA = parseDateSafe(a.startDate);\r\n      const startB = parseDateSafe(b.startDate);\r\n      if (startA && startB) return startA - startB;\r\n      if (startA) return -1;\r\n      if (startB) return 1;\r\n      return (b.id || 0) - (a.id || 0);\r\n    });\r\n  }, [jobs, statusOrder]);\r\n\r\n  const groupedJobs = useMemo(() => {\r\n    const groups = [];\r\n    let currentStatus = null;\r\n    sortedJobs.forEach(job => {\r\n      const statusKey = (job.status || 'SCHEDULED').toUpperCase();\r\n      if (statusKey !== currentStatus) {\r\n        groups.push({ status: statusKey, jobs: [job] });\r\n        currentStatus = statusKey;\r\n      } else {\r\n        groups[groups.length - 1].jobs.push(job);\r\n      }\r\n    });\r\n    return groups;\r\n  }, [sortedJobs]);\r\n\r\n  const statusLabel = (status) => {\r\n    const key = (status || 'SCHEDULED').toUpperCase();\r\n    return pillTone[key]?.label || key.charAt(0) + key.slice(1).toLowerCase();\r\n  };\r\n\r\n  const quickStatusActions = [\r\n    { label:'Start job', value:'IN_PROGRESS', tone:'primary' },\r\n    { label:'Pause', value:'ON_HOLD', tone:'warning' },\r\n    { label:'Wrap up', value:'DONE', tone:'success' },\r\n  ];\r\n\r\n  const inputStyle = {\r\n    borderWidth: 1,\r\n    borderColor: palette.border,\r\n    borderRadius: 12,\r\n    paddingHorizontal: spacing(1.5),\r\n    paddingVertical: spacing(1.25),\r\n    backgroundColor: palette.surfaceMuted,\r\n    color: palette.text,\r\n    fontSize: typography.body,\r\n    marginBottom: spacing(1.5),\r\n  };\r\n\r\n  const jobTabs = [\r\n    { key:'BASICS', label:'Basics' },\r\n    { key:'CUSTOMER', label:'Customer' },\r\n    { key:'JOBSITE', label:'Jobsite' },\r\n    { key:'NOTES', label:'Notes' },\r\n  ];\r\n\r\n  const renderJobFormFields = () => {\r\n    if (jobFormTab === 'BASICS') {\r\n      return (\r\n        <View>\r\n          <TextInput\r\n            placeholder=\"Job name\"\r\n            placeholderTextColor={palette.muted}\r\n            value={newJobName}\r\n            onChangeText={setNewJobName}\r\n            style={inputStyle}\r\n          />\r\n          <DateInputField\r\n            value={newJobStartDate}\r\n            onChange={setNewJobStartDate}\r\n            placeholder=\"Start date\"\r\n          />\r\n          <DateInputField\r\n            value={newJobDueDate}\r\n            onChange={setNewJobDueDate}\r\n            placeholder=\"Due date\"\r\n          />\r\n        </View>\r\n      );\r\n    }\r\n    if (jobFormTab === 'CUSTOMER') {\r\n      return (\r\n        <View>\r\n          <TextInput\r\n            placeholder=\"Customer name\"\r\n            placeholderTextColor={palette.muted}\r\n            value={newCustomerName}\r\n            onChangeText={setNewCustomerName}\r\n            style={inputStyle}\r\n          />\r\n          <TextInput\r\n            placeholder=\"Phone\"\r\n            placeholderTextColor={palette.muted}\r\n            keyboardType=\"phone-pad\"\r\n            value={newCustomerPhone}\r\n            onChangeText={setNewCustomerPhone}\r\n            style={inputStyle}\r\n          />\r\n          <TextInput\r\n            placeholder=\"Email\"\r\n            placeholderTextColor={palette.muted}\r\n            keyboardType=\"email-address\"\r\n            autoCapitalize=\"none\"\r\n            value={newCustomerEmail}\r\n            onChangeText={setNewCustomerEmail}\r\n            style={inputStyle}\r\n          />\r\n        </View>\r\n      );\r\n    }\r\n    if (jobFormTab === 'JOBSITE') {\r\n      return (\r\n        <View>\r\n          <TextInput\r\n            placeholder=\"Address line 1\"\r\n            placeholderTextColor={palette.muted}\r\n            value={newAddressLine1}\r\n            onChangeText={setNewAddressLine1}\r\n            style={inputStyle}\r\n          />\r\n          <TextInput\r\n            placeholder=\"Address line 2\"\r\n            placeholderTextColor={palette.muted}\r\n            value={newAddressLine2}\r\n            onChangeText={setNewAddressLine2}\r\n            style={inputStyle}\r\n          />\r\n          <View style={{ flexDirection:'row', columnGap: spacing(1.5) }}>\r\n            <View style={{ flex:1 }}>\r\n              <TextInput\r\n                placeholder=\"City\"\r\n                placeholderTextColor={palette.muted}\r\n                value={newCity}\r\n                onChangeText={setNewCity}\r\n                style={[inputStyle, { marginBottom: 0 }]}\r\n              />\r\n            </View>\r\n            <View style={{ width: 80 }}>\r\n              <TextInput\r\n                placeholder=\"State\"\r\n                placeholderTextColor={palette.muted}\r\n                value={newStateCode}\r\n                onChangeText={setNewStateCode}\r\n                style={[inputStyle, { marginBottom: 0 }]}\r\n              />\r\n            </View>\r\n            <View style={{ width: 100 }}>\r\n              <TextInput\r\n                placeholder=\"ZIP\"\r\n                placeholderTextColor={palette.muted}\r\n                value={newZip}\r\n                onChangeText={setNewZip}\r\n                style={[inputStyle, { marginBottom: 0 }]}\r\n              />\r\n            </View>\r\n          </View>\r\n        </View>\r\n      );\r\n    }\r\n    return (\r\n      <TextInput\r\n        placeholder=\"Internal notes\"\r\n        placeholderTextColor={palette.muted}\r\n        value={newJobNotes}\r\n        onChangeText={setNewJobNotes}\r\n        multiline\r\n        style={[inputStyle, { minHeight: 96, textAlignVertical: 'top' }]}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\r\n      <ScrollView\r\n        contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(4) }}\r\n        refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} tintColor={palette.primary} />}\r\n      >\r\n        <SurfaceCard style={{ marginBottom: spacing(3), padding: spacing(2.5) }}>\r\n          <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700', marginBottom: spacing(2) }}>Create job</Text>\r\n          <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1.5), marginBottom: spacing(2) }}>\r\n            {jobTabs.map(tab => {\r\n              const selected = tab.key === jobFormTab;\r\n              return (\r\n                <TouchableOpacity\r\n                  key={tab.key}\r\n                  onPress={() => setJobFormTab(tab.key)}\r\n                  activeOpacity={0.85}\r\n                  style={{\r\n                    paddingHorizontal: spacing(2),\r\n                    paddingVertical: spacing(1),\r\n                    borderRadius: 999,\r\n                    borderWidth: 1,\r\n                    borderColor: selected ? palette.primary : palette.border,\r\n                    backgroundColor: selected ? '#d9f2ed' : palette.surface,\r\n                  }}\r\n                >\r\n                  <Text style={{ color: selected ? palette.primaryStrong : palette.muted, fontWeight:'600', fontSize: typography.small }}>\r\n                    {tab.label}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              );\r\n            })}\r\n          </View>\r\n          {renderJobFormFields()}\r\n          <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center', marginTop: spacing(2) }}>\r\n            <QuickAction label=\"Reset\" tone=\"muted\" onPress={resetForm} />\r\n            <TouchableOpacity\r\n              onPress={createJob}\r\n              activeOpacity={0.85}\r\n              style={{ backgroundColor: palette.primary, paddingHorizontal: spacing(2.5), paddingVertical: spacing(1.5), borderRadius: 12 }}\r\n            >\r\n              <Text style={{ color:'#fff', fontWeight:'700' }}>Create job</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </SurfaceCard>\r\n\r\n        {loading && !refreshing && jobs.length === 0 ? (\r\n          <SurfaceCard style={{ alignItems:'center', paddingVertical: spacing(6), marginBottom: spacing(3) }}>\r\n            <ActivityIndicator color={palette.primary} />\r\n            <Text style={{ color: palette.muted, marginTop: spacing(1.5) }}>Loading jobs...</Text>\r\n          </SurfaceCard>\r\n        ) : null}\r\n\r\n        {groupedJobs.length === 0 ? (\r\n          <SurfaceCard>\r\n            <Text style={{ color: palette.muted }}>No jobs yet. Convert a lead or add a job to get started.</Text>\r\n          </SurfaceCard>\r\n        ) : (\r\n          groupedJobs.map(group => (\r\n            <View key={group.status} style={{ marginBottom: spacing(3) }}>\r\n              <Text style={{ color: palette.muted, fontWeight:'700', fontSize: typography.small, textTransform:'uppercase', marginBottom: spacing(1) }}>\r\n                {statusLabel(group.status)}\r\n              </Text>\r\n              {group.jobs.map(job => {\r\n                const customer = job.Customer || {};\r\n                const jobsite = job.Jobsite || {};\r\n                const addressParts = [\r\n                  jobsite.addressLine1,\r\n                  jobsite.addressLine2,\r\n                  [jobsite.city, jobsite.state].filter(Boolean).join(', '),\r\n                  jobsite.zip\r\n                ].filter(Boolean);\r\n                const address = addressParts.join(', ');\r\n                const statusKey = (job.status || 'SCHEDULED').toUpperCase();\r\n                return (\r\n                  <SurfaceCard key={job.id} style={{ marginBottom: spacing(1.5) }}>\r\n                    <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center' }}>\r\n                      <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600' }}>{job.name || `Job #${job.id}`}</Text>\r\n                      <StatusPill status={statusKey} />\r\n                    </View>\r\n                    {(job.startDate || job.endDate) ? (\r\n                      <Text style={{ color: palette.muted, marginTop: spacing(0.75) }}>\r\n                        {[job.startDate ? `Start ${formatDate(job.startDate)}` : null, job.endDate ? `Due ${formatDate(job.endDate)}` : null].filter(Boolean).join(' | ')}\r\n                      </Text>\r\n                    ) : null}\r\n                    {customer.name ? <Text style={{ color: palette.text, fontWeight:'600', marginTop: spacing(1) }}>{customer.name}</Text> : null}\r\n                    {customer.phone ? <Text style={{ color: palette.muted }}>{customer.phone}</Text> : null}\r\n                    {customer.email ? <Text style={{ color: palette.muted }}>{customer.email}</Text> : null}\r\n                    {address ? <Text style={{ color: palette.muted, marginTop: spacing(1) }}>{address}</Text> : null}\r\n                    {job.notes ? <Text style={{ color: palette.muted, marginTop: spacing(1) }} numberOfLines={3}>{job.notes}</Text> : null}\r\n                    <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginTop: spacing(2) }}>\r\n                      <QuickAction label=\"View job\" onPress={() => navigation.navigate('JobDetail', { jobId: job.id })} tone=\"muted\" />\r\n                      {quickStatusActions.map(action => (\r\n                        action.value === statusKey ? null : (\r\n                          <QuickAction\r\n                            key={action.value}\r\n                            label={action.label}\r\n                            tone={action.tone}\r\n                            onPress={() => updateJobStatus(job.id, action.value)}\r\n                          />\r\n                        )\r\n                      ))}\r\n                      <QuickAction label=\"Delete\" tone=\"danger\" onPress={() => removeJob(job.id)} />\r\n                    </View>\r\n                  </SurfaceCard>\r\n                );\r\n              })}\r\n            </View>\r\n          ))\r\n        )}\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\nfunction JobDetailScreen({ route, navigation }){\r\n  const { jobId } = route.params;\r\n  const { token, user } = useAuth();\r\n  const [jobName, setJobName] = useState('');\r\n  const [jobStartDate, setJobStartDate] = useState('');\r\n  const [jobEndDate, setJobEndDate] = useState('');\r\n  const [jobNotes, setJobNotes] = useState('');\r\n  const [jobCustomerName, setJobCustomerName] = useState('');\r\n  const [jobCustomerPhone, setJobCustomerPhone] = useState('');\r\n  const [jobCustomerEmail, setJobCustomerEmail] = useState('');\r\n  const [jobAddressLine1, setJobAddressLine1] = useState('');\r\n  const [jobAddressLine2, setJobAddressLine2] = useState('');\r\n  const [jobCity, setJobCity] = useState('');\r\n  const [jobStateCode, setJobStateCode] = useState('');\r\n  const [jobZip, setJobZip] = useState('');\n  const [changeOrders, setCO] = useState([]);\n  const [title, setTitle] = useState('');\n  const [amountDelta, setAmountDelta] = useState('0');\n  const roleKey = normalizeRole(user?.role);\n  const canManageChangeOrders = ['ADMIN','SUPERVISOR','ESTIMATOR'].includes(roleKey);\n  const loadCO = useCallback(async () => {\r\n    setCO(await api(`/change-orders/job/${jobId}`,'GET',null,token));\r\n  }, [jobId, token]);\r\n  const loadJob = useCallback(async () => {\r\n    try {\r\n      const j = await api(`/jobs/${jobId}`,'GET',null,token);\r\n      setJobName(j.name||'');\r\n      setJobStartDate(j.startDate||'');\r\n      setJobEndDate(j.endDate||'');\r\n      setJobNotes(j.notes||'');\r\n      const customer = j.Customer || {};\r\n      const jobsite = j.Jobsite || {};\r\n      setJobCustomerName(customer.name || '');\r\n      setJobCustomerPhone(customer.phone || '');\r\n      setJobCustomerEmail(customer.email || '');\r\n      setJobAddressLine1(jobsite.addressLine1 || '');\r\n      setJobAddressLine2(jobsite.addressLine2 || '');\r\n      setJobCity(jobsite.city || '');\r\n      setJobStateCode(jobsite.state || '');\r\n      setJobZip(jobsite.zip || '');\r\n    } catch(e) { }\r\n  }, [jobId, token]);\r\n  useEffect(()=>{ loadJob(); loadCO(); },[loadJob, loadCO]);\r\n  const addCO = async ()=>{\r\n    if(!title.trim()){\r\n      Alert.alert('Missing info', 'Add a title for the change order.');\r\n      return;\r\n    }\r\n    await api(`/change-orders/job/${jobId}`,'POST',{ title: title.trim(), amountDelta: parseFloat(amountDelta) || 0 }, token);\r\n    setTitle(''); setAmountDelta('0'); loadCO();\r\n  };\r\n  const saveJobDetails = async () => {\r\n    try {\r\n      await api(`/jobs/${jobId}`,'PATCH',{\r\n        name: jobName,\r\n        startDate: jobStartDate || null,\r\n        endDate: jobEndDate || null,\r\n        notes: jobNotes,\r\n        customer: {\r\n          name: jobCustomerName,\r\n          phone: jobCustomerPhone,\r\n          email: jobCustomerEmail,\r\n          billingAddress: jobAddressLine1 ? `${jobAddressLine1}${jobAddressLine2 ? `\r\n${jobAddressLine2}` : ''}${jobCity ? `\r\n${jobCity}, ${jobStateCode} ${jobZip}` : ''}` : null,\r\n        },\r\n        jobsite: {\r\n          addressLine1: jobAddressLine1,\r\n          addressLine2: jobAddressLine2,\r\n          city: jobCity,\r\n          state: jobStateCode,\r\n          zip: jobZip,\r\n        },\r\n      }, token);\r\n      Alert.alert('Saved', 'Job details updated.');\r\n      loadJob();\r\n    } catch(e) {\r\n      Alert.alert('Error', e.message || 'Unable to save job');\r\n    }\r\n  };\r\n  const deleteJob = () => {\r\n    Alert.alert('Delete job', `Delete job #${jobId}?`, [\r\n      { text:'Cancel', style:'cancel' },\r\n      { text:'Delete', style:'destructive', onPress: async ()=>{\r\n        try{\r\n          await api(`/jobs/${jobId}`,'DELETE',null,token);\r\n          db.transaction(tx => tx.executeSql('DELETE FROM jobs_cache WHERE id=?', [jobId]));\r\n          Alert.alert('Deleted', 'Job removed.');\r\n          navigation.navigate('Tabs', { screen:'Jobs' });\r\n        }catch(e){\r\n          Alert.alert('Error', e.message || 'Unable to delete job');\r\n        }\r\n      }}\r\n    ]);\r\n  };\r\n  return (\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\n      <ScrollView\n        contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(6) }}\n      >\n        <Text style={{ color: palette.text, fontSize: typography.h1, fontWeight:'700' }}>Job #{jobId}</Text>\n        <Text style={{ color: palette.muted, marginTop: spacing(0.5), marginBottom: spacing(3) }}>\n          Keep job information up to date so the field team always has the latest context.\n        </Text>\n\n        <SurfaceCard style={{ padding: spacing(2.5), marginBottom: spacing(3) }}>\n          <Text style={{ color: palette.muted, fontSize: typography.small, fontWeight:'700', textTransform:'uppercase', marginBottom: spacing(1) }}>\n            Basics\n          </Text>\n          <FormInput placeholder=\"Job name\" value={jobName} onChangeText={setJobName} />\n          <View style={{ flexDirection:'row', columnGap: spacing(1.5) }}>\n            <View style={{ flex:1 }}>\n              <DateInputField value={jobStartDate} onChange={setJobStartDate} placeholder=\"Start date\" style={{ marginBottom: 0 }} />\n            </View>\n            <View style={{ flex:1 }}>\n              <DateInputField value={jobEndDate} onChange={setJobEndDate} placeholder=\"End date\" style={{ marginBottom: 0 }} />\n            </View>\n          </View>\n          <FormInput\n            placeholder=\"Notes / scope\"\n            value={jobNotes}\n            onChangeText={setJobNotes}\n            multiline\n            style={{ minHeight: 112, textAlignVertical: 'top' }}\n          />\n          <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center', marginTop: spacing(2) }}>\n            <QuickAction label=\"Delete job\" tone=\"danger\" onPress={deleteJob} />\n            <TouchableOpacity\n              onPress={saveJobDetails}\n              activeOpacity={0.85}\n              style={{ backgroundColor: palette.primary, paddingHorizontal: spacing(2.5), paddingVertical: spacing(1.5), borderRadius: 12 }}\n            >\n              <Text style={{ color:'#fff', fontWeight:'700' }}>Save changes</Text>\n            </TouchableOpacity>\n          </View>\n        </SurfaceCard>\n\n        <SurfaceCard style={{ padding: spacing(2.5), marginBottom: spacing(3) }}>\n          <Text style={{ color: palette.muted, fontSize: typography.small, fontWeight:'700', textTransform:'uppercase', marginBottom: spacing(1) }}>\n            Customer\n          </Text>\n          <FormInput placeholder=\"Name\" value={jobCustomerName} onChangeText={setJobCustomerName} />\n          <FormInput placeholder=\"Phone\" value={jobCustomerPhone} onChangeText={setJobCustomerPhone} keyboardType=\"phone-pad\" />\n          <FormInput\n            placeholder=\"Email\"\n            value={jobCustomerEmail}\n            onChangeText={setJobCustomerEmail}\n            keyboardType=\"email-address\"\n            autoCapitalize=\"none\"\n          />\n        </SurfaceCard>\n\n        <SurfaceCard style={{ padding: spacing(2.5), marginBottom: spacing(3) }}>\n          <Text style={{ color: palette.muted, fontSize: typography.small, fontWeight:'700', textTransform:'uppercase', marginBottom: spacing(1) }}>\n            Jobsite\n          </Text>\n          <FormInput placeholder=\"Address line 1\" value={jobAddressLine1} onChangeText={setJobAddressLine1} />\n          <FormInput placeholder=\"Address line 2\" value={jobAddressLine2} onChangeText={setJobAddressLine2} />\n          <View style={{ flexDirection:'row', columnGap: spacing(1.5) }}>\n            <FormInput placeholder=\"City\" value={jobCity} onChangeText={setJobCity} style={{ flex:1, marginBottom: 0 }} />\n            <FormInput\n              placeholder=\"State\"\n              value={jobStateCode}\n              onChangeText={setJobStateCode}\n              autoCapitalize=\"characters\"\n              style={{ width: 96, marginBottom: 0 }}\n            />\n            <FormInput\n              placeholder=\"ZIP\"\n              value={jobZip}\n              onChangeText={setJobZip}\n              keyboardType=\"numeric\"\n              style={{ width: 112, marginBottom: 0 }}\n            />\n          </View>\n        </SurfaceCard>\n\n        {canManageChangeOrders ? (\n          <SurfaceCard style={{ padding: spacing(2.5), marginBottom: spacing(3) }}>\n            <Text style={{ color: palette.muted, fontSize: typography.small, fontWeight:'700', textTransform:'uppercase', marginBottom: spacing(1) }}>\n              New change order\n            </Text>\n            <FormInput placeholder=\"Title\" value={title} onChangeText={setTitle} />\n            <FormInput placeholder=\"Amount $\" value={amountDelta} onChangeText={setAmountDelta} keyboardType=\"decimal-pad\" />\n            <View style={{ flexDirection:'row', justifyContent:'flex-end', marginTop: spacing(2) }}>\n              <TouchableOpacity\n                onPress={addCO}\n                activeOpacity={0.85}\n                style={{ backgroundColor: palette.primary, paddingHorizontal: spacing(2.5), paddingVertical: spacing(1.5), borderRadius: 12 }}\n              >\n                <Text style={{ color:'#fff', fontWeight:'700' }}>Add change order</Text>\n              </TouchableOpacity>\n            </View>\n          </SurfaceCard>\n        ) : null}\n\n        <View style={{ marginBottom: spacing(3) }}>\n          <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700', marginBottom: spacing(1.5) }}>Change orders</Text>\n          {changeOrders.length === 0 ? (\n            <SurfaceCard>\n              <Text style={{ color: palette.muted }}>No change orders yet.</Text>\n            </SurfaceCard>\n          ) : changeOrders.map(item => {\n            const statusKey = (item.status || 'PENDING').toUpperCase();\n            const statusTone = (() => {\n              if (statusKey === 'APPROVED') return { bg: '#dcfce7', fg: palette.success, label: 'Approved' };\n              if (statusKey === 'REJECTED') return { bg: '#fee2e2', fg: palette.danger, label: 'Rejected' };\n              return { bg: '#e0f3f0', fg: palette.primaryStrong, label: 'Pending' };\n            })();\n            const amountLabel = formatCurrency(item.amountDelta || 0);\n            return (\n              <SurfaceCard key={item.id} style={{ marginBottom: spacing(1.5), padding: spacing(2.5) }}>\n                <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center' }}>\n                  <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600' }}>{item.title}</Text>\n                  <View style={{ backgroundColor: statusTone.bg, borderRadius: 999, paddingHorizontal: spacing(1.5), paddingVertical: spacing(0.5) }}>\n                    <Text style={{ color: statusTone.fg, fontWeight:'600', fontSize: typography.small }}>{statusTone.label}</Text>\n                  </View>\n                </View>\n                <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>{amountLabel}</Text>\n                {canManageChangeOrders ? (\n                  <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginTop: spacing(1.5) }}>\n                    <QuickAction\n                      label=\"Approve\"\n                      tone=\"success\"\n                      onPress={async ()=>{ await api(`/change-orders/${item.id}`,'PATCH',{ status:'APPROVED' }, token); loadCO(); }}\n                    />\n                    <QuickAction\n                      label=\"Reject\"\n                      tone=\"danger\"\n                      onPress={async ()=>{ await api(`/change-orders/${item.id}`,'PATCH',{ status:'REJECTED' }, token); loadCO(); }}\n                    />\n                  </View>\n                ) : null}\n              </SurfaceCard>\n            );\n          })}\n        </View>\n\n        <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700', marginBottom: spacing(1.5) }}>Tasks</Text>\n        <JobTasks jobId={jobId} />\n\n        <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700', marginTop: spacing(3), marginBottom: spacing(1.5) }}>Schedule</Text>\n        <JobSchedule jobId={jobId} />\n      </ScrollView>\n    </SafeAreaView>\n  );\n}\n\r\nfunction JobTasks({ jobId }){\r\n  const { token } = useAuth();\r\n  const [tasks, setTasks] = useState([]);\r\n  const [title, setTitle] = useState('');\r\n  const [dueDate, setDueDate] = useState('');\r\n  const load = async()=> {\r\n    try {\r\n      const data = await api(`/tasks?jobId=${jobId}`,'GET',null,token);\r\n      setTasks(data);\r\n      db.transaction(tx => {\r\n        tx.executeSql('DELETE FROM tasks_cache WHERE jobId=?', [jobId]);\r\n        data.forEach(t => tx.executeSql('INSERT OR REPLACE INTO tasks_cache (id, jobId, title, status, dueDate) VALUES (?,?,?,?,?)', [t.id, jobId, t.title||'', t.status||'TODO', t.dueDate||'']));\r\n      });\r\n    } catch(e) {\r\n      db.transaction(tx => tx.executeSql('SELECT id, jobId, title, status, dueDate FROM tasks_cache WHERE jobId=?', [jobId], (_, { rows }) => setTasks(rows._array || [])));\r\n    }\r\n  };\r\n  useEffect(()=>{ load(); },[]);\r\n  const add = async()=>{\r\n    if(!title.trim()) return Alert.alert('Title required');\r\n    await api('/tasks','POST',{ title, jobId, dueDate }, token);\r\n    setTitle(''); setDueDate(''); load();\r\n  };\r\n  const done = async(id)=>{ await api(`/tasks/${id}`,'PATCH',{ status:'DONE' }, token); load(); };\r\n  const remove = (id)=>{\r\n    Alert.alert('Delete task', 'Remove this task?', [\r\n      { text:'Cancel', style:'cancel' },\r\n      { text:'Delete', style:'destructive', onPress: async ()=>{ await api(`/tasks/${id}`,'DELETE',null,token); load(); } },\r\n    ]);\r\n  };\r\n  return (\n    <View>\n      <SurfaceCard style={{ marginBottom: spacing(2) }}>\n        <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600', marginBottom: spacing(1.5) }}>Add task</Text>\n        <TextInput\n          placeholder=\"Task title\"\n          placeholderTextColor={palette.muted}\n          value={title}\n          onChangeText={setTitle}\n          style={{\n            borderWidth:1,\n            borderColor: palette.border,\n            borderRadius: 12,\n            padding: spacing(2),\n            color: palette.text,\n            backgroundColor: palette.surfaceMuted,\n            marginBottom: spacing(1.5),\n          }}\n        />\n        <DateInputField value={dueDate} onChange={setDueDate} placeholder=\"Due date (optional)\" />\n        <QuickAction label=\"Add task\" onPress={add} />\n      </SurfaceCard>\n\n      {tasks.length === 0 ? (\n        <SurfaceCard>\n          <Text style={{ color: palette.muted }}>No tasks yet. Add one to start tracking progress.</Text>\n        </SurfaceCard>\n      ) : (\n        tasks.map(t => (\n          <SurfaceCard key={t.id} style={{ marginBottom: spacing(1.5) }}>\n            <Text style={{ color: palette.text, fontWeight:'600', fontSize: typography.h2 - 2 }}>{t.title}</Text>\n            <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>\n              Status: {t.status || 'TODO'}{t.dueDate ? ` - Due ${formatDate(t.dueDate)}` : ''}\n            </Text>\n            <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginTop: spacing(1.5) }}>\n              {!isTaskCompleted(t.status) ? (\n                <QuickAction label=\"Mark done\" tone=\"success\" onPress={() => done(t.id)} />\n              ) : null}\n              <QuickAction label=\"Delete\" tone=\"danger\" onPress={() => remove(t.id)} />\n            </View>\n          </SurfaceCard>\n        ))\n      )}\n    </View>\n  );\n}\n\r\nfunction JobSchedule({ jobId }){\n  const { token } = useAuth();\n  const [events, setEvents] = useState([]);\n  const [title, setTitle] = useState('');\n  const [startAt, setStartAt] = useState('');\n  const [endAt, setEndAt] = useState('');\n  const load = async()=> {\n    try {\n      const data = await api(`/calendar?jobId=${jobId}`,'GET',null,token);\n      setEvents(data);\n      db.transaction(tx => {\n        tx.executeSql('DELETE FROM calendar_cache WHERE jobId=?', [jobId]);\n        data.forEach(ev => tx.executeSql('INSERT OR REPLACE INTO calendar_cache (id, jobId, title, startAt, endAt) VALUES (?,?,?,?,?)', [ev.id, jobId, ev.title||'', ev.startAt||'', ev.endAt||'']));\n      });\n    } catch(e) {\n      db.transaction(tx => tx.executeSql('SELECT id, jobId, title, startAt, endAt FROM calendar_cache WHERE jobId=?', [jobId], (_, { rows }) => setEvents(rows._array || [])));\n    }\n  };\n  useEffect(()=>{ load(); },[]);\n  const add = async()=>{\n    if(!title.trim() || !startAt) return Alert.alert('Title and start time required');\n    await api('/calendar','POST',{ title, jobId, startAt, endAt }, token);\n    setTitle(''); setStartAt(''); setEndAt(''); load();\n  };\n  const remove = (id)=>{\n    Alert.alert('Delete event', 'Remove this schedule item?', [\n      { text:'Cancel', style:'cancel' },\n      { text:'Delete', style:'destructive', onPress: async ()=>{ await api(`/calendar/${id}`,'DELETE',null,token); load(); } },\n    ]);\n  };\n  return (\n    <View>\n      <SurfaceCard style={{ marginBottom: spacing(2) }}>\n        <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600', marginBottom: spacing(1.5) }}>Schedule event</Text>\n        <TextInput\n          placeholder=\"Event title\"\n          placeholderTextColor={palette.muted}\n          value={title}\n          onChangeText={setTitle}\n          style={{\n            borderWidth:1,\n            borderColor: palette.border,\n            borderRadius: 12,\n            padding: spacing(2),\n            color: palette.text,\n            backgroundColor: palette.surfaceMuted,\n            marginBottom: spacing(1.5),\n          }}\n        />\n        <DateInputField\n          value={startAt}\n          onChange={(date) => {\n            const existing = startAt || '';\n            const timePartIndex = existing.indexOf('T');\n            const timePart = timePartIndex > -1 ? existing.substring(timePartIndex) : 'T08:00:00';\n            setStartAt(`${date}${timePart}`);\n          }}\n          placeholder=\"Start date\"\n        />\n        <DateInputField\n          value={endAt}\n          onChange={(date) => {\n            if (!date) {\n              setEndAt('');\n              return;\n            }\n            const existing = endAt || '';\n            const timePartIndex = existing.indexOf('T');\n            const timePart = timePartIndex > -1 ? existing.substring(timePartIndex) : 'T17:00:00';\n            setEndAt(`${date}${timePart}`);\n          }}\n          placeholder=\"End date (optional)\"\n        />\n        <QuickAction label=\"Add event\" onPress={add} />\n      </SurfaceCard>\n\n      {events.length === 0 ? (\n        <SurfaceCard>\n          <Text style={{ color: palette.muted }}>No schedule entries yet.</Text>\n        </SurfaceCard>\n      ) : (\n        events.map(ev => {\n          const startLabel = ev.startAt ? `Starts ${formatDate(ev.startAt)}` : 'No start date';\n          const endLabel = ev.endAt ? ` - Ends ${formatDate(ev.endAt)}` : '';\n          return (\n            <SurfaceCard key={ev.id} style={{ marginBottom: spacing(1.5) }}>\n              <Text style={{ color: palette.text, fontWeight:'600', fontSize: typography.h2 - 2 }}>{ev.title}</Text>\n              <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>\n                {startLabel}{endLabel}\n              </Text>\n              <View style={{ flexDirection:'row', columnGap: spacing(1), marginTop: spacing(1.5) }}>\n                <QuickAction label=\"Delete\" tone=\"danger\" onPress={()=>remove(ev.id)} />\n              </View>\n            </SurfaceCard>\n          );\n        })\n      )}\n    </View>\n  );\n}\n\r\n// ---------- Leads / Estimates (with photo queue) ----------\r\nasync function processQueue(token){\r\n  return new Promise(resolve => {\r\n    db.transaction(tx => {\r\n      tx.executeSql('SELECT * FROM queue', [], async (_, { rows }) => {\r\n        const items = rows._array || [];\r\n        for(const q of items){\r\n          try{\r\n            const payload = JSON.parse(q.payload);\r\n            if(q.type === 'createLead'){ await api('/leads', 'POST', payload, token); }\r\n            if(q.type === 'uploadPhoto'){ await api('/upload/image', 'POST', { dataUrl: payload.dataUrl }, token); }\r\n            db.transaction(txx => txx.executeSql('DELETE FROM queue WHERE id=?', [q.id]));\r\n          }catch(e){ /* keep for later */ }\r\n        }\r\n        resolve();\r\n      });\r\n    });\r\n  });\r\n}\r\n\r\nfunction LeadsScreen({ navigation }){\r\n  const { token } = useAuth();\r\n  const [leads, setLeads] = useState([]);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const fetchLeads = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n      const data = await api('/leads', 'GET', null, token);\r\n      setLeads(data);\r\n      db.transaction(tx => {\r\n        tx.executeSql && tx.executeSql('DELETE FROM leads_cache;');\r\n        data.forEach(l => tx.executeSql && tx.executeSql(\r\n          'INSERT OR REPLACE INTO leads_cache (id, description, status) VALUES (?,?,?)',\r\n          [l.id, l.description || '', l.status || 'NEW']\r\n        ));\r\n      });\r\n    } catch(e){\r\n      db.transaction(tx =>\r\n        tx.executeSql && tx.executeSql('SELECT id, description, status FROM leads_cache', [], (_, { rows }) => setLeads(rows._array || []))\r\n      );\r\n    }\r\n    finally {\r\n      setLoading(false);\r\n    }\r\n  }, [token]);\r\n\r\n  useFocusEffect(useCallback(() => {\r\n    fetchLeads();\r\n  }, [fetchLeads]));\r\n\r\n  const onRefresh = useCallback(async () => {\r\n    setRefreshing(true);\r\n    await fetchLeads();\r\n    setRefreshing(false);\r\n  }, [fetchLeads]);\r\n\r\n  const deleteLead = useCallback((lead) => {\r\n    Alert.alert('Delete lead', `Delete lead #${lead.id}?`, [\r\n      { text:'Cancel', style:'cancel' },\r\n      { text:'Delete', style:'destructive', onPress: async () => {\r\n        try {\r\n          await api(`/leads/${lead.id}`,'DELETE',null,token);\r\n          setLeads(prev => prev.filter(l => l.id !== lead.id));\r\n          db.transaction(tx => tx.executeSql && tx.executeSql('DELETE FROM leads_cache WHERE id=?', [lead.id]));\r\n        } catch(err) {\r\n          Alert.alert('Error', err.message || 'Unable to delete lead');\r\n        }\r\n      }}\r\n    ]);\r\n  }, [token]);\r\n\r\n  const newLeadsCount = leads.filter(l => (l.status || '').toUpperCase() === 'NEW').length;\r\n\r\n  const renderLeadCard = (lead) => {\r\n    const customer = lead.Customer || {};\r\n    const jobsite = lead.Jobsite || {};\r\n    const addressParts = [\r\n      jobsite.addressLine1,\r\n      jobsite.addressLine2,\r\n      [jobsite.city, jobsite.state].filter(Boolean).join(', '),\r\n      jobsite.zip\r\n    ].filter(Boolean);\r\n    const address = addressParts.join(', ');\r\n    const statusKey = (lead.status || 'NEW').toUpperCase();\r\n    return (\r\n      <SurfaceCard key={lead.id}>\r\n        <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center' }}>\r\n          <View>\r\n            <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600' }}>Lead #{lead.id}</Text>\r\n            <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>{customer.name || 'Unknown customer'}</Text>\r\n          </View>\r\n          <StatusPill status={statusKey} />\r\n        </View>\r\n        {customer.phone ? <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>{customer.phone}</Text> : null}\r\n        {customer.email ? <Text style={{ color: palette.muted }}>{customer.email}</Text> : null}\r\n        {address ? <Text style={{ color: palette.muted, marginTop: spacing(1) }}>{address}</Text> : null}\r\n        <Text numberOfLines={3} style={{ color: palette.text, marginTop: spacing(1.5) }}>{lead.description || 'No scope captured yet.'}</Text>\r\n        <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginTop: spacing(2) }}>\r\n          <QuickAction label=\"Open\" onPress={() => navigation.navigate('EstimateEditor', { leadId: lead.id })} />\r\n          <QuickAction label=\"Convert\" tone=\"success\" onPress={() => navigation.navigate('Jobs')} />\r\n          <QuickAction label=\"Delete\" tone=\"danger\" onPress={() => deleteLead(lead)} />\r\n        </View>\r\n      </SurfaceCard>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\r\n      <FlatList\r\n        data={leads}\r\n        keyExtractor={item => String(item.id)}\r\n        contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(4) }}\r\n        refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} tintColor={palette.primary} />}\r\n        ListHeaderComponent={\r\n          <View style={{ marginBottom: spacing(3) }}>\r\n            <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center', marginBottom: spacing(2) }}>\r\n              <View>\r\n                <Text style={{ color: palette.text, fontSize: typography.h1, fontWeight:'700' }}>Leads</Text>\r\n                <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>Keep the funnel moving</Text>\r\n              </View>\r\n              <QuickAction label=\"New lead\" onPress={() => navigation.navigate('NewLead')} />\r\n            </View>\r\n            <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(2), rowGap: spacing(2) }}>\r\n              <View style={{ flexBasis:'48%', minWidth: 160 }}>\r\n                <SummaryCard title=\"Total\" value={leads.length} subtitle={`${newLeadsCount} new`} tone=\"info\" />\r\n              </View>\r\n              <View style={{ flexBasis:'48%', minWidth: 160 }}>\r\n                <SummaryCard title=\"Outstanding\" value={newLeadsCount} subtitle=\"Require follow up\" tone=\"warning\" />\r\n              </View>\r\n            </View>\r\n          </View>\r\n        }\r\n        renderItem={({ item }) => renderLeadCard(item)}\r\n        ListEmptyComponent={\r\n          loading ? (\r\n            <SurfaceCard style={{ alignItems:'center', paddingVertical: spacing(4) }}>\r\n              <ActivityIndicator color={palette.primary} />\r\n              <Text style={{ color: palette.muted, marginTop: spacing(1) }}>Loading leads...</Text>\r\n            </SurfaceCard>\r\n          ) : (\r\n            <SurfaceCard>\r\n              <Text style={{ color: palette.muted }}>No leads yet. Capture a lead to get started.</Text>\r\n            </SurfaceCard>\r\n          )\r\n        }\r\n      />\r\n    </SafeAreaView>\r\n  );\r\n}\r\nfunction NewLeadScreen({ navigation }){\r\n  const { token } = useAuth();\r\n  const [description, setDescription] = useState('');\r\n  const [status, setStatus] = useState('NEW');\r\n  const [customerName, setCustomerName] = useState('');\r\n  const [customerPhone, setCustomerPhone] = useState('');\r\n  const [customerEmail, setCustomerEmail] = useState('');\r\n  const [addressLine1, setAddressLine1] = useState('');\r\n  const [addressLine2, setAddressLine2] = useState('');\r\n  const [city, setCity] = useState('');\r\n  const [stateCode, setStateCode] = useState('');\r\n  const [zip, setZip] = useState('');\r\n  const [showCustomerSection, setShowCustomerSection] = useState(false);\r\n  const [showJobsiteSection, setShowJobsiteSection] = useState(false);\r\n  const statuses = ['NEW','CONTACTED','ESTIMATING','CONVERTED','CLOSED_LOST'];\r\n\r\n  const buildPayload = () => {\r\n    const customer = [customerName, customerPhone, customerEmail].some(v => v && v.trim())\r\n      ? {\r\n          name: customerName.trim(),\r\n          phone: customerPhone.trim(),\r\n          email: customerEmail.trim(),\r\n        }\r\n      : null;\r\n    const jobsite = [addressLine1, addressLine2, city, stateCode, zip].some(v => v && v.trim())\r\n      ? {\r\n          addressLine1: addressLine1.trim(),\r\n          addressLine2: addressLine2.trim(),\r\n          city: city.trim(),\r\n          state: stateCode.trim(),\r\n          zip: zip.trim(),\r\n        }\r\n      : null;\r\n    return {\r\n      description,\r\n      status,\r\n      customer,\r\n      jobsite,\r\n    };\r\n  };\r\n\r\n  const createLeadOnline = async () => {\r\n    const payload = buildPayload();\r\n    const created = await api('/leads', 'POST', payload, token);\r\n    navigation.replace('EstimateEditor', { leadId: created.id });\r\n    Alert.alert('Lead created', `Lead #${created.id} ready to estimate.`);\r\n  };\r\n\r\n  const queueLead = () => {\r\n    const payload = buildPayload();\r\n    db.transaction(tx => tx.executeSql('INSERT INTO queue (type, payload) VALUES (?,?)', ['createLead', JSON.stringify(payload)]));\r\n    Alert.alert('Saved offline', 'We will submit this lead when you reconnect.');\r\n    navigation.goBack();\r\n  };\r\n\r\n  const submit = async () => {\r\n    if(!description.trim()){\r\n      Alert.alert('Missing scope', 'Please describe the job or scope of work.');\r\n      return;\r\n    }\r\n    try {\r\n      await createLeadOnline();\r\n    } catch(e){\r\n      queueLead();\r\n    }\r\n  };\r\n\r\n  const chipStyle = (active) => ({\r\n    paddingHorizontal: spacing(2),\r\n    paddingVertical: spacing(1),\r\n    borderRadius: 999,\r\n    borderWidth: 1,\r\n    borderColor: active ? palette.primary : palette.border,\r\n    backgroundColor: active ? '#d9f2ed' : palette.surface,\r\n  });\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\r\n      <ScrollView contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(6) }}>\r\n        <SurfaceCard style={{ marginBottom: spacing(3) }}>\r\n          <Text style={{ color: palette.text, fontSize: typography.h1, fontWeight:'700', marginBottom: spacing(2) }}>New lead</Text>\r\n          <Text style={{ color: palette.muted, fontWeight:'600', marginBottom: spacing(1) }}>Scope</Text>\r\n          <TextInput\r\n            placeholder=\"Describe the job...\"\r\n            placeholderTextColor={palette.muted}\r\n            value={description}\r\n            onChangeText={setDescription}\r\n            multiline\r\n            style={{\r\n              borderWidth: 1,\r\n              borderColor: palette.border,\r\n              borderRadius: 12,\r\n              padding: spacing(2),\r\n              minHeight: 120,\r\n              color: palette.text,\r\n              backgroundColor: palette.surfaceMuted,\r\n              textAlignVertical: 'top',\r\n            }}\r\n          />\r\n          <Text style={{ color: palette.muted, fontWeight:'600', marginTop: spacing(2), marginBottom: spacing(1) }}>Status</Text>\r\n          <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1) }}>\r\n            {statuses.map(s => {\r\n              const active = status === s;\r\n              return (\r\n                <TouchableOpacity key={s} onPress={() => setStatus(s)} activeOpacity={0.85} style={chipStyle(active)}>\r\n                  <Text style={{ color: active ? palette.primaryStrong : palette.muted, fontWeight:'600', fontSize: typography.small }}>{s.replace('_',' ')}</Text>\r\n                </TouchableOpacity>\r\n              );\r\n            })}\r\n          </View>\r\n          <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center', marginTop: spacing(3) }}>\r\n            <QuickAction label=\"Save offline\" tone=\"muted\" onPress={queueLead} />\r\n            <TouchableOpacity\r\n              onPress={submit}\r\n              activeOpacity={0.85}\r\n              style={{ backgroundColor: palette.primary, paddingHorizontal: spacing(3), paddingVertical: spacing(1.5), borderRadius: 12 }}\r\n            >\r\n              <Text style={{ color:'#fff', fontWeight:'700' }}>Create lead</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </SurfaceCard>\r\n\r\n        <SurfaceCard style={{ marginBottom: spacing(3) }}>\r\n          <TouchableOpacity\r\n            onPress={() => setShowCustomerSection(v => !v)}\r\n            style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center' }}\r\n            activeOpacity={0.8}\r\n          >\r\n            <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600' }}>Customer details</Text>\r\n            <Text style={{ color: palette.primary, fontWeight:'600' }}>{showCustomerSection ? 'Hide' : 'Add'}</Text>\r\n          </TouchableOpacity>\r\n          {showCustomerSection ? (\r\n            <View style={{ marginTop: spacing(2) }}>\r\n              <TextInput\r\n                placeholder=\"Name\"\r\n                placeholderTextColor={palette.muted}\r\n                value={customerName}\r\n                onChangeText={setCustomerName}\r\n                style={{\r\n                  borderWidth: 1,\r\n                  borderColor: palette.border,\r\n                  borderRadius: 12,\r\n                  padding: spacing(2),\r\n                  color: palette.text,\r\n                  backgroundColor: palette.surfaceMuted,\r\n                  marginBottom: spacing(1.5),\r\n                }}\r\n              />\r\n              <TextInput\r\n                placeholder=\"Phone\"\r\n                placeholderTextColor={palette.muted}\r\n                keyboardType=\"phone-pad\"\r\n                value={customerPhone}\r\n                onChangeText={setCustomerPhone}\r\n                style={{\r\n                  borderWidth: 1,\r\n                  borderColor: palette.border,\r\n                  borderRadius: 12,\r\n                  padding: spacing(2),\r\n                  color: palette.text,\r\n                  backgroundColor: palette.surfaceMuted,\r\n                  marginBottom: spacing(1.5),\r\n                }}\r\n              />\r\n              <TextInput\r\n                placeholder=\"Email\"\r\n                placeholderTextColor={palette.muted}\r\n                keyboardType=\"email-address\"\r\n                autoCapitalize=\"none\"\r\n                value={customerEmail}\r\n                onChangeText={setCustomerEmail}\r\n                style={{\r\n                  borderWidth: 1,\r\n                  borderColor: palette.border,\r\n                  borderRadius: 12,\r\n                  padding: spacing(2),\r\n                  color: palette.text,\r\n                  backgroundColor: palette.surfaceMuted,\r\n                }}\r\n              />\r\n            </View>\r\n          ) : (\r\n            <Text style={{ color: palette.muted, marginTop: spacing(1.5) }}>Add contact details to help follow up faster.</Text>\r\n          )}\r\n        </SurfaceCard>\r\n\r\n        <SurfaceCard>\r\n          <TouchableOpacity\r\n            onPress={() => setShowJobsiteSection(v => !v)}\r\n            style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center' }}\r\n            activeOpacity={0.8}\r\n          >\r\n            <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600' }}>Jobsite address</Text>\r\n            <Text style={{ color: palette.primary, fontWeight:'600' }}>{showJobsiteSection ? 'Hide' : 'Add'}</Text>\r\n          </TouchableOpacity>\r\n          {showJobsiteSection ? (\r\n            <View style={{ marginTop: spacing(2) }}>\r\n              <TextInput\r\n                placeholder=\"Address line 1\"\r\n                placeholderTextColor={palette.muted}\r\n                value={addressLine1}\r\n                onChangeText={setAddressLine1}\r\n                style={{\r\n                  borderWidth: 1,\r\n                  borderColor: palette.border,\r\n                  borderRadius: 12,\r\n                  padding: spacing(2),\r\n                  color: palette.text,\r\n                  backgroundColor: palette.surfaceMuted,\r\n                  marginBottom: spacing(1.5),\r\n                }}\r\n              />\r\n              <TextInput\r\n                placeholder=\"Address line 2\"\r\n                placeholderTextColor={palette.muted}\r\n                value={addressLine2}\r\n                onChangeText={setAddressLine2}\r\n                style={{\r\n                  borderWidth: 1,\r\n                  borderColor: palette.border,\r\n                  borderRadius: 12,\r\n                  padding: spacing(2),\r\n                  color: palette.text,\r\n                  backgroundColor: palette.surfaceMuted,\r\n                  marginBottom: spacing(1.5),\r\n                }}\r\n              />\r\n              <View style={{ flexDirection:'row', columnGap: spacing(1.5) }}>\r\n                <View style={{ flex:1 }}>\r\n                  <TextInput\r\n                    placeholder=\"City\"\r\n                    placeholderTextColor={palette.muted}\r\n                    value={city}\r\n                    onChangeText={setCity}\r\n                    style={{\r\n                      borderWidth: 1,\r\n                      borderColor: palette.border,\r\n                      borderRadius: 12,\r\n                      padding: spacing(2),\r\n                      color: palette.text,\r\n                      backgroundColor: palette.surfaceMuted,\r\n                      marginBottom: spacing(1.5),\r\n                    }}\r\n                  />\r\n                </View>\r\n                <View style={{ width: 80 }}>\r\n                  <TextInput\r\n                    placeholder=\"State\"\r\n                    placeholderTextColor={palette.muted}\r\n                    value={stateCode}\r\n                    onChangeText={setStateCode}\r\n                    style={{\r\n                      borderWidth: 1,\r\n                      borderColor: palette.border,\r\n                      borderRadius: 12,\r\n                      padding: spacing(2),\r\n                      color: palette.text,\r\n                      backgroundColor: palette.surfaceMuted,\r\n                      marginBottom: spacing(1.5),\r\n                    }}\r\n                  />\r\n                </View>\r\n                <View style={{ width: 100 }}>\r\n                  <TextInput\r\n                    placeholder=\"ZIP\"\r\n                    placeholderTextColor={palette.muted}\r\n                    value={zip}\r\n                    onChangeText={setZip}\r\n                    style={{\r\n                      borderWidth: 1,\r\n                      borderColor: palette.border,\r\n                      borderRadius: 12,\r\n                      padding: spacing(2),\r\n                      color: palette.text,\r\n                      backgroundColor: palette.surfaceMuted,\r\n                      marginBottom: spacing(1.5),\r\n                    }}\r\n                  />\r\n                </View>\r\n              </View>\r\n            </View>\r\n          ) : (\r\n            <Text style={{ color: palette.muted, marginTop: spacing(1.5) }}>Add a jobsite to keep crews aligned.</Text>\r\n          )}\r\n        </SurfaceCard>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\nfunction EstimateEditorScreen({ route, navigation }){\r\n  const { token, user } = useAuth();\r\n  const { leadId } = route.params || {};\r\n  const [estimateId, setEstimateId] = useState(null);\r\n  const [items, setItems] = useState([]);\r\n  const [desc, setDesc] = useState('');\r\n  const [qty, setQty] = useState('1');\r\n  const [price, setPrice] = useState('0');\r\n  const [notes, setNotes] = useState('');\r\n  const [photoUrl, setPhotoUrl] = useState(null);\r\n  const [subtotal, setSubtotal] = useState(0);\n  const [taxRate, setTaxRate] = useState('7');\n  const [tax, setTax] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [leadDetails, setLeadDetails] = useState(null);\r\n  const [leadStatus, setLeadStatus] = useState('NEW');\r\n  const [leadScope, setLeadScope] = useState('');\r\n  const [leadCustomerName, setLeadCustomerName] = useState('');\r\n  const [leadCustomerPhone, setLeadCustomerPhone] = useState('');\r\n  const [leadCustomerEmail, setLeadCustomerEmail] = useState('');\r\n  const [leadAddressLine1, setLeadAddressLine1] = useState('');\r\n  const [leadAddressLine2, setLeadAddressLine2] = useState('');\r\n  const [leadCity, setLeadCity] = useState('');\r\n  const [leadStateCode, setLeadStateCode] = useState('');\r\n  const [leadZip, setLeadZip] = useState('');\r\n  const leadStatuses = ['NEW','CONTACTED','ESTIMATING','CONVERTED','CLOSED_LOST'];\r\n\r\n  const loadLead = useCallback(async () => {\r\n    if (!leadId) return;\r\n    try {\r\n      const data = await api(`/leads/${leadId}`,'GET',null,token);\r\n      setLeadDetails(data);\r\n      setLeadStatus(data.status || 'NEW');\r\n      setLeadScope(data.description || '');\r\n      const customer = data.Customer || {};\r\n      const jobsite = data.Jobsite || {};\r\n      setLeadCustomerName(customer.name || '');\r\n      setLeadCustomerPhone(customer.phone || '');\r\n      setLeadCustomerEmail(customer.email || '');\r\n      setLeadAddressLine1(jobsite.addressLine1 || '');\r\n      setLeadAddressLine2(jobsite.addressLine2 || '');\r\n      setLeadCity(jobsite.city || '');\r\n      setLeadStateCode(jobsite.state || '');\r\n      setLeadZip(jobsite.zip || '');\r\n    } catch(e) { }\r\n  }, [leadId, token]);\r\n\r\n  useEffect(() => {\r\n    loadLead();\r\n  }, [loadLead]);\r\n\r\n  const createEstimate = async () => {\n    const est = await api('/estimates', 'POST', {\n      leadId,\n      customerId: leadDetails?.customerId ?? null,\n      jobsiteId: leadDetails?.jobsiteId ?? null,\n      subtotal: 0,\n      taxRate: parseFloat(taxRate) || 0,\n      total: 0\n    }, token);\n    setEstimateId(est.id);\n    return est;\n  };\n\n  const ensureEstimate = useCallback(async () => {\n    if (estimateId) return estimateId;\n    const created = await createEstimate();\n    setEstimateId(created.id);\n    return created.id;\n  }, [estimateId, createEstimate]);\n\n  useEffect(() => {\n    const rate = parseFloat(taxRate) || 0;\n    const newSubtotal = items.reduce((sum, item) => sum + (parseFloat(item.qty || 0) * parseFloat(item.unitPrice || 0)), 0);\n    const newTax = newSubtotal * (rate / 100);\n    setSubtotal(newSubtotal);\n    setTax(newTax);\n    setTotal(newSubtotal + newTax);\n  }, [items, taxRate]);\n\n  const addItem = async () => {\n    if (!desc.trim()) {\n      Alert.alert('Line item', 'Please add a description.');\n      return;\n    }\n    try {\n      const targetId = await ensureEstimate();\n      const payload = {\n        description: desc.trim(),\n        qty: parseFloat(qty) || 1,\n        unitPrice: parseFloat(price) || 0,\n      };\n      const item = await api(`/estimates/${targetId}/items`, 'POST', payload, token);\n      setItems(prev => [item, ...prev]);\n      setDesc('');\n      setQty('1');\n      setPrice('0');\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to add line item');\n    }\n  };\n\n  const saveLeadDetails = async () => {\n    if (!leadId) return;\n    const customerPayload = [leadCustomerName, leadCustomerPhone, leadCustomerEmail].some(v => v && v.trim()) ? {\n      name: leadCustomerName.trim(),\n      phone: leadCustomerPhone.trim(),\n      email: leadCustomerEmail.trim(),\n    } : null;\n    const jobsitePayload = [leadAddressLine1, leadAddressLine2, leadCity, leadStateCode, leadZip].some(v => v && v.trim()) ? {\n      addressLine1: leadAddressLine1.trim(),\n      addressLine2: leadAddressLine2.trim(),\n      city: leadCity.trim(),\n      state: leadStateCode.trim(),\n      zip: leadZip.trim(),\n    } : null;\n    try {\n      await api(`/leads/${leadId}`,'PATCH',{\n        description: leadScope,\n        status: leadStatus,\n        customer: customerPayload,\n        jobsite: jobsitePayload,\n      }, token);\n      Alert.alert('Saved', 'Lead details updated.');\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to save lead details');\n    }\n  };\n\n  const pickPhoto = async () => {\n    const result = await ImagePicker.launchImageLibraryAsync({\n      allowsEditing: false,\n      quality: 0.6,\n    });\n    if (!result.canceled && result.assets?.length) {\n      setPhotoUrl(result.assets[0].uri);\n    }\n  };\n\n  return (\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\n      <ScrollView contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(6) }}>\n        <SurfaceCard style={{ marginBottom: spacing(3) }}>\n          <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700', marginBottom: spacing(1.5) }}>Lead summary</Text>\n          <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1.5), marginBottom: spacing(2) }}>\n            {leadStatuses.map(s => {\n              const selected = leadStatus === s;\n              return (\n                <QuickAction\n                  key={s}\n                  label={s.replace('_',' ')}\n                  tone={selected ? 'primary' : 'muted'}\n                  onPress={() => setLeadStatus(s)}\n                />\n              );\n            })}\n          </View>\n          <TextInput\n            placeholder=\"Scope / project notes\"\n            placeholderTextColor={palette.muted}\n            value={leadScope}\n            onChangeText={setLeadScope}\n            multiline\n            style={{\n              borderWidth:1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              minHeight: 120,\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted,\n              textAlignVertical: 'top',\n            }}\n          />\n          <View style={{ flexDirection:'row', justifyContent:'flex-end', marginTop: spacing(2) }}>\n            <QuickAction label=\"Save lead\" onPress={saveLeadDetails} />\n          </View>\n        </SurfaceCard>\n\n        <SurfaceCard style={{ marginBottom: spacing(3) }}>\n          <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700', marginBottom: spacing(1.5) }}>Line items</Text>\n          <TextInput\n            placeholder=\"Describe the work or material\"\n            placeholderTextColor={palette.muted}\n            value={desc}\n            onChangeText={setDesc}\n            style={{\n              borderWidth:1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted,\n              marginBottom: spacing(1.5),\n            }}\n          />\n          <View style={{ flexDirection:'row', columnGap: spacing(1.5), marginBottom: spacing(1.5) }}>\n            <TextInput\n              placeholder=\"Qty\"\n              placeholderTextColor={palette.muted}\n              value={qty}\n              onChangeText={setQty}\n              keyboardType=\"numeric\"\n              style={{\n                flex:1,\n                borderWidth:1,\n                borderColor: palette.border,\n                borderRadius: 12,\n                padding: spacing(2),\n                color: palette.text,\n                backgroundColor: palette.surfaceMuted,\n              }}\n            />\n            <TextInput\n              placeholder=\"Unit price\"\n              placeholderTextColor={palette.muted}\n              value={price}\n              onChangeText={setPrice}\n              keyboardType=\"numeric\"\n              style={{\n                flex:1,\n                borderWidth:1,\n                borderColor: palette.border,\n                borderRadius: 12,\n                padding: spacing(2),\n                color: palette.text,\n                backgroundColor: palette.surfaceMuted,\n              }}\n            />\n            <QuickAction label=\"Add\" onPress={addItem} />\n          </View>\n          {items.length === 0 ? (\n            <Text style={{ color: palette.muted }}>No line items yet.</Text>\n          ) : (\n            items.map((item, idx) => (\n              <SurfaceCard key={item.id || idx} style={{ marginBottom: spacing(1.5) }}>\n                <Text style={{ color: palette.text, fontWeight:'600' }}>{item.description}</Text>\n                <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>\n                  Qty {item.qty} x ${parseFloat(item.unitPrice || 0).toFixed(2)} = {(parseFloat(item.qty || 0) * parseFloat(item.unitPrice || 0)).toFixed(2)}\n                </Text>\n              </SurfaceCard>\n            ))\n          )}\n          <View style={{ marginTop: spacing(2), borderTopWidth:1, borderTopColor: palette.border, paddingTop: spacing(2) }}>\n            <Text style={{ color: palette.muted }}>Tax rate (%)</Text>\n            <TextInput\n              value={String(taxRate)}\n              onChangeText={setTaxRate}\n              keyboardType=\"numeric\"\n              placeholderTextColor={palette.muted}\n              style={{\n                marginTop: spacing(1),\n                borderWidth:1,\n                borderColor: palette.border,\n                borderRadius: 12,\n                padding: spacing(2),\n                color: palette.text,\n                backgroundColor: palette.surfaceMuted,\n              }}\n            />\n            <View style={{ marginTop: spacing(2) }}>\n              <Text style={{ color: palette.text }}>Subtotal: ${subtotal.toFixed(2)}</Text>\n              <Text style={{ color: palette.text }}>Tax: ${tax.toFixed(2)}</Text>\n              <Text style={{ color: palette.text, fontWeight:'700' }}>Total: ${total.toFixed(2)}</Text>\n            </View>\n          </View>\n        </SurfaceCard>\n\n        <SurfaceCard>\n          <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700', marginBottom: spacing(1.5) }}>Attachments & notes</Text>\n          <TextInput\n            placeholder=\"Internal notes\"\n            placeholderTextColor={palette.muted}\n            value={notes}\n            onChangeText={setNotes}\n            multiline\n            style={{\n              borderWidth:1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              minHeight: 100,\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted,\n              textAlignVertical: 'top',\n            }}\n          />\n          <View style={{ flexDirection:'row', columnGap: spacing(1.5), marginTop: spacing(1.5) }}>\n            <QuickAction label=\"Add photo\" onPress={pickPhoto} />\n          </View>\n          {photoUrl ? (\n            <Image source={{ uri: photoUrl }} style={{ height: 160, borderRadius: 12, marginTop: spacing(2) }} />\n          ) : null}\n        </SurfaceCard>\n      </ScrollView>\n    </SafeAreaView>\n  );\n}\n\r\nfunction ScheduleScreen({ navigation }){\r\n  const { token } = useAuth();\r\n  const [jobs, setJobs] = useState([]);\r\n  const [filter, setFilter] = useState('ALL');\r\n  const [queueCount, setQueueCount] = useState(0);\r\n  const [syncing, setSyncing] = useState(false);\r\n\r\n  const loadQueueCount = useCallback(() => {\r\n    db.transaction(tx => tx.executeSql('SELECT COUNT(*) as c FROM queue', [], (_, { rows }) => setQueueCount((rows._array?.[0]?.c)||0)));\r\n  }, []);\r\n\r\n  const load = useCallback(async () => {\r\n    try {\r\n      const data = await api('/jobs','GET',null,token);\r\n      setJobs(data);\r\n      db.transaction(tx => {\r\n        tx.executeSql('DELETE FROM jobs_cache;');\r\n        data.forEach(j => tx.executeSql('INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)', [j.id, j.name||'', j.status||'SCHEDULED', j.startDate||'', j.endDate||'', j.notes||'']));\r\n      });\r\n    } catch(e) {\r\n      db.transaction(tx => tx.executeSql('SELECT id, name, status, startDate, endDate, notes FROM jobs_cache', [], (_, { rows }) => setJobs(rows._array || [])));\r\n    }\r\n  }, [token]);\r\n\r\n  useEffect(() => {\r\n    load();\r\n    loadQueueCount();\r\n  }, [load, loadQueueCount]);\r\n\r\n  const filters = [\r\n    { key:'ALL', label:'All' },\r\n    { key:'TODAY', label:'Today' },\r\n    { key:'WEEK', label:'This week' },\r\n  ];\r\n\r\n  const inRange = useCallback((dateValue) => {\r\n    if (filter === 'ALL') return true;\r\n    if (!dateValue) return false;\r\n    const today = new Date();\r\n    const dt = new Date(dateValue);\r\n    if (Number.isNaN(dt.getTime())) return false;\r\n    if (filter === 'TODAY') {\r\n      return dt.getFullYear() === today.getFullYear() && dt.getMonth() === today.getMonth() && dt.getDate() === today.getDate();\r\n    }\r\n    const start = new Date(today);\r\n    start.setHours(0, 0, 0, 0);\r\n    start.setDate(today.getDate() - today.getDay());\r\n    const end = new Date(start);\r\n    end.setDate(start.getDate() + 6);\r\n    return dt >= start && dt <= end;\r\n  }, [filter]);\r\n\r\n  const filteredJobs = useMemo(() => (\r\n    jobs\r\n      .filter(job => inRange(job.startDate))\r\n      .sort((a, b) => new Date(a.startDate || 0) - new Date(b.startDate || 0))\r\n  ), [jobs, inRange]);\r\n\r\n  const handleSync = useCallback(async () => {\r\n    setSyncing(true);\r\n    try {\r\n      await processQueue(token);\r\n      await load();\r\n      loadQueueCount();\r\n    } finally {\r\n      setSyncing(false);\r\n    }\r\n  }, [token, load, loadQueueCount]);\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\r\n      <ScrollView contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(6) }}>\r\n        <Text style={{ color: palette.text, fontSize: typography.h1, fontWeight:'700', marginBottom: spacing(2) }}>Schedule</Text>\r\n        <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1.5), marginBottom: spacing(2) }}>\r\n          {filters.map(option => (\r\n            <QuickAction\r\n              key={option.key}\r\n              label={option.label}\r\n              tone={filter === option.key ? 'primary' : 'muted'}\r\n              onPress={() => setFilter(option.key)}\r\n            />\r\n          ))}\r\n        </View>\r\n        <SurfaceCard style={{ marginBottom: spacing(3), flexDirection:'row', justifyContent:'space-between', alignItems:'center' }}>\r\n          <View>\r\n            <Text style={{ color: palette.text, fontWeight:'600' }}>Offline queue</Text>\r\n            <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>{queueCount} items waiting to sync</Text>\r\n          </View>\r\n          <QuickAction label={syncing ? 'Syncing...' : 'Sync now'} tone={syncing ? 'muted' : 'primary'} onPress={syncing ? undefined : handleSync} />\r\n        </SurfaceCard>\r\n\r\n        {filteredJobs.length === 0 ? (\r\n          <SurfaceCard>\r\n            <Text style={{ color: palette.muted }}>No jobs {filter !== 'ALL' ? 'in this range' : 'scheduled yet'}. Convert a lead or create a job to populate your schedule.</Text>\r\n          </SurfaceCard>\r\n        ) : (\r\n          filteredJobs.map(job => {\r\n            const jobsite = job.Jobsite || {};\r\n            const addressParts = [\r\n              jobsite.addressLine1,\r\n              jobsite.addressLine2,\r\n              [jobsite.city, jobsite.state].filter(Boolean).join(', '),\r\n              jobsite.zip,\r\n            ].filter(Boolean);\r\n            const address = addressParts.join(', ');\r\n            const startLabel = job.startDate ? `Starts ${formatDate(job.startDate)}` : 'No start date';\r\n            const endLabel = job.endDate ? ` - Due ${formatDate(job.endDate)}` : '';\r\n            return (\r\n              <SurfaceCard key={job.id} style={{ marginBottom: spacing(2) }}>\r\n                <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center' }}>\r\n                  <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600' }}>{job.name || `Job #${job.id}`}</Text>\r\n                  <StatusPill status={job.status || 'SCHEDULED'} />\r\n                </View>\r\n                <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>\r\n                  {startLabel}{endLabel}\r\n                </Text>\r\n                {address ? <Text style={{ color: palette.muted, marginTop: spacing(1) }}>{address}</Text> : null}\r\n                {job.notes ? <Text style={{ color: palette.muted, marginTop: spacing(1) }}>{job.notes}</Text> : null}\r\n                <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginTop: spacing(2) }}>\r\n                  <QuickAction label=\"Open job\" onPress={() => navigation.navigate('JobDetail', { jobId: job.id })} />\r\n                  <QuickAction label=\"View tasks\" onPress={() => navigation.navigate('JobDetail', { jobId: job.id, tab: 'tasks' })} tone=\"muted\" />\r\n                </View>\r\n              </SurfaceCard>\r\n            );\r\n          })\r\n        )}\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\nfunction ProfileScreen({ navigation }){\r\n  const { setToken, user } = useAuth();\r\n  const isAdmin = (user?.role || '').toUpperCase() === 'ADMIN';\r\n  return (\r\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\r\n      <ScrollView contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(6) }}>\r\n        <Text style={{ color: palette.text, fontSize: typography.h1, fontWeight:'700', marginBottom: spacing(2) }}>Profile</Text>\r\n        <SurfaceCard style={{ marginBottom: spacing(3) }}>\r\n          <Text style={{ color: palette.muted, fontSize: typography.small, textTransform:'uppercase', fontWeight:'600' }}>Account</Text>\r\n          <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700', marginTop: spacing(1) }}>{user?.name || user?.fullName || 'Team member'}</Text>\r\n          <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>{user?.email || 'No email on file'}</Text>\r\n          <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>Role: {user?.role || 'TECH'}</Text>\r\n        </SurfaceCard>\r\n\r\n        <SurfaceCard>\r\n          <Text style={{ color: palette.muted, fontSize: typography.small, textTransform:'uppercase', fontWeight:'600', marginBottom: spacing(1.5) }}>Actions</Text>\r\n          {isAdmin ? (\r\n            <View style={{ marginBottom: spacing(1.5) }}>\r\n              <QuickAction label=\"Manage users\" onPress={() => navigation.navigate('UsersAdmin')} />\r\n            </View>\r\n          ) : null}\r\n          <QuickAction label=\"Sign out\" tone=\"danger\" onPress={() => setToken(null)} />\r\n        </SurfaceCard>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\nconst Stack = createNativeStackNavigator();\r\nconst Tabs = createBottomTabNavigator();\r\n\r\nfunction TabsNav(){\r\n  const { user } = useAuth();\r\n  const isAdmin = (user?.role || '').toUpperCase() === 'ADMIN';\r\n  return (\r\n    <Tabs.Navigator\r\n      screenOptions={{\r\n        headerShown: false,\r\n        tabBarActiveTintColor: palette.primary,\r\n        tabBarStyle: { backgroundColor: '#fff' },\r\n      }}\r\n    >\r\n      <Tabs.Screen name=\"Dashboard\" component={DashboardScreen} options={{ title: 'Home' }} />\r\n      <Tabs.Screen name=\"Leads\" component={LeadsScreen} />\r\n      <Tabs.Screen name=\"Jobs\" component={JobsKanbanScreen} options={{ title:'Jobs' }} />\r\n      {isAdmin ? <Tabs.Screen name=\"Invoices\" component={InvoicesScreen} /> : null}\r\n      <Tabs.Screen name=\"Schedule\" component={ScheduleScreen} />\r\n      <Tabs.Screen name=\"Profile\" component={ProfileScreen} options={{ title:\"Profile\" }} />\r\n    </Tabs.Navigator>\r\n  );\r\n}\r\n\r\nfunction LoginScreen() {\r\n  const [email, setEmail] = useState('admin@example.com');\r\n  // If you kept the hardcoded backend login, default to test123:\r\n  const [password, setPassword] = useState('test123');\r\n  const [busy, setBusy] = useState(false);\r\n\r\n  // <-- use the auth context to flip the app into \"logged-in\" mode\r\n  const { setToken, setUser } = useAuth();\r\n\r\n  async function login() {\r\n    try {\r\n      setBusy(true);\r\n      const res = await fetch(`${API_URL}/auth/login`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n      const data = await res.json();\r\n      if (!res.ok) throw new Error(data?.message || data?.error || 'Login failed');\r\n\r\n      // Accept dev or real payload shape\r\n      const tok = data.token || data.accessToken;\r\n      if (!tok) throw new Error('No token returned from server');\r\n\r\n      // Store token/user in global auth state + persist\r\n      const normalizedUser = data.user ? { ...data.user, role: normalizeRole(data.user.role) } : { email, role: 'ADMIN', name: 'Admin' };\r\n      setToken(tok);\r\n      setUser(normalizedUser);\r\n      try {\r\n        await SecureStore.setItemAsync('auth_token', tok);\r\n        await SecureStore.setItemAsync('auth_user', JSON.stringify(normalizedUser));\r\n      } catch {}\r\n\r\n      // Optional: toast\r\n      Alert.alert('Welcome', 'Logged in');\r\n    } catch (e) {\r\n      Alert.alert('Error', e.message);\r\n    } finally {\r\n      setBusy(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View style={{ flex: 1, padding: 20, justifyContent: 'center' }}>\r\n      <Text style={{ fontSize: 24, marginBottom: 16 }}>PrecisionTracker</Text>\r\n      <TextInput\r\n        placeholder=\"Email\"\r\n        autoCapitalize=\"none\"\r\n        value={email}\r\n        onChangeText={setEmail}\r\n        style={{ borderWidth: 1, padding: 12, marginBottom: 12 }}\r\n      />\r\n      <TextInput\r\n        placeholder=\"Password\"\r\n        secureTextEntry\r\n        value={password}\r\n        onChangeText={setPassword}\r\n        style={{ borderWidth: 1, padding: 12, marginBottom: 12 }}\r\n      />\r\n      <Button title={busy ? 'Signing in...' : 'Sign in'} onPress={login} disabled={busy} />\r\n    </View>\r\n  );\r\n}\r\n\r\n\r\nexport default function App(){\r\n  const [token, setToken] = useState(null);\r\n  const [user, setUser] = useState(null);\r\n  const [booting, setBooting] = useState(true);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    (async () => {\r\n      try {\r\n        const [tok, usr] = await Promise.all([\r\n          SecureStore.getItemAsync('auth_token'),\r\n          SecureStore.getItemAsync('auth_user')\r\n        ]);\r\n        if (mounted && tok) {\r\n          setToken(tok);\r\n          if (usr) {\r\n            const parsed = JSON.parse(usr);\r\n            parsed.role = normalizeRole(parsed.role);\r\n            setUser(parsed);\r\n          }\r\n        }\r\n      } catch {}\r\n      finally { if (mounted) setBooting(false); }\r\n    })();\r\n    return () => { mounted = false; };\r\n  }, []);\r\n\r\n  const authValue = {\r\n    token,\r\n    setToken: (t) => {\r\n      setToken(t);\r\n      if (!t) { try { SecureStore.deleteItemAsync('auth_token'); SecureStore.deleteItemAsync('auth_user'); } catch {} }\r\n    },\r\n    user,\r\n    setUser\r\n  };\r\n\r\n  if (booting) {\r\n    return (\r\n      <SafeAreaView style={{ flex:1, alignItems:'center', justifyContent:'center' }}>\r\n        <Text>Loading...</Text>\r\n      </SafeAreaView>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={authValue}>\r\n      <NavigationContainer>\r\n        {!token ? (\r\n          <Stack.Navigator>\r\n            <Stack.Screen name=\"Login\" component={LoginScreen} />\r\n          </Stack.Navigator>\r\n        ) : (\r\n          <Stack.Navigator>\r\n            <Stack.Screen name=\"Tabs\" component={TabsNav} options={{ headerShown:false }} />\r\n            <Stack.Screen name=\"NewLead\" component={NewLeadScreen} options={{ title:'New Lead' }} />\r\n            <Stack.Screen name=\"EstimateEditor\" component={EstimateEditorScreen} options={{ title:'Estimate' }} />\r\n            <Stack.Screen name=\"Signature\" component={SignatureScreen} options={{ title:'Signature' }} />\r\n            <Stack.Screen name=\"UsersAdmin\" component={UsersAdminScreen} options={{ title:'Users (Admin)' }} />\r\n            <Stack.Screen name=\"JobDetail\" component={JobDetailScreen} options={{ title:'Job' }} />\r\n          </Stack.Navigator>\r\n        )}\r\n      </NavigationContainer>\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}