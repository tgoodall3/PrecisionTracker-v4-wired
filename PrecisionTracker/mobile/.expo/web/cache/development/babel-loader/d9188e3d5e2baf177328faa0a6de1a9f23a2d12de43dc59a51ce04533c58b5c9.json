{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tyler\\\\Downloads\\\\PrecisionTracker-v4-wired\\\\PrecisionTracker\\\\mobile\\\\App.js\";\nimport React, { useEffect, useState, createContext, useContext, useRef, useCallback, useMemo } from 'react';\nimport { NavigationContainer, useFocusEffect } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport * as ImagePicker from 'expo-image-picker';\nimport * as FileSystem from 'expo-file-system';\nimport * as SQLite from 'expo-sqlite';\nimport Svg, { Path } from 'react-native-svg';\nimport ViewShot from 'react-native-view-shot';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"react-native-web/dist/exports/View\";\nimport * as SecureStore from 'expo-secure-store';\nimport DateTimePicker, { DateTimePickerAndroid } from '@react-native-community/datetimepicker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.EXPO_PUBLIC_API_URL || 'http://localhost:4000';\nfunction initOfflineTables(database) {\n  try {\n    if (!database || typeof database.transaction !== 'function') return;\n    database.transaction(tx => {\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS queue (id INTEGER PRIMARY KEY AUTOINCREMENT, type TEXT, payload TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS uploads (id INTEGER PRIMARY KEY AUTOINCREMENT, dataUrl TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS leads_cache (id INTEGER PRIMARY KEY, description TEXT, status TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS jobs_cache (id INTEGER PRIMARY KEY, name TEXT, status TEXT, startDate TEXT, endDate TEXT, notes TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS tasks_cache (id INTEGER PRIMARY KEY, jobId INTEGER, title TEXT, status TEXT, dueDate TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS calendar_cache (id INTEGER PRIMARY KEY, jobId INTEGER, title TEXT, startAt TEXT, endAt TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS estimates_cache (id INTEGER PRIMARY KEY, leadId INTEGER, subtotal REAL, taxRate REAL, total REAL, status TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS estimate_items_cache (id INTEGER PRIMARY KEY, estimateId INTEGER, description TEXT, qty REAL, unitPrice REAL);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS change_orders_cache (id INTEGER PRIMARY KEY, jobId INTEGER, title TEXT, amountDelta REAL, status TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS users_cache (id INTEGER PRIMARY KEY, email TEXT, fullName TEXT, role TEXT);');\n    });\n  } catch (e) {}\n}\nlet db;\nexport function getDb() {\n  if (db) return db;\n  if (Platform.OS === 'web') {\n    db = {\n      transaction: fn => fn({\n        executeSql: () => {}\n      }),\n      execAsync: async () => {},\n      runAsync: async () => {}\n    };\n    return db;\n  }\n  if ('openDatabaseSync' in SQLite) {\n    db = SQLite.openDatabaseSync('offline.db');\n    return db;\n  }\n  if ('openDatabaseAsync' in SQLite) {\n    db = {\n      transaction: fn => fn({\n        executeSql: () => {}\n      }),\n      execAsync: async () => {},\n      runAsync: async () => {}\n    };\n    return db;\n  }\n  db = {\n    transaction: fn => fn({\n      executeSql: () => {}\n    }),\n    execAsync: async () => {},\n    runAsync: async () => {}\n  };\n  return db;\n}\nconst dbHandle = getDb();\ninitOfflineTables(dbHandle);\nconst normalizeRole = role => {\n  if (!role) return 'TECH';\n  const r = String(role).toUpperCase();\n  if (['ADMIN', 'ESTIMATOR', 'SUPERVISOR', 'TECH'].includes(r)) return r;\n  if (r === 'STANDARD' || r === 'USER') return 'TECH';\n  return r;\n};\nconst AuthContext = createContext(null);\nfunction useAuth() {\n  return useContext(AuthContext);\n}\nasync function api(path, method = 'GET', body, token) {\n  const res = await fetch(`${API_URL}${path}`, {\n    method,\n    headers: Object.assign({\n      'Content-Type': 'application/json'\n    }, token ? {\n      Authorization: `Bearer ${token}`\n    } : {}),\n    body: body ? JSON.stringify(body) : undefined\n  });\n  if (!res.ok) {\n    throw new Error((await res.json()).error || 'Request failed');\n  }\n  return res.json();\n}\nconst palette = {\n  background: '#f4f6f8',\n  surface: '#ffffff',\n  surfaceMuted: '#f1f5f9',\n  border: '#e2e8f0',\n  text: '#0f172a',\n  muted: '#5f6b7d',\n  primary: '#2c8a7d',\n  primaryStrong: '#1f6a60',\n  success: '#219653',\n  warning: '#f59e0b',\n  danger: '#d14343',\n  info: '#2563eb'\n};\nconst spacing = (step = 1) => step * 8;\nconst typography = {\n  h1: 24,\n  h2: 18,\n  body: 15,\n  small: 12\n};\nconst floatingShadow = Platform.select({\n  ios: {\n    shadowColor: '#0f172a',\n    shadowOpacity: 0.08,\n    shadowRadius: 14,\n    shadowOffset: {\n      width: 0,\n      height: 6\n    }\n  },\n  android: {\n    elevation: 2\n  },\n  default: {}\n});\nconst pillTone = {\n  NEW: {\n    fg: palette.info,\n    bg: '#e6eeff',\n    label: 'New'\n  },\n  CONTACTED: {\n    fg: palette.primary,\n    bg: '#e6f4f2',\n    label: 'Contacted'\n  },\n  ESTIMATING: {\n    fg: palette.warning,\n    bg: '#fdf1d6',\n    label: 'Estimating'\n  },\n  CONVERTED: {\n    fg: palette.success,\n    bg: '#e6f6ec',\n    label: 'Converted'\n  },\n  CLOSED_LOST: {\n    fg: palette.muted,\n    bg: '#e2e8f0',\n    label: 'Lost'\n  },\n  SCHEDULED: {\n    fg: palette.primary,\n    bg: '#e6f4f2',\n    label: 'Scheduled'\n  },\n  IN_PROGRESS: {\n    fg: palette.info,\n    bg: '#e6eeff',\n    label: 'In progress'\n  },\n  COMPLETE: {\n    fg: palette.success,\n    bg: '#e6f6ec',\n    label: 'Complete'\n  },\n  DONE: {\n    fg: palette.success,\n    bg: '#e6f6ec',\n    label: 'Complete'\n  },\n  ON_HOLD: {\n    fg: palette.warning,\n    bg: '#fdf1d6',\n    label: 'On hold'\n  },\n  CANCELLED: {\n    fg: palette.muted,\n    bg: '#e2e8f0',\n    label: 'Cancelled'\n  },\n  DRAFT: {\n    fg: palette.muted,\n    bg: '#e2e8f0',\n    label: 'Draft'\n  },\n  SENT: {\n    fg: palette.info,\n    bg: '#e6eeff',\n    label: 'Sent'\n  },\n  PART_PAID: {\n    fg: palette.warning,\n    bg: '#fdf1d6',\n    label: 'Part paid'\n  },\n  PAID: {\n    fg: palette.success,\n    bg: '#e6f6ec',\n    label: 'Paid'\n  },\n  VOID: {\n    fg: palette.muted,\n    bg: '#f1f5f9',\n    label: 'Void'\n  }\n};\nconst toneMap = {\n  primary: {\n    fg: palette.primaryStrong,\n    bg: '#e0f3f0'\n  },\n  success: {\n    fg: palette.success,\n    bg: '#e6f6ec'\n  },\n  warning: {\n    fg: palette.warning,\n    bg: '#fdf1d6'\n  },\n  danger: {\n    fg: palette.danger,\n    bg: '#fde4e4'\n  },\n  info: {\n    fg: palette.info,\n    bg: '#e6eeff'\n  }\n};\nconst formInputBaseStyle = {\n  borderWidth: 1,\n  borderColor: palette.border,\n  borderRadius: 12,\n  paddingVertical: spacing(1.5),\n  paddingHorizontal: spacing(2),\n  color: palette.text,\n  backgroundColor: palette.surfaceMuted,\n  fontSize: typography.body,\n  marginBottom: spacing(1.5)\n};\nconst FormInput = React.forwardRef((props, ref) => _jsxDEV(TextInput, Object.assign({\n  ref: ref,\n  placeholderTextColor: palette.muted\n}, props, {\n  style: [formInputBaseStyle, props.style]\n}), void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 183,\n  columnNumber: 3\n}, this));\nFormInput.displayName = 'FormInput';\nconst formatCurrency = value => {\n  const amount = Number(value || 0);\n  if (Number.isNaN(amount)) return '$0';\n  return `$${amount.toLocaleString(undefined, {\n    minimumFractionDigits: amount % 1 ? 2 : 0,\n    maximumFractionDigits: 2\n  })}`;\n};\nconst formatDate = value => {\n  if (!value) return null;\n  const d = new Date(value);\n  if (Number.isNaN(d.getTime())) return value;\n  return d.toLocaleDateString(undefined, {\n    month: 'short',\n    day: 'numeric'\n  });\n};\nconst isTaskCompleted = status => {\n  if (!status) return false;\n  const key = String(status).toUpperCase();\n  return key === 'DONE' || key === 'COMPLETE';\n};\nfunction SurfaceCard({\n  children,\n  style,\n  onPress\n}) {\n  const content = _jsxDEV(View, {\n    style: [{\n      backgroundColor: palette.surface,\n      borderRadius: 16,\n      borderWidth: 1,\n      borderColor: palette.border,\n      padding: spacing(2)\n    }, floatingShadow, style],\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 5\n  }, this);\n  if (!onPress) return content;\n  return _jsxDEV(TouchableOpacity, {\n    activeOpacity: 0.85,\n    onPress: onPress,\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 225,\n    columnNumber: 5\n  }, this);\n}\nfunction StatusPill({\n  status\n}) {\n  if (!status) return null;\n  const key = String(status).toUpperCase();\n  const cfg = pillTone[key] || {\n    fg: palette.muted,\n    bg: '#e2e8f0',\n    label: status\n  };\n  return _jsxDEV(View, {\n    style: {\n      backgroundColor: cfg.bg,\n      borderRadius: 999,\n      paddingHorizontal: spacing(1.5),\n      paddingVertical: spacing(0.5)\n    },\n    children: _jsxDEV(Text, {\n      style: {\n        color: cfg.fg,\n        fontSize: typography.small,\n        fontWeight: '600'\n      },\n      children: cfg.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 236,\n    columnNumber: 5\n  }, this);\n}\nfunction SummaryCard({\n  title,\n  value,\n  subtitle,\n  tone = 'primary',\n  onPress\n}) {\n  const colors = toneMap[tone] || toneMap.primary;\n  return _jsxDEV(SurfaceCard, {\n    onPress: onPress,\n    style: {\n      backgroundColor: colors.bg,\n      borderColor: 'transparent',\n      padding: spacing(2.5)\n    },\n    children: [_jsxDEV(Text, {\n      style: {\n        color: palette.muted,\n        fontSize: typography.small,\n        textTransform: 'uppercase',\n        fontWeight: '700'\n      },\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), _jsxDEV(Text, {\n      style: {\n        color: colors.fg,\n        fontSize: 28,\n        fontWeight: '800',\n        marginTop: spacing(0.5)\n      },\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this), subtitle ? _jsxDEV(Text, {\n      style: {\n        color: palette.muted,\n        fontSize: typography.small,\n        marginTop: spacing(0.5)\n      },\n      children: subtitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 19\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 245,\n    columnNumber: 5\n  }, this);\n}\nfunction SectionHeader({\n  title,\n  actionLabel,\n  onAction\n}) {\n  return _jsxDEV(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      marginBottom: spacing(1.5)\n    },\n    children: [_jsxDEV(Text, {\n      style: {\n        color: palette.text,\n        fontSize: typography.h2,\n        fontWeight: '700'\n      },\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), actionLabel && onAction ? _jsxDEV(TouchableOpacity, {\n      onPress: onAction,\n      style: {\n        paddingHorizontal: spacing(1),\n        paddingVertical: spacing(0.5)\n      },\n      children: _jsxDEV(Text, {\n        style: {\n          color: palette.primary,\n          fontWeight: '600',\n          fontSize: typography.small\n        },\n        children: actionLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 5\n  }, this);\n}\nfunction QuickAction({\n  label,\n  onPress,\n  tone = 'primary'\n}) {\n  const toneStyles = (() => {\n    switch (tone) {\n      case 'danger':\n        return {\n          borderColor: '#fecdd3',\n          backgroundColor: '#fee2e2',\n          textColor: palette.danger\n        };\n      case 'success':\n        return {\n          borderColor: '#bbf7d0',\n          backgroundColor: '#dcfce7',\n          textColor: palette.success\n        };\n      case 'warning':\n        return {\n          borderColor: '#fde68a',\n          backgroundColor: '#fef3c7',\n          textColor: palette.warning\n        };\n      case 'muted':\n        return {\n          borderColor: palette.border,\n          backgroundColor: palette.surface,\n          textColor: palette.muted\n        };\n      default:\n        return {\n          borderColor: palette.border,\n          backgroundColor: palette.surfaceMuted,\n          textColor: palette.primary\n        };\n    }\n  })();\n  return _jsxDEV(TouchableOpacity, {\n    onPress: onPress,\n    activeOpacity: 0.85,\n    style: {\n      borderRadius: 10,\n      paddingHorizontal: spacing(1.5),\n      paddingVertical: spacing(0.75),\n      borderWidth: 1,\n      borderColor: toneStyles.borderColor,\n      backgroundColor: toneStyles.backgroundColor\n    },\n    children: _jsxDEV(Text, {\n      style: {\n        color: toneStyles.textColor,\n        fontWeight: '600',\n        fontSize: typography.small\n      },\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 285,\n    columnNumber: 5\n  }, this);\n}\nconst toInputDate = dateValue => {\n  const d = dateValue instanceof Date ? dateValue : new Date(dateValue);\n  if (Number.isNaN(d.getTime())) return '';\n  const yyyy = d.getFullYear();\n  const mm = String(d.getMonth() + 1).padStart(2, '0');\n  const dd = String(d.getDate()).padStart(2, '0');\n  return `${yyyy}-${mm}-${dd}`;\n};\nconst parseInputDate = value => {\n  if (!value) return null;\n  const parsed = new Date(value);\n  if (Number.isNaN(parsed.getTime())) return null;\n  return parsed;\n};\nfunction DateInputField({\n  value,\n  onChange,\n  placeholder = 'Select date',\n  minimumDate,\n  maximumDate,\n  style\n}) {\n  const [iosPickerVisible, setIosPickerVisible] = useState(false);\n  const parsed = parseInputDate(value) || new Date();\n  const applyDate = selectedDate => {\n    if (!selectedDate) return;\n    onChange(toInputDate(selectedDate));\n  };\n  const openPicker = () => {\n    const baseDate = parseInputDate(value) || new Date();\n    if (Platform.OS === 'android') {\n      DateTimePickerAndroid.open({\n        value: baseDate,\n        mode: 'date',\n        minimumDate: minimumDate ? parseInputDate(minimumDate) || undefined : undefined,\n        maximumDate: maximumDate ? parseInputDate(maximumDate) || undefined : undefined,\n        onChange: (event, selected) => {\n          if (event.type === 'set' && selected) applyDate(selected);\n        }\n      });\n    } else {\n      setIosPickerVisible(true);\n    }\n  };\n  const containerStyle = [{\n    marginBottom: spacing(1.5)\n  }, style];\n  return _jsxDEV(View, {\n    style: containerStyle,\n    children: [_jsxDEV(TouchableOpacity, {\n      onPress: openPicker,\n      activeOpacity: 0.85,\n      style: {\n        borderWidth: 1,\n        borderColor: palette.border,\n        borderRadius: 12,\n        backgroundColor: palette.surfaceMuted,\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(1.5)\n      },\n      children: [_jsxDEV(Text, {\n        style: {\n          flex: 1,\n          color: value ? palette.text : palette.muted,\n          fontSize: typography.body\n        },\n        children: value || placeholder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: {\n          fontSize: typography.h2 - 6,\n          color: palette.muted\n        },\n        children: \"CAL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 7\n    }, this), Platform.OS === 'ios' && iosPickerVisible ? _jsxDEV(DateTimePicker, {\n      value: parsed,\n      mode: \"date\",\n      display: \"inline\",\n      onChange: (event, selected) => {\n        if (event.type === 'set' && selected) {\n          applyDate(selected);\n        }\n        setIosPickerVisible(false);\n      },\n      style: {\n        marginTop: spacing(1)\n      },\n      minimumDate: minimumDate ? parseInputDate(minimumDate) || undefined : undefined,\n      maximumDate: maximumDate ? parseInputDate(maximumDate) || undefined : undefined\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 350,\n    columnNumber: 5\n  }, this);\n}\nconst TECH_ASSIGN_ROLES = ['TECH', 'SUPERVISOR', 'ESTIMATOR'];\nfunction TechSelector({\n  team = [],\n  value,\n  onSelect,\n  label,\n  allowAllRoles,\n  allowClear\n}) {\n  const options = useMemo(() => {\n    const normalized = team.map(member => Object.assign({}, member, {\n      role: normalizeRole(member.role)\n    }));\n    if (allowAllRoles) return normalized;\n    return normalized.filter(member => TECH_ASSIGN_ROLES.includes(member.role));\n  }, [team, allowAllRoles]);\n  if (!options.length) return null;\n  const renderLabel = label ? _jsxDEV(Text, {\n    style: {\n      color: palette.muted,\n      fontSize: typography.small,\n      marginBottom: spacing(1)\n    },\n    children: label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 405,\n    columnNumber: 5\n  }, this) : null;\n  return _jsxDEV(View, {\n    style: {\n      marginTop: spacing(1.5)\n    },\n    children: [renderLabel, _jsxDEV(View, {\n      style: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        columnGap: spacing(1),\n        rowGap: spacing(1)\n      },\n      children: [options.map(member => {\n        const selected = member.id === value;\n        const displayName = member.fullName || member.email;\n        const shortLabel = displayName.length > 22 ? `${displayName.slice(0, 21)}…` : displayName;\n        return _jsxDEV(QuickAction, {\n          label: shortLabel,\n          tone: selected ? 'primary' : 'muted',\n          onPress: () => onSelect(member.id)\n        }, member.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 13\n        }, this);\n      }), allowClear ? _jsxDEV(QuickAction, {\n        label: \"Clear\",\n        tone: \"muted\",\n        onPress: () => onSelect(null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 23\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 409,\n    columnNumber: 5\n  }, this);\n}\nfunction DashboardScreen({\n  navigation\n}) {\n  const {\n    token\n  } = useAuth();\n  const [loading, setLoading] = useState(true);\n  const [refreshing, setRefreshing] = useState(false);\n  const [leads, setLeads] = useState([]);\n  const [jobs, setJobs] = useState([]);\n  const [tasks, setTasks] = useState([]);\n  const [invoiceSummary, setInvoiceSummary] = useState(null);\n  const [lastUpdated, setLastUpdated] = useState(null);\n  const jobLookup = useMemo(() => {\n    const map = {};\n    for (const job of jobs) {\n      if (job?.id != null) {\n        map[job.id] = job;\n      }\n    }\n    return map;\n  }, [jobs]);\n  const loadData = useCallback(async (isPullRefresh = false) => {\n    if (!token) return;\n    isPullRefresh ? setRefreshing(true) : setLoading(true);\n    const fetchLeads = async () => {\n      try {\n        const data = await api('/leads', 'GET', null, token);\n        setLeads(data);\n        db.transaction(tx => {\n          tx.executeSql && tx.executeSql('DELETE FROM leads_cache;');\n          data.forEach(l => tx.executeSql && tx.executeSql('INSERT OR REPLACE INTO leads_cache (id, description, status) VALUES (?,?,?)', [l.id, l.description || '', l.status || 'NEW']));\n        });\n        return data;\n      } catch (e) {\n        return await new Promise(resolve => {\n          db.transaction(tx => tx.executeSql && tx.executeSql('SELECT id, description, status FROM leads_cache', [], (_, {\n            rows\n          }) => {\n            const fallback = rows?._array || [];\n            setLeads(fallback);\n            resolve(fallback);\n          }));\n        });\n      }\n    };\n    const fetchJobs = async () => {\n      try {\n        const data = await api('/jobs', 'GET', null, token);\n        setJobs(data);\n        db.transaction(tx => {\n          tx.executeSql && tx.executeSql('DELETE FROM jobs_cache;');\n          data.forEach(j => tx.executeSql && tx.executeSql('INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)', [j.id, j.name || '', j.status || 'SCHEDULED', j.startDate || '', j.endDate || '', j.notes || '']));\n        });\n        return data;\n      } catch (e) {\n        return await new Promise(resolve => {\n          db.transaction(tx => tx.executeSql && tx.executeSql('SELECT id, name, status, startDate, endDate, notes FROM jobs_cache', [], (_, {\n            rows\n          }) => {\n            const fallback = rows?._array || [];\n            setJobs(fallback);\n            resolve(fallback);\n          }));\n        });\n      }\n    };\n    const fetchTasks = async () => {\n      try {\n        const data = await api('/tasks', 'GET', null, token);\n        setTasks(data);\n        db.transaction(tx => {\n          data.forEach(t => tx.executeSql && tx.executeSql('INSERT OR REPLACE INTO tasks_cache (id, jobId, title, status, dueDate) VALUES (?,?,?,?,?)', [t.id, t.jobId || null, t.title || '', t.status || 'TODO', t.dueDate || '']));\n        });\n        return data;\n      } catch (e) {\n        return await new Promise(resolve => {\n          db.transaction(tx => tx.executeSql && tx.executeSql('SELECT id, jobId, title, status, dueDate FROM tasks_cache ORDER BY id DESC', [], (_, {\n            rows\n          }) => {\n            const fallback = rows?._array || [];\n            setTasks(fallback);\n            resolve(fallback);\n          }));\n        });\n      }\n    };\n    const fetchInvoiceSummary = async () => {\n      try {\n        const data = await api('/invoices/summary', 'GET', null, token);\n        setInvoiceSummary(data);\n        return data;\n      } catch (e) {\n        return null;\n      }\n    };\n    try {\n      await Promise.all([fetchLeads(), fetchJobs(), fetchTasks(), fetchInvoiceSummary()]);\n      setLastUpdated(new Date());\n    } finally {\n      isPullRefresh ? setRefreshing(false) : setLoading(false);\n    }\n  }, [token]);\n  useFocusEffect(useCallback(() => {\n    loadData(false);\n  }, [loadData]));\n  const onRefresh = useCallback(() => loadData(true), [loadData]);\n  const newLeads = leads.filter(l => (l.status || '').toUpperCase() === 'NEW').length;\n  const activeJobs = jobs.filter(j => ['SCHEDULED', 'IN_PROGRESS'].includes((j.status || '').toUpperCase())).length;\n  const openTasks = tasks.filter(t => !isTaskCompleted(t.status)).length;\n  const outstandingValue = invoiceSummary?.outstanding || 0;\n  const collectedValue = invoiceSummary?.collected || 0;\n  const overdueCount = invoiceSummary?.overdueCount || 0;\n  const topLeads = leads.slice(0, 3);\n  const topJobs = jobs.slice(0, 3);\n  const nextTasks = tasks.filter(t => !isTaskCompleted(t.status)).slice(0, 3);\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(5)\n      },\n      refreshControl: _jsxDEV(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh,\n        tintColor: palette.primary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 25\n      }, this),\n      children: [_jsxDEV(Text, {\n        style: {\n          color: palette.text,\n          fontSize: typography.h1,\n          fontWeight: '700',\n          marginBottom: spacing(2)\n        },\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          justifyContent: 'space-between'\n        },\n        children: [_jsxDEV(View, {\n          style: {\n            flexBasis: '48%',\n            marginBottom: spacing(2)\n          },\n          children: _jsxDEV(SummaryCard, {\n            title: \"Leads\",\n            value: leads.length,\n            subtitle: `${newLeads} new to triage`,\n            tone: \"info\",\n            onPress: () => navigation.navigate('Leads')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexBasis: '48%',\n            marginBottom: spacing(2)\n          },\n          children: _jsxDEV(SummaryCard, {\n            title: \"Jobs\",\n            value: jobs.length,\n            subtitle: `${activeJobs} active`,\n            tone: \"primary\",\n            onPress: () => navigation.navigate('Jobs')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 603,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexBasis: '48%',\n            marginBottom: spacing(2)\n          },\n          children: _jsxDEV(SummaryCard, {\n            title: \"Tasks\",\n            value: openTasks,\n            subtitle: `Open of ${tasks.length}`,\n            tone: \"warning\",\n            onPress: () => navigation.navigate('Jobs')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 612,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexBasis: '48%',\n            marginBottom: spacing(2)\n          },\n          children: _jsxDEV(SummaryCard, {\n            title: \"Invoices\",\n            value: formatCurrency(outstandingValue),\n            subtitle: `${overdueCount} overdue | ${formatCurrency(collectedValue)} collected`,\n            tone: \"success\",\n            onPress: () => navigation.navigate('Invoices')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 621,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 620,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 9\n      }, this), loading && !refreshing ? _jsxDEV(SurfaceCard, {\n        style: {\n          alignItems: 'center',\n          justifyContent: 'center',\n          paddingVertical: spacing(6)\n        },\n        children: [_jsxDEV(ActivityIndicator, {\n          color: palette.primary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 633,\n          columnNumber: 13\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(1.5)\n          },\n          children: \"Loading summary...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 634,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 632,\n        columnNumber: 11\n      }, this) : null, _jsxDEV(SectionHeader, {\n        title: \"Next Jobs\",\n        actionLabel: \"View all\",\n        onAction: () => navigation.navigate('Jobs')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 638,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: topJobs.length === 0 ? _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: \"No jobs yet. Create one from the Jobs tab.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 13\n        }, this) : topJobs.map((job, idx) => {\n          const startLabel = job.startDate ? `Start ${formatDate(job.startDate)}` : null;\n          const endLabel = job.endDate ? `Due ${formatDate(job.endDate)}` : null;\n          return _jsxDEV(View, {\n            style: {\n              marginBottom: idx === topJobs.length - 1 ? 0 : spacing(2.5)\n            },\n            children: [_jsxDEV(View, {\n              style: {\n                flexDirection: 'row',\n                justifyContent: 'space-between',\n                alignItems: 'center'\n              },\n              children: [_jsxDEV(Text, {\n                style: {\n                  color: palette.text,\n                  fontSize: typography.h2,\n                  fontWeight: '600'\n                },\n                children: job.name || `Job #${job.id}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 649,\n                columnNumber: 21\n              }, this), _jsxDEV(StatusPill, {\n                status: job.status || 'SCHEDULED'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 650,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 648,\n              columnNumber: 19\n            }, this), startLabel || endLabel ? _jsxDEV(Text, {\n              style: {\n                color: palette.muted,\n                marginTop: spacing(0.5)\n              },\n              children: [startLabel, endLabel].filter(Boolean).join(' - ')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 653,\n              columnNumber: 21\n            }, this) : null, job.notes ? _jsxDEV(Text, {\n              style: {\n                color: palette.muted,\n                marginTop: spacing(1)\n              },\n              numberOfLines: 2,\n              children: job.notes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 658,\n              columnNumber: 21\n            }, this) : null, _jsxDEV(View, {\n              style: {\n                flexDirection: 'row',\n                columnGap: spacing(1.5),\n                marginTop: spacing(1.5)\n              },\n              children: [_jsxDEV(QuickAction, {\n                label: \"Open job\",\n                onPress: () => navigation.navigate('JobDetail', {\n                  jobId: job.id\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 661,\n                columnNumber: 21\n              }, this), _jsxDEV(QuickAction, {\n                label: \"Tasks\",\n                onPress: () => navigation.navigate('JobDetail', {\n                  jobId: job.id,\n                  tab: 'tasks'\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 662,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 660,\n              columnNumber: 19\n            }, this)]\n          }, job.id || idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 647,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 9\n      }, this), _jsxDEV(SectionHeader, {\n        title: \"Hot Leads\",\n        actionLabel: \"Leads\",\n        onAction: () => navigation.navigate('Leads')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 670,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: topLeads.length === 0 ? _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: \"No leads yet. Capture leads to keep the funnel full.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 13\n        }, this) : topLeads.map((lead, idx) => _jsxDEV(View, {\n          style: {\n            marginBottom: idx === topLeads.length - 1 ? 0 : spacing(2)\n          },\n          children: [_jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center'\n            },\n            children: [_jsxDEV(Text, {\n              style: {\n                color: palette.text,\n                fontWeight: '600',\n                fontSize: typography.h2\n              },\n              children: [\"Lead #\", lead.id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 678,\n              columnNumber: 19\n            }, this), _jsxDEV(StatusPill, {\n              status: lead.status || 'NEW'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 679,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 677,\n            columnNumber: 17\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.5)\n            },\n            numberOfLines: 3,\n            children: lead.description || 'No scope captured yet.'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 681,\n            columnNumber: 17\n          }, this), _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              columnGap: spacing(1.5),\n              marginTop: spacing(1.5)\n            },\n            children: [_jsxDEV(QuickAction, {\n              label: \"Follow up\",\n              onPress: () => navigation.navigate('EstimateEditor', {\n                leadId: lead.id\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 685,\n              columnNumber: 19\n            }, this), _jsxDEV(QuickAction, {\n              label: \"Convert\",\n              onPress: () => navigation.navigate('Jobs')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 686,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 684,\n            columnNumber: 17\n          }, this)]\n        }, lead.id || idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 676,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 671,\n        columnNumber: 9\n      }, this), _jsxDEV(SectionHeader, {\n        title: \"Open Tasks\",\n        actionLabel: \"Jobs\",\n        onAction: () => navigation.navigate('Jobs')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 693,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        children: nextTasks.length === 0 ? _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: \"All clear. Add tasks from a job to keep crews aligned.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 696,\n          columnNumber: 13\n        }, this) : nextTasks.map((task, idx) => _jsxDEV(View, {\n          style: {\n            marginBottom: idx === nextTasks.length - 1 ? 0 : spacing(2)\n          },\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.text,\n              fontWeight: '600'\n            },\n            children: task.title || 'Task'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 700,\n            columnNumber: 17\n          }, this), task.jobId ? _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.25)\n            },\n            children: jobLookup[task.jobId]?.name || `Job #${task.jobId}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 702,\n            columnNumber: 19\n          }, this) : _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.25)\n            },\n            children: \"Unassigned job\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 706,\n            columnNumber: 19\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.5)\n            },\n            children: task.dueDate ? `Due ${formatDate(task.dueDate)}` : 'No due date'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 708,\n            columnNumber: 17\n          }, this), _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              columnGap: spacing(1.5),\n              marginTop: spacing(1.5)\n            },\n            children: [_jsxDEV(QuickAction, {\n              label: \"Mark done\",\n              onPress: () => navigation.navigate('JobDetail', {\n                jobId: task.jobId\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 712,\n              columnNumber: 19\n            }, this), _jsxDEV(QuickAction, {\n              label: \"View job\",\n              onPress: () => navigation.navigate('JobDetail', {\n                jobId: task.jobId\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 716,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 711,\n            columnNumber: 17\n          }, this)]\n        }, task.id || idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 699,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 9\n      }, this), lastUpdated ? _jsxDEV(Text, {\n        style: {\n          color: palette.muted,\n          fontSize: typography.small,\n          marginTop: spacing(2),\n          textAlign: 'center'\n        },\n        children: [\"Updated \", lastUpdated.toLocaleTimeString([], {\n          hour: 'numeric',\n          minute: '2-digit'\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 727,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 585,\n    columnNumber: 5\n  }, this);\n}\nfunction SignaturePad({\n  onCapturePng\n}) {\n  const [points, setPoints] = useState([]);\n  const [path, setPath] = useState('');\n  const shotRef = useRef(null);\n  return _jsxDEV(ViewShot, {\n    ref: shotRef,\n    options: {\n      format: 'png',\n      quality: 0.9,\n      result: 'base64'\n    },\n    style: {\n      height: 220,\n      borderWidth: 1,\n      backgroundColor: '#fff'\n    },\n    children: _jsxDEV(View, {\n      onStartShouldSetResponder: () => true,\n      onResponderMove: e => {\n        const x = e.nativeEvent.locationX,\n          y = e.nativeEvent.locationY;\n        setPath(p => p + (p ? ` L ${x} ${y}` : ` M ${x} ${y}`));\n      },\n      onResponderRelease: async () => {\n        const base64 = await shotRef.current.capture();\n        onCapturePng && onCapturePng('data:image/png;base64,' + base64);\n      },\n      style: {\n        flex: 1\n      },\n      children: _jsxDEV(Svg, {\n        height: \"100%\",\n        width: \"100%\",\n        children: _jsxDEV(Path, {\n          d: path,\n          stroke: \"black\",\n          strokeWidth: \"2\",\n          fill: \"none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 755,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 755,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 743,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 742,\n    columnNumber: 5\n  }, this);\n}\nfunction SignatureScreen({\n  route,\n  navigation\n}) {\n  const {\n    token\n  } = useAuth();\n  const {\n    estimateId\n  } = route.params;\n  const [sigPng, setSigPng] = useState(null);\n  const save = async () => {\n    if (!sigPng) {\n      Alert.alert('Please sign first');\n      return;\n    }\n    const resp = await api(`/estimates/${estimateId}/approve`, 'POST', {\n      signaturePngUrl: sigPng\n    }, token);\n    Alert.alert('Approved', `Payment link:\n${resp && resp.paymentLink ? resp.paymentLink : 'Unavailable'}`);\n    navigation.goBack();\n  };\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      padding: 16\n    },\n    children: [_jsxDEV(Text, {\n      style: {\n        fontSize: 18,\n        marginBottom: 8\n      },\n      children: [\"Sign Estimate #\", estimateId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 773,\n      columnNumber: 7\n    }, this), _jsxDEV(SignaturePad, {\n      onCapturePng: setSigPng\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 774,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: {\n        height: 12\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 775,\n      columnNumber: 7\n    }, this), _jsxDEV(Button, {\n      title: \"Save Signature\",\n      onPress: save\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 776,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 772,\n    columnNumber: 5\n  }, this);\n}\nconst userRoleOptions = [{\n  label: 'Admin',\n  value: 'ADMIN'\n}, {\n  label: 'Estimator',\n  value: 'ESTIMATOR'\n}, {\n  label: 'Supervisor',\n  value: 'SUPERVISOR'\n}, {\n  label: 'Tech',\n  value: 'TECH'\n}];\nfunction UsersAdminScreen() {\n  const {\n    token\n  } = useAuth();\n  const [users, setUsers] = useState([]);\n  const [email, setEmail] = useState('');\n  const [fullName, setFullName] = useState('');\n  const [role, setRole] = useState('TECH');\n  const [inviting, setInviting] = useState(false);\n  const [refreshing, setRefreshing] = useState(false);\n  const load = useCallback(async () => {\n    try {\n      const response = await api('/users', 'GET', null, token);\n      setUsers(Array.isArray(response) ? response : []);\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to load users.');\n    }\n  }, [token]);\n  useEffect(() => {\n    load();\n  }, [load]);\n  const resetForm = () => {\n    setEmail('');\n    setFullName('');\n    setRole('TECH');\n  };\n  const invite = async () => {\n    const trimmedEmail = email.trim().toLowerCase();\n    const trimmedName = fullName.trim();\n    if (!trimmedEmail) {\n      Alert.alert('Missing email', 'Enter an email address to invite a user.');\n      return;\n    }\n    try {\n      setInviting(true);\n      await api('/users', 'POST', {\n        email: trimmedEmail,\n        fullName: trimmedName || undefined,\n        role: normalizeRole(role)\n      }, token);\n      resetForm();\n      await load();\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to send invite.');\n    } finally {\n      setInviting(false);\n    }\n  };\n  const promote = async (id, newRole) => {\n    try {\n      await api(`/users/${id}`, 'PATCH', {\n        role: normalizeRole(newRole)\n      }, token);\n      await load();\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to update role.');\n    }\n  };\n  const remove = id => {\n    Alert.alert('Remove user', 'Are you sure you want to remove this person?', [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Remove',\n      style: 'destructive',\n      onPress: async () => {\n        try {\n          await api(`/users/${id}`, 'DELETE', null, token);\n          await load();\n        } catch (e) {\n          Alert.alert('Error', e.message || 'Unable to delete user.');\n        }\n      }\n    }]);\n  };\n  const onRefresh = useCallback(async () => {\n    setRefreshing(true);\n    try {\n      await load();\n    } finally {\n      setRefreshing(false);\n    }\n  }, [load]);\n  const renderRolePill = value => {\n    const roleCfg = userRoleOptions.find(option => option.value === normalizeRole(value));\n    const label = roleCfg ? roleCfg.label : normalizeRole(value);\n    return _jsxDEV(View, {\n      style: {\n        backgroundColor: '#e0f3f0',\n        paddingHorizontal: spacing(1.5),\n        paddingVertical: spacing(0.5),\n        borderRadius: 999\n      },\n      children: _jsxDEV(Text, {\n        style: {\n          color: palette.primaryStrong,\n          fontWeight: '600',\n          fontSize: typography.small\n        },\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 875,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 874,\n      columnNumber: 7\n    }, this);\n  };\n  const renderRoleSelector = (selectedRole, onSelect) => _jsxDEV(View, {\n    style: {\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      columnGap: spacing(1),\n      rowGap: spacing(1)\n    },\n    children: userRoleOptions.map(option => {\n      const selected = selectedRole === option.value;\n      return _jsxDEV(TouchableOpacity, {\n        onPress: () => onSelect(option.value),\n        activeOpacity: 0.85,\n        style: {\n          paddingHorizontal: spacing(2),\n          paddingVertical: spacing(1),\n          borderRadius: 999,\n          borderWidth: 1,\n          borderColor: selected ? palette.primary : palette.border,\n          backgroundColor: selected ? '#d9f2ed' : palette.surface\n        },\n        children: _jsxDEV(Text, {\n          style: {\n            color: selected ? palette.primaryStrong : palette.muted,\n            fontWeight: '600',\n            fontSize: typography.small\n          },\n          children: option.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 898,\n          columnNumber: 13\n        }, this)\n      }, option.value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 885,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 881,\n    columnNumber: 5\n  }, this);\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(FlatList, {\n      data: users,\n      keyExtractor: u => String(u.id),\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(6)\n      },\n      refreshControl: _jsxDEV(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh,\n        tintColor: palette.primary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 913,\n        columnNumber: 25\n      }, this),\n      ListHeaderComponent: _jsxDEV(View, {\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontSize: typography.h1,\n            fontWeight: '700',\n            marginBottom: spacing(2)\n          },\n          children: \"Team management\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 916,\n          columnNumber: 13\n        }, this), _jsxDEV(SurfaceCard, {\n          style: {\n            padding: spacing(2.5),\n            marginBottom: spacing(3)\n          },\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.text,\n              fontSize: typography.h2,\n              fontWeight: '700'\n            },\n            children: \"Invite teammate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 918,\n            columnNumber: 15\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.5),\n              marginBottom: spacing(2)\n            },\n            children: \"Send an invite email and choose what they can access.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 919,\n            columnNumber: 15\n          }, this), _jsxDEV(FormInput, {\n            placeholder: \"Full name (optional)\",\n            value: fullName,\n            onChangeText: setFullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 922,\n            columnNumber: 15\n          }, this), _jsxDEV(FormInput, {\n            placeholder: \"Work email\",\n            autoCapitalize: \"none\",\n            keyboardType: \"email-address\",\n            value: email,\n            onChangeText: setEmail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 927,\n            columnNumber: 15\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              fontWeight: '600',\n              fontSize: typography.small,\n              textTransform: 'uppercase',\n              marginBottom: spacing(1)\n            },\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 934,\n            columnNumber: 15\n          }, this), renderRoleSelector(role, setRole), _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              marginTop: spacing(2)\n            },\n            children: [_jsxDEV(QuickAction, {\n              label: \"Clear\",\n              tone: \"muted\",\n              onPress: resetForm\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 937,\n              columnNumber: 17\n            }, this), _jsxDEV(TouchableOpacity, {\n              onPress: invite,\n              activeOpacity: 0.85,\n              disabled: inviting,\n              style: {\n                backgroundColor: palette.primary,\n                paddingHorizontal: spacing(2.5),\n                paddingVertical: spacing(1.5),\n                borderRadius: 12,\n                opacity: inviting ? 0.6 : 1\n              },\n              children: _jsxDEV(Text, {\n                style: {\n                  color: '#fff',\n                  fontWeight: '700'\n                },\n                children: inviting ? 'Sending...' : 'Send invite'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 950,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 938,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 936,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 917,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 915,\n        columnNumber: 11\n      }, this),\n      ListEmptyComponent: _jsxDEV(SurfaceCard, {\n        children: _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: \"Invite your first teammate to collaborate on jobs.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 958,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 957,\n        columnNumber: 11\n      }, this),\n      renderItem: ({\n        item\n      }) => {\n        const normalizedRole = normalizeRole(item.role);\n        return _jsxDEV(SurfaceCard, {\n          style: {\n            marginBottom: spacing(2),\n            padding: spacing(2.5)\n          },\n          children: [_jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              marginBottom: spacing(1.5)\n            },\n            children: [_jsxDEV(View, {\n              children: [_jsxDEV(Text, {\n                style: {\n                  color: palette.text,\n                  fontSize: typography.h2,\n                  fontWeight: '600'\n                },\n                children: item.fullName || item.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 967,\n                columnNumber: 19\n              }, this), _jsxDEV(Text, {\n                style: {\n                  color: palette.muted,\n                  marginTop: spacing(0.5)\n                },\n                children: item.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 968,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 966,\n              columnNumber: 17\n            }, this), renderRolePill(normalizedRole)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 965,\n            columnNumber: 15\n          }, this), _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              flexWrap: 'wrap',\n              columnGap: spacing(1),\n              rowGap: spacing(1)\n            },\n            children: [userRoleOptions.map(option => {\n              const selected = normalizedRole === option.value;\n              return _jsxDEV(TouchableOpacity, {\n                onPress: () => promote(item.id, option.value),\n                disabled: selected,\n                activeOpacity: 0.85,\n                style: {\n                  paddingHorizontal: spacing(1.75),\n                  paddingVertical: spacing(0.75),\n                  borderRadius: 999,\n                  borderWidth: 1,\n                  borderColor: selected ? palette.primary : palette.border,\n                  backgroundColor: selected ? '#d9f2ed' : palette.surface,\n                  opacity: selected ? 0.7 : 1\n                },\n                children: _jsxDEV(Text, {\n                  style: {\n                    color: selected ? palette.primaryStrong : palette.muted,\n                    fontWeight: '600',\n                    fontSize: typography.small\n                  },\n                  children: option.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 991,\n                  columnNumber: 23\n                }, this)\n              }, option.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 976,\n                columnNumber: 21\n              }, this);\n            }), _jsxDEV(TouchableOpacity, {\n              onPress: () => remove(item.id),\n              activeOpacity: 0.85,\n              style: {\n                paddingHorizontal: spacing(1.75),\n                paddingVertical: spacing(0.75),\n                borderRadius: 999,\n                borderWidth: 1,\n                borderColor: '#fecdd3',\n                backgroundColor: '#fee2e2'\n              },\n              children: _jsxDEV(Text, {\n                style: {\n                  color: palette.danger,\n                  fontWeight: '600',\n                  fontSize: typography.small\n                },\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1009,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 997,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 972,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 964,\n          columnNumber: 13\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 909,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 908,\n    columnNumber: 5\n  }, this);\n}\nfunction InvoicesScreen({\n  navigation\n}) {\n  const {\n    token,\n    user\n  } = useAuth();\n  const [loading, setLoading] = useState(true);\n  const [refreshing, setRefreshing] = useState(false);\n  const [summary, setSummary] = useState(null);\n  const [invoices, setInvoices] = useState([]);\n  const [filter, setFilter] = useState('ALL');\n  const load = useCallback(async (isRefresh = false) => {\n    if (!token) return;\n    isRefresh ? setRefreshing(true) : setLoading(true);\n    try {\n      const [summaryData, list] = await Promise.all([api('/invoices/summary', 'GET', null, token), api('/invoices', 'GET', null, token)]);\n      setSummary(summaryData);\n      setInvoices(list);\n    } catch (e) {} finally {\n      isRefresh ? setRefreshing(false) : setLoading(false);\n    }\n  }, [token]);\n  useFocusEffect(useCallback(() => {\n    if (user?.role === 'ADMIN') {\n      load(false);\n    }\n  }, [load, user?.role]));\n  const onRefresh = useCallback(() => load(true), [load]);\n  if (user?.role !== 'ADMIN') {\n    return _jsxDEV(SafeAreaView, {\n      style: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: palette.background\n      },\n      children: _jsxDEV(Text, {\n        style: {\n          color: palette.muted\n        },\n        children: \"Invoices are only available to admin users.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1057,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1056,\n      columnNumber: 7\n    }, this);\n  }\n  const filters = [{\n    key: 'ALL',\n    label: 'All'\n  }, {\n    key: 'OUTSTANDING',\n    label: 'Outstanding'\n  }, {\n    key: 'PAID',\n    label: 'Paid'\n  }];\n  const filteredInvoices = invoices.filter(inv => {\n    if (filter === 'ALL') return true;\n    const status = (inv.status || 'DRAFT').toUpperCase();\n    if (filter === 'PAID') return status === 'PAID';\n    return !['PAID', 'VOID'].includes(status);\n  });\n  const outstanding = formatCurrency(summary?.outstanding || 0);\n  const collected = formatCurrency(summary?.collected || 0);\n  const drafts = formatCurrency(summary?.draftAmount || 0);\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(6)\n      },\n      refreshControl: _jsxDEV(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh,\n        tintColor: palette.primary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1083,\n        columnNumber: 25\n      }, this),\n      children: [_jsxDEV(Text, {\n        style: {\n          color: palette.text,\n          fontSize: typography.h1,\n          fontWeight: '700',\n          marginBottom: spacing(2)\n        },\n        children: \"Invoices\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1085,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: {\n          color: palette.muted,\n          marginBottom: spacing(2)\n        },\n        children: \"Track billing health and spot overdue balances.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1086,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          columnGap: spacing(2),\n          rowGap: spacing(2),\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(View, {\n          style: {\n            flexBasis: '48%',\n            minWidth: 160\n          },\n          children: _jsxDEV(SummaryCard, {\n            title: \"Outstanding\",\n            value: outstanding,\n            subtitle: `${summary?.overdueCount || 0} overdue`,\n            tone: \"warning\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1089,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1088,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexBasis: '48%',\n            minWidth: 160\n          },\n          children: _jsxDEV(SummaryCard, {\n            title: \"Collected\",\n            value: collected,\n            subtitle: \"All payments to date\",\n            tone: \"success\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1092,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1091,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexBasis: '48%',\n            minWidth: 160\n          },\n          children: _jsxDEV(SummaryCard, {\n            title: \"Drafts\",\n            value: drafts,\n            subtitle: `${summary?.totalCount || 0} total invoices`,\n            tone: \"info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1095,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1094,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1087,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          columnGap: spacing(1),\n          rowGap: spacing(1),\n          marginBottom: spacing(2)\n        },\n        children: filters.map(f => {\n          const selected = f.key === filter;\n          return _jsxDEV(TouchableOpacity, {\n            onPress: () => setFilter(f.key),\n            activeOpacity: 0.85,\n            style: {\n              paddingHorizontal: spacing(2),\n              paddingVertical: spacing(1),\n              borderRadius: 999,\n              borderWidth: 1,\n              borderColor: selected ? palette.primary : palette.border,\n              backgroundColor: selected ? '#d9f2ed' : palette.surface\n            },\n            children: _jsxDEV(Text, {\n              style: {\n                color: selected ? palette.primaryStrong : palette.muted,\n                fontWeight: '600',\n                fontSize: typography.small\n              },\n              children: f.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1116,\n              columnNumber: 17\n            }, this)\n          }, f.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1103,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1099,\n        columnNumber: 9\n      }, this), loading ? _jsxDEV(SurfaceCard, {\n        style: {\n          alignItems: 'center',\n          paddingVertical: spacing(6)\n        },\n        children: [_jsxDEV(ActivityIndicator, {\n          color: palette.primary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1124,\n          columnNumber: 13\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(1.5)\n          },\n          children: \"Loading invoices...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1125,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1123,\n        columnNumber: 11\n      }, this) : filteredInvoices.length === 0 ? _jsxDEV(SurfaceCard, {\n        children: _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: \"No invoices match this filter.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1129,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1128,\n        columnNumber: 11\n      }, this) : filteredInvoices.map(inv => {\n        const payments = (inv.Payments || []).reduce((sum, p) => sum + Number(p.amount || 0), 0);\n        const amount = Number(inv.amount || 0);\n        const balance = Math.max(amount - payments, 0);\n        const statusKey = (inv.status || 'DRAFT').toUpperCase();\n        return _jsxDEV(SurfaceCard, {\n          children: [_jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center'\n            },\n            children: [_jsxDEV(View, {\n              children: [_jsxDEV(Text, {\n                style: {\n                  color: palette.text,\n                  fontSize: typography.h2,\n                  fontWeight: '600'\n                },\n                children: [\"Invoice #\", inv.number || inv.id]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1141,\n                columnNumber: 21\n              }, this), _jsxDEV(Text, {\n                style: {\n                  color: palette.muted,\n                  marginTop: spacing(0.5)\n                },\n                children: [\"Issued \", inv.issuedAt ? formatDate(inv.issuedAt) : 'TBD']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1142,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1140,\n              columnNumber: 19\n            }, this), _jsxDEV(StatusPill, {\n              status: statusKey\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1144,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1139,\n            columnNumber: 17\n          }, this), _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              marginTop: spacing(1.5)\n            },\n            children: [_jsxDEV(View, {\n              children: [_jsxDEV(Text, {\n                style: {\n                  color: palette.muted,\n                  fontSize: typography.small\n                },\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1148,\n                columnNumber: 21\n              }, this), _jsxDEV(Text, {\n                style: {\n                  color: palette.text,\n                  fontWeight: '600'\n                },\n                children: formatCurrency(amount)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1149,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1147,\n              columnNumber: 19\n            }, this), _jsxDEV(View, {\n              children: [_jsxDEV(Text, {\n                style: {\n                  color: palette.muted,\n                  fontSize: typography.small\n                },\n                children: \"Collected\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1152,\n                columnNumber: 21\n              }, this), _jsxDEV(Text, {\n                style: {\n                  color: palette.text\n                },\n                children: formatCurrency(payments)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1153,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1151,\n              columnNumber: 19\n            }, this), _jsxDEV(View, {\n              children: [_jsxDEV(Text, {\n                style: {\n                  color: palette.muted,\n                  fontSize: typography.small\n                },\n                children: \"Balance\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1156,\n                columnNumber: 21\n              }, this), _jsxDEV(Text, {\n                style: {\n                  color: balance > 0 ? palette.primaryStrong : palette.muted,\n                  fontWeight: '600'\n                },\n                children: formatCurrency(balance)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1157,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1155,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1146,\n            columnNumber: 17\n          }, this), inv.dueAt ? _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(1)\n            },\n            children: [\"Due \", formatDate(inv.dueAt)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1161,\n            columnNumber: 19\n          }, this) : null, _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              flexWrap: 'wrap',\n              columnGap: spacing(1),\n              rowGap: spacing(1),\n              marginTop: spacing(2)\n            },\n            children: [inv.jobId ? _jsxDEV(QuickAction, {\n              label: \"View job\",\n              onPress: () => navigation.navigate('JobDetail', {\n                jobId: inv.jobId\n              }),\n              tone: \"muted\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1164,\n              columnNumber: 32\n            }, this) : null, _jsxDEV(QuickAction, {\n              label: \"Record payment\",\n              tone: \"success\",\n              onPress: () => Alert.alert('Coming soon', 'Payment logging will land shortly.')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1165,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1163,\n            columnNumber: 17\n          }, this)]\n        }, inv.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1138,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1081,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1080,\n    columnNumber: 5\n  }, this);\n}\nfunction JobsKanbanScreen({\n  navigation\n}) {\n  const {\n    token\n  } = useAuth();\n  const [jobs, setJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [refreshing, setRefreshing] = useState(false);\n  const [newJobName, setNewJobName] = useState('');\n  const [newJobStartDate, setNewJobStartDate] = useState('');\n  const [newJobDueDate, setNewJobDueDate] = useState('');\n  const [newJobNotes, setNewJobNotes] = useState('');\n  const [newCustomerName, setNewCustomerName] = useState('');\n  const [newCustomerPhone, setNewCustomerPhone] = useState('');\n  const [newCustomerEmail, setNewCustomerEmail] = useState('');\n  const [newAddressLine1, setNewAddressLine1] = useState('');\n  const [newAddressLine2, setNewAddressLine2] = useState('');\n  const [newCity, setNewCity] = useState('');\n  const [newStateCode, setNewStateCode] = useState('');\n  const [newZip, setNewZip] = useState('');\n  const [jobFormTab, setJobFormTab] = useState('BASICS');\n  const statusOrder = ['SCHEDULED', 'IN_PROGRESS', 'ON_HOLD', 'DONE', 'COMPLETE', 'CANCELLED'];\n  const load = useCallback(async (isRefresh = false) => {\n    isRefresh ? setRefreshing(true) : setLoading(true);\n    try {\n      const data = await api('/jobs', 'GET', null, token);\n      setJobs(data);\n      db.transaction(tx => {\n        tx.executeSql && tx.executeSql('DELETE FROM jobs_cache;');\n        data.forEach(j => tx.executeSql && tx.executeSql('INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)', [j.id, j.name || '', j.status || 'SCHEDULED', j.startDate || '', j.endDate || '', j.notes || '']));\n      });\n    } catch (e) {\n      db.transaction(tx => tx.executeSql && tx.executeSql('SELECT id, name, status, startDate, endDate, notes FROM jobs_cache', [], (_, {\n        rows\n      }) => setJobs(rows._array || [])));\n    } finally {\n      isRefresh ? setRefreshing(false) : setLoading(false);\n    }\n  }, [token]);\n  useFocusEffect(useCallback(() => {\n    load(false);\n  }, [load]));\n  const onRefresh = useCallback(() => load(true), [load]);\n  const resetForm = () => {\n    setNewJobName('');\n    setNewJobStartDate('');\n    setNewJobDueDate('');\n    setNewJobNotes('');\n    setNewCustomerName('');\n    setNewCustomerPhone('');\n    setNewCustomerEmail('');\n    setNewAddressLine1('');\n    setNewAddressLine2('');\n    setNewCity('');\n    setNewStateCode('');\n    setNewZip('');\n    setJobFormTab('BASICS');\n  };\n  const createJob = async () => {\n    if (!newJobName.trim()) {\n      Alert.alert('Missing info', 'Please add a job name.');\n      setJobFormTab('BASICS');\n      return;\n    }\n    const hasCustomer = [newCustomerName, newCustomerPhone, newCustomerEmail].some(v => v && v.trim());\n    const hasAddress = [newAddressLine1, newCity, newStateCode, newZip].some(v => v && v.trim());\n    const payload = {\n      name: newJobName.trim(),\n      status: 'SCHEDULED',\n      startDate: newJobStartDate || null,\n      endDate: newJobDueDate || null,\n      notes: newJobNotes.trim() || null\n    };\n    if (hasCustomer) {\n      payload.customer = {\n        name: newCustomerName.trim(),\n        phone: newCustomerPhone.trim(),\n        email: newCustomerEmail.trim(),\n        billingAddress: newAddressLine1 ? `${newAddressLine1}${newAddressLine2 ? `\n${newAddressLine2}` : ''}${newCity ? `\n${newCity}, ${newStateCode} ${newZip}` : ''}` : null\n      };\n    }\n    if (hasAddress) {\n      payload.jobsite = {\n        addressLine1: newAddressLine1.trim(),\n        addressLine2: newAddressLine2.trim(),\n        city: newCity.trim(),\n        state: newStateCode.trim(),\n        zip: newZip.trim()\n      };\n    }\n    try {\n      const created = await api('/jobs', 'POST', payload, token);\n      setJobs(prev => [created, ...prev]);\n      db.transaction(tx => tx.executeSql && tx.executeSql('INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)', [created.id, created.name || '', created.status || 'SCHEDULED', created.startDate || '', created.endDate || '', created.notes || '']));\n      resetForm();\n      Alert.alert('Job created', `Job #${created.id} ready to schedule.`);\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to create job');\n    }\n  };\n  const updateJobStatus = async (id, status) => {\n    try {\n      const updated = await api(`/jobs/${id}`, 'PATCH', {\n        status\n      }, token);\n      setJobs(prev => prev.map(job => job.id === id ? updated : job));\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to update job status');\n    }\n  };\n  const removeJob = async id => {\n    Alert.alert('Delete Job', `Delete job #${id}?`, [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Delete',\n      style: 'destructive',\n      onPress: async () => {\n        try {\n          await api(`/jobs/${id}`, 'DELETE', null, token);\n          setJobs(prev => prev.filter(job => job.id !== id));\n          db.transaction(tx => tx.executeSql && tx.executeSql('DELETE FROM jobs_cache WHERE id=?', [id]));\n        } catch (e) {\n          Alert.alert('Error', e.message || 'Unable to delete job');\n        }\n      }\n    }]);\n  };\n  const sortedJobs = useMemo(() => {\n    const normalize = status => (status || 'SCHEDULED').toUpperCase();\n    const rank = status => {\n      const key = normalize(status);\n      const idx = statusOrder.indexOf(key);\n      return idx === -1 ? statusOrder.length : idx;\n    };\n    const parseDateSafe = value => {\n      if (!value) return null;\n      const d = new Date(value);\n      return Number.isNaN(d.getTime()) ? null : d;\n    };\n    return [...jobs].sort((a, b) => {\n      const statusDiff = rank(a.status) - rank(b.status);\n      if (statusDiff !== 0) return statusDiff;\n      const startA = parseDateSafe(a.startDate);\n      const startB = parseDateSafe(b.startDate);\n      if (startA && startB) return startA - startB;\n      if (startA) return -1;\n      if (startB) return 1;\n      return (b.id || 0) - (a.id || 0);\n    });\n  }, [jobs, statusOrder]);\n  const groupedJobs = useMemo(() => {\n    const groups = [];\n    let currentStatus = null;\n    sortedJobs.forEach(job => {\n      const statusKey = (job.status || 'SCHEDULED').toUpperCase();\n      if (statusKey !== currentStatus) {\n        groups.push({\n          status: statusKey,\n          jobs: [job]\n        });\n        currentStatus = statusKey;\n      } else {\n        groups[groups.length - 1].jobs.push(job);\n      }\n    });\n    return groups;\n  }, [sortedJobs]);\n  const statusLabel = status => {\n    const key = (status || 'SCHEDULED').toUpperCase();\n    return pillTone[key]?.label || key.charAt(0) + key.slice(1).toLowerCase();\n  };\n  const quickStatusActions = [{\n    label: 'Start job',\n    value: 'IN_PROGRESS',\n    tone: 'primary'\n  }, {\n    label: 'Pause',\n    value: 'ON_HOLD',\n    tone: 'warning'\n  }, {\n    label: 'Wrap up',\n    value: 'DONE',\n    tone: 'success'\n  }];\n  const inputStyle = {\n    borderWidth: 1,\n    borderColor: palette.border,\n    borderRadius: 12,\n    paddingHorizontal: spacing(1.5),\n    paddingVertical: spacing(1.25),\n    backgroundColor: palette.surfaceMuted,\n    color: palette.text,\n    fontSize: typography.body,\n    marginBottom: spacing(1.5)\n  };\n  const jobTabs = [{\n    key: 'BASICS',\n    label: 'Basics'\n  }, {\n    key: 'CUSTOMER',\n    label: 'Customer'\n  }, {\n    key: 'JOBSITE',\n    label: 'Jobsite'\n  }, {\n    key: 'NOTES',\n    label: 'Notes'\n  }];\n  const renderJobFormFields = () => {\n    if (jobFormTab === 'BASICS') {\n      return _jsxDEV(View, {\n        children: [_jsxDEV(TextInput, {\n          placeholder: \"Job name\",\n          placeholderTextColor: palette.muted,\n          value: newJobName,\n          onChangeText: setNewJobName,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1393,\n          columnNumber: 11\n        }, this), _jsxDEV(DateInputField, {\n          value: newJobStartDate,\n          onChange: setNewJobStartDate,\n          placeholder: \"Start date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1400,\n          columnNumber: 11\n        }, this), _jsxDEV(DateInputField, {\n          value: newJobDueDate,\n          onChange: setNewJobDueDate,\n          placeholder: \"Due date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1405,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1392,\n        columnNumber: 9\n      }, this);\n    }\n    if (jobFormTab === 'CUSTOMER') {\n      return _jsxDEV(View, {\n        children: [_jsxDEV(TextInput, {\n          placeholder: \"Customer name\",\n          placeholderTextColor: palette.muted,\n          value: newCustomerName,\n          onChangeText: setNewCustomerName,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1416,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Phone\",\n          placeholderTextColor: palette.muted,\n          keyboardType: \"phone-pad\",\n          value: newCustomerPhone,\n          onChangeText: setNewCustomerPhone,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1423,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Email\",\n          placeholderTextColor: palette.muted,\n          keyboardType: \"email-address\",\n          autoCapitalize: \"none\",\n          value: newCustomerEmail,\n          onChangeText: setNewCustomerEmail,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1431,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1415,\n        columnNumber: 9\n      }, this);\n    }\n    if (jobFormTab === 'JOBSITE') {\n      return _jsxDEV(View, {\n        children: [_jsxDEV(TextInput, {\n          placeholder: \"Address line 1\",\n          placeholderTextColor: palette.muted,\n          value: newAddressLine1,\n          onChangeText: setNewAddressLine1,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1446,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Address line 2\",\n          placeholderTextColor: palette.muted,\n          value: newAddressLine2,\n          onChangeText: setNewAddressLine2,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1453,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            columnGap: spacing(1.5)\n          },\n          children: [_jsxDEV(View, {\n            style: {\n              flex: 1\n            },\n            children: _jsxDEV(TextInput, {\n              placeholder: \"City\",\n              placeholderTextColor: palette.muted,\n              value: newCity,\n              onChangeText: setNewCity,\n              style: [inputStyle, {\n                marginBottom: 0\n              }]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1462,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1461,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: {\n              width: 80\n            },\n            children: _jsxDEV(TextInput, {\n              placeholder: \"State\",\n              placeholderTextColor: palette.muted,\n              value: newStateCode,\n              onChangeText: setNewStateCode,\n              style: [inputStyle, {\n                marginBottom: 0\n              }]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1471,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1470,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: {\n              width: 100\n            },\n            children: _jsxDEV(TextInput, {\n              placeholder: \"ZIP\",\n              placeholderTextColor: palette.muted,\n              value: newZip,\n              onChangeText: setNewZip,\n              style: [inputStyle, {\n                marginBottom: 0\n              }]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1480,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1479,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1460,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1445,\n        columnNumber: 9\n      }, this);\n    }\n    return _jsxDEV(TextInput, {\n      placeholder: \"Internal notes\",\n      placeholderTextColor: palette.muted,\n      value: newJobNotes,\n      onChangeText: setNewJobNotes,\n      multiline: true,\n      style: [inputStyle, {\n        minHeight: 96,\n        textAlignVertical: 'top'\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1493,\n      columnNumber: 7\n    }, this);\n  };\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(4)\n      },\n      refreshControl: _jsxDEV(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh,\n        tintColor: palette.primary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1508,\n        columnNumber: 25\n      }, this),\n      children: [_jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3),\n          padding: spacing(2.5)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontSize: typography.h2,\n            fontWeight: '700',\n            marginBottom: spacing(2)\n          },\n          children: \"Create job\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1511,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            columnGap: spacing(1),\n            rowGap: spacing(1.5),\n            marginBottom: spacing(2)\n          },\n          children: jobTabs.map(tab => {\n            const selected = tab.key === jobFormTab;\n            return _jsxDEV(TouchableOpacity, {\n              onPress: () => setJobFormTab(tab.key),\n              activeOpacity: 0.85,\n              style: {\n                paddingHorizontal: spacing(2),\n                paddingVertical: spacing(1),\n                borderRadius: 999,\n                borderWidth: 1,\n                borderColor: selected ? palette.primary : palette.border,\n                backgroundColor: selected ? '#d9f2ed' : palette.surface\n              },\n              children: _jsxDEV(Text, {\n                style: {\n                  color: selected ? palette.primaryStrong : palette.muted,\n                  fontWeight: '600',\n                  fontSize: typography.small\n                },\n                children: tab.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1529,\n                columnNumber: 19\n              }, this)\n            }, tab.key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1516,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1512,\n          columnNumber: 11\n        }, this), renderJobFormFields(), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginTop: spacing(2)\n          },\n          children: [_jsxDEV(QuickAction, {\n            label: \"Reset\",\n            tone: \"muted\",\n            onPress: resetForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1538,\n            columnNumber: 13\n          }, this), _jsxDEV(TouchableOpacity, {\n            onPress: createJob,\n            activeOpacity: 0.85,\n            style: {\n              backgroundColor: palette.primary,\n              paddingHorizontal: spacing(2.5),\n              paddingVertical: spacing(1.5),\n              borderRadius: 12\n            },\n            children: _jsxDEV(Text, {\n              style: {\n                color: '#fff',\n                fontWeight: '700'\n              },\n              children: \"Create job\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1544,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1539,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1537,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1510,\n        columnNumber: 9\n      }, this), loading && !refreshing && jobs.length === 0 ? _jsxDEV(SurfaceCard, {\n        style: {\n          alignItems: 'center',\n          paddingVertical: spacing(6),\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(ActivityIndicator, {\n          color: palette.primary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1551,\n          columnNumber: 13\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(1.5)\n          },\n          children: \"Loading jobs...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1552,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1550,\n        columnNumber: 11\n      }, this) : null, groupedJobs.length === 0 ? _jsxDEV(SurfaceCard, {\n        children: _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: \"No jobs yet. Convert a lead or add a job to get started.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1558,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1557,\n        columnNumber: 11\n      }, this) : groupedJobs.map(group => _jsxDEV(View, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontWeight: '700',\n            fontSize: typography.small,\n            textTransform: 'uppercase',\n            marginBottom: spacing(1)\n          },\n          children: statusLabel(group.status)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1563,\n          columnNumber: 15\n        }, this), group.jobs.map(job => {\n          const customer = job.Customer || {};\n          const jobsite = job.Jobsite || {};\n          const addressParts = [jobsite.addressLine1, jobsite.addressLine2, [jobsite.city, jobsite.state].filter(Boolean).join(', '), jobsite.zip].filter(Boolean);\n          const address = addressParts.join(', ');\n          const statusKey = (job.status || 'SCHEDULED').toUpperCase();\n          return _jsxDEV(SurfaceCard, {\n            style: {\n              marginBottom: spacing(1.5)\n            },\n            children: [_jsxDEV(View, {\n              style: {\n                flexDirection: 'row',\n                justifyContent: 'space-between',\n                alignItems: 'center'\n              },\n              children: [_jsxDEV(Text, {\n                style: {\n                  color: palette.text,\n                  fontSize: typography.h2,\n                  fontWeight: '600'\n                },\n                children: job.name || `Job #${job.id}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1580,\n                columnNumber: 23\n              }, this), _jsxDEV(StatusPill, {\n                status: statusKey\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1581,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1579,\n              columnNumber: 21\n            }, this), job.startDate || job.endDate ? _jsxDEV(Text, {\n              style: {\n                color: palette.muted,\n                marginTop: spacing(0.75)\n              },\n              children: [job.startDate ? `Start ${formatDate(job.startDate)}` : null, job.endDate ? `Due ${formatDate(job.endDate)}` : null].filter(Boolean).join(' | ')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1584,\n              columnNumber: 23\n            }, this) : null, customer.name ? _jsxDEV(Text, {\n              style: {\n                color: palette.text,\n                fontWeight: '600',\n                marginTop: spacing(1)\n              },\n              children: customer.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1588,\n              columnNumber: 38\n            }, this) : null, customer.phone ? _jsxDEV(Text, {\n              style: {\n                color: palette.muted\n              },\n              children: customer.phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1589,\n              columnNumber: 39\n            }, this) : null, customer.email ? _jsxDEV(Text, {\n              style: {\n                color: palette.muted\n              },\n              children: customer.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1590,\n              columnNumber: 39\n            }, this) : null, address ? _jsxDEV(Text, {\n              style: {\n                color: palette.muted,\n                marginTop: spacing(1)\n              },\n              children: address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1591,\n              columnNumber: 32\n            }, this) : null, job.notes ? _jsxDEV(Text, {\n              style: {\n                color: palette.muted,\n                marginTop: spacing(1)\n              },\n              numberOfLines: 3,\n              children: job.notes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1592,\n              columnNumber: 34\n            }, this) : null, _jsxDEV(View, {\n              style: {\n                flexDirection: 'row',\n                flexWrap: 'wrap',\n                columnGap: spacing(1),\n                rowGap: spacing(1),\n                marginTop: spacing(2)\n              },\n              children: [_jsxDEV(QuickAction, {\n                label: \"View job\",\n                onPress: () => navigation.navigate('JobDetail', {\n                  jobId: job.id\n                }),\n                tone: \"muted\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1594,\n                columnNumber: 23\n              }, this), quickStatusActions.map(action => action.value === statusKey ? null : _jsxDEV(QuickAction, {\n                label: action.label,\n                tone: action.tone,\n                onPress: () => updateJobStatus(job.id, action.value)\n              }, action.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1597,\n                columnNumber: 27\n              }, this)), _jsxDEV(QuickAction, {\n                label: \"Delete\",\n                tone: \"danger\",\n                onPress: () => removeJob(job.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1605,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1593,\n              columnNumber: 21\n            }, this)]\n          }, job.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1578,\n            columnNumber: 19\n          }, this);\n        })]\n      }, group.status, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1562,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1506,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1505,\n    columnNumber: 5\n  }, this);\n}\nfunction JobDetailScreen({\n  route,\n  navigation\n}) {\n  const {\n    jobId\n  } = route.params;\n  const {\n    token,\n    user\n  } = useAuth();\n  const [jobName, setJobName] = useState('');\n  const [jobStartDate, setJobStartDate] = useState('');\n  const [jobEndDate, setJobEndDate] = useState('');\n  const [jobNotes, setJobNotes] = useState('');\n  const [jobCustomerName, setJobCustomerName] = useState('');\n  const [jobCustomerPhone, setJobCustomerPhone] = useState('');\n  const [jobCustomerEmail, setJobCustomerEmail] = useState('');\n  const [jobAddressLine1, setJobAddressLine1] = useState('');\n  const [jobAddressLine2, setJobAddressLine2] = useState('');\n  const [jobCity, setJobCity] = useState('');\n  const [jobStateCode, setJobStateCode] = useState('');\n  const [jobZip, setJobZip] = useState('');\n  const [changeOrders, setCO] = useState([]);\n  const [title, setTitle] = useState('');\n  const [amountDelta, setAmountDelta] = useState('0');\n  const loadCO = useCallback(async () => {\n    setCO(await api(`/change-orders/job/${jobId}`, 'GET', null, token));\n  }, [jobId, token]);\n  const loadJob = useCallback(async () => {\n    try {\n      const j = await api(`/jobs/${jobId}`, 'GET', null, token);\n      setJobName(j.name || '');\n      setJobStartDate(j.startDate || '');\n      setJobEndDate(j.endDate || '');\n      setJobNotes(j.notes || '');\n      const customer = j.Customer || {};\n      const jobsite = j.Jobsite || {};\n      setJobCustomerName(customer.name || '');\n      setJobCustomerPhone(customer.phone || '');\n      setJobCustomerEmail(customer.email || '');\n      setJobAddressLine1(jobsite.addressLine1 || '');\n      setJobAddressLine2(jobsite.addressLine2 || '');\n      setJobCity(jobsite.city || '');\n      setJobStateCode(jobsite.state || '');\n      setJobZip(jobsite.zip || '');\n    } catch (e) {}\n  }, [jobId, token]);\n  useEffect(() => {\n    loadJob();\n    loadCO();\n  }, [loadJob, loadCO]);\n  const addCO = async () => {\n    if (!title.trim()) {\n      Alert.alert('Missing info', 'Add a title for the change order.');\n      return;\n    }\n    await api(`/change-orders/job/${jobId}`, 'POST', {\n      title: title.trim(),\n      amountDelta: parseFloat(amountDelta) || 0\n    }, token);\n    setTitle('');\n    setAmountDelta('0');\n    loadCO();\n  };\n  const saveJobDetails = async () => {\n    try {\n      await api(`/jobs/${jobId}`, 'PATCH', {\n        name: jobName,\n        startDate: jobStartDate || null,\n        endDate: jobEndDate || null,\n        notes: jobNotes,\n        customer: {\n          name: jobCustomerName,\n          phone: jobCustomerPhone,\n          email: jobCustomerEmail,\n          billingAddress: jobAddressLine1 ? `${jobAddressLine1}${jobAddressLine2 ? `\n${jobAddressLine2}` : ''}${jobCity ? `\n${jobCity}, ${jobStateCode} ${jobZip}` : ''}` : null\n        },\n        jobsite: {\n          addressLine1: jobAddressLine1,\n          addressLine2: jobAddressLine2,\n          city: jobCity,\n          state: jobStateCode,\n          zip: jobZip\n        }\n      }, token);\n      Alert.alert('Saved', 'Job details updated.');\n      loadJob();\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to save job');\n    }\n  };\n  const deleteJob = () => {\n    Alert.alert('Delete job', `Delete job #${jobId}?`, [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Delete',\n      style: 'destructive',\n      onPress: async () => {\n        try {\n          await api(`/jobs/${jobId}`, 'DELETE', null, token);\n          db.transaction(tx => tx.executeSql('DELETE FROM jobs_cache WHERE id=?', [jobId]));\n          Alert.alert('Deleted', 'Job removed.');\n          navigation.navigate('Tabs', {\n            screen: 'Jobs'\n          });\n        } catch (e) {\n          Alert.alert('Error', e.message || 'Unable to delete job');\n        }\n      }\n    }]);\n  };\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: {\n        padding: 16,\n        paddingBottom: 32\n      },\n      children: [_jsxDEV(Text, {\n        style: {\n          fontSize: 18,\n          fontWeight: '600',\n          marginBottom: 8\n        },\n        children: [\"Job #\", jobId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1713,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: {\n          fontWeight: '600',\n          marginBottom: 6\n        },\n        children: \"Job Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1714,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        placeholder: \"Job name\",\n        value: jobName,\n        onChangeText: setJobName,\n        style: {\n          borderWidth: 1,\n          padding: 8,\n          marginBottom: 6\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1715,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          gap: 8\n        },\n        children: [_jsxDEV(DateInputField, {\n          value: jobStartDate,\n          onChange: setJobStartDate,\n          placeholder: \"Start date\",\n          style: {\n            flex: 1,\n            marginBottom: 0\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1717,\n          columnNumber: 11\n        }, this), _jsxDEV(DateInputField, {\n          value: jobEndDate,\n          onChange: setJobEndDate,\n          placeholder: \"End date\",\n          style: {\n            flex: 1,\n            marginBottom: 0\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1718,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1716,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        placeholder: \"Notes / scope\",\n        value: jobNotes,\n        onChangeText: setJobNotes,\n        multiline: true,\n        style: {\n          borderWidth: 1,\n          padding: 8,\n          marginTop: 6,\n          minHeight: 80\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1720,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: {\n          fontWeight: '600',\n          marginTop: 16\n        },\n        children: \"Customer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1722,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        placeholder: \"Name\",\n        value: jobCustomerName,\n        onChangeText: setJobCustomerName,\n        style: {\n          borderWidth: 1,\n          padding: 8,\n          marginBottom: 6\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1723,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        placeholder: \"Phone\",\n        value: jobCustomerPhone,\n        onChangeText: setJobCustomerPhone,\n        keyboardType: \"phone-pad\",\n        style: {\n          borderWidth: 1,\n          padding: 8,\n          marginBottom: 6\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1724,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        placeholder: \"Email\",\n        value: jobCustomerEmail,\n        onChangeText: setJobCustomerEmail,\n        keyboardType: \"email-address\",\n        style: {\n          borderWidth: 1,\n          padding: 8,\n          marginBottom: 6\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1725,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: {\n          fontWeight: '600',\n          marginTop: 16\n        },\n        children: \"Job Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1727,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        placeholder: \"Address line 1\",\n        value: jobAddressLine1,\n        onChangeText: setJobAddressLine1,\n        style: {\n          borderWidth: 1,\n          padding: 8,\n          marginBottom: 6\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1728,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        placeholder: \"Address line 2\",\n        value: jobAddressLine2,\n        onChangeText: setJobAddressLine2,\n        style: {\n          borderWidth: 1,\n          padding: 8,\n          marginBottom: 6\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1729,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          gap: 8\n        },\n        children: [_jsxDEV(TextInput, {\n          placeholder: \"City\",\n          value: jobCity,\n          onChangeText: setJobCity,\n          style: {\n            flex: 1,\n            borderWidth: 1,\n            padding: 8\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1731,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"State\",\n          value: jobStateCode,\n          onChangeText: setJobStateCode,\n          style: {\n            width: 80,\n            borderWidth: 1,\n            padding: 8\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1732,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"ZIP\",\n          value: jobZip,\n          onChangeText: setJobZip,\n          style: {\n            width: 100,\n            borderWidth: 1,\n            padding: 8\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1733,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1730,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          marginTop: 12\n        },\n        children: _jsxDEV(Button, {\n          title: \"Save details\",\n          onPress: saveJobDetails\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1736,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1735,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          marginTop: 12\n        },\n        children: _jsxDEV(Button, {\n          color: \"#d11a2a\",\n          title: \"Delete job\",\n          onPress: deleteJob\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1739,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1738,\n        columnNumber: 9\n      }, this), (user?.role === 'ADMIN' || user?.role === 'SUPERVISOR' || user?.role === 'ESTIMATOR') && _jsxDEV(View, {\n        style: {\n          marginVertical: 16\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            fontWeight: '600'\n          },\n          children: \"New Change Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1744,\n          columnNumber: 13\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Title\",\n          value: title,\n          onChangeText: setTitle,\n          style: {\n            borderWidth: 1,\n            padding: 8,\n            marginVertical: 6\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1745,\n          columnNumber: 13\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Amount $\",\n          value: amountDelta,\n          onChangeText: setAmountDelta,\n          keyboardType: \"decimal-pad\",\n          style: {\n            borderWidth: 1,\n            padding: 8,\n            marginVertical: 6\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1746,\n          columnNumber: 13\n        }, this), _jsxDEV(Button, {\n          title: \"Add Change Order\",\n          onPress: addCO\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1747,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1743,\n        columnNumber: 11\n      }, this), _jsxDEV(Text, {\n        style: {\n          fontWeight: '600',\n          marginTop: 12\n        },\n        children: \"Change Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1750,\n        columnNumber: 9\n      }, this), changeOrders.length === 0 ? _jsxDEV(Text, {\n        style: {\n          marginVertical: 6\n        },\n        children: \"No change orders yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1752,\n        columnNumber: 11\n      }, this) : changeOrders.map(item => _jsxDEV(View, {\n        style: {\n          borderWidth: 1,\n          padding: 10,\n          borderRadius: 8,\n          marginVertical: 6\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            fontWeight: '600'\n          },\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1755,\n          columnNumber: 13\n        }, this), _jsxDEV(Text, {\n          children: [\"Status: \", item.status, \" | $\", item.amountDelta]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1756,\n          columnNumber: 13\n        }, this), (user?.role === 'ADMIN' || user?.role === 'SUPERVISOR' || user?.role === 'ESTIMATOR') && _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            gap: 8,\n            marginTop: 8\n          },\n          children: [_jsxDEV(Button, {\n            title: \"Approve\",\n            onPress: async () => {\n              await api(`/change-orders/${item.id}`, 'PATCH', {\n                status: 'APPROVED'\n              }, token);\n              loadCO();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1759,\n            columnNumber: 17\n          }, this), _jsxDEV(Button, {\n            title: \"Reject\",\n            onPress: async () => {\n              await api(`/change-orders/${item.id}`, 'PATCH', {\n                status: 'REJECTED'\n              }, token);\n              loadCO();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1760,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1758,\n          columnNumber: 15\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1754,\n        columnNumber: 11\n      }, this)), _jsxDEV(Text, {\n        style: {\n          fontWeight: '600',\n          marginTop: 16\n        },\n        children: \"Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1766,\n        columnNumber: 9\n      }, this), _jsxDEV(JobTasks, {\n        jobId: jobId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1767,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: {\n          fontWeight: '600',\n          marginTop: 16\n        },\n        children: \"Schedule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1769,\n        columnNumber: 9\n      }, this), _jsxDEV(JobSchedule, {\n        jobId: jobId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1770,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1712,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1711,\n    columnNumber: 5\n  }, this);\n}\nfunction JobTasks({\n  jobId\n}) {\n  const {\n    token\n  } = useAuth();\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState('');\n  const [dueDate, setDueDate] = useState('');\n  const load = async () => {\n    try {\n      const data = await api(`/tasks?jobId=${jobId}`, 'GET', null, token);\n      setTasks(data);\n      db.transaction(tx => {\n        tx.executeSql('DELETE FROM tasks_cache WHERE jobId=?', [jobId]);\n        data.forEach(t => tx.executeSql('INSERT OR REPLACE INTO tasks_cache (id, jobId, title, status, dueDate) VALUES (?,?,?,?,?)', [t.id, jobId, t.title || '', t.status || 'TODO', t.dueDate || '']));\n      });\n    } catch (e) {\n      db.transaction(tx => tx.executeSql('SELECT id, jobId, title, status, dueDate FROM tasks_cache WHERE jobId=?', [jobId], (_, {\n        rows\n      }) => setTasks(rows._array || [])));\n    }\n  };\n  useEffect(() => {\n    load();\n  }, []);\n  const add = async () => {\n    if (!title.trim()) return Alert.alert('Title required');\n    await api('/tasks', 'POST', {\n      title,\n      jobId,\n      dueDate\n    }, token);\n    setTitle('');\n    setDueDate('');\n    load();\n  };\n  const done = async id => {\n    await api(`/tasks/${id}`, 'PATCH', {\n      status: 'DONE'\n    }, token);\n    load();\n  };\n  const remove = id => {\n    Alert.alert('Delete task', 'Remove this task?', [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Delete',\n      style: 'destructive',\n      onPress: async () => {\n        await api(`/tasks/${id}`, 'DELETE', null, token);\n        load();\n      }\n    }]);\n  };\n  return _jsxDEV(View, {\n    children: [_jsxDEV(SurfaceCard, {\n      style: {\n        marginBottom: spacing(2)\n      },\n      children: [_jsxDEV(Text, {\n        style: {\n          color: palette.text,\n          fontSize: typography.h2,\n          fontWeight: '600',\n          marginBottom: spacing(1.5)\n        },\n        children: \"Add task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1809,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        placeholder: \"Task title\",\n        placeholderTextColor: palette.muted,\n        value: title,\n        onChangeText: setTitle,\n        style: {\n          borderWidth: 1,\n          borderColor: palette.border,\n          borderRadius: 12,\n          padding: spacing(2),\n          color: palette.text,\n          backgroundColor: palette.surfaceMuted,\n          marginBottom: spacing(1.5)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1810,\n        columnNumber: 9\n      }, this), _jsxDEV(DateInputField, {\n        value: dueDate,\n        onChange: setDueDate,\n        placeholder: \"Due date (optional)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1825,\n        columnNumber: 9\n      }, this), _jsxDEV(QuickAction, {\n        label: \"Add task\",\n        onPress: add\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1826,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1808,\n      columnNumber: 7\n    }, this), tasks.length === 0 ? _jsxDEV(SurfaceCard, {\n      children: _jsxDEV(Text, {\n        style: {\n          color: palette.muted\n        },\n        children: \"No tasks yet. Add one to start tracking progress.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1831,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1830,\n      columnNumber: 9\n    }, this) : tasks.map(t => _jsxDEV(SurfaceCard, {\n      style: {\n        marginBottom: spacing(1.5)\n      },\n      children: [_jsxDEV(Text, {\n        style: {\n          color: palette.text,\n          fontWeight: '600',\n          fontSize: typography.h2 - 2\n        },\n        children: t.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1836,\n        columnNumber: 13\n      }, this), _jsxDEV(Text, {\n        style: {\n          color: palette.muted,\n          marginTop: spacing(0.5)\n        },\n        children: [\"Status: \", t.status || 'TODO', t.dueDate ? ` - Due ${formatDate(t.dueDate)}` : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1837,\n        columnNumber: 13\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          columnGap: spacing(1),\n          rowGap: spacing(1),\n          marginTop: spacing(1.5)\n        },\n        children: [!isTaskCompleted(t.status) ? _jsxDEV(QuickAction, {\n          label: \"Mark done\",\n          tone: \"success\",\n          onPress: () => done(t.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1842,\n          columnNumber: 17\n        }, this) : null, _jsxDEV(QuickAction, {\n          label: \"Delete\",\n          tone: \"danger\",\n          onPress: () => remove(t.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1844,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1840,\n        columnNumber: 13\n      }, this)]\n    }, t.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1835,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1807,\n    columnNumber: 5\n  }, this);\n}\nfunction JobSchedule({\n  jobId\n}) {\n  const {\n    token\n  } = useAuth();\n  const [events, setEvents] = useState([]);\n  const [title, setTitle] = useState('');\n  const [startAt, setStartAt] = useState('');\n  const [endAt, setEndAt] = useState('');\n  const load = async () => {\n    try {\n      const data = await api(`/calendar?jobId=${jobId}`, 'GET', null, token);\n      setEvents(data);\n      db.transaction(tx => {\n        tx.executeSql('DELETE FROM calendar_cache WHERE jobId=?', [jobId]);\n        data.forEach(ev => tx.executeSql('INSERT OR REPLACE INTO calendar_cache (id, jobId, title, startAt, endAt) VALUES (?,?,?,?,?)', [ev.id, jobId, ev.title || '', ev.startAt || '', ev.endAt || '']));\n      });\n    } catch (e) {\n      db.transaction(tx => tx.executeSql('SELECT id, jobId, title, startAt, endAt FROM calendar_cache WHERE jobId=?', [jobId], (_, {\n        rows\n      }) => setEvents(rows._array || [])));\n    }\n  };\n  useEffect(() => {\n    load();\n  }, []);\n  const add = async () => {\n    if (!title.trim() || !startAt) return Alert.alert('Title and start time required');\n    await api('/calendar', 'POST', {\n      title,\n      jobId,\n      startAt,\n      endAt\n    }, token);\n    setTitle('');\n    setStartAt('');\n    setEndAt('');\n    load();\n  };\n  const remove = id => {\n    Alert.alert('Delete event', 'Remove this schedule item?', [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Delete',\n      style: 'destructive',\n      onPress: async () => {\n        await api(`/calendar/${id}`, 'DELETE', null, token);\n        load();\n      }\n    }]);\n  };\n  return _jsxDEV(View, {\n    children: [_jsxDEV(SurfaceCard, {\n      style: {\n        marginBottom: spacing(2)\n      },\n      children: [_jsxDEV(Text, {\n        style: {\n          color: palette.text,\n          fontSize: typography.h2,\n          fontWeight: '600',\n          marginBottom: spacing(1.5)\n        },\n        children: \"Schedule event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1886,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        placeholder: \"Event title\",\n        placeholderTextColor: palette.muted,\n        value: title,\n        onChangeText: setTitle,\n        style: {\n          borderWidth: 1,\n          borderColor: palette.border,\n          borderRadius: 12,\n          padding: spacing(2),\n          color: palette.text,\n          backgroundColor: palette.surfaceMuted,\n          marginBottom: spacing(1.5)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1887,\n        columnNumber: 9\n      }, this), _jsxDEV(DateInputField, {\n        value: startAt,\n        onChange: date => {\n          const existing = startAt || '';\n          const timePartIndex = existing.indexOf('T');\n          const timePart = timePartIndex > -1 ? existing.substring(timePartIndex) : 'T08:00:00';\n          setStartAt(`${date}${timePart}`);\n        },\n        placeholder: \"Start date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1902,\n        columnNumber: 9\n      }, this), _jsxDEV(DateInputField, {\n        value: endAt,\n        onChange: date => {\n          if (!date) {\n            setEndAt('');\n            return;\n          }\n          const existing = endAt || '';\n          const timePartIndex = existing.indexOf('T');\n          const timePart = timePartIndex > -1 ? existing.substring(timePartIndex) : 'T17:00:00';\n          setEndAt(`${date}${timePart}`);\n        },\n        placeholder: \"End date (optional)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1912,\n        columnNumber: 9\n      }, this), _jsxDEV(QuickAction, {\n        label: \"Add event\",\n        onPress: add\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1926,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1885,\n      columnNumber: 7\n    }, this), events.length === 0 ? _jsxDEV(SurfaceCard, {\n      children: _jsxDEV(Text, {\n        style: {\n          color: palette.muted\n        },\n        children: \"No schedule entries yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1931,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1930,\n      columnNumber: 9\n    }, this) : events.map(ev => {\n      const startLabel = ev.startAt ? `Starts ${formatDate(ev.startAt)}` : 'No start date';\n      const endLabel = ev.endAt ? ` - Ends ${formatDate(ev.endAt)}` : '';\n      return _jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(1.5)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontWeight: '600',\n            fontSize: typography.h2 - 2\n          },\n          children: ev.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1939,\n          columnNumber: 15\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(0.5)\n          },\n          children: [startLabel, endLabel]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1940,\n          columnNumber: 15\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            columnGap: spacing(1),\n            marginTop: spacing(1.5)\n          },\n          children: _jsxDEV(QuickAction, {\n            label: \"Delete\",\n            tone: \"danger\",\n            onPress: () => remove(ev.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1944,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1943,\n          columnNumber: 15\n        }, this)]\n      }, ev.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1938,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1884,\n    columnNumber: 5\n  }, this);\n}\nasync function processQueue(token) {\n  return new Promise(resolve => {\n    db.transaction(tx => {\n      tx.executeSql('SELECT * FROM queue', [], async (_, {\n        rows\n      }) => {\n        const items = rows._array || [];\n        for (const q of items) {\n          try {\n            const payload = JSON.parse(q.payload);\n            if (q.type === 'createLead') {\n              await api('/leads', 'POST', payload, token);\n            }\n            if (q.type === 'uploadPhoto') {\n              await api('/upload/image', 'POST', {\n                dataUrl: payload.dataUrl\n              }, token);\n            }\n            db.transaction(txx => txx.executeSql('DELETE FROM queue WHERE id=?', [q.id]));\n          } catch (e) {}\n        }\n        resolve();\n      });\n    });\n  });\n}\nfunction LeadsScreen({\n  navigation\n}) {\n  const {\n    token\n  } = useAuth();\n  const [leads, setLeads] = useState([]);\n  const [refreshing, setRefreshing] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const fetchLeads = useCallback(async () => {\n    setLoading(true);\n    try {\n      const data = await api('/leads', 'GET', null, token);\n      setLeads(data);\n      db.transaction(tx => {\n        tx.executeSql && tx.executeSql('DELETE FROM leads_cache;');\n        data.forEach(l => tx.executeSql && tx.executeSql('INSERT OR REPLACE INTO leads_cache (id, description, status) VALUES (?,?,?)', [l.id, l.description || '', l.status || 'NEW']));\n      });\n    } catch (e) {\n      db.transaction(tx => tx.executeSql && tx.executeSql('SELECT id, description, status FROM leads_cache', [], (_, {\n        rows\n      }) => setLeads(rows._array || [])));\n    } finally {\n      setLoading(false);\n    }\n  }, [token]);\n  useFocusEffect(useCallback(() => {\n    fetchLeads();\n  }, [fetchLeads]));\n  const onRefresh = useCallback(async () => {\n    setRefreshing(true);\n    await fetchLeads();\n    setRefreshing(false);\n  }, [fetchLeads]);\n  const deleteLead = useCallback(lead => {\n    Alert.alert('Delete lead', `Delete lead #${lead.id}?`, [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Delete',\n      style: 'destructive',\n      onPress: async () => {\n        try {\n          await api(`/leads/${lead.id}`, 'DELETE', null, token);\n          setLeads(prev => prev.filter(l => l.id !== lead.id));\n          db.transaction(tx => tx.executeSql && tx.executeSql('DELETE FROM leads_cache WHERE id=?', [lead.id]));\n        } catch (err) {\n          Alert.alert('Error', err.message || 'Unable to delete lead');\n        }\n      }\n    }]);\n  }, [token]);\n  const newLeadsCount = leads.filter(l => (l.status || '').toUpperCase() === 'NEW').length;\n  const renderLeadCard = lead => {\n    const customer = lead.Customer || {};\n    const jobsite = lead.Jobsite || {};\n    const addressParts = [jobsite.addressLine1, jobsite.addressLine2, [jobsite.city, jobsite.state].filter(Boolean).join(', '), jobsite.zip].filter(Boolean);\n    const address = addressParts.join(', ');\n    const statusKey = (lead.status || 'NEW').toUpperCase();\n    return _jsxDEV(SurfaceCard, {\n      children: [_jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        children: [_jsxDEV(View, {\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.text,\n              fontSize: typography.h2,\n              fontWeight: '600'\n            },\n            children: [\"Lead #\", lead.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2044,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.5)\n            },\n            children: customer.name || 'Unknown customer'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2045,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2043,\n          columnNumber: 11\n        }, this), _jsxDEV(StatusPill, {\n          status: statusKey\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2047,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2042,\n        columnNumber: 9\n      }, this), customer.phone ? _jsxDEV(Text, {\n        style: {\n          color: palette.muted,\n          marginTop: spacing(0.5)\n        },\n        children: customer.phone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2049,\n        columnNumber: 27\n      }, this) : null, customer.email ? _jsxDEV(Text, {\n        style: {\n          color: palette.muted\n        },\n        children: customer.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2050,\n        columnNumber: 27\n      }, this) : null, address ? _jsxDEV(Text, {\n        style: {\n          color: palette.muted,\n          marginTop: spacing(1)\n        },\n        children: address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2051,\n        columnNumber: 20\n      }, this) : null, _jsxDEV(Text, {\n        numberOfLines: 3,\n        style: {\n          color: palette.text,\n          marginTop: spacing(1.5)\n        },\n        children: lead.description || 'No scope captured yet.'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2052,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          columnGap: spacing(1),\n          rowGap: spacing(1),\n          marginTop: spacing(2)\n        },\n        children: [_jsxDEV(QuickAction, {\n          label: \"Open\",\n          onPress: () => navigation.navigate('EstimateEditor', {\n            leadId: lead.id\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2054,\n          columnNumber: 11\n        }, this), _jsxDEV(QuickAction, {\n          label: \"Convert\",\n          tone: \"success\",\n          onPress: () => navigation.navigate('Jobs')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2055,\n          columnNumber: 11\n        }, this), _jsxDEV(QuickAction, {\n          label: \"Delete\",\n          tone: \"danger\",\n          onPress: () => deleteLead(lead)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2056,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2053,\n        columnNumber: 9\n      }, this)]\n    }, lead.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2041,\n      columnNumber: 7\n    }, this);\n  };\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(FlatList, {\n      data: leads,\n      keyExtractor: item => String(item.id),\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(4)\n      },\n      refreshControl: _jsxDEV(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh,\n        tintColor: palette.primary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2068,\n        columnNumber: 25\n      }, this),\n      ListHeaderComponent: _jsxDEV(View, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginBottom: spacing(2)\n          },\n          children: [_jsxDEV(View, {\n            children: [_jsxDEV(Text, {\n              style: {\n                color: palette.text,\n                fontSize: typography.h1,\n                fontWeight: '700'\n              },\n              children: \"Leads\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2073,\n              columnNumber: 17\n            }, this), _jsxDEV(Text, {\n              style: {\n                color: palette.muted,\n                marginTop: spacing(0.5)\n              },\n              children: \"Keep the funnel moving\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2074,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2072,\n            columnNumber: 15\n          }, this), _jsxDEV(QuickAction, {\n            label: \"New lead\",\n            onPress: () => navigation.navigate('NewLead')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2076,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2071,\n          columnNumber: 13\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            columnGap: spacing(2),\n            rowGap: spacing(2)\n          },\n          children: [_jsxDEV(View, {\n            style: {\n              flexBasis: '48%',\n              minWidth: 160\n            },\n            children: _jsxDEV(SummaryCard, {\n              title: \"Total\",\n              value: leads.length,\n              subtitle: `${newLeadsCount} new`,\n              tone: \"info\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2080,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2079,\n            columnNumber: 15\n          }, this), _jsxDEV(View, {\n            style: {\n              flexBasis: '48%',\n              minWidth: 160\n            },\n            children: _jsxDEV(SummaryCard, {\n              title: \"Outstanding\",\n              value: newLeadsCount,\n              subtitle: \"Require follow up\",\n              tone: \"warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2083,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2082,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2078,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2070,\n        columnNumber: 11\n      }, this),\n      renderItem: ({\n        item\n      }) => renderLeadCard(item),\n      ListEmptyComponent: loading ? _jsxDEV(SurfaceCard, {\n        style: {\n          alignItems: 'center',\n          paddingVertical: spacing(4)\n        },\n        children: [_jsxDEV(ActivityIndicator, {\n          color: palette.primary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2092,\n          columnNumber: 15\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(1)\n          },\n          children: \"Loading leads...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2093,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2091,\n        columnNumber: 13\n      }, this) : _jsxDEV(SurfaceCard, {\n        children: _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: \"No leads yet. Capture a lead to get started.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2097,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2096,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2064,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 2063,\n    columnNumber: 5\n  }, this);\n}\nfunction NewLeadScreen({\n  navigation\n}) {\n  const {\n    token\n  } = useAuth();\n  const [description, setDescription] = useState('');\n  const [status, setStatus] = useState('NEW');\n  const [customerName, setCustomerName] = useState('');\n  const [customerPhone, setCustomerPhone] = useState('');\n  const [customerEmail, setCustomerEmail] = useState('');\n  const [addressLine1, setAddressLine1] = useState('');\n  const [addressLine2, setAddressLine2] = useState('');\n  const [city, setCity] = useState('');\n  const [stateCode, setStateCode] = useState('');\n  const [zip, setZip] = useState('');\n  const [showCustomerSection, setShowCustomerSection] = useState(false);\n  const [showJobsiteSection, setShowJobsiteSection] = useState(false);\n  const statuses = ['NEW', 'CONTACTED', 'ESTIMATING', 'CONVERTED', 'CLOSED_LOST'];\n  const buildPayload = () => {\n    const customer = [customerName, customerPhone, customerEmail].some(v => v && v.trim()) ? {\n      name: customerName.trim(),\n      phone: customerPhone.trim(),\n      email: customerEmail.trim()\n    } : null;\n    const jobsite = [addressLine1, addressLine2, city, stateCode, zip].some(v => v && v.trim()) ? {\n      addressLine1: addressLine1.trim(),\n      addressLine2: addressLine2.trim(),\n      city: city.trim(),\n      state: stateCode.trim(),\n      zip: zip.trim()\n    } : null;\n    return {\n      description,\n      status,\n      customer,\n      jobsite\n    };\n  };\n  const createLeadOnline = async () => {\n    const payload = buildPayload();\n    const created = await api('/leads', 'POST', payload, token);\n    navigation.replace('EstimateEditor', {\n      leadId: created.id\n    });\n    Alert.alert('Lead created', `Lead #${created.id} ready to estimate.`);\n  };\n  const queueLead = () => {\n    const payload = buildPayload();\n    db.transaction(tx => tx.executeSql('INSERT INTO queue (type, payload) VALUES (?,?)', ['createLead', JSON.stringify(payload)]));\n    Alert.alert('Saved offline', 'We will submit this lead when you reconnect.');\n    navigation.goBack();\n  };\n  const submit = async () => {\n    if (!description.trim()) {\n      Alert.alert('Missing scope', 'Please describe the job or scope of work.');\n      return;\n    }\n    try {\n      await createLeadOnline();\n    } catch (e) {\n      queueLead();\n    }\n  };\n  const chipStyle = active => ({\n    paddingHorizontal: spacing(2),\n    paddingVertical: spacing(1),\n    borderRadius: 999,\n    borderWidth: 1,\n    borderColor: active ? palette.primary : palette.border,\n    backgroundColor: active ? '#d9f2ed' : palette.surface\n  });\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(6)\n      },\n      children: [_jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontSize: typography.h1,\n            fontWeight: '700',\n            marginBottom: spacing(2)\n          },\n          children: \"New lead\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2185,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontWeight: '600',\n            marginBottom: spacing(1)\n          },\n          children: \"Scope\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2186,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Describe the job...\",\n          placeholderTextColor: palette.muted,\n          value: description,\n          onChangeText: setDescription,\n          multiline: true,\n          style: {\n            borderWidth: 1,\n            borderColor: palette.border,\n            borderRadius: 12,\n            padding: spacing(2),\n            minHeight: 120,\n            color: palette.text,\n            backgroundColor: palette.surfaceMuted,\n            textAlignVertical: 'top'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2187,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontWeight: '600',\n            marginTop: spacing(2),\n            marginBottom: spacing(1)\n          },\n          children: \"Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2204,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            columnGap: spacing(1),\n            rowGap: spacing(1)\n          },\n          children: statuses.map(s => {\n            const active = status === s;\n            return _jsxDEV(TouchableOpacity, {\n              onPress: () => setStatus(s),\n              activeOpacity: 0.85,\n              style: chipStyle(active),\n              children: _jsxDEV(Text, {\n                style: {\n                  color: active ? palette.primaryStrong : palette.muted,\n                  fontWeight: '600',\n                  fontSize: typography.small\n                },\n                children: s.replace('_', ' ')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2210,\n                columnNumber: 19\n              }, this)\n            }, s, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2209,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2205,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginTop: spacing(3)\n          },\n          children: [_jsxDEV(QuickAction, {\n            label: \"Save offline\",\n            tone: \"muted\",\n            onPress: queueLead\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2216,\n            columnNumber: 13\n          }, this), _jsxDEV(TouchableOpacity, {\n            onPress: submit,\n            activeOpacity: 0.85,\n            style: {\n              backgroundColor: palette.primary,\n              paddingHorizontal: spacing(3),\n              paddingVertical: spacing(1.5),\n              borderRadius: 12\n            },\n            children: _jsxDEV(Text, {\n              style: {\n                color: '#fff',\n                fontWeight: '700'\n              },\n              children: \"Create lead\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2222,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2217,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2184,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(TouchableOpacity, {\n          onPress: () => setShowCustomerSection(v => !v),\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n          },\n          activeOpacity: 0.8,\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.text,\n              fontSize: typography.h2,\n              fontWeight: '600'\n            },\n            children: \"Customer details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2233,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.primary,\n              fontWeight: '600'\n            },\n            children: showCustomerSection ? 'Hide' : 'Add'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2234,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2228,\n          columnNumber: 11\n        }, this), showCustomerSection ? _jsxDEV(View, {\n          style: {\n            marginTop: spacing(2)\n          },\n          children: [_jsxDEV(TextInput, {\n            placeholder: \"Name\",\n            placeholderTextColor: palette.muted,\n            value: customerName,\n            onChangeText: setCustomerName,\n            style: {\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted,\n              marginBottom: spacing(1.5)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2238,\n            columnNumber: 15\n          }, this), _jsxDEV(TextInput, {\n            placeholder: \"Phone\",\n            placeholderTextColor: palette.muted,\n            keyboardType: \"phone-pad\",\n            value: customerPhone,\n            onChangeText: setCustomerPhone,\n            style: {\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted,\n              marginBottom: spacing(1.5)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2253,\n            columnNumber: 15\n          }, this), _jsxDEV(TextInput, {\n            placeholder: \"Email\",\n            placeholderTextColor: palette.muted,\n            keyboardType: \"email-address\",\n            autoCapitalize: \"none\",\n            value: customerEmail,\n            onChangeText: setCustomerEmail,\n            style: {\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2269,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2237,\n          columnNumber: 13\n        }, this) : _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(1.5)\n          },\n          children: \"Add contact details to help follow up faster.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2287,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2227,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        children: [_jsxDEV(TouchableOpacity, {\n          onPress: () => setShowJobsiteSection(v => !v),\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n          },\n          activeOpacity: 0.8,\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.text,\n              fontSize: typography.h2,\n              fontWeight: '600'\n            },\n            children: \"Jobsite address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2297,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.primary,\n              fontWeight: '600'\n            },\n            children: showJobsiteSection ? 'Hide' : 'Add'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2298,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2292,\n          columnNumber: 11\n        }, this), showJobsiteSection ? _jsxDEV(View, {\n          style: {\n            marginTop: spacing(2)\n          },\n          children: [_jsxDEV(TextInput, {\n            placeholder: \"Address line 1\",\n            placeholderTextColor: palette.muted,\n            value: addressLine1,\n            onChangeText: setAddressLine1,\n            style: {\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted,\n              marginBottom: spacing(1.5)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2302,\n            columnNumber: 15\n          }, this), _jsxDEV(TextInput, {\n            placeholder: \"Address line 2\",\n            placeholderTextColor: palette.muted,\n            value: addressLine2,\n            onChangeText: setAddressLine2,\n            style: {\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted,\n              marginBottom: spacing(1.5)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2317,\n            columnNumber: 15\n          }, this), _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              columnGap: spacing(1.5)\n            },\n            children: [_jsxDEV(View, {\n              style: {\n                flex: 1\n              },\n              children: _jsxDEV(TextInput, {\n                placeholder: \"City\",\n                placeholderTextColor: palette.muted,\n                value: city,\n                onChangeText: setCity,\n                style: {\n                  borderWidth: 1,\n                  borderColor: palette.border,\n                  borderRadius: 12,\n                  padding: spacing(2),\n                  color: palette.text,\n                  backgroundColor: palette.surfaceMuted,\n                  marginBottom: spacing(1.5)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2334,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2333,\n              columnNumber: 17\n            }, this), _jsxDEV(View, {\n              style: {\n                width: 80\n              },\n              children: _jsxDEV(TextInput, {\n                placeholder: \"State\",\n                placeholderTextColor: palette.muted,\n                value: stateCode,\n                onChangeText: setStateCode,\n                style: {\n                  borderWidth: 1,\n                  borderColor: palette.border,\n                  borderRadius: 12,\n                  padding: spacing(2),\n                  color: palette.text,\n                  backgroundColor: palette.surfaceMuted,\n                  marginBottom: spacing(1.5)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2351,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2350,\n              columnNumber: 17\n            }, this), _jsxDEV(View, {\n              style: {\n                width: 100\n              },\n              children: _jsxDEV(TextInput, {\n                placeholder: \"ZIP\",\n                placeholderTextColor: palette.muted,\n                value: zip,\n                onChangeText: setZip,\n                style: {\n                  borderWidth: 1,\n                  borderColor: palette.border,\n                  borderRadius: 12,\n                  padding: spacing(2),\n                  color: palette.text,\n                  backgroundColor: palette.surfaceMuted,\n                  marginBottom: spacing(1.5)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2368,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2367,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2332,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2301,\n          columnNumber: 13\n        }, this) : _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(1.5)\n          },\n          children: \"Add a jobsite to keep crews aligned.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2387,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2291,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2183,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 2182,\n    columnNumber: 5\n  }, this);\n}\nfunction EstimateEditorScreen({\n  route,\n  navigation\n}) {\n  const {\n    token,\n    user\n  } = useAuth();\n  const {\n    leadId\n  } = route.params || {};\n  const [estimateId, setEstimateId] = useState(null);\n  const [items, setItems] = useState([]);\n  const [desc, setDesc] = useState('');\n  const [qty, setQty] = useState('1');\n  const [price, setPrice] = useState('0');\n  const [notes, setNotes] = useState('');\n  const [photoUrl, setPhotoUrl] = useState(null);\n  const [subtotal, setSubtotal] = useState(0);\n  const [taxRate, setTaxRate] = useState('7');\n  const [tax, setTax] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [leadDetails, setLeadDetails] = useState(null);\n  const [leadStatus, setLeadStatus] = useState('NEW');\n  const [leadScope, setLeadScope] = useState('');\n  const [leadCustomerName, setLeadCustomerName] = useState('');\n  const [leadCustomerPhone, setLeadCustomerPhone] = useState('');\n  const [leadCustomerEmail, setLeadCustomerEmail] = useState('');\n  const [leadAddressLine1, setLeadAddressLine1] = useState('');\n  const [leadAddressLine2, setLeadAddressLine2] = useState('');\n  const [leadCity, setLeadCity] = useState('');\n  const [leadStateCode, setLeadStateCode] = useState('');\n  const [leadZip, setLeadZip] = useState('');\n  const leadStatuses = ['NEW', 'CONTACTED', 'ESTIMATING', 'CONVERTED', 'CLOSED_LOST'];\n  const loadLead = useCallback(async () => {\n    if (!leadId) return;\n    try {\n      const data = await api(`/leads/${leadId}`, 'GET', null, token);\n      setLeadDetails(data);\n      setLeadStatus(data.status || 'NEW');\n      setLeadScope(data.description || '');\n      const customer = data.Customer || {};\n      const jobsite = data.Jobsite || {};\n      setLeadCustomerName(customer.name || '');\n      setLeadCustomerPhone(customer.phone || '');\n      setLeadCustomerEmail(customer.email || '');\n      setLeadAddressLine1(jobsite.addressLine1 || '');\n      setLeadAddressLine2(jobsite.addressLine2 || '');\n      setLeadCity(jobsite.city || '');\n      setLeadStateCode(jobsite.state || '');\n      setLeadZip(jobsite.zip || '');\n    } catch (e) {}\n  }, [leadId, token]);\n  useEffect(() => {\n    loadLead();\n  }, [loadLead]);\n  const createEstimate = async () => {\n    const est = await api('/estimates', 'POST', {\n      leadId,\n      customerId: leadDetails?.customerId ?? null,\n      jobsiteId: leadDetails?.jobsiteId ?? null,\n      subtotal: 0,\n      taxRate: parseFloat(taxRate) || 0,\n      total: 0\n    }, token);\n    setEstimateId(est.id);\n    return est;\n  };\n  const ensureEstimate = useCallback(async () => {\n    if (estimateId) return estimateId;\n    const created = await createEstimate();\n    setEstimateId(created.id);\n    return created.id;\n  }, [estimateId, createEstimate]);\n  useEffect(() => {\n    const rate = parseFloat(taxRate) || 0;\n    const newSubtotal = items.reduce((sum, item) => sum + parseFloat(item.qty || 0) * parseFloat(item.unitPrice || 0), 0);\n    const newTax = newSubtotal * (rate / 100);\n    setSubtotal(newSubtotal);\n    setTax(newTax);\n    setTotal(newSubtotal + newTax);\n  }, [items, taxRate]);\n  const addItem = async () => {\n    if (!desc.trim()) {\n      Alert.alert('Line item', 'Please add a description.');\n      return;\n    }\n    try {\n      const targetId = await ensureEstimate();\n      const payload = {\n        description: desc.trim(),\n        qty: parseFloat(qty) || 1,\n        unitPrice: parseFloat(price) || 0\n      };\n      const item = await api(`/estimates/${targetId}/items`, 'POST', payload, token);\n      setItems(prev => [item, ...prev]);\n      setDesc('');\n      setQty('1');\n      setPrice('0');\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to add line item');\n    }\n  };\n  const saveLeadDetails = async () => {\n    if (!leadId) return;\n    const customerPayload = [leadCustomerName, leadCustomerPhone, leadCustomerEmail].some(v => v && v.trim()) ? {\n      name: leadCustomerName.trim(),\n      phone: leadCustomerPhone.trim(),\n      email: leadCustomerEmail.trim()\n    } : null;\n    const jobsitePayload = [leadAddressLine1, leadAddressLine2, leadCity, leadStateCode, leadZip].some(v => v && v.trim()) ? {\n      addressLine1: leadAddressLine1.trim(),\n      addressLine2: leadAddressLine2.trim(),\n      city: leadCity.trim(),\n      state: leadStateCode.trim(),\n      zip: leadZip.trim()\n    } : null;\n    try {\n      await api(`/leads/${leadId}`, 'PATCH', {\n        description: leadScope,\n        status: leadStatus,\n        customer: customerPayload,\n        jobsite: jobsitePayload\n      }, token);\n      Alert.alert('Saved', 'Lead details updated.');\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to save lead details');\n    }\n  };\n  const pickPhoto = async () => {\n    const result = await ImagePicker.launchImageLibraryAsync({\n      allowsEditing: false,\n      quality: 0.6\n    });\n    if (!result.canceled && result.assets?.length) {\n      setPhotoUrl(result.assets[0].uri);\n    }\n  };\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(6)\n      },\n      children: [_jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontSize: typography.h2,\n            fontWeight: '700',\n            marginBottom: spacing(1.5)\n          },\n          children: \"Lead summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2537,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            columnGap: spacing(1),\n            rowGap: spacing(1.5),\n            marginBottom: spacing(2)\n          },\n          children: leadStatuses.map(s => {\n            const selected = leadStatus === s;\n            return _jsxDEV(QuickAction, {\n              label: s.replace('_', ' '),\n              tone: selected ? 'primary' : 'muted',\n              onPress: () => setLeadStatus(s)\n            }, s, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2542,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2538,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Scope / project notes\",\n          placeholderTextColor: palette.muted,\n          value: leadScope,\n          onChangeText: setLeadScope,\n          multiline: true,\n          style: {\n            borderWidth: 1,\n            borderColor: palette.border,\n            borderRadius: 12,\n            padding: spacing(2),\n            minHeight: 120,\n            color: palette.text,\n            backgroundColor: palette.surfaceMuted,\n            textAlignVertical: 'top'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2551,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'flex-end',\n            marginTop: spacing(2)\n          },\n          children: _jsxDEV(QuickAction, {\n            label: \"Save lead\",\n            onPress: saveLeadDetails\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2569,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2568,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2536,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontSize: typography.h2,\n            fontWeight: '700',\n            marginBottom: spacing(1.5)\n          },\n          children: \"Line items\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2574,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Describe the work or material\",\n          placeholderTextColor: palette.muted,\n          value: desc,\n          onChangeText: setDesc,\n          style: {\n            borderWidth: 1,\n            borderColor: palette.border,\n            borderRadius: 12,\n            padding: spacing(2),\n            color: palette.text,\n            backgroundColor: palette.surfaceMuted,\n            marginBottom: spacing(1.5)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2575,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            columnGap: spacing(1.5),\n            marginBottom: spacing(1.5)\n          },\n          children: [_jsxDEV(TextInput, {\n            placeholder: \"Qty\",\n            placeholderTextColor: palette.muted,\n            value: qty,\n            onChangeText: setQty,\n            keyboardType: \"numeric\",\n            style: {\n              flex: 1,\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2591,\n            columnNumber: 13\n          }, this), _jsxDEV(TextInput, {\n            placeholder: \"Unit price\",\n            placeholderTextColor: palette.muted,\n            value: price,\n            onChangeText: setPrice,\n            keyboardType: \"numeric\",\n            style: {\n              flex: 1,\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2607,\n            columnNumber: 13\n          }, this), _jsxDEV(QuickAction, {\n            label: \"Add\",\n            onPress: addItem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2623,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2590,\n          columnNumber: 11\n        }, this), items.length === 0 ? _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: \"No line items yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2626,\n          columnNumber: 13\n        }, this) : items.map((item, idx) => _jsxDEV(SurfaceCard, {\n          style: {\n            marginBottom: spacing(1.5)\n          },\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.text,\n              fontWeight: '600'\n            },\n            children: item.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2630,\n            columnNumber: 17\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.5)\n            },\n            children: [\"Qty \", item.qty, \" x $\", parseFloat(item.unitPrice || 0).toFixed(2), \" = \", (parseFloat(item.qty || 0) * parseFloat(item.unitPrice || 0)).toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2631,\n            columnNumber: 17\n          }, this)]\n        }, item.id || idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2629,\n          columnNumber: 15\n        }, this)), _jsxDEV(View, {\n          style: {\n            marginTop: spacing(2),\n            borderTopWidth: 1,\n            borderTopColor: palette.border,\n            paddingTop: spacing(2)\n          },\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.muted\n            },\n            children: \"Tax rate (%)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2638,\n            columnNumber: 13\n          }, this), _jsxDEV(TextInput, {\n            value: String(taxRate),\n            onChangeText: setTaxRate,\n            keyboardType: \"numeric\",\n            placeholderTextColor: palette.muted,\n            style: {\n              marginTop: spacing(1),\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2639,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: {\n              marginTop: spacing(2)\n            },\n            children: [_jsxDEV(Text, {\n              style: {\n                color: palette.text\n              },\n              children: [\"Subtotal: $\", subtotal.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2655,\n              columnNumber: 15\n            }, this), _jsxDEV(Text, {\n              style: {\n                color: palette.text\n              },\n              children: [\"Tax: $\", tax.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2656,\n              columnNumber: 15\n            }, this), _jsxDEV(Text, {\n              style: {\n                color: palette.text,\n                fontWeight: '700'\n              },\n              children: [\"Total: $\", total.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2657,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2654,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2637,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2573,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontSize: typography.h2,\n            fontWeight: '700',\n            marginBottom: spacing(1.5)\n          },\n          children: \"Attachments & notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2663,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Internal notes\",\n          placeholderTextColor: palette.muted,\n          value: notes,\n          onChangeText: setNotes,\n          multiline: true,\n          style: {\n            borderWidth: 1,\n            borderColor: palette.border,\n            borderRadius: 12,\n            padding: spacing(2),\n            minHeight: 100,\n            color: palette.text,\n            backgroundColor: palette.surfaceMuted,\n            textAlignVertical: 'top'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2664,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            columnGap: spacing(1.5),\n            marginTop: spacing(1.5)\n          },\n          children: _jsxDEV(QuickAction, {\n            label: \"Add photo\",\n            onPress: pickPhoto\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2682,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2681,\n          columnNumber: 11\n        }, this), photoUrl ? _jsxDEV(Image, {\n          source: {\n            uri: photoUrl\n          },\n          style: {\n            height: 160,\n            borderRadius: 12,\n            marginTop: spacing(2)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2685,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2662,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2535,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 2534,\n    columnNumber: 5\n  }, this);\n}\nfunction ScheduleScreen({\n  navigation\n}) {\n  const {\n    token\n  } = useAuth();\n  const [jobs, setJobs] = useState([]);\n  const [filter, setFilter] = useState('ALL');\n  const [queueCount, setQueueCount] = useState(0);\n  const [syncing, setSyncing] = useState(false);\n  const loadQueueCount = useCallback(() => {\n    db.transaction(tx => tx.executeSql('SELECT COUNT(*) as c FROM queue', [], (_, {\n      rows\n    }) => setQueueCount(rows._array?.[0]?.c || 0)));\n  }, []);\n  const load = useCallback(async () => {\n    try {\n      const data = await api('/jobs', 'GET', null, token);\n      setJobs(data);\n      db.transaction(tx => {\n        tx.executeSql('DELETE FROM jobs_cache;');\n        data.forEach(j => tx.executeSql('INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)', [j.id, j.name || '', j.status || 'SCHEDULED', j.startDate || '', j.endDate || '', j.notes || '']));\n      });\n    } catch (e) {\n      db.transaction(tx => tx.executeSql('SELECT id, name, status, startDate, endDate, notes FROM jobs_cache', [], (_, {\n        rows\n      }) => setJobs(rows._array || [])));\n    }\n  }, [token]);\n  useEffect(() => {\n    load();\n    loadQueueCount();\n  }, [load, loadQueueCount]);\n  const filters = [{\n    key: 'ALL',\n    label: 'All'\n  }, {\n    key: 'TODAY',\n    label: 'Today'\n  }, {\n    key: 'WEEK',\n    label: 'This week'\n  }];\n  const inRange = useCallback(dateValue => {\n    if (filter === 'ALL') return true;\n    if (!dateValue) return false;\n    const today = new Date();\n    const dt = new Date(dateValue);\n    if (Number.isNaN(dt.getTime())) return false;\n    if (filter === 'TODAY') {\n      return dt.getFullYear() === today.getFullYear() && dt.getMonth() === today.getMonth() && dt.getDate() === today.getDate();\n    }\n    const start = new Date(today);\n    start.setHours(0, 0, 0, 0);\n    start.setDate(today.getDate() - today.getDay());\n    const end = new Date(start);\n    end.setDate(start.getDate() + 6);\n    return dt >= start && dt <= end;\n  }, [filter]);\n  const filteredJobs = useMemo(() => jobs.filter(job => inRange(job.startDate)).sort((a, b) => new Date(a.startDate || 0) - new Date(b.startDate || 0)), [jobs, inRange]);\n  const handleSync = useCallback(async () => {\n    setSyncing(true);\n    try {\n      await processQueue(token);\n      await load();\n      loadQueueCount();\n    } finally {\n      setSyncing(false);\n    }\n  }, [token, load, loadQueueCount]);\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(6)\n      },\n      children: [_jsxDEV(Text, {\n        style: {\n          color: palette.text,\n          fontSize: typography.h1,\n          fontWeight: '700',\n          marginBottom: spacing(2)\n        },\n        children: \"Schedule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2765,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          columnGap: spacing(1),\n          rowGap: spacing(1.5),\n          marginBottom: spacing(2)\n        },\n        children: filters.map(option => _jsxDEV(QuickAction, {\n          label: option.label,\n          tone: filter === option.key ? 'primary' : 'muted',\n          onPress: () => setFilter(option.key)\n        }, option.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2768,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2766,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3),\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        children: [_jsxDEV(View, {\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.text,\n              fontWeight: '600'\n            },\n            children: \"Offline queue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2778,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.5)\n            },\n            children: [queueCount, \" items waiting to sync\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2779,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2777,\n          columnNumber: 11\n        }, this), _jsxDEV(QuickAction, {\n          label: syncing ? 'Syncing...' : 'Sync now',\n          tone: syncing ? 'muted' : 'primary',\n          onPress: syncing ? undefined : handleSync\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2781,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2776,\n        columnNumber: 9\n      }, this), filteredJobs.length === 0 ? _jsxDEV(SurfaceCard, {\n        children: _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: [\"No jobs \", filter !== 'ALL' ? 'in this range' : 'scheduled yet', \". Convert a lead or create a job to populate your schedule.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2786,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2785,\n        columnNumber: 11\n      }, this) : filteredJobs.map(job => {\n        const jobsite = job.Jobsite || {};\n        const addressParts = [jobsite.addressLine1, jobsite.addressLine2, [jobsite.city, jobsite.state].filter(Boolean).join(', '), jobsite.zip].filter(Boolean);\n        const address = addressParts.join(', ');\n        const startLabel = job.startDate ? `Starts ${formatDate(job.startDate)}` : 'No start date';\n        const endLabel = job.endDate ? ` - Due ${formatDate(job.endDate)}` : '';\n        return _jsxDEV(SurfaceCard, {\n          style: {\n            marginBottom: spacing(2)\n          },\n          children: [_jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center'\n            },\n            children: [_jsxDEV(Text, {\n              style: {\n                color: palette.text,\n                fontSize: typography.h2,\n                fontWeight: '600'\n              },\n              children: job.name || `Job #${job.id}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2803,\n              columnNumber: 19\n            }, this), _jsxDEV(StatusPill, {\n              status: job.status || 'SCHEDULED'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2804,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2802,\n            columnNumber: 17\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.5)\n            },\n            children: [startLabel, endLabel]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2806,\n            columnNumber: 17\n          }, this), address ? _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(1)\n            },\n            children: address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2809,\n            columnNumber: 28\n          }, this) : null, job.notes ? _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(1)\n            },\n            children: job.notes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2810,\n            columnNumber: 30\n          }, this) : null, _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              flexWrap: 'wrap',\n              columnGap: spacing(1),\n              rowGap: spacing(1),\n              marginTop: spacing(2)\n            },\n            children: [_jsxDEV(QuickAction, {\n              label: \"Open job\",\n              onPress: () => navigation.navigate('JobDetail', {\n                jobId: job.id\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2812,\n              columnNumber: 19\n            }, this), _jsxDEV(QuickAction, {\n              label: \"View tasks\",\n              onPress: () => navigation.navigate('JobDetail', {\n                jobId: job.id,\n                tab: 'tasks'\n              }),\n              tone: \"muted\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2813,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2811,\n            columnNumber: 17\n          }, this)]\n        }, job.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2801,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2764,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 2763,\n    columnNumber: 5\n  }, this);\n}\nfunction ProfileScreen({\n  navigation\n}) {\n  const {\n    setToken,\n    user\n  } = useAuth();\n  const isAdmin = (user?.role || '').toUpperCase() === 'ADMIN';\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(6)\n      },\n      children: [_jsxDEV(Text, {\n        style: {\n          color: palette.text,\n          fontSize: typography.h1,\n          fontWeight: '700',\n          marginBottom: spacing(2)\n        },\n        children: \"Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2829,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontSize: typography.small,\n            textTransform: 'uppercase',\n            fontWeight: '600'\n          },\n          children: \"Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2831,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontSize: typography.h2,\n            fontWeight: '700',\n            marginTop: spacing(1)\n          },\n          children: user?.name || user?.fullName || 'Team member'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2832,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(0.5)\n          },\n          children: user?.email || 'No email on file'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2833,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(0.5)\n          },\n          children: [\"Role: \", user?.role || 'TECH']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2834,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2830,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontSize: typography.small,\n            textTransform: 'uppercase',\n            fontWeight: '600',\n            marginBottom: spacing(1.5)\n          },\n          children: \"Actions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2838,\n          columnNumber: 11\n        }, this), isAdmin ? _jsxDEV(View, {\n          style: {\n            marginBottom: spacing(1.5)\n          },\n          children: _jsxDEV(QuickAction, {\n            label: \"Manage users\",\n            onPress: () => navigation.navigate('UsersAdmin')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2841,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2840,\n          columnNumber: 13\n        }, this) : null, _jsxDEV(QuickAction, {\n          label: \"Sign out\",\n          tone: \"danger\",\n          onPress: () => setToken(null)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2844,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2837,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2828,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 2827,\n    columnNumber: 5\n  }, this);\n}\nconst Stack = createNativeStackNavigator();\nconst Tabs = createBottomTabNavigator();\nfunction TabsNav() {\n  const {\n    user\n  } = useAuth();\n  const isAdmin = (user?.role || '').toUpperCase() === 'ADMIN';\n  return _jsxDEV(Tabs.Navigator, {\n    screenOptions: {\n      headerShown: false,\n      tabBarActiveTintColor: palette.primary,\n      tabBarStyle: {\n        backgroundColor: '#fff'\n      }\n    },\n    children: [_jsxDEV(Tabs.Screen, {\n      name: \"Dashboard\",\n      component: DashboardScreen,\n      options: {\n        title: 'Home'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2864,\n      columnNumber: 7\n    }, this), _jsxDEV(Tabs.Screen, {\n      name: \"Leads\",\n      component: LeadsScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2865,\n      columnNumber: 7\n    }, this), _jsxDEV(Tabs.Screen, {\n      name: \"Jobs\",\n      component: JobsKanbanScreen,\n      options: {\n        title: 'Jobs'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2866,\n      columnNumber: 7\n    }, this), isAdmin ? _jsxDEV(Tabs.Screen, {\n      name: \"Invoices\",\n      component: InvoicesScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2867,\n      columnNumber: 18\n    }, this) : null, _jsxDEV(Tabs.Screen, {\n      name: \"Schedule\",\n      component: ScheduleScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2868,\n      columnNumber: 7\n    }, this), _jsxDEV(Tabs.Screen, {\n      name: \"Profile\",\n      component: ProfileScreen,\n      options: {\n        title: \"Profile\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2869,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 2857,\n    columnNumber: 5\n  }, this);\n}\nfunction LoginScreen() {\n  const [email, setEmail] = useState('admin@example.com');\n  const [password, setPassword] = useState('test123');\n  const [busy, setBusy] = useState(false);\n  const {\n    setToken,\n    setUser\n  } = useAuth();\n  async function login() {\n    try {\n      setBusy(true);\n      const res = await fetch(`${API_URL}/auth/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await res.json();\n      if (!res.ok) throw new Error(data?.message || data?.error || 'Login failed');\n      const tok = data.token || data.accessToken;\n      if (!tok) throw new Error('No token returned from server');\n      const normalizedUser = data.user ? Object.assign({}, data.user, {\n        role: normalizeRole(data.user.role)\n      }) : {\n        email,\n        role: 'ADMIN',\n        name: 'Admin'\n      };\n      setToken(tok);\n      setUser(normalizedUser);\n      try {\n        await SecureStore.setItemAsync('auth_token', tok);\n        await SecureStore.setItemAsync('auth_user', JSON.stringify(normalizedUser));\n      } catch {}\n      Alert.alert('Welcome', 'Logged in');\n    } catch (e) {\n      Alert.alert('Error', e.message);\n    } finally {\n      setBusy(false);\n    }\n  }\n  return _jsxDEV(View, {\n    style: {\n      flex: 1,\n      padding: 20,\n      justifyContent: 'center'\n    },\n    children: [_jsxDEV(Text, {\n      style: {\n        fontSize: 24,\n        marginBottom: 16\n      },\n      children: \"PrecisionTracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2918,\n      columnNumber: 7\n    }, this), _jsxDEV(TextInput, {\n      placeholder: \"Email\",\n      autoCapitalize: \"none\",\n      value: email,\n      onChangeText: setEmail,\n      style: {\n        borderWidth: 1,\n        padding: 12,\n        marginBottom: 12\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2919,\n      columnNumber: 7\n    }, this), _jsxDEV(TextInput, {\n      placeholder: \"Password\",\n      secureTextEntry: true,\n      value: password,\n      onChangeText: setPassword,\n      style: {\n        borderWidth: 1,\n        padding: 12,\n        marginBottom: 12\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2926,\n      columnNumber: 7\n    }, this), _jsxDEV(Button, {\n      title: busy ? 'Signing in...' : 'Sign in',\n      onPress: login,\n      disabled: busy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2933,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 2917,\n    columnNumber: 5\n  }, this);\n}\nexport default function App() {\n  const [token, setToken] = useState(null);\n  const [user, setUser] = useState(null);\n  const [booting, setBooting] = useState(true);\n  useEffect(() => {\n    let mounted = true;\n    (async () => {\n      try {\n        const [tok, usr] = await Promise.all([SecureStore.getItemAsync('auth_token'), SecureStore.getItemAsync('auth_user')]);\n        if (mounted && tok) {\n          setToken(tok);\n          if (usr) {\n            const parsed = JSON.parse(usr);\n            parsed.role = normalizeRole(parsed.role);\n            setUser(parsed);\n          }\n        }\n      } catch {} finally {\n        if (mounted) setBooting(false);\n      }\n    })();\n    return () => {\n      mounted = false;\n    };\n  }, []);\n  const authValue = {\n    token,\n    setToken: t => {\n      setToken(t);\n      if (!t) {\n        try {\n          SecureStore.deleteItemAsync('auth_token');\n          SecureStore.deleteItemAsync('auth_user');\n        } catch {}\n      }\n    },\n    user,\n    setUser\n  };\n  if (booting) {\n    return _jsxDEV(SafeAreaView, {\n      style: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: _jsxDEV(Text, {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2979,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2978,\n      columnNumber: 7\n    }, this);\n  }\n  return _jsxDEV(AuthContext.Provider, {\n    value: authValue,\n    children: _jsxDEV(NavigationContainer, {\n      children: !token ? _jsxDEV(Stack.Navigator, {\n        children: _jsxDEV(Stack.Screen, {\n          name: \"Login\",\n          component: LoginScreen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2989,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2988,\n        columnNumber: 11\n      }, this) : _jsxDEV(Stack.Navigator, {\n        children: [_jsxDEV(Stack.Screen, {\n          name: \"Tabs\",\n          component: TabsNav,\n          options: {\n            headerShown: false\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2993,\n          columnNumber: 13\n        }, this), _jsxDEV(Stack.Screen, {\n          name: \"NewLead\",\n          component: NewLeadScreen,\n          options: {\n            title: 'New Lead'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2994,\n          columnNumber: 13\n        }, this), _jsxDEV(Stack.Screen, {\n          name: \"EstimateEditor\",\n          component: EstimateEditorScreen,\n          options: {\n            title: 'Estimate'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2995,\n          columnNumber: 13\n        }, this), _jsxDEV(Stack.Screen, {\n          name: \"Signature\",\n          component: SignatureScreen,\n          options: {\n            title: 'Signature'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2996,\n          columnNumber: 13\n        }, this), _jsxDEV(Stack.Screen, {\n          name: \"UsersAdmin\",\n          component: UsersAdminScreen,\n          options: {\n            title: 'Users (Admin)'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2997,\n          columnNumber: 13\n        }, this), _jsxDEV(Stack.Screen, {\n          name: \"JobDetail\",\n          component: JobDetailScreen,\n          options: {\n            title: 'Job'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2998,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2992,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2986,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 2985,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"names":["React","useEffect","useState","createContext","useContext","useRef","useCallback","useMemo","NavigationContainer","useFocusEffect","createNativeStackNavigator","createBottomTabNavigator","Text","TextInput","Button","FlatList","TouchableOpacity","SafeAreaView","Alert","Image","ScrollView","RefreshControl","ActivityIndicator","ImagePicker","FileSystem","SQLite","Svg","Path","ViewShot","Platform","View","SecureStore","DateTimePicker","DateTimePickerAndroid","jsxDEV","_jsxDEV","API_URL","process","env","EXPO_PUBLIC_API_URL","initOfflineTables","database","transaction","tx","executeSql","e","db","getDb","OS","fn","execAsync","runAsync","openDatabaseSync","dbHandle","normalizeRole","role","r","String","toUpperCase","includes","AuthContext","useAuth","api","path","method","body","token","res","fetch","headers","Object","assign","Authorization","JSON","stringify","undefined","ok","Error","json","error","palette","background","surface","surfaceMuted","border","text","muted","primary","primaryStrong","success","warning","danger","info","spacing","step","typography","h1","h2","small","floatingShadow","select","ios","shadowColor","shadowOpacity","shadowRadius","shadowOffset","width","height","android","elevation","default","pillTone","NEW","fg","bg","label","CONTACTED","ESTIMATING","CONVERTED","CLOSED_LOST","SCHEDULED","IN_PROGRESS","COMPLETE","DONE","ON_HOLD","CANCELLED","DRAFT","SENT","PART_PAID","PAID","VOID","toneMap","formInputBaseStyle","borderWidth","borderColor","borderRadius","paddingVertical","paddingHorizontal","color","backgroundColor","fontSize","marginBottom","FormInput","forwardRef","props","ref","placeholderTextColor","style","fileName","_jsxFileName","lineNumber","columnNumber","displayName","formatCurrency","value","amount","Number","isNaN","toLocaleString","minimumFractionDigits","maximumFractionDigits","formatDate","d","Date","getTime","toLocaleDateString","month","day","isTaskCompleted","status","key","SurfaceCard","children","onPress","content","padding","activeOpacity","StatusPill","cfg","fontWeight","SummaryCard","title","subtitle","tone","colors","textTransform","marginTop","SectionHeader","actionLabel","onAction","flexDirection","justifyContent","alignItems","QuickAction","toneStyles","textColor","toInputDate","dateValue","yyyy","getFullYear","mm","getMonth","padStart","dd","getDate","parseInputDate","parsed","DateInputField","onChange","placeholder","minimumDate","maximumDate","iosPickerVisible","setIosPickerVisible","applyDate","selectedDate","openPicker","baseDate","open","mode","event","selected","type","containerStyle","flex","display","TECH_ASSIGN_ROLES","TechSelector","team","onSelect","allowAllRoles","allowClear","options","normalized","map","member","filter","length","renderLabel","flexWrap","columnGap","rowGap","id","fullName","email","shortLabel","slice","DashboardScreen","navigation","loading","setLoading","refreshing","setRefreshing","leads","setLeads","jobs","setJobs","tasks","setTasks","invoiceSummary","setInvoiceSummary","lastUpdated","setLastUpdated","jobLookup","job","loadData","isPullRefresh","fetchLeads","data","forEach","l","description","Promise","resolve","_","rows","fallback","_array","fetchJobs","j","name","startDate","endDate","notes","fetchTasks","t","jobId","dueDate","fetchInvoiceSummary","all","onRefresh","newLeads","activeJobs","openTasks","outstandingValue","outstanding","collectedValue","collected","overdueCount","topLeads","topJobs","nextTasks","contentContainerStyle","paddingBottom","refreshControl","tintColor","flexBasis","navigate","idx","startLabel","endLabel","Boolean","join","numberOfLines","tab","lead","leadId","task","textAlign","toLocaleTimeString","hour","minute","SignaturePad","onCapturePng","points","setPoints","setPath","shotRef","format","quality","result","onStartShouldSetResponder","onResponderMove","x","nativeEvent","locationX","y","locationY","p","onResponderRelease","base64","current","capture","stroke","strokeWidth","fill","SignatureScreen","route","estimateId","params","sigPng","setSigPng","save","alert","resp","signaturePngUrl","paymentLink","goBack","userRoleOptions","UsersAdminScreen","users","setUsers","setEmail","setFullName","setRole","inviting","setInviting","load","response","Array","isArray","message","resetForm","invite","trimmedEmail","trim","toLowerCase","trimmedName","promote","newRole","remove","renderRolePill","roleCfg","find","option","renderRoleSelector","selectedRole","keyExtractor","u","ListHeaderComponent","onChangeText","autoCapitalize","keyboardType","disabled","opacity","ListEmptyComponent","renderItem","item","normalizedRole","InvoicesScreen","user","summary","setSummary","invoices","setInvoices","setFilter","isRefresh","summaryData","list","filters","filteredInvoices","inv","drafts","draftAmount","minWidth","totalCount","f","payments","Payments","reduce","sum","balance","Math","max","statusKey","number","issuedAt","dueAt","JobsKanbanScreen","newJobName","setNewJobName","newJobStartDate","setNewJobStartDate","newJobDueDate","setNewJobDueDate","newJobNotes","setNewJobNotes","newCustomerName","setNewCustomerName","newCustomerPhone","setNewCustomerPhone","newCustomerEmail","setNewCustomerEmail","newAddressLine1","setNewAddressLine1","newAddressLine2","setNewAddressLine2","newCity","setNewCity","newStateCode","setNewStateCode","newZip","setNewZip","jobFormTab","setJobFormTab","statusOrder","createJob","hasCustomer","some","v","hasAddress","payload","customer","phone","billingAddress","jobsite","addressLine1","addressLine2","city","state","zip","created","prev","updateJobStatus","updated","removeJob","sortedJobs","normalize","rank","indexOf","parseDateSafe","sort","a","b","statusDiff","startA","startB","groupedJobs","groups","currentStatus","push","statusLabel","charAt","quickStatusActions","inputStyle","jobTabs","renderJobFormFields","multiline","minHeight","textAlignVertical","group","Customer","Jobsite","addressParts","address","action","JobDetailScreen","jobName","setJobName","jobStartDate","setJobStartDate","jobEndDate","setJobEndDate","jobNotes","setJobNotes","jobCustomerName","setJobCustomerName","jobCustomerPhone","setJobCustomerPhone","jobCustomerEmail","setJobCustomerEmail","jobAddressLine1","setJobAddressLine1","jobAddressLine2","setJobAddressLine2","jobCity","setJobCity","jobStateCode","setJobStateCode","jobZip","setJobZip","changeOrders","setCO","setTitle","amountDelta","setAmountDelta","loadCO","loadJob","addCO","parseFloat","saveJobDetails","deleteJob","screen","gap","marginVertical","JobTasks","JobSchedule","setDueDate","add","done","events","setEvents","startAt","setStartAt","endAt","setEndAt","ev","date","existing","timePartIndex","timePart","substring","processQueue","items","q","parse","dataUrl","txx","LeadsScreen","deleteLead","err","newLeadsCount","renderLeadCard","NewLeadScreen","setDescription","setStatus","customerName","setCustomerName","customerPhone","setCustomerPhone","customerEmail","setCustomerEmail","setAddressLine1","setAddressLine2","setCity","stateCode","setStateCode","setZip","showCustomerSection","setShowCustomerSection","showJobsiteSection","setShowJobsiteSection","statuses","buildPayload","createLeadOnline","replace","queueLead","submit","chipStyle","active","s","EstimateEditorScreen","setEstimateId","setItems","desc","setDesc","qty","setQty","price","setPrice","setNotes","photoUrl","setPhotoUrl","subtotal","setSubtotal","taxRate","setTaxRate","tax","setTax","total","setTotal","leadDetails","setLeadDetails","leadStatus","setLeadStatus","leadScope","setLeadScope","leadCustomerName","setLeadCustomerName","leadCustomerPhone","setLeadCustomerPhone","leadCustomerEmail","setLeadCustomerEmail","leadAddressLine1","setLeadAddressLine1","leadAddressLine2","setLeadAddressLine2","leadCity","setLeadCity","leadStateCode","setLeadStateCode","leadZip","setLeadZip","leadStatuses","loadLead","createEstimate","est","customerId","jobsiteId","ensureEstimate","rate","newSubtotal","unitPrice","newTax","addItem","targetId","saveLeadDetails","customerPayload","jobsitePayload","pickPhoto","launchImageLibraryAsync","allowsEditing","canceled","assets","uri","toFixed","borderTopWidth","borderTopColor","paddingTop","source","ScheduleScreen","queueCount","setQueueCount","syncing","setSyncing","loadQueueCount","c","inRange","today","dt","start","setHours","setDate","getDay","end","filteredJobs","handleSync","ProfileScreen","setToken","isAdmin","Stack","Tabs","TabsNav","Navigator","screenOptions","headerShown","tabBarActiveTintColor","tabBarStyle","Screen","component","LoginScreen","password","setPassword","busy","setBusy","setUser","login","tok","accessToken","normalizedUser","setItemAsync","secureTextEntry","App","booting","setBooting","mounted","usr","getItemAsync","authValue","deleteItemAsync","Provider"],"sources":["C:/Users/Tyler/Downloads/PrecisionTracker-v4-wired/PrecisionTracker/mobile/App.js"],"sourcesContent":["\r\nimport React, { useEffect, useState, createContext, useContext, useRef, useCallback, useMemo } from 'react';\r\nimport { NavigationContainer, useFocusEffect } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport {Text, TextInput, Button, FlatList, TouchableOpacity, SafeAreaView, Alert, Image, ScrollView, RefreshControl, ActivityIndicator } from 'react-native';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport * as FileSystem from 'expo-file-system';\r\nimport * as SQLite from 'expo-sqlite';\r\nimport Svg, { Path } from 'react-native-svg';\r\nimport ViewShot from 'react-native-view-shot';\r\nimport { Platform, View } from 'react-native';\r\nimport * as SecureStore from 'expo-secure-store';\r\nimport DateTimePicker, { DateTimePickerAndroid } from '@react-native-community/datetimepicker';\r\n// import * as SQLite from 'expo-sqlite';\r\n\r\n\r\nconst API_URL = process.env.EXPO_PUBLIC_API_URL || 'http://localhost:4000';\r\n// const db = SQLite.openDatabase('offline.db');\r\n\r\n// function initDB(){\r\n//   db.transaction(tx => {\r\n//     tx.executeSql('CREATE TABLE IF NOT EXISTS queue (id INTEGER PRIMARY KEY AUTOINCREMENT, type TEXT, payload TEXT);');\r\n//     tx.executeSql('CREATE TABLE IF NOT EXISTS uploads (id INTEGER PRIMARY KEY AUTOINCREMENT, dataUrl TEXT);');\r\n//     tx.executeSql('CREATE TABLE IF NOT EXISTS leads_cache (id INTEGER PRIMARY KEY, description TEXT, status TEXT);');\r\n//   });\r\n// }\r\n\r\nfunction initOfflineTables(database){\r\n  try {\r\n    if (!database || typeof database.transaction !== 'function') return;\r\n    database.transaction(tx => {\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS queue (id INTEGER PRIMARY KEY AUTOINCREMENT, type TEXT, payload TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS uploads (id INTEGER PRIMARY KEY AUTOINCREMENT, dataUrl TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS leads_cache (id INTEGER PRIMARY KEY, description TEXT, status TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS jobs_cache (id INTEGER PRIMARY KEY, name TEXT, status TEXT, startDate TEXT, endDate TEXT, notes TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS tasks_cache (id INTEGER PRIMARY KEY, jobId INTEGER, title TEXT, status TEXT, dueDate TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS calendar_cache (id INTEGER PRIMARY KEY, jobId INTEGER, title TEXT, startAt TEXT, endAt TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS estimates_cache (id INTEGER PRIMARY KEY, leadId INTEGER, subtotal REAL, taxRate REAL, total REAL, status TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS estimate_items_cache (id INTEGER PRIMARY KEY, estimateId INTEGER, description TEXT, qty REAL, unitPrice REAL);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS change_orders_cache (id INTEGER PRIMARY KEY, jobId INTEGER, title TEXT, amountDelta REAL, status TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS users_cache (id INTEGER PRIMARY KEY, email TEXT, fullName TEXT, role TEXT);');\r\n    });\r\n  } catch (e) {\r\n    // best-effort; avoid noisy alerts in offline mode\r\n  }\r\n}\r\n\r\nlet db;\r\nexport function getDb() {\r\n  if (db) return db;\r\n\r\n  // Web: safe no-op DB\r\n  if (Platform.OS === 'web') {\r\n    db = {\r\n      transaction: (fn) => fn({ executeSql: () => {} }),\r\n      execAsync: async () => {},\r\n      runAsync: async () => {},\r\n    };\r\n    return db;\r\n  }\r\n\r\n  // SDK 51+: prefer sync, then async; DO NOT reference openDatabase (removed)\r\n  if ('openDatabaseSync' in SQLite) {\r\n    db = SQLite.openDatabaseSync('offline.db');\r\n    return db;\r\n  }\r\n\r\n  if ('openDatabaseAsync' in SQLite) {\r\n    // Minimal adapter so existing code won't crash; refactor later if needed\r\n    db = {\r\n      transaction: (fn) => fn({ executeSql: () => {} }),\r\n      execAsync: async () => {},\r\n      runAsync: async () => {},\r\n    };\r\n    return db;\r\n  }\r\n\r\n  // Safety fallback\r\n  db = {\r\n    transaction: (fn) => fn({ executeSql: () => {} }),\r\n    execAsync: async () => {},\r\n    runAsync: async () => {},\r\n  };\r\n  return db;\r\n}\r\n\r\n// DB handle\r\nconst dbHandle = getDb();\r\ninitOfflineTables(dbHandle);\r\n\r\n// ---------- Helpers ----------\r\nconst normalizeRole = (role) => {\r\n  if (!role) return 'TECH';\r\n  const r = String(role).toUpperCase();\r\n  if (['ADMIN','ESTIMATOR','SUPERVISOR','TECH'].includes(r)) return r;\r\n  if (r === 'STANDARD' || r === 'USER') return 'TECH';\r\n  return r;\r\n};\r\n\r\nconst AuthContext = createContext(null);\r\nfunction useAuth(){ return useContext(AuthContext); }\r\nasync function api(path, method='GET', body, token){\r\n  const res = await fetch(`${API_URL}${path}`, {\r\n    method, headers: { 'Content-Type':'application/json', ...(token?{Authorization:`Bearer ${token}`}:{}) },\r\n    body: body?JSON.stringify(body):undefined\r\n  });\r\n  if(!res.ok){ throw new Error((await res.json()).error || 'Request failed'); }\r\n  return res.json();\r\n}\r\n\r\n// ---------- Design tokens ----------\r\nconst palette = {\r\n  background: '#f4f6f8',\r\n  surface: '#ffffff',\r\n  surfaceMuted: '#f1f5f9',\r\n  border: '#e2e8f0',\r\n  text: '#0f172a',\r\n  muted: '#5f6b7d',\r\n  primary: '#2c8a7d',\r\n  primaryStrong: '#1f6a60',\r\n  success: '#219653',\r\n  warning: '#f59e0b',\r\n  danger: '#d14343',\r\n  info: '#2563eb',\r\n};\r\n\r\nconst spacing = (step = 1) => step * 8;\r\n\r\nconst typography = {\r\n  h1: 24,\r\n  h2: 18,\r\n  body: 15,\r\n  small: 12,\r\n};\r\n\r\nconst floatingShadow = Platform.select({\r\n  ios: { shadowColor: '#0f172a', shadowOpacity: 0.08, shadowRadius: 14, shadowOffset: { width: 0, height: 6 } },\r\n  android: { elevation: 2 },\r\n  default: {},\r\n});\r\n\r\nconst pillTone = {\r\n  NEW: { fg: palette.info, bg: '#e6eeff', label: 'New' },\r\n  CONTACTED: { fg: palette.primary, bg: '#e6f4f2', label: 'Contacted' },\r\n  ESTIMATING: { fg: palette.warning, bg: '#fdf1d6', label: 'Estimating' },\r\n  CONVERTED: { fg: palette.success, bg: '#e6f6ec', label: 'Converted' },\r\n  CLOSED_LOST: { fg: palette.muted, bg: '#e2e8f0', label: 'Lost' },\r\n  SCHEDULED: { fg: palette.primary, bg: '#e6f4f2', label: 'Scheduled' },\r\n  IN_PROGRESS: { fg: palette.info, bg: '#e6eeff', label: 'In progress' },\r\n  COMPLETE: { fg: palette.success, bg: '#e6f6ec', label: 'Complete' },\r\n  DONE: { fg: palette.success, bg: '#e6f6ec', label: 'Complete' },\r\n  ON_HOLD: { fg: palette.warning, bg: '#fdf1d6', label: 'On hold' },\r\n  CANCELLED: { fg: palette.muted, bg: '#e2e8f0', label: 'Cancelled' },\r\n  DRAFT: { fg: palette.muted, bg: '#e2e8f0', label: 'Draft' },\r\n  SENT: { fg: palette.info, bg: '#e6eeff', label: 'Sent' },\r\n  PART_PAID: { fg: palette.warning, bg: '#fdf1d6', label: 'Part paid' },\r\n  PAID: { fg: palette.success, bg: '#e6f6ec', label: 'Paid' },\r\n  VOID: { fg: palette.muted, bg: '#f1f5f9', label: 'Void' },\r\n};\r\n\r\nconst toneMap = {\n  primary: { fg: palette.primaryStrong, bg: '#e0f3f0' },\n  success: { fg: palette.success, bg: '#e6f6ec' },\n  warning: { fg: palette.warning, bg: '#fdf1d6' },\n  danger: { fg: palette.danger, bg: '#fde4e4' },\n  info: { fg: palette.info, bg: '#e6eeff' },\n};\n\nconst formInputBaseStyle = {\n  borderWidth: 1,\n  borderColor: palette.border,\n  borderRadius: 12,\n  paddingVertical: spacing(1.5),\n  paddingHorizontal: spacing(2),\n  color: palette.text,\n  backgroundColor: palette.surfaceMuted,\n  fontSize: typography.body,\n  marginBottom: spacing(1.5),\n};\n\nconst FormInput = React.forwardRef((props, ref) => (\n  <TextInput\n    ref={ref}\n    placeholderTextColor={palette.muted}\n    {...props}\n    style={[formInputBaseStyle, props.style]}\n  />\n));\nFormInput.displayName = 'FormInput';\n\nconst formatCurrency = (value) => {\n  const amount = Number(value || 0);\n  if (Number.isNaN(amount)) return '$0';\n  return `$${amount.toLocaleString(undefined, { minimumFractionDigits: amount % 1 ? 2 : 0, maximumFractionDigits: 2 })}`;\n};\n\r\nconst formatDate = (value) => {\r\n  if (!value) return null;\r\n  const d = new Date(value);\r\n  if (Number.isNaN(d.getTime())) return value;\r\n  return d.toLocaleDateString(undefined, { month: 'short', day: 'numeric' });\r\n};\r\n\r\nconst isTaskCompleted = (status) => {\r\n  if (!status) return false;\r\n  const key = String(status).toUpperCase();\r\n  return key === 'DONE' || key === 'COMPLETE';\r\n};\r\n\r\nfunction SurfaceCard({ children, style, onPress }) {\r\n  const content = (\r\n    <View\r\n      style={[\r\n        { backgroundColor: palette.surface, borderRadius: 16, borderWidth: 1, borderColor: palette.border, padding: spacing(2) },\r\n        floatingShadow,\r\n        style,\r\n      ]}\r\n    >\r\n      {children}\r\n    </View>\r\n  );\r\n  if (!onPress) return content;\r\n  return (\r\n    <TouchableOpacity activeOpacity={0.85} onPress={onPress}>\r\n      {content}\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n\r\nfunction StatusPill({ status }) {\r\n  if (!status) return null;\r\n  const key = String(status).toUpperCase();\r\n  const cfg = pillTone[key] || { fg: palette.muted, bg: '#e2e8f0', label: status };\r\n  return (\r\n    <View style={{ backgroundColor: cfg.bg, borderRadius: 999, paddingHorizontal: spacing(1.5), paddingVertical: spacing(0.5) }}>\r\n      <Text style={{ color: cfg.fg, fontSize: typography.small, fontWeight: '600' }}>{cfg.label}</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction SummaryCard({ title, value, subtitle, tone = 'primary', onPress }) {\r\n  const colors = toneMap[tone] || toneMap.primary;\r\n  return (\r\n    <SurfaceCard\r\n      onPress={onPress}\r\n      style={{ backgroundColor: colors.bg, borderColor: 'transparent', padding: spacing(2.5) }}\r\n    >\r\n      <Text style={{ color: palette.muted, fontSize: typography.small, textTransform: 'uppercase', fontWeight: '700' }}>{title}</Text>\r\n      <Text style={{ color: colors.fg, fontSize: 28, fontWeight: '800', marginTop: spacing(0.5) }}>{value}</Text>\r\n      {subtitle ? <Text style={{ color: palette.muted, fontSize: typography.small, marginTop: spacing(0.5) }}>{subtitle}</Text> : null}\r\n    </SurfaceCard>\r\n  );\r\n}\r\n\r\nfunction SectionHeader({ title, actionLabel, onAction }) {\r\n  return (\r\n    <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', marginBottom: spacing(1.5) }}>\r\n      <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight: '700' }}>{title}</Text>\r\n      {actionLabel && onAction ? (\r\n        <TouchableOpacity onPress={onAction} style={{ paddingHorizontal: spacing(1), paddingVertical: spacing(0.5) }}>\r\n          <Text style={{ color: palette.primary, fontWeight: '600', fontSize: typography.small }}>{actionLabel}</Text>\r\n        </TouchableOpacity>\r\n      ) : null}\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction QuickAction({ label, onPress, tone = 'primary' }) {\r\n  const toneStyles = (() => {\r\n    switch (tone) {\r\n      case 'danger':\r\n        return { borderColor: '#fecdd3', backgroundColor: '#fee2e2', textColor: palette.danger };\r\n      case 'success':\r\n        return { borderColor: '#bbf7d0', backgroundColor: '#dcfce7', textColor: palette.success };\r\n      case 'warning':\r\n        return { borderColor: '#fde68a', backgroundColor: '#fef3c7', textColor: palette.warning };\r\n      case 'muted':\r\n        return { borderColor: palette.border, backgroundColor: palette.surface, textColor: palette.muted };\r\n      default:\r\n        return { borderColor: palette.border, backgroundColor: palette.surfaceMuted, textColor: palette.primary };\r\n    }\r\n  })();\r\n  return (\r\n    <TouchableOpacity\r\n      onPress={onPress}\r\n      activeOpacity={0.85}\r\n      style={{\r\n        borderRadius: 10,\r\n        paddingHorizontal: spacing(1.5),\r\n        paddingVertical: spacing(0.75),\r\n        borderWidth: 1,\r\n        borderColor: toneStyles.borderColor,\r\n        backgroundColor: toneStyles.backgroundColor,\r\n      }}\r\n    >\r\n      <Text style={{ color: toneStyles.textColor, fontWeight: '600', fontSize: typography.small }}>{label}</Text>\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n\r\nconst toInputDate = (dateValue) => {\r\n  const d = dateValue instanceof Date ? dateValue : new Date(dateValue);\r\n  if (Number.isNaN(d.getTime())) return '';\r\n  const yyyy = d.getFullYear();\r\n  const mm = String(d.getMonth() + 1).padStart(2, '0');\r\n  const dd = String(d.getDate()).padStart(2, '0');\r\n  return `${yyyy}-${mm}-${dd}`;\r\n};\r\n\r\nconst parseInputDate = (value) => {\r\n  if (!value) return null;\r\n  const parsed = new Date(value);\r\n  if (Number.isNaN(parsed.getTime())) return null;\r\n  return parsed;\r\n};\r\n\r\nfunction DateInputField({ value, onChange, placeholder = 'Select date', minimumDate, maximumDate, style }) {\r\n  const [iosPickerVisible, setIosPickerVisible] = useState(false);\r\n  const parsed = parseInputDate(value) || new Date();\r\n\r\n  const applyDate = (selectedDate) => {\r\n    if (!selectedDate) return;\r\n    onChange(toInputDate(selectedDate));\r\n  };\r\n\r\n  const openPicker = () => {\r\n    const baseDate = parseInputDate(value) || new Date();\r\n    if (Platform.OS === 'android') {\r\n      DateTimePickerAndroid.open({\r\n        value: baseDate,\r\n        mode: 'date',\r\n        minimumDate: minimumDate ? parseInputDate(minimumDate) || undefined : undefined,\r\n        maximumDate: maximumDate ? parseInputDate(maximumDate) || undefined : undefined,\r\n        onChange: (event, selected) => {\r\n          if (event.type === 'set' && selected) applyDate(selected);\r\n        },\r\n      });\r\n    } else {\r\n      setIosPickerVisible(true);\r\n    }\r\n  };\r\n\r\n  const containerStyle = [\r\n    { marginBottom: spacing(1.5) },\r\n    style,\r\n  ];\r\n\r\n  return (\r\n    <View style={containerStyle}>\r\n      <TouchableOpacity\r\n        onPress={openPicker}\r\n        activeOpacity={0.85}\r\n        style={{\r\n          borderWidth: 1,\r\n          borderColor: palette.border,\r\n          borderRadius: 12,\r\n          backgroundColor: palette.surfaceMuted,\r\n          flexDirection: 'row',\r\n          alignItems: 'center',\r\n          paddingHorizontal: spacing(2),\r\n          paddingVertical: spacing(1.5),\r\n        }}\r\n      >\r\n        <Text style={{ flex: 1, color: value ? palette.text : palette.muted, fontSize: typography.body }}>\r\n          {value || placeholder}\r\n        </Text>\r\n        <Text style={{ fontSize: typography.h2 - 6, color: palette.muted }}>CAL</Text>\r\n      </TouchableOpacity>\r\n      {Platform.OS === 'ios' && iosPickerVisible ? (\r\n        <DateTimePicker\r\n          value={parsed}\r\n          mode=\"date\"\r\n          display=\"inline\"\r\n          onChange={(event, selected) => {\r\n            if (event.type === 'set' && selected) {\r\n              applyDate(selected);\r\n            }\r\n            setIosPickerVisible(false);\r\n          }}\r\n          style={{ marginTop: spacing(1) }}\r\n          minimumDate={minimumDate ? parseInputDate(minimumDate) || undefined : undefined}\r\n          maximumDate={maximumDate ? parseInputDate(maximumDate) || undefined : undefined}\r\n        />\r\n      ) : null}\r\n    </View>\r\n  );\r\n}\n\nconst TECH_ASSIGN_ROLES = ['TECH','SUPERVISOR','ESTIMATOR'];\n\nfunction TechSelector({ team = [], value, onSelect, label, allowAllRoles, allowClear }) {\n  const options = useMemo(() => {\n    const normalized = team.map(member => ({\n      ...member,\n      role: normalizeRole(member.role),\n    }));\n    if (allowAllRoles) return normalized;\n    return normalized.filter(member => TECH_ASSIGN_ROLES.includes(member.role));\n  }, [team, allowAllRoles]);\n\n  if (!options.length) return null;\n\n  const renderLabel = label ? (\n    <Text style={{ color: palette.muted, fontSize: typography.small, marginBottom: spacing(1) }}>{label}</Text>\n  ) : null;\n\n  return (\n    <View style={{ marginTop: spacing(1.5) }}>\n      {renderLabel}\n      <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1) }}>\n        {options.map(member => {\n          const selected = member.id === value;\n          const displayName = member.fullName || member.email;\n          const shortLabel = displayName.length > 22 ? `${displayName.slice(0, 21)}…` : displayName;\n          return (\n            <QuickAction\n              key={member.id}\n              label={shortLabel}\n              tone={selected ? 'primary' : 'muted'}\n              onPress={() => onSelect(member.id)}\n            />\n          );\n        })}\n        {allowClear ? <QuickAction label=\"Clear\" tone=\"muted\" onPress={() => onSelect(null)} /> : null}\n      </View>\n    </View>\n  );\n}\n\nfunction DashboardScreen({ navigation }) {\n  const { token } = useAuth();\r\n  const [loading, setLoading] = useState(true);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [leads, setLeads] = useState([]);\r\n  const [jobs, setJobs] = useState([]);\r\n  const [tasks, setTasks] = useState([]);\r\n  const [invoiceSummary, setInvoiceSummary] = useState(null);\r\n  const [lastUpdated, setLastUpdated] = useState(null);\r\n\r\n  const jobLookup = useMemo(() => {\r\n    const map = {};\r\n    for (const job of jobs) {\r\n      if (job?.id != null) {\r\n        map[job.id] = job;\r\n      }\r\n    }\r\n    return map;\r\n  }, [jobs]);\r\n\r\n  const loadData = useCallback(async (isPullRefresh = false) => {\r\n    if (!token) return;\r\n    isPullRefresh ? setRefreshing(true) : setLoading(true);\r\n\r\n    const fetchLeads = async () => {\r\n      try {\r\n        const data = await api('/leads', 'GET', null, token);\r\n        setLeads(data);\r\n        db.transaction(tx => {\r\n          tx.executeSql && tx.executeSql('DELETE FROM leads_cache;');\r\n          data.forEach(l =>\r\n            tx.executeSql && tx.executeSql(\r\n              'INSERT OR REPLACE INTO leads_cache (id, description, status) VALUES (?,?,?)',\r\n              [l.id, l.description || '', l.status || 'NEW']\r\n            )\r\n          );\r\n        });\r\n        return data;\r\n      } catch (e) {\r\n        return await new Promise(resolve => {\r\n          db.transaction(tx =>\r\n            tx.executeSql && tx.executeSql(\r\n              'SELECT id, description, status FROM leads_cache',\r\n              [],\r\n              (_, { rows }) => {\r\n                const fallback = rows?._array || [];\r\n                setLeads(fallback);\r\n                resolve(fallback);\r\n              }\r\n            )\r\n          );\r\n        });\r\n      }\r\n    };\r\n\r\n    const fetchJobs = async () => {\r\n      try {\r\n        const data = await api('/jobs', 'GET', null, token);\r\n        setJobs(data);\r\n        db.transaction(tx => {\r\n          tx.executeSql && tx.executeSql('DELETE FROM jobs_cache;');\r\n          data.forEach(j =>\r\n            tx.executeSql && tx.executeSql(\r\n              'INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)',\r\n              [j.id, j.name || '', j.status || 'SCHEDULED', j.startDate || '', j.endDate || '', j.notes || '']\r\n            )\r\n          );\r\n        });\r\n        return data;\r\n      } catch (e) {\r\n        return await new Promise(resolve => {\r\n          db.transaction(tx =>\r\n            tx.executeSql && tx.executeSql(\r\n              'SELECT id, name, status, startDate, endDate, notes FROM jobs_cache',\r\n              [],\r\n              (_, { rows }) => {\r\n                const fallback = rows?._array || [];\r\n                setJobs(fallback);\r\n                resolve(fallback);\r\n              }\r\n            )\r\n          );\r\n        });\r\n      }\r\n    };\r\n\r\n    const fetchTasks = async () => {\r\n      try {\r\n        const data = await api('/tasks', 'GET', null, token);\r\n        setTasks(data);\r\n        db.transaction(tx => {\r\n          data.forEach(t =>\r\n            tx.executeSql && tx.executeSql(\r\n              'INSERT OR REPLACE INTO tasks_cache (id, jobId, title, status, dueDate) VALUES (?,?,?,?,?)',\r\n              [t.id, t.jobId || null, t.title || '', t.status || 'TODO', t.dueDate || '']\r\n            )\r\n          );\r\n        });\r\n        return data;\r\n      } catch (e) {\r\n        return await new Promise(resolve => {\r\n          db.transaction(tx =>\r\n            tx.executeSql && tx.executeSql(\r\n              'SELECT id, jobId, title, status, dueDate FROM tasks_cache ORDER BY id DESC',\r\n              [],\r\n              (_, { rows }) => {\r\n                const fallback = rows?._array || [];\r\n                setTasks(fallback);\r\n                resolve(fallback);\r\n              }\r\n            )\r\n          );\r\n        });\r\n      }\r\n    };\r\n\r\n    const fetchInvoiceSummary = async () => {\r\n      try {\r\n        const data = await api('/invoices/summary', 'GET', null, token);\r\n        setInvoiceSummary(data);\r\n        return data;\r\n      } catch (e) {\r\n        return null;\r\n      }\r\n    };\r\n\r\n    try {\r\n      await Promise.all([fetchLeads(), fetchJobs(), fetchTasks(), fetchInvoiceSummary()]);\r\n      setLastUpdated(new Date());\r\n    } finally {\r\n      isPullRefresh ? setRefreshing(false) : setLoading(false);\r\n    }\r\n  }, [token]);\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      loadData(false);\r\n    }, [loadData])\r\n  );\r\n\r\n  const onRefresh = useCallback(() => loadData(true), [loadData]);\r\n\r\n  const newLeads = leads.filter(l => (l.status || '').toUpperCase() === 'NEW').length;\r\n  const activeJobs = jobs.filter(j => ['SCHEDULED', 'IN_PROGRESS'].includes((j.status || '').toUpperCase())).length;\r\n  const openTasks = tasks.filter(t => !isTaskCompleted(t.status)).length;\r\n  const outstandingValue = invoiceSummary?.outstanding || 0;\r\n  const collectedValue = invoiceSummary?.collected || 0;\r\n  const overdueCount = invoiceSummary?.overdueCount || 0;\r\n\r\n  const topLeads = leads.slice(0, 3);\r\n  const topJobs = jobs.slice(0, 3);\r\n  const nextTasks = tasks.filter(t => !isTaskCompleted(t.status)).slice(0, 3);\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex: 1, backgroundColor: palette.background }}>\r\n      <ScrollView\r\n        contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(5) }}\r\n        refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} tintColor={palette.primary} />}\r\n      >\r\n        <Text style={{ color: palette.text, fontSize: typography.h1, fontWeight: '700', marginBottom: spacing(2) }}>Dashboard</Text>\r\n\r\n        <View style={{ flexDirection: 'row', flexWrap: 'wrap', justifyContent: 'space-between' }}>\r\n          <View style={{ flexBasis: '48%', marginBottom: spacing(2) }}>\r\n            <SummaryCard\r\n              title=\"Leads\"\r\n              value={leads.length}\r\n              subtitle={`${newLeads} new to triage`}\r\n              tone=\"info\"\r\n              onPress={() => navigation.navigate('Leads')}\r\n            />\r\n          </View>\r\n          <View style={{ flexBasis: '48%', marginBottom: spacing(2) }}>\r\n            <SummaryCard\r\n              title=\"Jobs\"\r\n              value={jobs.length}\r\n              subtitle={`${activeJobs} active`}\r\n              tone=\"primary\"\r\n              onPress={() => navigation.navigate('Jobs')}\r\n            />\r\n          </View>\r\n          <View style={{ flexBasis: '48%', marginBottom: spacing(2) }}>\r\n            <SummaryCard\r\n              title=\"Tasks\"\r\n              value={openTasks}\r\n              subtitle={`Open of ${tasks.length}`}\r\n              tone=\"warning\"\r\n              onPress={() => navigation.navigate('Jobs')}\r\n            />\r\n          </View>\r\n          <View style={{ flexBasis: '48%', marginBottom: spacing(2) }}>\r\n            <SummaryCard\r\n              title=\"Invoices\"\r\n              value={formatCurrency(outstandingValue)}\r\n              subtitle={`${overdueCount} overdue | ${formatCurrency(collectedValue)} collected`}\r\n              tone=\"success\"\r\n              onPress={() => navigation.navigate('Invoices')}\r\n            />\r\n          </View>\r\n        </View>\r\n\r\n        {loading && !refreshing ? (\r\n          <SurfaceCard style={{ alignItems: 'center', justifyContent: 'center', paddingVertical: spacing(6) }}>\r\n            <ActivityIndicator color={palette.primary} />\r\n            <Text style={{ color: palette.muted, marginTop: spacing(1.5) }}>Loading summary...</Text>\r\n          </SurfaceCard>\r\n        ) : null}\r\n\r\n        <SectionHeader title=\"Next Jobs\" actionLabel=\"View all\" onAction={() => navigation.navigate('Jobs')} />\r\n        <SurfaceCard style={{ marginBottom: spacing(3) }}>\r\n          {topJobs.length === 0 ? (\r\n            <Text style={{ color: palette.muted }}>No jobs yet. Create one from the Jobs tab.</Text>\r\n          ) : (\n            topJobs.map((job, idx) => {\n              const startLabel = job.startDate ? `Start ${formatDate(job.startDate)}` : null;\n              const endLabel = job.endDate ? `Due ${formatDate(job.endDate)}` : null;\n              return (\n                <View key={job.id || idx} style={{ marginBottom: idx === topJobs.length - 1 ? 0 : spacing(2.5) }}>\n                  <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center' }}>\n                    <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight: '600' }}>{job.name || `Job #${job.id}`}</Text>\n                    <StatusPill status={job.status || 'SCHEDULED'} />\n                  </View>\n                  {startLabel || endLabel ? (\n                    <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>\n                      {[startLabel, endLabel].filter(Boolean).join(' - ')}\n                    </Text>\n                  ) : null}\n                  {job.notes ? (\n                    <Text style={{ color: palette.muted, marginTop: spacing(1) }} numberOfLines={2}>{job.notes}</Text>\n                  ) : null}\n                  <View style={{ flexDirection: 'row', columnGap: spacing(1.5), marginTop: spacing(1.5) }}>\n                    <QuickAction label=\"Open job\" onPress={() => navigation.navigate('JobDetail', { jobId: job.id })} />\n                    <QuickAction label=\"Tasks\" onPress={() => navigation.navigate('JobDetail', { jobId: job.id, tab: 'tasks' })} />\n                  </View>\n                </View>\n              );\n            })\n          )}\n        </SurfaceCard>\r\n\r\n        <SectionHeader title=\"Hot Leads\" actionLabel=\"Leads\" onAction={() => navigation.navigate('Leads')} />\r\n        <SurfaceCard style={{ marginBottom: spacing(3) }}>\r\n          {topLeads.length === 0 ? (\r\n            <Text style={{ color: palette.muted }}>No leads yet. Capture leads to keep the funnel full.</Text>\r\n          ) : (\r\n            topLeads.map((lead, idx) => (\r\n              <View key={lead.id || idx} style={{ marginBottom: idx === topLeads.length - 1 ? 0 : spacing(2) }}>\r\n                <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                  <Text style={{ color: palette.text, fontWeight: '600', fontSize: typography.h2 }}>Lead #{lead.id}</Text>\r\n                  <StatusPill status={lead.status || 'NEW'} />\r\n                </View>\r\n                <Text style={{ color: palette.muted, marginTop: spacing(0.5) }} numberOfLines={3}>\r\n                  {lead.description || 'No scope captured yet.'}\r\n                </Text>\r\n                <View style={{ flexDirection: 'row', columnGap: spacing(1.5), marginTop: spacing(1.5) }}>\r\n                  <QuickAction label=\"Follow up\" onPress={() => navigation.navigate('EstimateEditor', { leadId: lead.id })} />\r\n                  <QuickAction label=\"Convert\" onPress={() => navigation.navigate('Jobs')} />\r\n                </View>\r\n              </View>\r\n            ))\r\n          )}\r\n        </SurfaceCard>\r\n\r\n        <SectionHeader title=\"Open Tasks\" actionLabel=\"Jobs\" onAction={() => navigation.navigate('Jobs')} />\r\n        <SurfaceCard>\r\n          {nextTasks.length === 0 ? (\r\n            <Text style={{ color: palette.muted }}>All clear. Add tasks from a job to keep crews aligned.</Text>\r\n          ) : (\r\n            nextTasks.map((task, idx) => (\r\n              <View key={task.id || idx} style={{ marginBottom: idx === nextTasks.length - 1 ? 0 : spacing(2) }}>\r\n                <Text style={{ color: palette.text, fontWeight: '600' }}>{task.title || 'Task'}</Text>\r\n                {task.jobId ? (\r\n                  <Text style={{ color: palette.muted, marginTop: spacing(0.25) }}>\r\n                    {jobLookup[task.jobId]?.name || `Job #${task.jobId}`}\r\n                  </Text>\r\n                ) : (\r\n                  <Text style={{ color: palette.muted, marginTop: spacing(0.25) }}>Unassigned job</Text>\r\n                )}\r\n                <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>\r\n                  {task.dueDate ? `Due ${formatDate(task.dueDate)}` : 'No due date'}\r\n                </Text>\r\n                <View style={{ flexDirection: 'row', columnGap: spacing(1.5), marginTop: spacing(1.5) }}>\r\n                  <QuickAction\r\n                    label=\"Mark done\"\r\n                    onPress={() => navigation.navigate('JobDetail', { jobId: task.jobId })}\r\n                  />\r\n                  <QuickAction\r\n                    label=\"View job\"\r\n                    onPress={() => navigation.navigate('JobDetail', { jobId: task.jobId })}\r\n                  />\r\n                </View>\r\n              </View>\r\n            ))\r\n          )}\r\n        </SurfaceCard>\r\n\r\n        {lastUpdated ? (\r\n          <Text style={{ color: palette.muted, fontSize: typography.small, marginTop: spacing(2), textAlign: 'center' }}>\r\n            Updated {lastUpdated.toLocaleTimeString([], { hour: 'numeric', minute: '2-digit' })}\r\n          </Text>\r\n        ) : null}\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\n// ---------- Signature Pad to PNG ----------\r\nfunction SignaturePad({ onCapturePng }){\r\n  const [points, setPoints] = useState([]);\r\n  const [path, setPath] = useState('');\r\n  const shotRef = useRef(null);\r\n  return (\r\n    <ViewShot ref={shotRef} options={{ format: 'png', quality: 0.9, result: 'base64' }} style={{ height:220, borderWidth:1, backgroundColor:'#fff' }}>\r\n      <View\r\n        onStartShouldSetResponder={()=>true}\r\n        onResponderMove={(e)=>{\r\n          const x = e.nativeEvent.locationX, y = e.nativeEvent.locationY;\r\n          setPath(p => p + (p ? ` L ${x} ${y}` : ` M ${x} ${y}`));\r\n        }}\r\n        onResponderRelease={async ()=>{\r\n          const base64 = await shotRef.current.capture();\r\n          onCapturePng && onCapturePng('data:image/png;base64,' + base64);\r\n        }}\r\n        style={{ flex:1 }}\r\n      >\r\n        <Svg height=\"100%\" width=\"100%\"><Path d={path} stroke=\"black\" strokeWidth=\"2\" fill=\"none\" /></Svg>\r\n      </View>\r\n    </ViewShot>\r\n  );\r\n}\r\n\r\nfunction SignatureScreen({ route, navigation }){\r\n  const { token } = useAuth();\r\n  const { estimateId } = route.params;\r\n  const [sigPng, setSigPng] = useState(null);\r\n  const save = async () => {\r\n    if(!sigPng){ Alert.alert('Please sign first'); return; }\r\n    const resp = await api(`/estimates/${estimateId}/approve`, 'POST', { signaturePngUrl: sigPng }, token);\r\n    Alert.alert('Approved', `Payment link:\r\n${(resp && resp.paymentLink) ? resp.paymentLink : 'Unavailable'}`); navigation.goBack();\r\n  };\r\n  return (\r\n    <SafeAreaView style={{ padding:16 }}>\r\n      <Text style={{ fontSize:18, marginBottom:8 }}>Sign Estimate #{estimateId}</Text>\r\n      <SignaturePad onCapturePng={setSigPng} />\r\n      <View style={{ height:12 }} />\r\n      <Button title=\"Save Signature\" onPress={save} />\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\n// ---------- Admin: Users ----------\nconst userRoleOptions = [\n  { label: 'Admin', value: 'ADMIN' },\n  { label: 'Estimator', value: 'ESTIMATOR' },\n  { label: 'Supervisor', value: 'SUPERVISOR' },\n  { label: 'Tech', value: 'TECH' },\n];\n\nfunction UsersAdminScreen(){\n  const { token } = useAuth();\n  const [users, setUsers] = useState([]);\n  const [email, setEmail] = useState('');\n  const [fullName, setFullName] = useState('');\n  const [role, setRole] = useState('TECH');\n  const [inviting, setInviting] = useState(false);\n  const [refreshing, setRefreshing] = useState(false);\n\n  const load = useCallback(async () => {\n    try {\n      const response = await api('/users','GET',null,token);\n      setUsers(Array.isArray(response) ? response : []);\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to load users.');\n    }\n  }, [token]);\n\n  useEffect(() => { load(); }, [load]);\n\n  const resetForm = () => {\n    setEmail('');\n    setFullName('');\n    setRole('TECH');\n  };\n\n  const invite = async ()=>{\n    const trimmedEmail = email.trim().toLowerCase();\n    const trimmedName = fullName.trim();\n    if (!trimmedEmail) {\n      Alert.alert('Missing email', 'Enter an email address to invite a user.');\n      return;\n    }\n    try {\n      setInviting(true);\n      await api('/users','POST', { email: trimmedEmail, fullName: trimmedName || undefined, role: normalizeRole(role) }, token);\n      resetForm();\n      await load();\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to send invite.');\n    } finally {\n      setInviting(false);\n    }\n  };\n\n  const promote = async (id, newRole)=>{\n    try {\n      await api(`/users/${id}`,'PATCH',{ role: normalizeRole(newRole) }, token);\n      await load();\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to update role.');\n    }\n  };\n\n  const remove = (id) => {\n    Alert.alert('Remove user', 'Are you sure you want to remove this person?', [\n      { text: 'Cancel', style: 'cancel' },\n      {\n        text: 'Remove',\n        style: 'destructive',\n        onPress: async () => {\n          try {\n            await api(`/users/${id}`,'DELETE',null,token);\n            await load();\n          } catch (e) {\n            Alert.alert('Error', e.message || 'Unable to delete user.');\n          }\n        }\n      }\n    ]);\n  };\n\n  const onRefresh = useCallback(async () => {\n    setRefreshing(true);\n    try {\n      await load();\n    } finally {\n      setRefreshing(false);\n    }\n  }, [load]);\n\n  const renderRolePill = (value) => {\n    const roleCfg = userRoleOptions.find(option => option.value === normalizeRole(value));\n    const label = roleCfg ? roleCfg.label : normalizeRole(value);\n    return (\n      <View style={{ backgroundColor: '#e0f3f0', paddingHorizontal: spacing(1.5), paddingVertical: spacing(0.5), borderRadius: 999 }}>\n        <Text style={{ color: palette.primaryStrong, fontWeight:'600', fontSize: typography.small }}>{label}</Text>\n      </View>\n    );\n  };\n\n  const renderRoleSelector = (selectedRole, onSelect) => (\n    <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1) }}>\n      {userRoleOptions.map(option => {\n        const selected = selectedRole === option.value;\n        return (\n          <TouchableOpacity\n            key={option.value}\n            onPress={() => onSelect(option.value)}\n            activeOpacity={0.85}\n            style={{\n              paddingHorizontal: spacing(2),\n              paddingVertical: spacing(1),\n              borderRadius: 999,\n              borderWidth: 1,\n              borderColor: selected ? palette.primary : palette.border,\n              backgroundColor: selected ? '#d9f2ed' : palette.surface,\n            }}\n          >\n            <Text style={{ color: selected ? palette.primaryStrong : palette.muted, fontWeight:'600', fontSize: typography.small }}>\n              {option.label}\n            </Text>\n          </TouchableOpacity>\n        );\n      })}\n    </View>\n  );\n\n  return (\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\n      <FlatList\n        data={users}\n        keyExtractor={u=>String(u.id)}\n        contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(6) }}\n        refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} tintColor={palette.primary} />}\n        ListHeaderComponent={(\n          <View>\n            <Text style={{ color: palette.text, fontSize: typography.h1, fontWeight:'700', marginBottom: spacing(2) }}>Team management</Text>\n            <SurfaceCard style={{ padding: spacing(2.5), marginBottom: spacing(3) }}>\n              <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700' }}>Invite teammate</Text>\n              <Text style={{ color: palette.muted, marginTop: spacing(0.5), marginBottom: spacing(2) }}>\n                Send an invite email and choose what they can access.\n              </Text>\n              <FormInput\n                placeholder=\"Full name (optional)\"\n                value={fullName}\n                onChangeText={setFullName}\n              />\n              <FormInput\n                placeholder=\"Work email\"\n                autoCapitalize=\"none\"\n                keyboardType=\"email-address\"\n                value={email}\n                onChangeText={setEmail}\n              />\n              <Text style={{ color: palette.muted, fontWeight:'600', fontSize: typography.small, textTransform:'uppercase', marginBottom: spacing(1) }}>Role</Text>\n              {renderRoleSelector(role, setRole)}\n              <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center', marginTop: spacing(2) }}>\n                <QuickAction label=\"Clear\" tone=\"muted\" onPress={resetForm} />\n                <TouchableOpacity\n                  onPress={invite}\n                  activeOpacity={0.85}\n                  disabled={inviting}\n                  style={{\n                    backgroundColor: palette.primary,\n                    paddingHorizontal: spacing(2.5),\n                    paddingVertical: spacing(1.5),\n                    borderRadius: 12,\n                    opacity: inviting ? 0.6 : 1,\n                  }}\n                >\n                  <Text style={{ color:'#fff', fontWeight:'700' }}>{inviting ? 'Sending...' : 'Send invite'}</Text>\n                </TouchableOpacity>\n              </View>\n            </SurfaceCard>\n          </View>\n        )}\n        ListEmptyComponent={(\n          <SurfaceCard>\n            <Text style={{ color: palette.muted }}>Invite your first teammate to collaborate on jobs.</Text>\n          </SurfaceCard>\n        )}\n        renderItem={({item}) => {\n          const normalizedRole = normalizeRole(item.role);\n          return (\n            <SurfaceCard style={{ marginBottom: spacing(2), padding: spacing(2.5) }}>\n              <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center', marginBottom: spacing(1.5) }}>\n                <View>\n                  <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600' }}>{item.fullName || item.email}</Text>\n                  <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>{item.email}</Text>\n                </View>\n                {renderRolePill(normalizedRole)}\n              </View>\n              <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1) }}>\n                {userRoleOptions.map(option => {\n                  const selected = normalizedRole === option.value;\n                  return (\n                    <TouchableOpacity\n                      key={option.value}\n                      onPress={() => promote(item.id, option.value)}\n                      disabled={selected}\n                      activeOpacity={0.85}\n                      style={{\n                        paddingHorizontal: spacing(1.75),\n                        paddingVertical: spacing(0.75),\n                        borderRadius: 999,\n                        borderWidth: 1,\n                        borderColor: selected ? palette.primary : palette.border,\n                        backgroundColor: selected ? '#d9f2ed' : palette.surface,\n                        opacity: selected ? 0.7 : 1,\n                      }}\n                    >\n                      <Text style={{ color: selected ? palette.primaryStrong : palette.muted, fontWeight:'600', fontSize: typography.small }}>\n                        {option.label}\n                      </Text>\n                    </TouchableOpacity>\n                  );\n                })}\n                <TouchableOpacity\n                  onPress={() => remove(item.id)}\n                  activeOpacity={0.85}\n                  style={{\n                    paddingHorizontal: spacing(1.75),\n                    paddingVertical: spacing(0.75),\n                    borderRadius: 999,\n                    borderWidth: 1,\n                    borderColor: '#fecdd3',\n                    backgroundColor: '#fee2e2',\n                  }}\n                >\n                  <Text style={{ color: palette.danger, fontWeight:'600', fontSize: typography.small }}>Remove</Text>\n                </TouchableOpacity>\n              </View>\n            </SurfaceCard>\n          );\n        }}\n      />\n    </SafeAreaView>\n  );\n}\n\r\n// ---------- Jobs Kanban + Change Orders ----------\r\nfunction InvoicesScreen({ navigation }){\r\n  const { token, user } = useAuth();\r\n  const [loading, setLoading] = useState(true);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [summary, setSummary] = useState(null);\r\n  const [invoices, setInvoices] = useState([]);\r\n  const [filter, setFilter] = useState('ALL');\r\n\r\n  const load = useCallback(async (isRefresh = false) => {\r\n    if (!token) return;\r\n    isRefresh ? setRefreshing(true) : setLoading(true);\r\n    try {\r\n      const [summaryData, list] = await Promise.all([\r\n        api('/invoices/summary', 'GET', null, token),\r\n        api('/invoices', 'GET', null, token),\r\n      ]);\r\n      setSummary(summaryData);\r\n      setInvoices(list);\r\n    } catch (e) {\r\n      // keep prior data on failure\r\n    } finally {\r\n      isRefresh ? setRefreshing(false) : setLoading(false);\r\n    }\r\n  }, [token]);\r\n\r\n  useFocusEffect(useCallback(() => {\r\n    if (user?.role === 'ADMIN') {\r\n      load(false);\r\n    }\r\n  }, [load, user?.role]));\r\n\r\n  const onRefresh = useCallback(() => load(true), [load]);\r\n\r\n  if (user?.role !== 'ADMIN') {\r\n    return (\r\n      <SafeAreaView style={{ flex:1, alignItems:'center', justifyContent:'center', backgroundColor: palette.background }}>\r\n        <Text style={{ color: palette.muted }}>Invoices are only available to admin users.</Text>\r\n      </SafeAreaView>\r\n    );\r\n  }\r\n\r\n  const filters = [\r\n    { key:'ALL', label:'All' },\r\n    { key:'OUTSTANDING', label:'Outstanding' },\r\n    { key:'PAID', label:'Paid' },\r\n  ];\r\n\r\n  const filteredInvoices = invoices.filter(inv => {\r\n    if (filter === 'ALL') return true;\r\n    const status = (inv.status || 'DRAFT').toUpperCase();\r\n    if (filter === 'PAID') return status === 'PAID';\r\n    return !['PAID','VOID'].includes(status);\r\n  });\r\n\r\n  const outstanding = formatCurrency(summary?.outstanding || 0);\r\n  const collected = formatCurrency(summary?.collected || 0);\r\n  const drafts = formatCurrency(summary?.draftAmount || 0);\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\r\n      <ScrollView\r\n        contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(6) }}\r\n        refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} tintColor={palette.primary} />}\r\n      >\r\n        <Text style={{ color: palette.text, fontSize: typography.h1, fontWeight:'700', marginBottom: spacing(2) }}>Invoices</Text>\r\n        <Text style={{ color: palette.muted, marginBottom: spacing(2) }}>Track billing health and spot overdue balances.</Text>\r\n        <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(2), rowGap: spacing(2), marginBottom: spacing(3) }}>\r\n          <View style={{ flexBasis:'48%', minWidth: 160 }}>\r\n            <SummaryCard title=\"Outstanding\" value={outstanding} subtitle={`${summary?.overdueCount || 0} overdue`} tone=\"warning\" />\r\n          </View>\r\n          <View style={{ flexBasis:'48%', minWidth: 160 }}>\r\n            <SummaryCard title=\"Collected\" value={collected} subtitle=\"All payments to date\" tone=\"success\" />\r\n          </View>\r\n          <View style={{ flexBasis:'48%', minWidth: 160 }}>\r\n            <SummaryCard title=\"Drafts\" value={drafts} subtitle={`${summary?.totalCount || 0} total invoices`} tone=\"info\" />\r\n          </View>\r\n        </View>\r\n\r\n        <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginBottom: spacing(2) }}>\r\n          {filters.map(f => {\r\n            const selected = f.key === filter;\r\n            return (\r\n              <TouchableOpacity\r\n                key={f.key}\r\n                onPress={() => setFilter(f.key)}\r\n                activeOpacity={0.85}\r\n                style={{\r\n                  paddingHorizontal: spacing(2),\r\n                  paddingVertical: spacing(1),\r\n                  borderRadius: 999,\r\n                  borderWidth: 1,\r\n                  borderColor: selected ? palette.primary : palette.border,\r\n                  backgroundColor: selected ? '#d9f2ed' : palette.surface,\r\n                }}\r\n              >\r\n                <Text style={{ color: selected ? palette.primaryStrong : palette.muted, fontWeight:'600', fontSize: typography.small }}>{f.label}</Text>\r\n              </TouchableOpacity>\r\n            );\r\n          })}\r\n        </View>\r\n\r\n        {loading ? (\r\n          <SurfaceCard style={{ alignItems:'center', paddingVertical: spacing(6) }}>\r\n            <ActivityIndicator color={palette.primary} />\r\n            <Text style={{ color: palette.muted, marginTop: spacing(1.5) }}>Loading invoices...</Text>\r\n          </SurfaceCard>\r\n        ) : filteredInvoices.length === 0 ? (\r\n          <SurfaceCard>\r\n            <Text style={{ color: palette.muted }}>No invoices match this filter.</Text>\r\n          </SurfaceCard>\r\n        ) : (\r\n          filteredInvoices.map(inv => {\r\n            const payments = (inv.Payments || []).reduce((sum, p) => sum + Number(p.amount || 0), 0);\r\n            const amount = Number(inv.amount || 0);\r\n            const balance = Math.max(amount - payments, 0);\r\n            const statusKey = (inv.status || 'DRAFT').toUpperCase();\r\n            return (\r\n              <SurfaceCard key={inv.id}>\r\n                <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center' }}>\r\n                  <View>\r\n                    <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600' }}>Invoice #{inv.number || inv.id}</Text>\r\n                    <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>Issued {inv.issuedAt ? formatDate(inv.issuedAt) : 'TBD'}</Text>\r\n                  </View>\r\n                  <StatusPill status={statusKey} />\r\n                </View>\r\n                <View style={{ flexDirection:'row', justifyContent:'space-between', marginTop: spacing(1.5) }}>\r\n                  <View>\r\n                    <Text style={{ color: palette.muted, fontSize: typography.small }}>Amount</Text>\r\n                    <Text style={{ color: palette.text, fontWeight:'600' }}>{formatCurrency(amount)}</Text>\r\n                  </View>\r\n                  <View>\r\n                    <Text style={{ color: palette.muted, fontSize: typography.small }}>Collected</Text>\r\n                    <Text style={{ color: palette.text }}>{formatCurrency(payments)}</Text>\r\n                  </View>\r\n                  <View>\r\n                    <Text style={{ color: palette.muted, fontSize: typography.small }}>Balance</Text>\r\n                    <Text style={{ color: balance > 0 ? palette.primaryStrong : palette.muted, fontWeight:'600' }}>{formatCurrency(balance)}</Text>\r\n                  </View>\r\n                </View>\r\n                {inv.dueAt ? (\r\n                  <Text style={{ color: palette.muted, marginTop: spacing(1) }}>Due {formatDate(inv.dueAt)}</Text>\r\n                ) : null}\r\n                <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginTop: spacing(2) }}>\r\n                  {inv.jobId ? <QuickAction label=\"View job\" onPress={() => navigation.navigate('JobDetail', { jobId: inv.jobId })} tone=\"muted\" /> : null}\r\n                  <QuickAction label=\"Record payment\" tone=\"success\" onPress={() => Alert.alert('Coming soon', 'Payment logging will land shortly.')} />\r\n                </View>\r\n              </SurfaceCard>\r\n            );\r\n          })\r\n        )}\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\nfunction JobsKanbanScreen({ navigation }){\r\n  const { token } = useAuth();\r\n  const [jobs, setJobs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [newJobName, setNewJobName] = useState('');\r\n  const [newJobStartDate, setNewJobStartDate] = useState('');\r\n  const [newJobDueDate, setNewJobDueDate] = useState('');\r\n  const [newJobNotes, setNewJobNotes] = useState('');\r\n  const [newCustomerName, setNewCustomerName] = useState('');\r\n  const [newCustomerPhone, setNewCustomerPhone] = useState('');\r\n  const [newCustomerEmail, setNewCustomerEmail] = useState('');\r\n  const [newAddressLine1, setNewAddressLine1] = useState('');\r\n  const [newAddressLine2, setNewAddressLine2] = useState('');\r\n  const [newCity, setNewCity] = useState('');\r\n  const [newStateCode, setNewStateCode] = useState('');\r\n  const [newZip, setNewZip] = useState('');\r\n  const [jobFormTab, setJobFormTab] = useState('BASICS');\r\n  const statusOrder = ['SCHEDULED','IN_PROGRESS','ON_HOLD','DONE','COMPLETE','CANCELLED'];\r\n\r\n  const load = useCallback(async (isRefresh = false) => {\r\n    isRefresh ? setRefreshing(true) : setLoading(true);\r\n    try {\r\n      const data = await api('/jobs','GET',null,token);\r\n      setJobs(data);\r\n      db.transaction(tx => {\r\n        tx.executeSql && tx.executeSql('DELETE FROM jobs_cache;');\r\n        data.forEach(j => tx.executeSql && tx.executeSql(\r\n          'INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)',\r\n          [j.id, j.name||'', j.status||'SCHEDULED', j.startDate||'', j.endDate||'', j.notes||'']\r\n        ));\r\n      });\r\n    } catch(e) {\r\n      db.transaction(tx =>\r\n        tx.executeSql && tx.executeSql(\r\n          'SELECT id, name, status, startDate, endDate, notes FROM jobs_cache',\r\n          [],\r\n          (_, { rows }) => setJobs(rows._array || [])\r\n        )\r\n      );\r\n    } finally {\r\n      isRefresh ? setRefreshing(false) : setLoading(false);\r\n    }\r\n  }, [token]);\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      load(false);\r\n    }, [load])\r\n  );\r\n\r\n  const onRefresh = useCallback(() => load(true), [load]);\r\n\r\n  const resetForm = () => {\r\n    setNewJobName('');\r\n    setNewJobStartDate('');\r\n    setNewJobDueDate('');\r\n    setNewJobNotes('');\r\n    setNewCustomerName('');\r\n    setNewCustomerPhone('');\r\n    setNewCustomerEmail('');\r\n    setNewAddressLine1('');\r\n    setNewAddressLine2('');\r\n    setNewCity('');\r\n    setNewStateCode('');\r\n    setNewZip('');\r\n    setJobFormTab('BASICS');\r\n  };\r\n\r\n  const createJob = async () => {\r\n    if(!newJobName.trim()){\r\n      Alert.alert('Missing info', 'Please add a job name.');\r\n      setJobFormTab('BASICS');\r\n      return;\r\n    }\r\n    const hasCustomer = [newCustomerName, newCustomerPhone, newCustomerEmail].some(v => v && v.trim());\r\n    const hasAddress = [newAddressLine1, newCity, newStateCode, newZip].some(v => v && v.trim());\r\n    const payload = {\r\n      name: newJobName.trim(),\r\n      status: 'SCHEDULED',\r\n      startDate: newJobStartDate || null,\r\n      endDate: newJobDueDate || null,\r\n      notes: newJobNotes.trim() || null,\r\n    };\r\n    if (hasCustomer) {\r\n      payload.customer = {\r\n        name: newCustomerName.trim(),\r\n        phone: newCustomerPhone.trim(),\r\n        email: newCustomerEmail.trim(),\r\n        billingAddress: newAddressLine1\r\n          ? `${newAddressLine1}${newAddressLine2 ? `\r\n${newAddressLine2}` : ''}${newCity ? `\r\n${newCity}, ${newStateCode} ${newZip}` : ''}`\r\n          : null,\r\n      };\r\n    }\r\n    if (hasAddress) {\r\n      payload.jobsite = {\r\n        addressLine1: newAddressLine1.trim(),\r\n        addressLine2: newAddressLine2.trim(),\r\n        city: newCity.trim(),\r\n        state: newStateCode.trim(),\r\n        zip: newZip.trim(),\r\n      };\r\n    }\r\n    try {\r\n      const created = await api('/jobs','POST', payload, token);\r\n      setJobs(prev => [created, ...prev]);\r\n      db.transaction(tx =>\r\n        tx.executeSql && tx.executeSql(\r\n          'INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)',\r\n          [created.id, created.name||'', created.status||'SCHEDULED', created.startDate||'', created.endDate||'', created.notes||'']\r\n        )\r\n      );\r\n      resetForm();\r\n      Alert.alert('Job created', `Job #${created.id} ready to schedule.`);\r\n    } catch(e) {\r\n      Alert.alert('Error', e.message || 'Unable to create job');\r\n    }\r\n  };\r\n\r\n  const updateJobStatus = async (id, status) => {\r\n    try {\r\n      const updated = await api(`/jobs/${id}`,'PATCH',{ status }, token);\r\n      setJobs(prev => prev.map(job => job.id === id ? updated : job));\r\n    } catch(e) {\r\n      Alert.alert('Error', e.message || 'Unable to update job status');\r\n    }\r\n  };\r\n\r\n  const removeJob = async (id) => {\r\n    Alert.alert('Delete Job', `Delete job #${id}?`, [\r\n      { text:'Cancel', style:'cancel' },\r\n      { text:'Delete', style:'destructive', onPress: async () => {\r\n        try {\r\n          await api(`/jobs/${id}`,'DELETE',null,token);\r\n          setJobs(prev => prev.filter(job => job.id !== id));\r\n          db.transaction(tx => tx.executeSql && tx.executeSql('DELETE FROM jobs_cache WHERE id=?', [id]));\r\n        } catch(e) {\r\n          Alert.alert('Error', e.message || 'Unable to delete job');\r\n        }\r\n      } }\r\n    ]);\r\n  };\r\n\r\n  const sortedJobs = useMemo(() => {\r\n    const normalize = (status) => (status || 'SCHEDULED').toUpperCase();\r\n    const rank = (status) => {\r\n      const key = normalize(status);\r\n      const idx = statusOrder.indexOf(key);\r\n      return idx === -1 ? statusOrder.length : idx;\r\n    };\r\n    const parseDateSafe = (value) => {\r\n      if (!value) return null;\r\n      const d = new Date(value);\r\n      return Number.isNaN(d.getTime()) ? null : d;\r\n    };\r\n    return [...jobs].sort((a, b) => {\r\n      const statusDiff = rank(a.status) - rank(b.status);\r\n      if (statusDiff !== 0) return statusDiff;\r\n      const startA = parseDateSafe(a.startDate);\r\n      const startB = parseDateSafe(b.startDate);\r\n      if (startA && startB) return startA - startB;\r\n      if (startA) return -1;\r\n      if (startB) return 1;\r\n      return (b.id || 0) - (a.id || 0);\r\n    });\r\n  }, [jobs, statusOrder]);\r\n\r\n  const groupedJobs = useMemo(() => {\r\n    const groups = [];\r\n    let currentStatus = null;\r\n    sortedJobs.forEach(job => {\r\n      const statusKey = (job.status || 'SCHEDULED').toUpperCase();\r\n      if (statusKey !== currentStatus) {\r\n        groups.push({ status: statusKey, jobs: [job] });\r\n        currentStatus = statusKey;\r\n      } else {\r\n        groups[groups.length - 1].jobs.push(job);\r\n      }\r\n    });\r\n    return groups;\r\n  }, [sortedJobs]);\r\n\r\n  const statusLabel = (status) => {\r\n    const key = (status || 'SCHEDULED').toUpperCase();\r\n    return pillTone[key]?.label || key.charAt(0) + key.slice(1).toLowerCase();\r\n  };\r\n\r\n  const quickStatusActions = [\r\n    { label:'Start job', value:'IN_PROGRESS', tone:'primary' },\r\n    { label:'Pause', value:'ON_HOLD', tone:'warning' },\r\n    { label:'Wrap up', value:'DONE', tone:'success' },\r\n  ];\r\n\r\n  const inputStyle = {\r\n    borderWidth: 1,\r\n    borderColor: palette.border,\r\n    borderRadius: 12,\r\n    paddingHorizontal: spacing(1.5),\r\n    paddingVertical: spacing(1.25),\r\n    backgroundColor: palette.surfaceMuted,\r\n    color: palette.text,\r\n    fontSize: typography.body,\r\n    marginBottom: spacing(1.5),\r\n  };\r\n\r\n  const jobTabs = [\r\n    { key:'BASICS', label:'Basics' },\r\n    { key:'CUSTOMER', label:'Customer' },\r\n    { key:'JOBSITE', label:'Jobsite' },\r\n    { key:'NOTES', label:'Notes' },\r\n  ];\r\n\r\n  const renderJobFormFields = () => {\r\n    if (jobFormTab === 'BASICS') {\r\n      return (\r\n        <View>\r\n          <TextInput\r\n            placeholder=\"Job name\"\r\n            placeholderTextColor={palette.muted}\r\n            value={newJobName}\r\n            onChangeText={setNewJobName}\r\n            style={inputStyle}\r\n          />\r\n          <DateInputField\r\n            value={newJobStartDate}\r\n            onChange={setNewJobStartDate}\r\n            placeholder=\"Start date\"\r\n          />\r\n          <DateInputField\r\n            value={newJobDueDate}\r\n            onChange={setNewJobDueDate}\r\n            placeholder=\"Due date\"\r\n          />\r\n        </View>\r\n      );\r\n    }\r\n    if (jobFormTab === 'CUSTOMER') {\r\n      return (\r\n        <View>\r\n          <TextInput\r\n            placeholder=\"Customer name\"\r\n            placeholderTextColor={palette.muted}\r\n            value={newCustomerName}\r\n            onChangeText={setNewCustomerName}\r\n            style={inputStyle}\r\n          />\r\n          <TextInput\r\n            placeholder=\"Phone\"\r\n            placeholderTextColor={palette.muted}\r\n            keyboardType=\"phone-pad\"\r\n            value={newCustomerPhone}\r\n            onChangeText={setNewCustomerPhone}\r\n            style={inputStyle}\r\n          />\r\n          <TextInput\r\n            placeholder=\"Email\"\r\n            placeholderTextColor={palette.muted}\r\n            keyboardType=\"email-address\"\r\n            autoCapitalize=\"none\"\r\n            value={newCustomerEmail}\r\n            onChangeText={setNewCustomerEmail}\r\n            style={inputStyle}\r\n          />\r\n        </View>\r\n      );\r\n    }\r\n    if (jobFormTab === 'JOBSITE') {\r\n      return (\r\n        <View>\r\n          <TextInput\r\n            placeholder=\"Address line 1\"\r\n            placeholderTextColor={palette.muted}\r\n            value={newAddressLine1}\r\n            onChangeText={setNewAddressLine1}\r\n            style={inputStyle}\r\n          />\r\n          <TextInput\r\n            placeholder=\"Address line 2\"\r\n            placeholderTextColor={palette.muted}\r\n            value={newAddressLine2}\r\n            onChangeText={setNewAddressLine2}\r\n            style={inputStyle}\r\n          />\r\n          <View style={{ flexDirection:'row', columnGap: spacing(1.5) }}>\r\n            <View style={{ flex:1 }}>\r\n              <TextInput\r\n                placeholder=\"City\"\r\n                placeholderTextColor={palette.muted}\r\n                value={newCity}\r\n                onChangeText={setNewCity}\r\n                style={[inputStyle, { marginBottom: 0 }]}\r\n              />\r\n            </View>\r\n            <View style={{ width: 80 }}>\r\n              <TextInput\r\n                placeholder=\"State\"\r\n                placeholderTextColor={palette.muted}\r\n                value={newStateCode}\r\n                onChangeText={setNewStateCode}\r\n                style={[inputStyle, { marginBottom: 0 }]}\r\n              />\r\n            </View>\r\n            <View style={{ width: 100 }}>\r\n              <TextInput\r\n                placeholder=\"ZIP\"\r\n                placeholderTextColor={palette.muted}\r\n                value={newZip}\r\n                onChangeText={setNewZip}\r\n                style={[inputStyle, { marginBottom: 0 }]}\r\n              />\r\n            </View>\r\n          </View>\r\n        </View>\r\n      );\r\n    }\r\n    return (\r\n      <TextInput\r\n        placeholder=\"Internal notes\"\r\n        placeholderTextColor={palette.muted}\r\n        value={newJobNotes}\r\n        onChangeText={setNewJobNotes}\r\n        multiline\r\n        style={[inputStyle, { minHeight: 96, textAlignVertical: 'top' }]}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\r\n      <ScrollView\r\n        contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(4) }}\r\n        refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} tintColor={palette.primary} />}\r\n      >\r\n        <SurfaceCard style={{ marginBottom: spacing(3), padding: spacing(2.5) }}>\r\n          <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700', marginBottom: spacing(2) }}>Create job</Text>\r\n          <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1.5), marginBottom: spacing(2) }}>\r\n            {jobTabs.map(tab => {\r\n              const selected = tab.key === jobFormTab;\r\n              return (\r\n                <TouchableOpacity\r\n                  key={tab.key}\r\n                  onPress={() => setJobFormTab(tab.key)}\r\n                  activeOpacity={0.85}\r\n                  style={{\r\n                    paddingHorizontal: spacing(2),\r\n                    paddingVertical: spacing(1),\r\n                    borderRadius: 999,\r\n                    borderWidth: 1,\r\n                    borderColor: selected ? palette.primary : palette.border,\r\n                    backgroundColor: selected ? '#d9f2ed' : palette.surface,\r\n                  }}\r\n                >\r\n                  <Text style={{ color: selected ? palette.primaryStrong : palette.muted, fontWeight:'600', fontSize: typography.small }}>\r\n                    {tab.label}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              );\r\n            })}\r\n          </View>\r\n          {renderJobFormFields()}\r\n          <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center', marginTop: spacing(2) }}>\r\n            <QuickAction label=\"Reset\" tone=\"muted\" onPress={resetForm} />\r\n            <TouchableOpacity\r\n              onPress={createJob}\r\n              activeOpacity={0.85}\r\n              style={{ backgroundColor: palette.primary, paddingHorizontal: spacing(2.5), paddingVertical: spacing(1.5), borderRadius: 12 }}\r\n            >\r\n              <Text style={{ color:'#fff', fontWeight:'700' }}>Create job</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </SurfaceCard>\r\n\r\n        {loading && !refreshing && jobs.length === 0 ? (\r\n          <SurfaceCard style={{ alignItems:'center', paddingVertical: spacing(6), marginBottom: spacing(3) }}>\r\n            <ActivityIndicator color={palette.primary} />\r\n            <Text style={{ color: palette.muted, marginTop: spacing(1.5) }}>Loading jobs...</Text>\r\n          </SurfaceCard>\r\n        ) : null}\r\n\r\n        {groupedJobs.length === 0 ? (\r\n          <SurfaceCard>\r\n            <Text style={{ color: palette.muted }}>No jobs yet. Convert a lead or add a job to get started.</Text>\r\n          </SurfaceCard>\r\n        ) : (\r\n          groupedJobs.map(group => (\r\n            <View key={group.status} style={{ marginBottom: spacing(3) }}>\r\n              <Text style={{ color: palette.muted, fontWeight:'700', fontSize: typography.small, textTransform:'uppercase', marginBottom: spacing(1) }}>\r\n                {statusLabel(group.status)}\r\n              </Text>\r\n              {group.jobs.map(job => {\r\n                const customer = job.Customer || {};\r\n                const jobsite = job.Jobsite || {};\r\n                const addressParts = [\r\n                  jobsite.addressLine1,\r\n                  jobsite.addressLine2,\r\n                  [jobsite.city, jobsite.state].filter(Boolean).join(', '),\r\n                  jobsite.zip\r\n                ].filter(Boolean);\r\n                const address = addressParts.join(', ');\r\n                const statusKey = (job.status || 'SCHEDULED').toUpperCase();\r\n                return (\r\n                  <SurfaceCard key={job.id} style={{ marginBottom: spacing(1.5) }}>\r\n                    <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center' }}>\r\n                      <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600' }}>{job.name || `Job #${job.id}`}</Text>\r\n                      <StatusPill status={statusKey} />\r\n                    </View>\r\n                    {(job.startDate || job.endDate) ? (\r\n                      <Text style={{ color: palette.muted, marginTop: spacing(0.75) }}>\r\n                        {[job.startDate ? `Start ${formatDate(job.startDate)}` : null, job.endDate ? `Due ${formatDate(job.endDate)}` : null].filter(Boolean).join(' | ')}\r\n                      </Text>\r\n                    ) : null}\r\n                    {customer.name ? <Text style={{ color: palette.text, fontWeight:'600', marginTop: spacing(1) }}>{customer.name}</Text> : null}\r\n                    {customer.phone ? <Text style={{ color: palette.muted }}>{customer.phone}</Text> : null}\r\n                    {customer.email ? <Text style={{ color: palette.muted }}>{customer.email}</Text> : null}\r\n                    {address ? <Text style={{ color: palette.muted, marginTop: spacing(1) }}>{address}</Text> : null}\r\n                    {job.notes ? <Text style={{ color: palette.muted, marginTop: spacing(1) }} numberOfLines={3}>{job.notes}</Text> : null}\r\n                    <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginTop: spacing(2) }}>\r\n                      <QuickAction label=\"View job\" onPress={() => navigation.navigate('JobDetail', { jobId: job.id })} tone=\"muted\" />\r\n                      {quickStatusActions.map(action => (\r\n                        action.value === statusKey ? null : (\r\n                          <QuickAction\r\n                            key={action.value}\r\n                            label={action.label}\r\n                            tone={action.tone}\r\n                            onPress={() => updateJobStatus(job.id, action.value)}\r\n                          />\r\n                        )\r\n                      ))}\r\n                      <QuickAction label=\"Delete\" tone=\"danger\" onPress={() => removeJob(job.id)} />\r\n                    </View>\r\n                  </SurfaceCard>\r\n                );\r\n              })}\r\n            </View>\r\n          ))\r\n        )}\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\nfunction JobDetailScreen({ route, navigation }){\r\n  const { jobId } = route.params;\r\n  const { token, user } = useAuth();\r\n  const [jobName, setJobName] = useState('');\r\n  const [jobStartDate, setJobStartDate] = useState('');\r\n  const [jobEndDate, setJobEndDate] = useState('');\r\n  const [jobNotes, setJobNotes] = useState('');\r\n  const [jobCustomerName, setJobCustomerName] = useState('');\r\n  const [jobCustomerPhone, setJobCustomerPhone] = useState('');\r\n  const [jobCustomerEmail, setJobCustomerEmail] = useState('');\r\n  const [jobAddressLine1, setJobAddressLine1] = useState('');\r\n  const [jobAddressLine2, setJobAddressLine2] = useState('');\r\n  const [jobCity, setJobCity] = useState('');\r\n  const [jobStateCode, setJobStateCode] = useState('');\r\n  const [jobZip, setJobZip] = useState('');\r\n  const [changeOrders, setCO] = useState([]);\r\n  const [title, setTitle] = useState('');\r\n  const [amountDelta, setAmountDelta] = useState('0');\r\n  const loadCO = useCallback(async () => {\r\n    setCO(await api(`/change-orders/job/${jobId}`,'GET',null,token));\r\n  }, [jobId, token]);\r\n  const loadJob = useCallback(async () => {\r\n    try {\r\n      const j = await api(`/jobs/${jobId}`,'GET',null,token);\r\n      setJobName(j.name||'');\r\n      setJobStartDate(j.startDate||'');\r\n      setJobEndDate(j.endDate||'');\r\n      setJobNotes(j.notes||'');\r\n      const customer = j.Customer || {};\r\n      const jobsite = j.Jobsite || {};\r\n      setJobCustomerName(customer.name || '');\r\n      setJobCustomerPhone(customer.phone || '');\r\n      setJobCustomerEmail(customer.email || '');\r\n      setJobAddressLine1(jobsite.addressLine1 || '');\r\n      setJobAddressLine2(jobsite.addressLine2 || '');\r\n      setJobCity(jobsite.city || '');\r\n      setJobStateCode(jobsite.state || '');\r\n      setJobZip(jobsite.zip || '');\r\n    } catch(e) { }\r\n  }, [jobId, token]);\r\n  useEffect(()=>{ loadJob(); loadCO(); },[loadJob, loadCO]);\r\n  const addCO = async ()=>{\r\n    if(!title.trim()){\r\n      Alert.alert('Missing info', 'Add a title for the change order.');\r\n      return;\r\n    }\r\n    await api(`/change-orders/job/${jobId}`,'POST',{ title: title.trim(), amountDelta: parseFloat(amountDelta) || 0 }, token);\r\n    setTitle(''); setAmountDelta('0'); loadCO();\r\n  };\r\n  const saveJobDetails = async () => {\r\n    try {\r\n      await api(`/jobs/${jobId}`,'PATCH',{\r\n        name: jobName,\r\n        startDate: jobStartDate || null,\r\n        endDate: jobEndDate || null,\r\n        notes: jobNotes,\r\n        customer: {\r\n          name: jobCustomerName,\r\n          phone: jobCustomerPhone,\r\n          email: jobCustomerEmail,\r\n          billingAddress: jobAddressLine1 ? `${jobAddressLine1}${jobAddressLine2 ? `\r\n${jobAddressLine2}` : ''}${jobCity ? `\r\n${jobCity}, ${jobStateCode} ${jobZip}` : ''}` : null,\r\n        },\r\n        jobsite: {\r\n          addressLine1: jobAddressLine1,\r\n          addressLine2: jobAddressLine2,\r\n          city: jobCity,\r\n          state: jobStateCode,\r\n          zip: jobZip,\r\n        },\r\n      }, token);\r\n      Alert.alert('Saved', 'Job details updated.');\r\n      loadJob();\r\n    } catch(e) {\r\n      Alert.alert('Error', e.message || 'Unable to save job');\r\n    }\r\n  };\r\n  const deleteJob = () => {\r\n    Alert.alert('Delete job', `Delete job #${jobId}?`, [\r\n      { text:'Cancel', style:'cancel' },\r\n      { text:'Delete', style:'destructive', onPress: async ()=>{\r\n        try{\r\n          await api(`/jobs/${jobId}`,'DELETE',null,token);\r\n          db.transaction(tx => tx.executeSql('DELETE FROM jobs_cache WHERE id=?', [jobId]));\r\n          Alert.alert('Deleted', 'Job removed.');\r\n          navigation.navigate('Tabs', { screen:'Jobs' });\r\n        }catch(e){\r\n          Alert.alert('Error', e.message || 'Unable to delete job');\r\n        }\r\n      }}\r\n    ]);\r\n  };\r\n  return (\r\n    <SafeAreaView style={{ flex:1 }}>\r\n      <ScrollView contentContainerStyle={{ padding:16, paddingBottom:32 }}>\r\n        <Text style={{ fontSize:18, fontWeight:'600', marginBottom:8 }}>Job #{jobId}</Text>\r\n        <Text style={{ fontWeight:'600', marginBottom:6 }}>Job Details</Text>\r\n        <TextInput placeholder=\"Job name\" value={jobName} onChangeText={setJobName} style={{ borderWidth:1, padding:8, marginBottom:6 }} />\r\n        <View style={{ flexDirection:'row', gap:8 }}>\r\n          <DateInputField value={jobStartDate} onChange={setJobStartDate} placeholder=\"Start date\" style={{ flex:1, marginBottom:0 }} />\r\n          <DateInputField value={jobEndDate} onChange={setJobEndDate} placeholder=\"End date\" style={{ flex:1, marginBottom:0 }} />\r\n        </View>\r\n        <TextInput placeholder=\"Notes / scope\" value={jobNotes} onChangeText={setJobNotes} multiline style={{ borderWidth:1, padding:8, marginTop:6, minHeight:80 }} />\r\n\r\n        <Text style={{ fontWeight:'600', marginTop:16 }}>Customer</Text>\r\n        <TextInput placeholder=\"Name\" value={jobCustomerName} onChangeText={setJobCustomerName} style={{ borderWidth:1, padding:8, marginBottom:6 }} />\r\n        <TextInput placeholder=\"Phone\" value={jobCustomerPhone} onChangeText={setJobCustomerPhone} keyboardType=\"phone-pad\" style={{ borderWidth:1, padding:8, marginBottom:6 }} />\r\n        <TextInput placeholder=\"Email\" value={jobCustomerEmail} onChangeText={setJobCustomerEmail} keyboardType=\"email-address\" style={{ borderWidth:1, padding:8, marginBottom:6 }} />\r\n\r\n        <Text style={{ fontWeight:'600', marginTop:16 }}>Job Address</Text>\r\n        <TextInput placeholder=\"Address line 1\" value={jobAddressLine1} onChangeText={setJobAddressLine1} style={{ borderWidth:1, padding:8, marginBottom:6 }} />\r\n        <TextInput placeholder=\"Address line 2\" value={jobAddressLine2} onChangeText={setJobAddressLine2} style={{ borderWidth:1, padding:8, marginBottom:6 }} />\r\n        <View style={{ flexDirection:'row', gap:8 }}>\r\n          <TextInput placeholder=\"City\" value={jobCity} onChangeText={setJobCity} style={{ flex:1, borderWidth:1, padding:8 }} />\r\n          <TextInput placeholder=\"State\" value={jobStateCode} onChangeText={setJobStateCode} style={{ width:80, borderWidth:1, padding:8 }} />\r\n          <TextInput placeholder=\"ZIP\" value={jobZip} onChangeText={setJobZip} style={{ width:100, borderWidth:1, padding:8 }} />\r\n        </View>\r\n        <View style={{ marginTop:12 }}>\r\n          <Button title=\"Save details\" onPress={saveJobDetails} />\r\n        </View>\r\n        <View style={{ marginTop:12 }}>\r\n          <Button color=\"#d11a2a\" title=\"Delete job\" onPress={deleteJob} />\r\n        </View>\r\n\r\n        {(user?.role==='ADMIN'||user?.role==='SUPERVISOR'||user?.role==='ESTIMATOR') && (\r\n          <View style={{ marginVertical:16 }}>\r\n            <Text style={{ fontWeight:'600' }}>New Change Order</Text>\r\n            <TextInput placeholder=\"Title\" value={title} onChangeText={setTitle} style={{ borderWidth:1, padding:8, marginVertical:6 }} />\r\n            <TextInput placeholder=\"Amount $\" value={amountDelta} onChangeText={setAmountDelta} keyboardType=\"decimal-pad\" style={{ borderWidth:1, padding:8, marginVertical:6 }} />\r\n            <Button title=\"Add Change Order\" onPress={addCO} />\r\n          </View>\r\n        )}\r\n        <Text style={{ fontWeight:'600', marginTop:12 }}>Change Orders</Text>\r\n        {changeOrders.length === 0 ? (\r\n          <Text style={{ marginVertical:6 }}>No change orders yet.</Text>\r\n        ) : changeOrders.map(item => (\r\n          <View key={item.id} style={{ borderWidth:1, padding:10, borderRadius:8, marginVertical:6 }}>\r\n            <Text style={{ fontWeight:'600' }}>{item.title}</Text>\r\n            <Text>Status: {item.status} | ${item.amountDelta}</Text>\r\n            {(user?.role==='ADMIN'||user?.role==='SUPERVISOR'||user?.role==='ESTIMATOR') && (\r\n              <View style={{ flexDirection:'row', gap:8, marginTop:8 }}>\r\n                <Button title=\"Approve\" onPress={async ()=>{ await api(`/change-orders/${item.id}`,'PATCH',{ status:'APPROVED' }, token); loadCO(); }} />\r\n                <Button title=\"Reject\" onPress={async ()=>{ await api(`/change-orders/${item.id}`,'PATCH',{ status:'REJECTED' }, token); loadCO(); }} />\r\n              </View>\r\n            )}\r\n          </View>\r\n        ))}\r\n\r\n        <Text style={{ fontWeight:'600', marginTop:16 }}>Tasks</Text>\r\n        <JobTasks jobId={jobId} />\r\n\r\n        <Text style={{ fontWeight:'600', marginTop:16 }}>Schedule</Text>\r\n        <JobSchedule jobId={jobId} />\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nfunction JobTasks({ jobId }){\r\n  const { token } = useAuth();\r\n  const [tasks, setTasks] = useState([]);\r\n  const [title, setTitle] = useState('');\r\n  const [dueDate, setDueDate] = useState('');\r\n  const load = async()=> {\r\n    try {\r\n      const data = await api(`/tasks?jobId=${jobId}`,'GET',null,token);\r\n      setTasks(data);\r\n      db.transaction(tx => {\r\n        tx.executeSql('DELETE FROM tasks_cache WHERE jobId=?', [jobId]);\r\n        data.forEach(t => tx.executeSql('INSERT OR REPLACE INTO tasks_cache (id, jobId, title, status, dueDate) VALUES (?,?,?,?,?)', [t.id, jobId, t.title||'', t.status||'TODO', t.dueDate||'']));\r\n      });\r\n    } catch(e) {\r\n      db.transaction(tx => tx.executeSql('SELECT id, jobId, title, status, dueDate FROM tasks_cache WHERE jobId=?', [jobId], (_, { rows }) => setTasks(rows._array || [])));\r\n    }\r\n  };\r\n  useEffect(()=>{ load(); },[]);\r\n  const add = async()=>{\r\n    if(!title.trim()) return Alert.alert('Title required');\r\n    await api('/tasks','POST',{ title, jobId, dueDate }, token);\r\n    setTitle(''); setDueDate(''); load();\r\n  };\r\n  const done = async(id)=>{ await api(`/tasks/${id}`,'PATCH',{ status:'DONE' }, token); load(); };\r\n  const remove = (id)=>{\r\n    Alert.alert('Delete task', 'Remove this task?', [\r\n      { text:'Cancel', style:'cancel' },\r\n      { text:'Delete', style:'destructive', onPress: async ()=>{ await api(`/tasks/${id}`,'DELETE',null,token); load(); } },\r\n    ]);\r\n  };\r\n  return (\n    <View>\n      <SurfaceCard style={{ marginBottom: spacing(2) }}>\n        <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600', marginBottom: spacing(1.5) }}>Add task</Text>\n        <TextInput\n          placeholder=\"Task title\"\n          placeholderTextColor={palette.muted}\n          value={title}\n          onChangeText={setTitle}\n          style={{\n            borderWidth:1,\n            borderColor: palette.border,\n            borderRadius: 12,\n            padding: spacing(2),\n            color: palette.text,\n            backgroundColor: palette.surfaceMuted,\n            marginBottom: spacing(1.5),\n          }}\n        />\n        <DateInputField value={dueDate} onChange={setDueDate} placeholder=\"Due date (optional)\" />\n        <QuickAction label=\"Add task\" onPress={add} />\n      </SurfaceCard>\n\n      {tasks.length === 0 ? (\n        <SurfaceCard>\n          <Text style={{ color: palette.muted }}>No tasks yet. Add one to start tracking progress.</Text>\n        </SurfaceCard>\n      ) : (\n        tasks.map(t => (\n          <SurfaceCard key={t.id} style={{ marginBottom: spacing(1.5) }}>\n            <Text style={{ color: palette.text, fontWeight:'600', fontSize: typography.h2 - 2 }}>{t.title}</Text>\n            <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>\n              Status: {t.status || 'TODO'}{t.dueDate ? ` - Due ${formatDate(t.dueDate)}` : ''}\n            </Text>\n            <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginTop: spacing(1.5) }}>\n              {!isTaskCompleted(t.status) ? (\n                <QuickAction label=\"Mark done\" tone=\"success\" onPress={() => done(t.id)} />\n              ) : null}\n              <QuickAction label=\"Delete\" tone=\"danger\" onPress={() => remove(t.id)} />\n            </View>\n          </SurfaceCard>\n        ))\n      )}\n    </View>\n  );\n}\n\r\nfunction JobSchedule({ jobId }){\n  const { token } = useAuth();\n  const [events, setEvents] = useState([]);\n  const [title, setTitle] = useState('');\n  const [startAt, setStartAt] = useState('');\n  const [endAt, setEndAt] = useState('');\n  const load = async()=> {\n    try {\n      const data = await api(`/calendar?jobId=${jobId}`,'GET',null,token);\n      setEvents(data);\n      db.transaction(tx => {\n        tx.executeSql('DELETE FROM calendar_cache WHERE jobId=?', [jobId]);\n        data.forEach(ev => tx.executeSql('INSERT OR REPLACE INTO calendar_cache (id, jobId, title, startAt, endAt) VALUES (?,?,?,?,?)', [ev.id, jobId, ev.title||'', ev.startAt||'', ev.endAt||'']));\n      });\n    } catch(e) {\n      db.transaction(tx => tx.executeSql('SELECT id, jobId, title, startAt, endAt FROM calendar_cache WHERE jobId=?', [jobId], (_, { rows }) => setEvents(rows._array || [])));\n    }\n  };\n  useEffect(()=>{ load(); },[]);\n  const add = async()=>{\n    if(!title.trim() || !startAt) return Alert.alert('Title and start time required');\n    await api('/calendar','POST',{ title, jobId, startAt, endAt }, token);\n    setTitle(''); setStartAt(''); setEndAt(''); load();\n  };\n  const remove = (id)=>{\n    Alert.alert('Delete event', 'Remove this schedule item?', [\n      { text:'Cancel', style:'cancel' },\n      { text:'Delete', style:'destructive', onPress: async ()=>{ await api(`/calendar/${id}`,'DELETE',null,token); load(); } },\n    ]);\n  };\n  return (\n    <View>\n      <SurfaceCard style={{ marginBottom: spacing(2) }}>\n        <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600', marginBottom: spacing(1.5) }}>Schedule event</Text>\n        <TextInput\n          placeholder=\"Event title\"\n          placeholderTextColor={palette.muted}\n          value={title}\n          onChangeText={setTitle}\n          style={{\n            borderWidth:1,\n            borderColor: palette.border,\n            borderRadius: 12,\n            padding: spacing(2),\n            color: palette.text,\n            backgroundColor: palette.surfaceMuted,\n            marginBottom: spacing(1.5),\n          }}\n        />\n        <DateInputField\n          value={startAt}\n          onChange={(date) => {\n            const existing = startAt || '';\n            const timePartIndex = existing.indexOf('T');\n            const timePart = timePartIndex > -1 ? existing.substring(timePartIndex) : 'T08:00:00';\n            setStartAt(`${date}${timePart}`);\n          }}\n          placeholder=\"Start date\"\n        />\n        <DateInputField\n          value={endAt}\n          onChange={(date) => {\n            if (!date) {\n              setEndAt('');\n              return;\n            }\n            const existing = endAt || '';\n            const timePartIndex = existing.indexOf('T');\n            const timePart = timePartIndex > -1 ? existing.substring(timePartIndex) : 'T17:00:00';\n            setEndAt(`${date}${timePart}`);\n          }}\n          placeholder=\"End date (optional)\"\n        />\n        <QuickAction label=\"Add event\" onPress={add} />\n      </SurfaceCard>\n\n      {events.length === 0 ? (\n        <SurfaceCard>\n          <Text style={{ color: palette.muted }}>No schedule entries yet.</Text>\n        </SurfaceCard>\n      ) : (\n        events.map(ev => {\n          const startLabel = ev.startAt ? `Starts ${formatDate(ev.startAt)}` : 'No start date';\n          const endLabel = ev.endAt ? ` - Ends ${formatDate(ev.endAt)}` : '';\n          return (\n            <SurfaceCard key={ev.id} style={{ marginBottom: spacing(1.5) }}>\n              <Text style={{ color: palette.text, fontWeight:'600', fontSize: typography.h2 - 2 }}>{ev.title}</Text>\n              <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>\n                {startLabel}{endLabel}\n              </Text>\n              <View style={{ flexDirection:'row', columnGap: spacing(1), marginTop: spacing(1.5) }}>\n                <QuickAction label=\"Delete\" tone=\"danger\" onPress={()=>remove(ev.id)} />\n              </View>\n            </SurfaceCard>\n          );\n        })\n      )}\n    </View>\n  );\n}\n\r\n// ---------- Leads / Estimates (with photo queue) ----------\r\nasync function processQueue(token){\r\n  return new Promise(resolve => {\r\n    db.transaction(tx => {\r\n      tx.executeSql('SELECT * FROM queue', [], async (_, { rows }) => {\r\n        const items = rows._array || [];\r\n        for(const q of items){\r\n          try{\r\n            const payload = JSON.parse(q.payload);\r\n            if(q.type === 'createLead'){ await api('/leads', 'POST', payload, token); }\r\n            if(q.type === 'uploadPhoto'){ await api('/upload/image', 'POST', { dataUrl: payload.dataUrl }, token); }\r\n            db.transaction(txx => txx.executeSql('DELETE FROM queue WHERE id=?', [q.id]));\r\n          }catch(e){ /* keep for later */ }\r\n        }\r\n        resolve();\r\n      });\r\n    });\r\n  });\r\n}\r\n\r\nfunction LeadsScreen({ navigation }){\r\n  const { token } = useAuth();\r\n  const [leads, setLeads] = useState([]);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const fetchLeads = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n      const data = await api('/leads', 'GET', null, token);\r\n      setLeads(data);\r\n      db.transaction(tx => {\r\n        tx.executeSql && tx.executeSql('DELETE FROM leads_cache;');\r\n        data.forEach(l => tx.executeSql && tx.executeSql(\r\n          'INSERT OR REPLACE INTO leads_cache (id, description, status) VALUES (?,?,?)',\r\n          [l.id, l.description || '', l.status || 'NEW']\r\n        ));\r\n      });\r\n    } catch(e){\r\n      db.transaction(tx =>\r\n        tx.executeSql && tx.executeSql('SELECT id, description, status FROM leads_cache', [], (_, { rows }) => setLeads(rows._array || []))\r\n      );\r\n    }\r\n    finally {\r\n      setLoading(false);\r\n    }\r\n  }, [token]);\r\n\r\n  useFocusEffect(useCallback(() => {\r\n    fetchLeads();\r\n  }, [fetchLeads]));\r\n\r\n  const onRefresh = useCallback(async () => {\r\n    setRefreshing(true);\r\n    await fetchLeads();\r\n    setRefreshing(false);\r\n  }, [fetchLeads]);\r\n\r\n  const deleteLead = useCallback((lead) => {\r\n    Alert.alert('Delete lead', `Delete lead #${lead.id}?`, [\r\n      { text:'Cancel', style:'cancel' },\r\n      { text:'Delete', style:'destructive', onPress: async () => {\r\n        try {\r\n          await api(`/leads/${lead.id}`,'DELETE',null,token);\r\n          setLeads(prev => prev.filter(l => l.id !== lead.id));\r\n          db.transaction(tx => tx.executeSql && tx.executeSql('DELETE FROM leads_cache WHERE id=?', [lead.id]));\r\n        } catch(err) {\r\n          Alert.alert('Error', err.message || 'Unable to delete lead');\r\n        }\r\n      }}\r\n    ]);\r\n  }, [token]);\r\n\r\n  const newLeadsCount = leads.filter(l => (l.status || '').toUpperCase() === 'NEW').length;\r\n\r\n  const renderLeadCard = (lead) => {\r\n    const customer = lead.Customer || {};\r\n    const jobsite = lead.Jobsite || {};\r\n    const addressParts = [\r\n      jobsite.addressLine1,\r\n      jobsite.addressLine2,\r\n      [jobsite.city, jobsite.state].filter(Boolean).join(', '),\r\n      jobsite.zip\r\n    ].filter(Boolean);\r\n    const address = addressParts.join(', ');\r\n    const statusKey = (lead.status || 'NEW').toUpperCase();\r\n    return (\r\n      <SurfaceCard key={lead.id}>\r\n        <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center' }}>\r\n          <View>\r\n            <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600' }}>Lead #{lead.id}</Text>\r\n            <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>{customer.name || 'Unknown customer'}</Text>\r\n          </View>\r\n          <StatusPill status={statusKey} />\r\n        </View>\r\n        {customer.phone ? <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>{customer.phone}</Text> : null}\r\n        {customer.email ? <Text style={{ color: palette.muted }}>{customer.email}</Text> : null}\r\n        {address ? <Text style={{ color: palette.muted, marginTop: spacing(1) }}>{address}</Text> : null}\r\n        <Text numberOfLines={3} style={{ color: palette.text, marginTop: spacing(1.5) }}>{lead.description || 'No scope captured yet.'}</Text>\r\n        <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginTop: spacing(2) }}>\r\n          <QuickAction label=\"Open\" onPress={() => navigation.navigate('EstimateEditor', { leadId: lead.id })} />\r\n          <QuickAction label=\"Convert\" tone=\"success\" onPress={() => navigation.navigate('Jobs')} />\r\n          <QuickAction label=\"Delete\" tone=\"danger\" onPress={() => deleteLead(lead)} />\r\n        </View>\r\n      </SurfaceCard>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\r\n      <FlatList\r\n        data={leads}\r\n        keyExtractor={item => String(item.id)}\r\n        contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(4) }}\r\n        refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} tintColor={palette.primary} />}\r\n        ListHeaderComponent={\r\n          <View style={{ marginBottom: spacing(3) }}>\r\n            <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center', marginBottom: spacing(2) }}>\r\n              <View>\r\n                <Text style={{ color: palette.text, fontSize: typography.h1, fontWeight:'700' }}>Leads</Text>\r\n                <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>Keep the funnel moving</Text>\r\n              </View>\r\n              <QuickAction label=\"New lead\" onPress={() => navigation.navigate('NewLead')} />\r\n            </View>\r\n            <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(2), rowGap: spacing(2) }}>\r\n              <View style={{ flexBasis:'48%', minWidth: 160 }}>\r\n                <SummaryCard title=\"Total\" value={leads.length} subtitle={`${newLeadsCount} new`} tone=\"info\" />\r\n              </View>\r\n              <View style={{ flexBasis:'48%', minWidth: 160 }}>\r\n                <SummaryCard title=\"Outstanding\" value={newLeadsCount} subtitle=\"Require follow up\" tone=\"warning\" />\r\n              </View>\r\n            </View>\r\n          </View>\r\n        }\r\n        renderItem={({ item }) => renderLeadCard(item)}\r\n        ListEmptyComponent={\r\n          loading ? (\r\n            <SurfaceCard style={{ alignItems:'center', paddingVertical: spacing(4) }}>\r\n              <ActivityIndicator color={palette.primary} />\r\n              <Text style={{ color: palette.muted, marginTop: spacing(1) }}>Loading leads...</Text>\r\n            </SurfaceCard>\r\n          ) : (\r\n            <SurfaceCard>\r\n              <Text style={{ color: palette.muted }}>No leads yet. Capture a lead to get started.</Text>\r\n            </SurfaceCard>\r\n          )\r\n        }\r\n      />\r\n    </SafeAreaView>\r\n  );\r\n}\r\nfunction NewLeadScreen({ navigation }){\r\n  const { token } = useAuth();\r\n  const [description, setDescription] = useState('');\r\n  const [status, setStatus] = useState('NEW');\r\n  const [customerName, setCustomerName] = useState('');\r\n  const [customerPhone, setCustomerPhone] = useState('');\r\n  const [customerEmail, setCustomerEmail] = useState('');\r\n  const [addressLine1, setAddressLine1] = useState('');\r\n  const [addressLine2, setAddressLine2] = useState('');\r\n  const [city, setCity] = useState('');\r\n  const [stateCode, setStateCode] = useState('');\r\n  const [zip, setZip] = useState('');\r\n  const [showCustomerSection, setShowCustomerSection] = useState(false);\r\n  const [showJobsiteSection, setShowJobsiteSection] = useState(false);\r\n  const statuses = ['NEW','CONTACTED','ESTIMATING','CONVERTED','CLOSED_LOST'];\r\n\r\n  const buildPayload = () => {\r\n    const customer = [customerName, customerPhone, customerEmail].some(v => v && v.trim())\r\n      ? {\r\n          name: customerName.trim(),\r\n          phone: customerPhone.trim(),\r\n          email: customerEmail.trim(),\r\n        }\r\n      : null;\r\n    const jobsite = [addressLine1, addressLine2, city, stateCode, zip].some(v => v && v.trim())\r\n      ? {\r\n          addressLine1: addressLine1.trim(),\r\n          addressLine2: addressLine2.trim(),\r\n          city: city.trim(),\r\n          state: stateCode.trim(),\r\n          zip: zip.trim(),\r\n        }\r\n      : null;\r\n    return {\r\n      description,\r\n      status,\r\n      customer,\r\n      jobsite,\r\n    };\r\n  };\r\n\r\n  const createLeadOnline = async () => {\r\n    const payload = buildPayload();\r\n    const created = await api('/leads', 'POST', payload, token);\r\n    navigation.replace('EstimateEditor', { leadId: created.id });\r\n    Alert.alert('Lead created', `Lead #${created.id} ready to estimate.`);\r\n  };\r\n\r\n  const queueLead = () => {\r\n    const payload = buildPayload();\r\n    db.transaction(tx => tx.executeSql('INSERT INTO queue (type, payload) VALUES (?,?)', ['createLead', JSON.stringify(payload)]));\r\n    Alert.alert('Saved offline', 'We will submit this lead when you reconnect.');\r\n    navigation.goBack();\r\n  };\r\n\r\n  const submit = async () => {\r\n    if(!description.trim()){\r\n      Alert.alert('Missing scope', 'Please describe the job or scope of work.');\r\n      return;\r\n    }\r\n    try {\r\n      await createLeadOnline();\r\n    } catch(e){\r\n      queueLead();\r\n    }\r\n  };\r\n\r\n  const chipStyle = (active) => ({\r\n    paddingHorizontal: spacing(2),\r\n    paddingVertical: spacing(1),\r\n    borderRadius: 999,\r\n    borderWidth: 1,\r\n    borderColor: active ? palette.primary : palette.border,\r\n    backgroundColor: active ? '#d9f2ed' : palette.surface,\r\n  });\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\r\n      <ScrollView contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(6) }}>\r\n        <SurfaceCard style={{ marginBottom: spacing(3) }}>\r\n          <Text style={{ color: palette.text, fontSize: typography.h1, fontWeight:'700', marginBottom: spacing(2) }}>New lead</Text>\r\n          <Text style={{ color: palette.muted, fontWeight:'600', marginBottom: spacing(1) }}>Scope</Text>\r\n          <TextInput\r\n            placeholder=\"Describe the job...\"\r\n            placeholderTextColor={palette.muted}\r\n            value={description}\r\n            onChangeText={setDescription}\r\n            multiline\r\n            style={{\r\n              borderWidth: 1,\r\n              borderColor: palette.border,\r\n              borderRadius: 12,\r\n              padding: spacing(2),\r\n              minHeight: 120,\r\n              color: palette.text,\r\n              backgroundColor: palette.surfaceMuted,\r\n              textAlignVertical: 'top',\r\n            }}\r\n          />\r\n          <Text style={{ color: palette.muted, fontWeight:'600', marginTop: spacing(2), marginBottom: spacing(1) }}>Status</Text>\r\n          <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1) }}>\r\n            {statuses.map(s => {\r\n              const active = status === s;\r\n              return (\r\n                <TouchableOpacity key={s} onPress={() => setStatus(s)} activeOpacity={0.85} style={chipStyle(active)}>\r\n                  <Text style={{ color: active ? palette.primaryStrong : palette.muted, fontWeight:'600', fontSize: typography.small }}>{s.replace('_',' ')}</Text>\r\n                </TouchableOpacity>\r\n              );\r\n            })}\r\n          </View>\r\n          <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center', marginTop: spacing(3) }}>\r\n            <QuickAction label=\"Save offline\" tone=\"muted\" onPress={queueLead} />\r\n            <TouchableOpacity\r\n              onPress={submit}\r\n              activeOpacity={0.85}\r\n              style={{ backgroundColor: palette.primary, paddingHorizontal: spacing(3), paddingVertical: spacing(1.5), borderRadius: 12 }}\r\n            >\r\n              <Text style={{ color:'#fff', fontWeight:'700' }}>Create lead</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </SurfaceCard>\r\n\r\n        <SurfaceCard style={{ marginBottom: spacing(3) }}>\r\n          <TouchableOpacity\r\n            onPress={() => setShowCustomerSection(v => !v)}\r\n            style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center' }}\r\n            activeOpacity={0.8}\r\n          >\r\n            <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600' }}>Customer details</Text>\r\n            <Text style={{ color: palette.primary, fontWeight:'600' }}>{showCustomerSection ? 'Hide' : 'Add'}</Text>\r\n          </TouchableOpacity>\r\n          {showCustomerSection ? (\r\n            <View style={{ marginTop: spacing(2) }}>\r\n              <TextInput\r\n                placeholder=\"Name\"\r\n                placeholderTextColor={palette.muted}\r\n                value={customerName}\r\n                onChangeText={setCustomerName}\r\n                style={{\r\n                  borderWidth: 1,\r\n                  borderColor: palette.border,\r\n                  borderRadius: 12,\r\n                  padding: spacing(2),\r\n                  color: palette.text,\r\n                  backgroundColor: palette.surfaceMuted,\r\n                  marginBottom: spacing(1.5),\r\n                }}\r\n              />\r\n              <TextInput\r\n                placeholder=\"Phone\"\r\n                placeholderTextColor={palette.muted}\r\n                keyboardType=\"phone-pad\"\r\n                value={customerPhone}\r\n                onChangeText={setCustomerPhone}\r\n                style={{\r\n                  borderWidth: 1,\r\n                  borderColor: palette.border,\r\n                  borderRadius: 12,\r\n                  padding: spacing(2),\r\n                  color: palette.text,\r\n                  backgroundColor: palette.surfaceMuted,\r\n                  marginBottom: spacing(1.5),\r\n                }}\r\n              />\r\n              <TextInput\r\n                placeholder=\"Email\"\r\n                placeholderTextColor={palette.muted}\r\n                keyboardType=\"email-address\"\r\n                autoCapitalize=\"none\"\r\n                value={customerEmail}\r\n                onChangeText={setCustomerEmail}\r\n                style={{\r\n                  borderWidth: 1,\r\n                  borderColor: palette.border,\r\n                  borderRadius: 12,\r\n                  padding: spacing(2),\r\n                  color: palette.text,\r\n                  backgroundColor: palette.surfaceMuted,\r\n                }}\r\n              />\r\n            </View>\r\n          ) : (\r\n            <Text style={{ color: palette.muted, marginTop: spacing(1.5) }}>Add contact details to help follow up faster.</Text>\r\n          )}\r\n        </SurfaceCard>\r\n\r\n        <SurfaceCard>\r\n          <TouchableOpacity\r\n            onPress={() => setShowJobsiteSection(v => !v)}\r\n            style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center' }}\r\n            activeOpacity={0.8}\r\n          >\r\n            <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600' }}>Jobsite address</Text>\r\n            <Text style={{ color: palette.primary, fontWeight:'600' }}>{showJobsiteSection ? 'Hide' : 'Add'}</Text>\r\n          </TouchableOpacity>\r\n          {showJobsiteSection ? (\r\n            <View style={{ marginTop: spacing(2) }}>\r\n              <TextInput\r\n                placeholder=\"Address line 1\"\r\n                placeholderTextColor={palette.muted}\r\n                value={addressLine1}\r\n                onChangeText={setAddressLine1}\r\n                style={{\r\n                  borderWidth: 1,\r\n                  borderColor: palette.border,\r\n                  borderRadius: 12,\r\n                  padding: spacing(2),\r\n                  color: palette.text,\r\n                  backgroundColor: palette.surfaceMuted,\r\n                  marginBottom: spacing(1.5),\r\n                }}\r\n              />\r\n              <TextInput\r\n                placeholder=\"Address line 2\"\r\n                placeholderTextColor={palette.muted}\r\n                value={addressLine2}\r\n                onChangeText={setAddressLine2}\r\n                style={{\r\n                  borderWidth: 1,\r\n                  borderColor: palette.border,\r\n                  borderRadius: 12,\r\n                  padding: spacing(2),\r\n                  color: palette.text,\r\n                  backgroundColor: palette.surfaceMuted,\r\n                  marginBottom: spacing(1.5),\r\n                }}\r\n              />\r\n              <View style={{ flexDirection:'row', columnGap: spacing(1.5) }}>\r\n                <View style={{ flex:1 }}>\r\n                  <TextInput\r\n                    placeholder=\"City\"\r\n                    placeholderTextColor={palette.muted}\r\n                    value={city}\r\n                    onChangeText={setCity}\r\n                    style={{\r\n                      borderWidth: 1,\r\n                      borderColor: palette.border,\r\n                      borderRadius: 12,\r\n                      padding: spacing(2),\r\n                      color: palette.text,\r\n                      backgroundColor: palette.surfaceMuted,\r\n                      marginBottom: spacing(1.5),\r\n                    }}\r\n                  />\r\n                </View>\r\n                <View style={{ width: 80 }}>\r\n                  <TextInput\r\n                    placeholder=\"State\"\r\n                    placeholderTextColor={palette.muted}\r\n                    value={stateCode}\r\n                    onChangeText={setStateCode}\r\n                    style={{\r\n                      borderWidth: 1,\r\n                      borderColor: palette.border,\r\n                      borderRadius: 12,\r\n                      padding: spacing(2),\r\n                      color: palette.text,\r\n                      backgroundColor: palette.surfaceMuted,\r\n                      marginBottom: spacing(1.5),\r\n                    }}\r\n                  />\r\n                </View>\r\n                <View style={{ width: 100 }}>\r\n                  <TextInput\r\n                    placeholder=\"ZIP\"\r\n                    placeholderTextColor={palette.muted}\r\n                    value={zip}\r\n                    onChangeText={setZip}\r\n                    style={{\r\n                      borderWidth: 1,\r\n                      borderColor: palette.border,\r\n                      borderRadius: 12,\r\n                      padding: spacing(2),\r\n                      color: palette.text,\r\n                      backgroundColor: palette.surfaceMuted,\r\n                      marginBottom: spacing(1.5),\r\n                    }}\r\n                  />\r\n                </View>\r\n              </View>\r\n            </View>\r\n          ) : (\r\n            <Text style={{ color: palette.muted, marginTop: spacing(1.5) }}>Add a jobsite to keep crews aligned.</Text>\r\n          )}\r\n        </SurfaceCard>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\nfunction EstimateEditorScreen({ route, navigation }){\r\n  const { token, user } = useAuth();\r\n  const { leadId } = route.params || {};\r\n  const [estimateId, setEstimateId] = useState(null);\r\n  const [items, setItems] = useState([]);\r\n  const [desc, setDesc] = useState('');\r\n  const [qty, setQty] = useState('1');\r\n  const [price, setPrice] = useState('0');\r\n  const [notes, setNotes] = useState('');\r\n  const [photoUrl, setPhotoUrl] = useState(null);\r\n  const [subtotal, setSubtotal] = useState(0);\n  const [taxRate, setTaxRate] = useState('7');\n  const [tax, setTax] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [leadDetails, setLeadDetails] = useState(null);\r\n  const [leadStatus, setLeadStatus] = useState('NEW');\r\n  const [leadScope, setLeadScope] = useState('');\r\n  const [leadCustomerName, setLeadCustomerName] = useState('');\r\n  const [leadCustomerPhone, setLeadCustomerPhone] = useState('');\r\n  const [leadCustomerEmail, setLeadCustomerEmail] = useState('');\r\n  const [leadAddressLine1, setLeadAddressLine1] = useState('');\r\n  const [leadAddressLine2, setLeadAddressLine2] = useState('');\r\n  const [leadCity, setLeadCity] = useState('');\r\n  const [leadStateCode, setLeadStateCode] = useState('');\r\n  const [leadZip, setLeadZip] = useState('');\r\n  const leadStatuses = ['NEW','CONTACTED','ESTIMATING','CONVERTED','CLOSED_LOST'];\r\n\r\n  const loadLead = useCallback(async () => {\r\n    if (!leadId) return;\r\n    try {\r\n      const data = await api(`/leads/${leadId}`,'GET',null,token);\r\n      setLeadDetails(data);\r\n      setLeadStatus(data.status || 'NEW');\r\n      setLeadScope(data.description || '');\r\n      const customer = data.Customer || {};\r\n      const jobsite = data.Jobsite || {};\r\n      setLeadCustomerName(customer.name || '');\r\n      setLeadCustomerPhone(customer.phone || '');\r\n      setLeadCustomerEmail(customer.email || '');\r\n      setLeadAddressLine1(jobsite.addressLine1 || '');\r\n      setLeadAddressLine2(jobsite.addressLine2 || '');\r\n      setLeadCity(jobsite.city || '');\r\n      setLeadStateCode(jobsite.state || '');\r\n      setLeadZip(jobsite.zip || '');\r\n    } catch(e) { }\r\n  }, [leadId, token]);\r\n\r\n  useEffect(() => {\r\n    loadLead();\r\n  }, [loadLead]);\r\n\r\n  const createEstimate = async () => {\n    const est = await api('/estimates', 'POST', {\n      leadId,\n      customerId: leadDetails?.customerId ?? null,\n      jobsiteId: leadDetails?.jobsiteId ?? null,\n      subtotal: 0,\n      taxRate: parseFloat(taxRate) || 0,\n      total: 0\n    }, token);\n    setEstimateId(est.id);\n    return est;\n  };\n\n  const ensureEstimate = useCallback(async () => {\n    if (estimateId) return estimateId;\n    const created = await createEstimate();\n    setEstimateId(created.id);\n    return created.id;\n  }, [estimateId, createEstimate]);\n\n  useEffect(() => {\n    const rate = parseFloat(taxRate) || 0;\n    const newSubtotal = items.reduce((sum, item) => sum + (parseFloat(item.qty || 0) * parseFloat(item.unitPrice || 0)), 0);\n    const newTax = newSubtotal * (rate / 100);\n    setSubtotal(newSubtotal);\n    setTax(newTax);\n    setTotal(newSubtotal + newTax);\n  }, [items, taxRate]);\n\n  const addItem = async () => {\n    if (!desc.trim()) {\n      Alert.alert('Line item', 'Please add a description.');\n      return;\n    }\n    try {\n      const targetId = await ensureEstimate();\n      const payload = {\n        description: desc.trim(),\n        qty: parseFloat(qty) || 1,\n        unitPrice: parseFloat(price) || 0,\n      };\n      const item = await api(`/estimates/${targetId}/items`, 'POST', payload, token);\n      setItems(prev => [item, ...prev]);\n      setDesc('');\n      setQty('1');\n      setPrice('0');\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to add line item');\n    }\n  };\n\n  const saveLeadDetails = async () => {\n    if (!leadId) return;\n    const customerPayload = [leadCustomerName, leadCustomerPhone, leadCustomerEmail].some(v => v && v.trim()) ? {\n      name: leadCustomerName.trim(),\n      phone: leadCustomerPhone.trim(),\n      email: leadCustomerEmail.trim(),\n    } : null;\n    const jobsitePayload = [leadAddressLine1, leadAddressLine2, leadCity, leadStateCode, leadZip].some(v => v && v.trim()) ? {\n      addressLine1: leadAddressLine1.trim(),\n      addressLine2: leadAddressLine2.trim(),\n      city: leadCity.trim(),\n      state: leadStateCode.trim(),\n      zip: leadZip.trim(),\n    } : null;\n    try {\n      await api(`/leads/${leadId}`,'PATCH',{\n        description: leadScope,\n        status: leadStatus,\n        customer: customerPayload,\n        jobsite: jobsitePayload,\n      }, token);\n      Alert.alert('Saved', 'Lead details updated.');\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to save lead details');\n    }\n  };\n\n  const pickPhoto = async () => {\n    const result = await ImagePicker.launchImageLibraryAsync({\n      allowsEditing: false,\n      quality: 0.6,\n    });\n    if (!result.canceled && result.assets?.length) {\n      setPhotoUrl(result.assets[0].uri);\n    }\n  };\n\n  return (\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\n      <ScrollView contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(6) }}>\n        <SurfaceCard style={{ marginBottom: spacing(3) }}>\n          <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700', marginBottom: spacing(1.5) }}>Lead summary</Text>\n          <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1.5), marginBottom: spacing(2) }}>\n            {leadStatuses.map(s => {\n              const selected = leadStatus === s;\n              return (\n                <QuickAction\n                  key={s}\n                  label={s.replace('_',' ')}\n                  tone={selected ? 'primary' : 'muted'}\n                  onPress={() => setLeadStatus(s)}\n                />\n              );\n            })}\n          </View>\n          <TextInput\n            placeholder=\"Scope / project notes\"\n            placeholderTextColor={palette.muted}\n            value={leadScope}\n            onChangeText={setLeadScope}\n            multiline\n            style={{\n              borderWidth:1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              minHeight: 120,\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted,\n              textAlignVertical: 'top',\n            }}\n          />\n          <View style={{ flexDirection:'row', justifyContent:'flex-end', marginTop: spacing(2) }}>\n            <QuickAction label=\"Save lead\" onPress={saveLeadDetails} />\n          </View>\n        </SurfaceCard>\n\n        <SurfaceCard style={{ marginBottom: spacing(3) }}>\n          <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700', marginBottom: spacing(1.5) }}>Line items</Text>\n          <TextInput\n            placeholder=\"Describe the work or material\"\n            placeholderTextColor={palette.muted}\n            value={desc}\n            onChangeText={setDesc}\n            style={{\n              borderWidth:1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted,\n              marginBottom: spacing(1.5),\n            }}\n          />\n          <View style={{ flexDirection:'row', columnGap: spacing(1.5), marginBottom: spacing(1.5) }}>\n            <TextInput\n              placeholder=\"Qty\"\n              placeholderTextColor={palette.muted}\n              value={qty}\n              onChangeText={setQty}\n              keyboardType=\"numeric\"\n              style={{\n                flex:1,\n                borderWidth:1,\n                borderColor: palette.border,\n                borderRadius: 12,\n                padding: spacing(2),\n                color: palette.text,\n                backgroundColor: palette.surfaceMuted,\n              }}\n            />\n            <TextInput\n              placeholder=\"Unit price\"\n              placeholderTextColor={palette.muted}\n              value={price}\n              onChangeText={setPrice}\n              keyboardType=\"numeric\"\n              style={{\n                flex:1,\n                borderWidth:1,\n                borderColor: palette.border,\n                borderRadius: 12,\n                padding: spacing(2),\n                color: palette.text,\n                backgroundColor: palette.surfaceMuted,\n              }}\n            />\n            <QuickAction label=\"Add\" onPress={addItem} />\n          </View>\n          {items.length === 0 ? (\n            <Text style={{ color: palette.muted }}>No line items yet.</Text>\n          ) : (\n            items.map((item, idx) => (\n              <SurfaceCard key={item.id || idx} style={{ marginBottom: spacing(1.5) }}>\n                <Text style={{ color: palette.text, fontWeight:'600' }}>{item.description}</Text>\n                <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>\n                  Qty {item.qty} x ${parseFloat(item.unitPrice || 0).toFixed(2)} = {(parseFloat(item.qty || 0) * parseFloat(item.unitPrice || 0)).toFixed(2)}\n                </Text>\n              </SurfaceCard>\n            ))\n          )}\n          <View style={{ marginTop: spacing(2), borderTopWidth:1, borderTopColor: palette.border, paddingTop: spacing(2) }}>\n            <Text style={{ color: palette.muted }}>Tax rate (%)</Text>\n            <TextInput\n              value={String(taxRate)}\n              onChangeText={setTaxRate}\n              keyboardType=\"numeric\"\n              placeholderTextColor={palette.muted}\n              style={{\n                marginTop: spacing(1),\n                borderWidth:1,\n                borderColor: palette.border,\n                borderRadius: 12,\n                padding: spacing(2),\n                color: palette.text,\n                backgroundColor: palette.surfaceMuted,\n              }}\n            />\n            <View style={{ marginTop: spacing(2) }}>\n              <Text style={{ color: palette.text }}>Subtotal: ${subtotal.toFixed(2)}</Text>\n              <Text style={{ color: palette.text }}>Tax: ${tax.toFixed(2)}</Text>\n              <Text style={{ color: palette.text, fontWeight:'700' }}>Total: ${total.toFixed(2)}</Text>\n            </View>\n          </View>\n        </SurfaceCard>\n\n        <SurfaceCard>\n          <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700', marginBottom: spacing(1.5) }}>Attachments & notes</Text>\n          <TextInput\n            placeholder=\"Internal notes\"\n            placeholderTextColor={palette.muted}\n            value={notes}\n            onChangeText={setNotes}\n            multiline\n            style={{\n              borderWidth:1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              minHeight: 100,\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted,\n              textAlignVertical: 'top',\n            }}\n          />\n          <View style={{ flexDirection:'row', columnGap: spacing(1.5), marginTop: spacing(1.5) }}>\n            <QuickAction label=\"Add photo\" onPress={pickPhoto} />\n          </View>\n          {photoUrl ? (\n            <Image source={{ uri: photoUrl }} style={{ height: 160, borderRadius: 12, marginTop: spacing(2) }} />\n          ) : null}\n        </SurfaceCard>\n      </ScrollView>\n    </SafeAreaView>\n  );\n}\n\r\nfunction ScheduleScreen({ navigation }){\r\n  const { token } = useAuth();\r\n  const [jobs, setJobs] = useState([]);\r\n  const [filter, setFilter] = useState('ALL');\r\n  const [queueCount, setQueueCount] = useState(0);\r\n  const [syncing, setSyncing] = useState(false);\r\n\r\n  const loadQueueCount = useCallback(() => {\r\n    db.transaction(tx => tx.executeSql('SELECT COUNT(*) as c FROM queue', [], (_, { rows }) => setQueueCount((rows._array?.[0]?.c)||0)));\r\n  }, []);\r\n\r\n  const load = useCallback(async () => {\r\n    try {\r\n      const data = await api('/jobs','GET',null,token);\r\n      setJobs(data);\r\n      db.transaction(tx => {\r\n        tx.executeSql('DELETE FROM jobs_cache;');\r\n        data.forEach(j => tx.executeSql('INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)', [j.id, j.name||'', j.status||'SCHEDULED', j.startDate||'', j.endDate||'', j.notes||'']));\r\n      });\r\n    } catch(e) {\r\n      db.transaction(tx => tx.executeSql('SELECT id, name, status, startDate, endDate, notes FROM jobs_cache', [], (_, { rows }) => setJobs(rows._array || [])));\r\n    }\r\n  }, [token]);\r\n\r\n  useEffect(() => {\r\n    load();\r\n    loadQueueCount();\r\n  }, [load, loadQueueCount]);\r\n\r\n  const filters = [\r\n    { key:'ALL', label:'All' },\r\n    { key:'TODAY', label:'Today' },\r\n    { key:'WEEK', label:'This week' },\r\n  ];\r\n\r\n  const inRange = useCallback((dateValue) => {\r\n    if (filter === 'ALL') return true;\r\n    if (!dateValue) return false;\r\n    const today = new Date();\r\n    const dt = new Date(dateValue);\r\n    if (Number.isNaN(dt.getTime())) return false;\r\n    if (filter === 'TODAY') {\r\n      return dt.getFullYear() === today.getFullYear() && dt.getMonth() === today.getMonth() && dt.getDate() === today.getDate();\r\n    }\r\n    const start = new Date(today);\r\n    start.setHours(0, 0, 0, 0);\r\n    start.setDate(today.getDate() - today.getDay());\r\n    const end = new Date(start);\r\n    end.setDate(start.getDate() + 6);\r\n    return dt >= start && dt <= end;\r\n  }, [filter]);\r\n\r\n  const filteredJobs = useMemo(() => (\r\n    jobs\r\n      .filter(job => inRange(job.startDate))\r\n      .sort((a, b) => new Date(a.startDate || 0) - new Date(b.startDate || 0))\r\n  ), [jobs, inRange]);\r\n\r\n  const handleSync = useCallback(async () => {\r\n    setSyncing(true);\r\n    try {\r\n      await processQueue(token);\r\n      await load();\r\n      loadQueueCount();\r\n    } finally {\r\n      setSyncing(false);\r\n    }\r\n  }, [token, load, loadQueueCount]);\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\r\n      <ScrollView contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(6) }}>\r\n        <Text style={{ color: palette.text, fontSize: typography.h1, fontWeight:'700', marginBottom: spacing(2) }}>Schedule</Text>\r\n        <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1.5), marginBottom: spacing(2) }}>\r\n          {filters.map(option => (\r\n            <QuickAction\r\n              key={option.key}\r\n              label={option.label}\r\n              tone={filter === option.key ? 'primary' : 'muted'}\r\n              onPress={() => setFilter(option.key)}\r\n            />\r\n          ))}\r\n        </View>\r\n        <SurfaceCard style={{ marginBottom: spacing(3), flexDirection:'row', justifyContent:'space-between', alignItems:'center' }}>\r\n          <View>\r\n            <Text style={{ color: palette.text, fontWeight:'600' }}>Offline queue</Text>\r\n            <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>{queueCount} items waiting to sync</Text>\r\n          </View>\r\n          <QuickAction label={syncing ? 'Syncing...' : 'Sync now'} tone={syncing ? 'muted' : 'primary'} onPress={syncing ? undefined : handleSync} />\r\n        </SurfaceCard>\r\n\r\n        {filteredJobs.length === 0 ? (\r\n          <SurfaceCard>\r\n            <Text style={{ color: palette.muted }}>No jobs {filter !== 'ALL' ? 'in this range' : 'scheduled yet'}. Convert a lead or create a job to populate your schedule.</Text>\r\n          </SurfaceCard>\r\n        ) : (\r\n          filteredJobs.map(job => {\r\n            const jobsite = job.Jobsite || {};\r\n            const addressParts = [\r\n              jobsite.addressLine1,\r\n              jobsite.addressLine2,\r\n              [jobsite.city, jobsite.state].filter(Boolean).join(', '),\r\n              jobsite.zip,\r\n            ].filter(Boolean);\r\n            const address = addressParts.join(', ');\r\n            const startLabel = job.startDate ? `Starts ${formatDate(job.startDate)}` : 'No start date';\r\n            const endLabel = job.endDate ? ` - Due ${formatDate(job.endDate)}` : '';\r\n            return (\r\n              <SurfaceCard key={job.id} style={{ marginBottom: spacing(2) }}>\r\n                <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center' }}>\r\n                  <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600' }}>{job.name || `Job #${job.id}`}</Text>\r\n                  <StatusPill status={job.status || 'SCHEDULED'} />\r\n                </View>\r\n                <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>\r\n                  {startLabel}{endLabel}\r\n                </Text>\r\n                {address ? <Text style={{ color: palette.muted, marginTop: spacing(1) }}>{address}</Text> : null}\r\n                {job.notes ? <Text style={{ color: palette.muted, marginTop: spacing(1) }}>{job.notes}</Text> : null}\r\n                <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginTop: spacing(2) }}>\r\n                  <QuickAction label=\"Open job\" onPress={() => navigation.navigate('JobDetail', { jobId: job.id })} />\r\n                  <QuickAction label=\"View tasks\" onPress={() => navigation.navigate('JobDetail', { jobId: job.id, tab: 'tasks' })} tone=\"muted\" />\r\n                </View>\r\n              </SurfaceCard>\r\n            );\r\n          })\r\n        )}\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\nfunction ProfileScreen({ navigation }){\r\n  const { setToken, user } = useAuth();\r\n  const isAdmin = (user?.role || '').toUpperCase() === 'ADMIN';\r\n  return (\r\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\r\n      <ScrollView contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(6) }}>\r\n        <Text style={{ color: palette.text, fontSize: typography.h1, fontWeight:'700', marginBottom: spacing(2) }}>Profile</Text>\r\n        <SurfaceCard style={{ marginBottom: spacing(3) }}>\r\n          <Text style={{ color: palette.muted, fontSize: typography.small, textTransform:'uppercase', fontWeight:'600' }}>Account</Text>\r\n          <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700', marginTop: spacing(1) }}>{user?.name || user?.fullName || 'Team member'}</Text>\r\n          <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>{user?.email || 'No email on file'}</Text>\r\n          <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>Role: {user?.role || 'TECH'}</Text>\r\n        </SurfaceCard>\r\n\r\n        <SurfaceCard>\r\n          <Text style={{ color: palette.muted, fontSize: typography.small, textTransform:'uppercase', fontWeight:'600', marginBottom: spacing(1.5) }}>Actions</Text>\r\n          {isAdmin ? (\r\n            <View style={{ marginBottom: spacing(1.5) }}>\r\n              <QuickAction label=\"Manage users\" onPress={() => navigation.navigate('UsersAdmin')} />\r\n            </View>\r\n          ) : null}\r\n          <QuickAction label=\"Sign out\" tone=\"danger\" onPress={() => setToken(null)} />\r\n        </SurfaceCard>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\nconst Stack = createNativeStackNavigator();\r\nconst Tabs = createBottomTabNavigator();\r\n\r\nfunction TabsNav(){\r\n  const { user } = useAuth();\r\n  const isAdmin = (user?.role || '').toUpperCase() === 'ADMIN';\r\n  return (\r\n    <Tabs.Navigator\r\n      screenOptions={{\r\n        headerShown: false,\r\n        tabBarActiveTintColor: palette.primary,\r\n        tabBarStyle: { backgroundColor: '#fff' },\r\n      }}\r\n    >\r\n      <Tabs.Screen name=\"Dashboard\" component={DashboardScreen} options={{ title: 'Home' }} />\r\n      <Tabs.Screen name=\"Leads\" component={LeadsScreen} />\r\n      <Tabs.Screen name=\"Jobs\" component={JobsKanbanScreen} options={{ title:'Jobs' }} />\r\n      {isAdmin ? <Tabs.Screen name=\"Invoices\" component={InvoicesScreen} /> : null}\r\n      <Tabs.Screen name=\"Schedule\" component={ScheduleScreen} />\r\n      <Tabs.Screen name=\"Profile\" component={ProfileScreen} options={{ title:\"Profile\" }} />\r\n    </Tabs.Navigator>\r\n  );\r\n}\r\n\r\nfunction LoginScreen() {\r\n  const [email, setEmail] = useState('admin@example.com');\r\n  // If you kept the hardcoded backend login, default to test123:\r\n  const [password, setPassword] = useState('test123');\r\n  const [busy, setBusy] = useState(false);\r\n\r\n  // <-- use the auth context to flip the app into \"logged-in\" mode\r\n  const { setToken, setUser } = useAuth();\r\n\r\n  async function login() {\r\n    try {\r\n      setBusy(true);\r\n      const res = await fetch(`${API_URL}/auth/login`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n      const data = await res.json();\r\n      if (!res.ok) throw new Error(data?.message || data?.error || 'Login failed');\r\n\r\n      // Accept dev or real payload shape\r\n      const tok = data.token || data.accessToken;\r\n      if (!tok) throw new Error('No token returned from server');\r\n\r\n      // Store token/user in global auth state + persist\r\n      const normalizedUser = data.user ? { ...data.user, role: normalizeRole(data.user.role) } : { email, role: 'ADMIN', name: 'Admin' };\r\n      setToken(tok);\r\n      setUser(normalizedUser);\r\n      try {\r\n        await SecureStore.setItemAsync('auth_token', tok);\r\n        await SecureStore.setItemAsync('auth_user', JSON.stringify(normalizedUser));\r\n      } catch {}\r\n\r\n      // Optional: toast\r\n      Alert.alert('Welcome', 'Logged in');\r\n    } catch (e) {\r\n      Alert.alert('Error', e.message);\r\n    } finally {\r\n      setBusy(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View style={{ flex: 1, padding: 20, justifyContent: 'center' }}>\r\n      <Text style={{ fontSize: 24, marginBottom: 16 }}>PrecisionTracker</Text>\r\n      <TextInput\r\n        placeholder=\"Email\"\r\n        autoCapitalize=\"none\"\r\n        value={email}\r\n        onChangeText={setEmail}\r\n        style={{ borderWidth: 1, padding: 12, marginBottom: 12 }}\r\n      />\r\n      <TextInput\r\n        placeholder=\"Password\"\r\n        secureTextEntry\r\n        value={password}\r\n        onChangeText={setPassword}\r\n        style={{ borderWidth: 1, padding: 12, marginBottom: 12 }}\r\n      />\r\n      <Button title={busy ? 'Signing in...' : 'Sign in'} onPress={login} disabled={busy} />\r\n    </View>\r\n  );\r\n}\r\n\r\n\r\nexport default function App(){\r\n  const [token, setToken] = useState(null);\r\n  const [user, setUser] = useState(null);\r\n  const [booting, setBooting] = useState(true);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    (async () => {\r\n      try {\r\n        const [tok, usr] = await Promise.all([\r\n          SecureStore.getItemAsync('auth_token'),\r\n          SecureStore.getItemAsync('auth_user')\r\n        ]);\r\n        if (mounted && tok) {\r\n          setToken(tok);\r\n          if (usr) {\r\n            const parsed = JSON.parse(usr);\r\n            parsed.role = normalizeRole(parsed.role);\r\n            setUser(parsed);\r\n          }\r\n        }\r\n      } catch {}\r\n      finally { if (mounted) setBooting(false); }\r\n    })();\r\n    return () => { mounted = false; };\r\n  }, []);\r\n\r\n  const authValue = {\r\n    token,\r\n    setToken: (t) => {\r\n      setToken(t);\r\n      if (!t) { try { SecureStore.deleteItemAsync('auth_token'); SecureStore.deleteItemAsync('auth_user'); } catch {} }\r\n    },\r\n    user,\r\n    setUser\r\n  };\r\n\r\n  if (booting) {\r\n    return (\r\n      <SafeAreaView style={{ flex:1, alignItems:'center', justifyContent:'center' }}>\r\n        <Text>Loading...</Text>\r\n      </SafeAreaView>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={authValue}>\r\n      <NavigationContainer>\r\n        {!token ? (\r\n          <Stack.Navigator>\r\n            <Stack.Screen name=\"Login\" component={LoginScreen} />\r\n          </Stack.Navigator>\r\n        ) : (\r\n          <Stack.Navigator>\r\n            <Stack.Screen name=\"Tabs\" component={TabsNav} options={{ headerShown:false }} />\r\n            <Stack.Screen name=\"NewLead\" component={NewLeadScreen} options={{ title:'New Lead' }} />\r\n            <Stack.Screen name=\"EstimateEditor\" component={EstimateEditorScreen} options={{ title:'Estimate' }} />\r\n            <Stack.Screen name=\"Signature\" component={SignatureScreen} options={{ title:'Signature' }} />\r\n            <Stack.Screen name=\"UsersAdmin\" component={UsersAdminScreen} options={{ title:'Users (Admin)' }} />\r\n            <Stack.Screen name=\"JobDetail\" component={JobDetailScreen} options={{ title:'Job' }} />\r\n          </Stack.Navigator>\r\n        )}\r\n      </NavigationContainer>\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}