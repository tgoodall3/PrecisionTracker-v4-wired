{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tyler\\\\Downloads\\\\PrecisionTracker-v4-wired\\\\PrecisionTracker\\\\mobile\\\\App.js\";\nimport React, { useEffect, useState, createContext, useContext, useRef, useCallback, useMemo } from 'react';\nimport { NavigationContainer, useFocusEffect } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport * as ImagePicker from 'expo-image-picker';\nimport * as FileSystem from 'expo-file-system';\nimport * as SQLite from 'expo-sqlite';\nimport Svg, { Path } from 'react-native-svg';\nimport ViewShot from 'react-native-view-shot';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"react-native-web/dist/exports/View\";\nimport * as SecureStore from 'expo-secure-store';\nimport DateTimePicker, { DateTimePickerAndroid } from '@react-native-community/datetimepicker';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.EXPO_PUBLIC_API_URL || 'http://localhost:4000';\nfunction initOfflineTables(database) {\n  try {\n    if (!database || typeof database.transaction !== 'function') return;\n    database.transaction(tx => {\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS queue (id INTEGER PRIMARY KEY AUTOINCREMENT, type TEXT, payload TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS uploads (id INTEGER PRIMARY KEY AUTOINCREMENT, dataUrl TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS leads_cache (id INTEGER PRIMARY KEY, description TEXT, status TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS jobs_cache (id INTEGER PRIMARY KEY, name TEXT, status TEXT, startDate TEXT, endDate TEXT, notes TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS tasks_cache (id INTEGER PRIMARY KEY, jobId INTEGER, title TEXT, status TEXT, dueDate TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS calendar_cache (id INTEGER PRIMARY KEY, jobId INTEGER, title TEXT, startAt TEXT, endAt TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS estimates_cache (id INTEGER PRIMARY KEY, leadId INTEGER, subtotal REAL, taxRate REAL, total REAL, status TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS estimate_items_cache (id INTEGER PRIMARY KEY, estimateId INTEGER, description TEXT, qty REAL, unitPrice REAL);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS change_orders_cache (id INTEGER PRIMARY KEY, jobId INTEGER, title TEXT, amountDelta REAL, status TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS users_cache (id INTEGER PRIMARY KEY, email TEXT, fullName TEXT, role TEXT);');\n    });\n  } catch (e) {}\n}\nlet db;\nexport function getDb() {\n  if (db) return db;\n  if (Platform.OS === 'web') {\n    db = {\n      transaction: fn => fn({\n        executeSql: () => {}\n      }),\n      execAsync: async () => {},\n      runAsync: async () => {}\n    };\n    return db;\n  }\n  if ('openDatabaseSync' in SQLite) {\n    db = SQLite.openDatabaseSync('offline.db');\n    return db;\n  }\n  if ('openDatabaseAsync' in SQLite) {\n    db = {\n      transaction: fn => fn({\n        executeSql: () => {}\n      }),\n      execAsync: async () => {},\n      runAsync: async () => {}\n    };\n    return db;\n  }\n  db = {\n    transaction: fn => fn({\n      executeSql: () => {}\n    }),\n    execAsync: async () => {},\n    runAsync: async () => {}\n  };\n  return db;\n}\nconst dbHandle = getDb();\ninitOfflineTables(dbHandle);\nconst normalizeRole = role => {\n  if (!role) return 'TECH';\n  const r = String(role).toUpperCase();\n  if (['ADMIN', 'ESTIMATOR', 'SUPERVISOR', 'TECH'].includes(r)) return r;\n  if (r === 'STANDARD' || r === 'USER') return 'TECH';\n  return r;\n};\nconst AuthContext = createContext(null);\nfunction useAuth() {\n  return useContext(AuthContext);\n}\nasync function api(path, method = 'GET', body, token) {\n  const headers = Object.assign({}, token ? {\n    Authorization: `Bearer ${token}`\n  } : {}, body ? {\n    'Content-Type': 'application/json'\n  } : {});\n  let response;\n  try {\n    response = await fetch(`${API_URL}${path}`, {\n      method,\n      headers,\n      body: body ? JSON.stringify(body) : undefined\n    });\n  } catch (networkError) {\n    throw new Error(networkError?.message || 'Network request failed');\n  }\n  const contentType = response.headers.get('content-type') || '';\n  const rawBody = await response.text();\n  let data = null;\n  if (rawBody) {\n    if (contentType.includes('application/json')) {\n      try {\n        data = JSON.parse(rawBody);\n      } catch {\n        data = rawBody;\n      }\n    } else {\n      data = rawBody;\n    }\n  }\n  if (!response.ok) {\n    const message = data && typeof data === 'object' && (data.error || data.message) || (typeof data === 'string' ? data : 'Request failed');\n    throw new Error(message);\n  }\n  return data;\n}\nconst palette = {\n  background: '#f4f6f8',\n  surface: '#ffffff',\n  surfaceMuted: '#f1f5f9',\n  border: '#e2e8f0',\n  text: '#0f172a',\n  muted: '#5f6b7d',\n  primary: '#2c8a7d',\n  primaryStrong: '#1f6a60',\n  success: '#219653',\n  warning: '#f59e0b',\n  danger: '#d14343',\n  info: '#2563eb'\n};\nconst spacing = (step = 1) => step * 8;\nconst typography = {\n  h1: 24,\n  h2: 18,\n  body: 15,\n  small: 12\n};\nconst lineHeightFor = fontSize => Math.round(fontSize * 1.5);\nconst defaultLineHeight = lineHeightFor(typography.body);\nif (!Text.defaultProps) Text.defaultProps = {};\nText.defaultProps.style = Object.assign({}, Text.defaultProps.style || {}, {\n  lineHeight: defaultLineHeight\n});\nconst floatingShadow = Platform.select({\n  ios: {\n    shadowColor: '#0f172a',\n    shadowOpacity: 0.08,\n    shadowRadius: 14,\n    shadowOffset: {\n      width: 0,\n      height: 6\n    }\n  },\n  android: {\n    elevation: 2\n  },\n  default: {}\n});\nconst pillTone = {\n  NEW: {\n    fg: palette.info,\n    bg: '#e6eeff',\n    label: 'New'\n  },\n  CONTACTED: {\n    fg: palette.primary,\n    bg: '#e6f4f2',\n    label: 'Contacted'\n  },\n  ESTIMATING: {\n    fg: palette.warning,\n    bg: '#fdf1d6',\n    label: 'Estimating'\n  },\n  CONVERTED: {\n    fg: palette.success,\n    bg: '#e6f6ec',\n    label: 'Converted'\n  },\n  CLOSED_LOST: {\n    fg: palette.muted,\n    bg: '#e2e8f0',\n    label: 'Lost'\n  },\n  SCHEDULED: {\n    fg: palette.primary,\n    bg: '#e6f4f2',\n    label: 'Scheduled'\n  },\n  IN_PROGRESS: {\n    fg: palette.info,\n    bg: '#e6eeff',\n    label: 'In progress'\n  },\n  COMPLETED: {\n    fg: palette.success,\n    bg: '#e6f6ec',\n    label: 'Completed'\n  },\n  COMPLETE: {\n    fg: palette.success,\n    bg: '#e6f6ec',\n    label: 'Complete'\n  },\n  DONE: {\n    fg: palette.success,\n    bg: '#e6f6ec',\n    label: 'Complete'\n  },\n  ON_HOLD: {\n    fg: palette.warning,\n    bg: '#fdf1d6',\n    label: 'On hold'\n  },\n  CANCELLED: {\n    fg: palette.muted,\n    bg: '#e2e8f0',\n    label: 'Cancelled'\n  },\n  DRAFT: {\n    fg: palette.muted,\n    bg: '#e2e8f0',\n    label: 'Draft'\n  },\n  SENT: {\n    fg: palette.info,\n    bg: '#e6eeff',\n    label: 'Sent'\n  },\n  PART_PAID: {\n    fg: palette.warning,\n    bg: '#fdf1d6',\n    label: 'Part paid'\n  },\n  PAID: {\n    fg: palette.success,\n    bg: '#e6f6ec',\n    label: 'Paid'\n  },\n  VOID: {\n    fg: palette.muted,\n    bg: '#f1f5f9',\n    label: 'Void'\n  }\n};\nconst toneMap = {\n  primary: {\n    fg: palette.primaryStrong,\n    bg: '#e0f3f0'\n  },\n  success: {\n    fg: palette.success,\n    bg: '#e6f6ec'\n  },\n  warning: {\n    fg: palette.warning,\n    bg: '#fdf1d6'\n  },\n  danger: {\n    fg: palette.danger,\n    bg: '#fde4e4'\n  },\n  info: {\n    fg: palette.info,\n    bg: '#e6eeff'\n  }\n};\nconst formInputBaseStyle = {\n  borderWidth: 1,\n  borderColor: palette.border,\n  borderRadius: 12,\n  paddingVertical: spacing(1.5),\n  paddingHorizontal: spacing(2),\n  color: palette.text,\n  backgroundColor: palette.surfaceMuted,\n  fontSize: typography.body,\n  marginBottom: spacing(1.5)\n};\nconst FormInput = React.forwardRef((props, ref) => _jsxDEV(TextInput, Object.assign({\n  ref: ref,\n  placeholderTextColor: palette.muted\n}, props, {\n  style: [formInputBaseStyle, props.style]\n}), void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 225,\n  columnNumber: 3\n}, this));\nFormInput.displayName = 'FormInput';\nconst formatCurrency = value => {\n  const amount = Number(value || 0);\n  if (Number.isNaN(amount)) return '$0';\n  return `$${amount.toLocaleString(undefined, {\n    minimumFractionDigits: amount % 1 ? 2 : 0,\n    maximumFractionDigits: 2\n  })}`;\n};\nconst formatDate = value => {\n  if (!value) return null;\n  const d = new Date(value);\n  if (Number.isNaN(d.getTime())) return value;\n  return d.toLocaleDateString(undefined, {\n    month: 'short',\n    day: 'numeric'\n  });\n};\nconst isTaskCompleted = status => {\n  if (!status) return false;\n  const key = String(status).toUpperCase();\n  return key === 'DONE' || key === 'COMPLETE';\n};\nfunction SurfaceCard({\n  children,\n  style,\n  onPress\n}) {\n  const content = _jsxDEV(View, {\n    style: [{\n      backgroundColor: palette.surface,\n      borderRadius: 16,\n      borderWidth: 1,\n      borderColor: palette.border,\n      padding: spacing(2)\n    }, floatingShadow, style],\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 255,\n    columnNumber: 5\n  }, this);\n  if (!onPress) return content;\n  return _jsxDEV(TouchableOpacity, {\n    activeOpacity: 0.85,\n    onPress: onPress,\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 267,\n    columnNumber: 5\n  }, this);\n}\nfunction StatusPill({\n  status\n}) {\n  if (!status) return null;\n  const key = String(status).toUpperCase();\n  const cfg = pillTone[key] || {\n    fg: palette.muted,\n    bg: '#e2e8f0',\n    label: status\n  };\n  return _jsxDEV(View, {\n    style: {\n      backgroundColor: cfg.bg,\n      borderRadius: 999,\n      paddingHorizontal: spacing(1.5),\n      paddingVertical: spacing(0.5)\n    },\n    children: _jsxDEV(Text, {\n      style: {\n        color: cfg.fg,\n        fontSize: typography.small,\n        fontWeight: '600'\n      },\n      children: cfg.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 278,\n    columnNumber: 5\n  }, this);\n}\nfunction SummaryCard({\n  title,\n  value,\n  subtitle,\n  tone = 'primary',\n  onPress\n}) {\n  const colors = toneMap[tone] || toneMap.primary;\n  return _jsxDEV(SurfaceCard, {\n    onPress: onPress,\n    style: {\n      backgroundColor: colors.bg,\n      borderColor: 'transparent',\n      padding: spacing(2.5)\n    },\n    children: [_jsxDEV(Text, {\n      style: {\n        color: palette.muted,\n        fontSize: typography.small,\n        textTransform: 'uppercase',\n        fontWeight: '700',\n        lineHeight: lineHeightFor(typography.small)\n      },\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this), _jsxDEV(Text, {\n      style: {\n        color: colors.fg,\n        fontSize: 28,\n        fontWeight: '800',\n        marginTop: spacing(0.5),\n        lineHeight: lineHeightFor(28)\n      },\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this), subtitle ? _jsxDEV(Text, {\n      style: {\n        color: palette.muted,\n        fontSize: typography.small,\n        marginTop: spacing(0.5),\n        lineHeight: lineHeightFor(typography.small)\n      },\n      children: subtitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 19\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 287,\n    columnNumber: 5\n  }, this);\n}\nfunction StatusCard({\n  label,\n  value,\n  description,\n  tone = 'primary'\n}) {\n  const colors = toneMap[tone] || toneMap.primary;\n  return _jsxDEV(SurfaceCard, {\n    style: {\n      backgroundColor: colors.bg,\n      borderColor: colors.fg,\n      borderWidth: 1,\n      paddingVertical: spacing(2),\n      paddingHorizontal: spacing(2.5),\n      flexGrow: 1,\n      flexBasis: '48%'\n    },\n    children: [_jsxDEV(Text, {\n      style: {\n        color: colors.fg,\n        fontSize: typography.small,\n        fontWeight: '700',\n        textTransform: 'uppercase',\n        lineHeight: lineHeightFor(typography.small)\n      },\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }, this), _jsxDEV(Text, {\n      style: {\n        color: palette.text,\n        fontSize: 24,\n        fontWeight: '700',\n        marginTop: spacing(0.5),\n        lineHeight: lineHeightFor(24)\n      },\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this), description ? _jsxDEV(Text, {\n      style: {\n        color: palette.muted,\n        fontSize: typography.small,\n        marginTop: spacing(0.5),\n        lineHeight: lineHeightFor(typography.small)\n      },\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 22\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 301,\n    columnNumber: 5\n  }, this);\n}\nfunction TagInput({\n  value = [],\n  onChange,\n  placeholder = 'Add tag'\n}) {\n  const [draft, setDraft] = useState('');\n  const tags = useMemo(() => {\n    if (!Array.isArray(value)) return [];\n    return value.filter(Boolean).map(tag => String(tag));\n  }, [value]);\n  const cleanTag = useCallback(input => {\n    if (!input) return null;\n    const cleaned = String(input).replace(/[#]/g, '').trim();\n    if (!cleaned) return null;\n    return cleaned.replace(/\\s+/g, ' ');\n  }, []);\n  const handleChangeText = useCallback(text => {\n    if (text.includes(',')) {\n      const segments = text.split(',');\n      const pending = segments.pop() ?? '';\n      const nextTags = [...tags];\n      segments.forEach(segment => {\n        const cleaned = cleanTag(segment);\n        if (!cleaned) return;\n        const exists = nextTags.some(existing => existing.toLowerCase() === cleaned.toLowerCase());\n        if (!exists) nextTags.push(cleaned);\n      });\n      if (nextTags.length !== tags.length) {\n        onChange && onChange(nextTags);\n      }\n      setDraft(pending);\n    } else {\n      setDraft(text);\n    }\n  }, [tags, cleanTag, onChange]);\n  const handleAdd = useCallback(() => {\n    const cleaned = cleanTag(draft);\n    if (!cleaned) {\n      setDraft('');\n      return;\n    }\n    const exists = tags.some(existing => existing.toLowerCase() === cleaned.toLowerCase());\n    if (exists) {\n      setDraft('');\n      return;\n    }\n    onChange && onChange([...tags, cleaned]);\n    setDraft('');\n  }, [draft, tags, cleanTag, onChange]);\n  const handleSubmit = useCallback(() => {\n    handleAdd();\n  }, [handleAdd]);\n  const handleRemove = useCallback(tag => {\n    const next = tags.filter(entry => entry !== tag);\n    onChange && onChange(next);\n  }, [tags, onChange]);\n  return _jsxDEV(View, {\n    children: [tags.length ? _jsxDEV(View, {\n      style: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        columnGap: spacing(1),\n        rowGap: spacing(1),\n        marginBottom: spacing(1)\n      },\n      children: tags.map(tag => _jsxDEV(TouchableOpacity, {\n        onPress: () => handleRemove(tag),\n        activeOpacity: 0.8,\n        style: {\n          flexDirection: 'row',\n          alignItems: 'center',\n          backgroundColor: '#d9f2ed',\n          borderRadius: 999,\n          paddingHorizontal: spacing(1.5),\n          paddingVertical: spacing(0.5)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.primaryStrong,\n            fontWeight: '600',\n            fontSize: typography.small\n          },\n          children: `#${tag}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 15\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.primaryStrong,\n            marginLeft: spacing(0.5),\n            fontSize: typography.small\n          },\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 15\n        }, this)]\n      }, tag, true, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 9\n    }, this) : null, _jsxDEV(View, {\n      style: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        columnGap: spacing(1)\n      },\n      children: [_jsxDEV(TextInput, {\n        value: draft,\n        onChangeText: handleChangeText,\n        onSubmitEditing: handleSubmit,\n        placeholder: placeholder,\n        placeholderTextColor: palette.muted,\n        style: [formInputBaseStyle, {\n          flex: 1,\n          marginBottom: 0\n        }],\n        autoCapitalize: \"none\",\n        autoCorrect: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 9\n      }, this), _jsxDEV(QuickAction, {\n        label: \"Add\",\n        onPress: handleAdd,\n        tone: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 372,\n    columnNumber: 5\n  }, this);\n}\nfunction SectionHeader({\n  title,\n  actionLabel,\n  onAction\n}) {\n  return _jsxDEV(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      marginBottom: spacing(1.5)\n    },\n    children: [_jsxDEV(Text, {\n      style: {\n        color: palette.text,\n        fontSize: typography.h2,\n        fontWeight: '700',\n        lineHeight: lineHeightFor(typography.h2)\n      },\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 7\n    }, this), actionLabel && onAction ? _jsxDEV(TouchableOpacity, {\n      onPress: onAction,\n      style: {\n        paddingHorizontal: spacing(1),\n        paddingVertical: spacing(0.5)\n      },\n      children: _jsxDEV(Text, {\n        style: {\n          color: palette.primary,\n          fontWeight: '600',\n          fontSize: typography.small,\n          lineHeight: lineHeightFor(typography.small)\n        },\n        children: actionLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 414,\n    columnNumber: 5\n  }, this);\n}\nfunction QuickAction({\n  label,\n  onPress,\n  tone = 'primary'\n}) {\n  const toneStyles = (() => {\n    switch (tone) {\n      case 'danger':\n        return {\n          borderColor: '#fecdd3',\n          backgroundColor: '#fee2e2',\n          textColor: palette.danger\n        };\n      case 'success':\n        return {\n          borderColor: '#bbf7d0',\n          backgroundColor: '#dcfce7',\n          textColor: palette.success\n        };\n      case 'warning':\n        return {\n          borderColor: '#fde68a',\n          backgroundColor: '#fef3c7',\n          textColor: palette.warning\n        };\n      case 'muted':\n        return {\n          borderColor: palette.border,\n          backgroundColor: palette.surface,\n          textColor: palette.muted\n        };\n      default:\n        return {\n          borderColor: palette.border,\n          backgroundColor: palette.surfaceMuted,\n          textColor: palette.primary\n        };\n    }\n  })();\n  return _jsxDEV(TouchableOpacity, {\n    onPress: onPress,\n    activeOpacity: 0.85,\n    style: {\n      borderRadius: 10,\n      paddingHorizontal: spacing(1.5),\n      paddingVertical: spacing(0.75),\n      borderWidth: 1,\n      borderColor: toneStyles.borderColor,\n      backgroundColor: toneStyles.backgroundColor\n    },\n    children: _jsxDEV(Text, {\n      style: {\n        color: toneStyles.textColor,\n        fontWeight: '600',\n        fontSize: typography.small,\n        lineHeight: lineHeightFor(typography.small)\n      },\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 441,\n    columnNumber: 5\n  }, this);\n}\nconst toInputDate = dateValue => {\n  const d = dateValue instanceof Date ? dateValue : new Date(dateValue);\n  if (Number.isNaN(d.getTime())) return '';\n  const yyyy = d.getFullYear();\n  const mm = String(d.getMonth() + 1).padStart(2, '0');\n  const dd = String(d.getDate()).padStart(2, '0');\n  return `${yyyy}-${mm}-${dd}`;\n};\nconst parseInputDate = value => {\n  if (!value) return null;\n  const parsed = new Date(value);\n  if (Number.isNaN(parsed.getTime())) return null;\n  return parsed;\n};\nconst deriveLeadTitle = lead => {\n  if (!lead) return 'Untitled lead';\n  const customerName = lead.Customer?.name;\n  if (customerName && customerName.trim()) return customerName.trim();\n  if (lead.description && lead.description.trim()) {\n    const firstLine = lead.description.trim().split('\\n')[0];\n    return firstLine.length > 60 ? `${firstLine.slice(0, 57)}...` : firstLine;\n  }\n  return `Lead ${lead.id}`;\n};\nfunction DateInputField({\n  value,\n  onChange,\n  placeholder = 'Select date',\n  minimumDate,\n  maximumDate,\n  style\n}) {\n  const [iosPickerVisible, setIosPickerVisible] = useState(false);\n  const isWeb = Platform.OS === 'web';\n  const toDateOnly = input => {\n    if (!input) return '';\n    if (input instanceof Date) return toInputDate(input);\n    if (typeof input === 'string') {\n      const [datePart] = input.split('T');\n      return datePart;\n    }\n    return '';\n  };\n  const normalizedValue = toDateOnly(value);\n  const minDateString = minimumDate ? toDateOnly(minimumDate) : undefined;\n  const maxDateString = maximumDate ? toDateOnly(maximumDate) : undefined;\n  const parsed = parseInputDate(normalizedValue) || new Date();\n  const displayLabel = value ? formatDate(value) || normalizedValue : '';\n  const applyDate = selectedDate => {\n    if (!selectedDate) return;\n    onChange(toInputDate(selectedDate));\n  };\n  const handleManualChange = text => {\n    if (!text) {\n      onChange('');\n      return;\n    }\n    onChange(text);\n  };\n  const openPicker = () => {\n    if (isWeb) return;\n    const baseDate = parseInputDate(normalizedValue) || new Date();\n    if (Platform.OS === 'android') {\n      DateTimePickerAndroid.open({\n        value: baseDate,\n        mode: 'date',\n        minimumDate: minimumDate ? parseInputDate(minimumDate) || undefined : undefined,\n        maximumDate: maximumDate ? parseInputDate(maximumDate) || undefined : undefined,\n        onChange: (event, selected) => {\n          if (event.type === 'set' && selected) applyDate(selected);\n        }\n      });\n    } else {\n      setIosPickerVisible(true);\n    }\n  };\n  const containerStyle = [{\n    marginBottom: spacing(1.5)\n  }, style];\n  if (isWeb) {\n    return _jsxDEV(View, {\n      style: containerStyle,\n      children: _jsxDEV(TextInput, {\n        value: normalizedValue,\n        placeholder: placeholder,\n        placeholderTextColor: palette.muted,\n        onChangeText: handleManualChange,\n        onChange: event => handleManualChange(event?.nativeEvent?.text ?? event?.target?.value ?? ''),\n        style: [formInputBaseStyle, {\n          marginBottom: 0\n        }],\n        type: \"date\",\n        min: minDateString,\n        max: maxDateString\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 7\n    }, this);\n  }\n  return _jsxDEV(View, {\n    style: containerStyle,\n    children: [_jsxDEV(TouchableOpacity, {\n      onPress: openPicker,\n      activeOpacity: 0.85,\n      style: {\n        borderWidth: 1,\n        borderColor: palette.border,\n        borderRadius: 12,\n        backgroundColor: palette.surfaceMuted,\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(1.5)\n      },\n      children: [_jsxDEV(Text, {\n        style: {\n          flex: 1,\n          color: displayLabel ? palette.text : palette.muted,\n          fontSize: typography.body\n        },\n        children: displayLabel || placeholder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: {\n          fontSize: typography.h2 - 6,\n          color: palette.muted\n        },\n        children: \"CAL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 7\n    }, this), Platform.OS === 'ios' && iosPickerVisible ? _jsxDEV(DateTimePicker, {\n      value: parsed,\n      mode: \"date\",\n      display: \"inline\",\n      onChange: (event, selected) => {\n        if (event.type === 'set' && selected) {\n          applyDate(selected);\n        }\n        if (event.type === 'dismissed') {\n          setIosPickerVisible(false);\n          return;\n        }\n        setIosPickerVisible(false);\n      },\n      style: {\n        marginTop: spacing(1)\n      },\n      minimumDate: minimumDate ? parseInputDate(minimumDate) || undefined : undefined,\n      maximumDate: maximumDate ? parseInputDate(maximumDate) || undefined : undefined\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 581,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 560,\n    columnNumber: 5\n  }, this);\n}\nconst TECH_ASSIGN_ROLES = ['TECH', 'SUPERVISOR', 'ESTIMATOR'];\nfunction TechSelector({\n  team = [],\n  value,\n  onSelect,\n  label,\n  allowAllRoles,\n  allowClear\n}) {\n  const options = useMemo(() => {\n    const normalized = team.map(member => Object.assign({}, member, {\n      role: normalizeRole(member.role)\n    }));\n    if (allowAllRoles) return normalized;\n    return normalized.filter(member => TECH_ASSIGN_ROLES.includes(member.role));\n  }, [team, allowAllRoles]);\n  if (!options.length) return null;\n  const renderLabel = label ? _jsxDEV(Text, {\n    style: {\n      color: palette.muted,\n      fontSize: typography.small,\n      marginBottom: spacing(1)\n    },\n    children: label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 619,\n    columnNumber: 5\n  }, this) : null;\n  return _jsxDEV(View, {\n    style: {\n      marginTop: spacing(1.5)\n    },\n    children: [renderLabel, _jsxDEV(View, {\n      style: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        columnGap: spacing(1),\n        rowGap: spacing(1)\n      },\n      children: [options.map(member => {\n        const selected = member.id === value;\n        const displayName = member.fullName || member.email;\n        const shortLabel = displayName.length > 22 ? `${displayName.slice(0, 21)}...` : displayName;\n        return _jsxDEV(QuickAction, {\n          label: shortLabel,\n          tone: selected ? 'primary' : 'muted',\n          onPress: () => onSelect(member.id)\n        }, member.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 13\n        }, this);\n      }), allowClear ? _jsxDEV(QuickAction, {\n        label: \"Clear\",\n        tone: \"muted\",\n        onPress: () => onSelect(null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 23\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 623,\n    columnNumber: 5\n  }, this);\n}\nfunction DashboardScreen({\n  navigation\n}) {\n  const {\n    token,\n    user\n  } = useAuth();\n  const [loading, setLoading] = useState(true);\n  const [refreshing, setRefreshing] = useState(false);\n  const [leads, setLeads] = useState([]);\n  const [jobs, setJobs] = useState([]);\n  const [tasks, setTasks] = useState([]);\n  const [invoiceSummary, setInvoiceSummary] = useState(null);\n  const [lastUpdated, setLastUpdated] = useState(null);\n  const isAdmin = (user?.role || '').toUpperCase() === 'ADMIN';\n  const jobLookup = useMemo(() => {\n    const map = {};\n    for (const job of jobs) {\n      if (job?.id != null) {\n        map[job.id] = job;\n      }\n    }\n    return map;\n  }, [jobs]);\n  const loadData = useCallback(async (isPullRefresh = false) => {\n    if (!token) return;\n    isPullRefresh ? setRefreshing(true) : setLoading(true);\n    const fetchLeads = async () => {\n      try {\n        const data = await api('/leads', 'GET', null, token);\n        setLeads(data);\n        db.transaction(tx => {\n          tx.executeSql && tx.executeSql('DELETE FROM leads_cache;');\n          data.forEach(l => tx.executeSql && tx.executeSql('INSERT OR REPLACE INTO leads_cache (id, description, status) VALUES (?,?,?)', [l.id, l.description || '', l.status || 'NEW']));\n        });\n        return data;\n      } catch (e) {\n        return await new Promise(resolve => {\n          db.transaction(tx => tx.executeSql && tx.executeSql('SELECT id, description, status FROM leads_cache', [], (_, {\n            rows\n          }) => {\n            const fallback = rows?._array || [];\n            setLeads(fallback);\n            resolve(fallback);\n          }));\n        });\n      }\n    };\n    const fetchJobs = async () => {\n      try {\n        const data = await api('/jobs', 'GET', null, token);\n        setJobs(data);\n        db.transaction(tx => {\n          tx.executeSql && tx.executeSql('DELETE FROM jobs_cache;');\n          data.forEach(j => tx.executeSql && tx.executeSql('INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)', [j.id, j.name || '', j.status || 'SCHEDULED', j.startDate || '', j.endDate || '', j.notes || '']));\n        });\n        return data;\n      } catch (e) {\n        return await new Promise(resolve => {\n          db.transaction(tx => tx.executeSql && tx.executeSql('SELECT id, name, status, startDate, endDate, notes FROM jobs_cache', [], (_, {\n            rows\n          }) => {\n            const fallback = rows?._array || [];\n            setJobs(fallback);\n            resolve(fallback);\n          }));\n        });\n      }\n    };\n    const fetchTasks = async () => {\n      try {\n        const data = await api('/tasks', 'GET', null, token);\n        setTasks(data);\n        db.transaction(tx => {\n          data.forEach(t => tx.executeSql && tx.executeSql('INSERT OR REPLACE INTO tasks_cache (id, jobId, title, status, dueDate) VALUES (?,?,?,?,?)', [t.id, t.jobId || null, t.title || '', t.status || 'TODO', t.dueDate || '']));\n        });\n        return data;\n      } catch (e) {\n        return await new Promise(resolve => {\n          db.transaction(tx => tx.executeSql && tx.executeSql('SELECT id, jobId, title, status, dueDate FROM tasks_cache ORDER BY id DESC', [], (_, {\n            rows\n          }) => {\n            const fallback = rows?._array || [];\n            setTasks(fallback);\n            resolve(fallback);\n          }));\n        });\n      }\n    };\n    const fetchInvoiceSummary = async () => {\n      try {\n        const data = await api('/invoices/summary', 'GET', null, token);\n        setInvoiceSummary(data);\n        return data;\n      } catch (e) {\n        return null;\n      }\n    };\n    try {\n      await Promise.all([fetchLeads(), fetchJobs(), fetchTasks(), fetchInvoiceSummary()]);\n      setLastUpdated(new Date());\n    } finally {\n      isPullRefresh ? setRefreshing(false) : setLoading(false);\n    }\n  }, [token]);\n  useFocusEffect(useCallback(() => {\n    loadData(false);\n  }, [loadData]));\n  const onRefresh = useCallback(() => loadData(true), [loadData]);\n  const newLeads = leads.filter(l => (l.status || '').toUpperCase() === 'NEW').length;\n  const activeJobs = jobs.filter(j => ['SCHEDULED', 'IN_PROGRESS'].includes((j.status || '').toUpperCase())).length;\n  const openTasks = tasks.filter(t => !isTaskCompleted(t.status)).length;\n  const outstandingValue = invoiceSummary?.outstanding || 0;\n  const collectedValue = invoiceSummary?.collected || 0;\n  const overdueCount = invoiceSummary?.overdueCount || 0;\n  const overdueTasks = useMemo(() => {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    return tasks.filter(task => {\n      if (!task?.dueDate || isTaskCompleted(task.status)) return false;\n      const due = new Date(task.dueDate);\n      if (Number.isNaN(due.getTime())) return false;\n      return due < today;\n    }).length;\n  }, [tasks]);\n  const statusCards = useMemo(() => [{\n    label: 'Active',\n    value: String(activeJobs),\n    description: 'Jobs in progress or scheduled',\n    tone: 'primary'\n  }, {\n    label: 'Pending',\n    value: formatCurrency(outstandingValue),\n    description: 'Unpaid invoices',\n    tone: 'warning'\n  }, {\n    label: 'Paid',\n    value: formatCurrency(collectedValue),\n    description: 'Collected to date',\n    tone: 'success'\n  }, {\n    label: 'Overdue',\n    value: String(overdueTasks),\n    description: `Tasks overdue; ${overdueCount} invoices late`,\n    tone: 'danger'\n  }], [activeJobs, outstandingValue, collectedValue, overdueTasks, overdueCount]);\n  const topLeads = leads.slice(0, 3);\n  const topJobs = jobs.slice(0, 3);\n  const nextTasks = tasks.filter(t => !isTaskCompleted(t.status)).slice(0, 3);\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(5)\n      },\n      refreshControl: _jsxDEV(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh,\n        tintColor: palette.primary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 839,\n        columnNumber: 25\n      }, this),\n      children: [_jsxDEV(Text, {\n        style: {\n          color: palette.text,\n          fontSize: typography.h1,\n          fontWeight: '700',\n          marginBottom: spacing(2),\n          lineHeight: lineHeightFor(typography.h1)\n        },\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 841,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          columnGap: spacing(1.5),\n          rowGap: spacing(1.5),\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(QuickAction, {\n          label: \"New job\",\n          onPress: () => navigation.navigate('Jobs', {\n            focus: 'create-job'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 844,\n          columnNumber: 11\n        }, this), _jsxDEV(QuickAction, {\n          label: \"New lead\",\n          onPress: () => navigation.navigate('NewLead')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 845,\n          columnNumber: 11\n        }, this), isAdmin ? _jsxDEV(QuickAction, {\n          label: \"Create invoice\",\n          tone: \"success\",\n          onPress: () => navigation.navigate('Invoices')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 846,\n          columnNumber: 22\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 843,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontSize: typography.small,\n            fontWeight: '600',\n            marginBottom: spacing(0.5),\n            lineHeight: lineHeightFor(typography.small)\n          },\n          children: \"Operations pulse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 850,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontSize: typography.body,\n            marginBottom: spacing(1.5),\n            lineHeight: lineHeightFor(typography.body)\n          },\n          children: \"Monitor workload, collections, and looming risks at a glance.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 853,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            columnGap: spacing(1.5),\n            rowGap: spacing(1.5)\n          },\n          children: statusCards.map(card => _jsxDEV(StatusCard, {\n            label: card.label,\n            value: card.value,\n            description: card.description,\n            tone: card.tone\n          }, card.label, false, {\n            fileName: _jsxFileName,\n            lineNumber: 858,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 856,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 849,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontSize: typography.small,\n            fontWeight: '600',\n            marginBottom: spacing(0.5),\n            lineHeight: lineHeightFor(typography.small)\n          },\n          children: \"Pipeline snapshot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 870,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontSize: typography.body,\n            marginBottom: spacing(1.5),\n            lineHeight: lineHeightFor(typography.body)\n          },\n          children: \"Stay ahead of demand by keeping leads, jobs, tasks, and invoices moving.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 873,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            columnGap: spacing(1.5),\n            rowGap: spacing(1.5)\n          },\n          children: [_jsxDEV(View, {\n            style: {\n              flexBasis: '48%',\n              minWidth: 160\n            },\n            children: _jsxDEV(SummaryCard, {\n              title: \"Leads\",\n              value: leads.length,\n              subtitle: `${newLeads} new to triage`,\n              tone: \"info\",\n              onPress: () => navigation.navigate('Leads')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 878,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 877,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: {\n              flexBasis: '48%',\n              minWidth: 160\n            },\n            children: _jsxDEV(SummaryCard, {\n              title: \"Jobs\",\n              value: jobs.length,\n              subtitle: `${activeJobs} active`,\n              tone: \"primary\",\n              onPress: () => navigation.navigate('Jobs')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 887,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 886,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: {\n              flexBasis: '48%',\n              minWidth: 160\n            },\n            children: _jsxDEV(SummaryCard, {\n              title: \"Tasks\",\n              value: openTasks,\n              subtitle: `${overdueTasks} overdue • ${tasks.length} total`,\n              tone: \"warning\",\n              onPress: () => navigation.navigate('Jobs')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 896,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 895,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: {\n              flexBasis: '48%',\n              minWidth: 160\n            },\n            children: _jsxDEV(SummaryCard, {\n              title: \"Invoices\",\n              value: formatCurrency(outstandingValue),\n              subtitle: `${overdueCount} overdue | ${formatCurrency(collectedValue)} collected`,\n              tone: \"success\",\n              onPress: () => navigation.navigate('Invoices')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 905,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 904,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 876,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 869,\n        columnNumber: 9\n      }, this), loading && !refreshing ? _jsxDEV(SurfaceCard, {\n        style: {\n          alignItems: 'center',\n          justifyContent: 'center',\n          paddingVertical: spacing(6)\n        },\n        children: [_jsxDEV(ActivityIndicator, {\n          color: palette.primary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 918,\n          columnNumber: 13\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(1.5)\n          },\n          children: \"Loading summary...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 919,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 917,\n        columnNumber: 11\n      }, this) : null, _jsxDEV(SectionHeader, {\n        title: \"Next Jobs\",\n        actionLabel: \"View all\",\n        onAction: () => navigation.navigate('Jobs')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 923,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: topJobs.length === 0 ? _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: \"No jobs yet. Create one from the Jobs tab.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 926,\n          columnNumber: 13\n        }, this) : topJobs.map((job, idx) => {\n          const startLabel = job.startDate ? `Start ${formatDate(job.startDate)}` : null;\n          const endLabel = job.endDate ? `Due ${formatDate(job.endDate)}` : null;\n          return _jsxDEV(View, {\n            style: {\n              marginBottom: idx === topJobs.length - 1 ? 0 : spacing(2.5)\n            },\n            children: [_jsxDEV(View, {\n              style: {\n                flexDirection: 'row',\n                justifyContent: 'space-between',\n                alignItems: 'center'\n              },\n              children: [_jsxDEV(Text, {\n                style: {\n                  color: palette.text,\n                  fontSize: typography.h2,\n                  fontWeight: '600'\n                },\n                children: job.name || `Job #${job.id}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 934,\n                columnNumber: 21\n              }, this), _jsxDEV(StatusPill, {\n                status: job.status || 'SCHEDULED'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 935,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 933,\n              columnNumber: 19\n            }, this), startLabel || endLabel ? _jsxDEV(Text, {\n              style: {\n                color: palette.muted,\n                marginTop: spacing(0.5)\n              },\n              children: [startLabel, endLabel].filter(Boolean).join(' - ')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 938,\n              columnNumber: 21\n            }, this) : null, job.notes ? _jsxDEV(Text, {\n              style: {\n                color: palette.muted,\n                marginTop: spacing(1)\n              },\n              numberOfLines: 2,\n              children: job.notes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 943,\n              columnNumber: 21\n            }, this) : null, _jsxDEV(View, {\n              style: {\n                flexDirection: 'row',\n                columnGap: spacing(1.5),\n                marginTop: spacing(1.5)\n              },\n              children: [_jsxDEV(QuickAction, {\n                label: \"Open job\",\n                onPress: () => navigation.navigate('JobDetail', {\n                  jobId: job.id\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 946,\n                columnNumber: 21\n              }, this), _jsxDEV(QuickAction, {\n                label: \"Tasks\",\n                onPress: () => navigation.navigate('JobDetail', {\n                  jobId: job.id,\n                  tab: 'tasks'\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 947,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 945,\n              columnNumber: 19\n            }, this)]\n          }, job.id || idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 932,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 924,\n        columnNumber: 9\n      }, this), _jsxDEV(SectionHeader, {\n        title: \"Hot Leads\",\n        actionLabel: \"Leads\",\n        onAction: () => navigation.navigate('Leads')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 955,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: topLeads.length === 0 ? _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: \"No leads yet. Capture leads to keep the funnel full.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 958,\n          columnNumber: 13\n        }, this) : topLeads.map((lead, idx) => _jsxDEV(View, {\n          style: {\n            marginBottom: idx === topLeads.length - 1 ? 0 : spacing(2)\n          },\n          children: [_jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center'\n            },\n            children: [_jsxDEV(Text, {\n              style: {\n                color: palette.text,\n                fontWeight: '600',\n                fontSize: typography.h2\n              },\n              children: deriveLeadTitle(lead)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 963,\n              columnNumber: 17\n            }, this), _jsxDEV(StatusPill, {\n              status: lead.status || 'NEW'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 964,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 962,\n            columnNumber: 15\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.5)\n            },\n            numberOfLines: 3,\n            children: lead.description || 'No scope captured yet.'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 966,\n            columnNumber: 15\n          }, this), _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              columnGap: spacing(1.5),\n              marginTop: spacing(1.5)\n            },\n            children: [_jsxDEV(QuickAction, {\n              label: \"Follow up\",\n              onPress: () => navigation.navigate('EstimateEditor', {\n                leadId: lead.id\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 970,\n              columnNumber: 19\n            }, this), _jsxDEV(QuickAction, {\n              label: \"Convert\",\n              onPress: () => navigation.navigate('Jobs')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 971,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 969,\n            columnNumber: 17\n          }, this)]\n        }, lead.id || idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 961,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 956,\n        columnNumber: 9\n      }, this), _jsxDEV(SectionHeader, {\n        title: \"Open Tasks\",\n        actionLabel: \"Jobs\",\n        onAction: () => navigation.navigate('Jobs')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 978,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        children: nextTasks.length === 0 ? _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: \"All clear. Add tasks from a job to keep crews aligned.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 981,\n          columnNumber: 13\n        }, this) : nextTasks.map((task, idx) => _jsxDEV(View, {\n          style: {\n            marginBottom: idx === nextTasks.length - 1 ? 0 : spacing(2)\n          },\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.text,\n              fontWeight: '600'\n            },\n            children: task.title || 'Task'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 985,\n            columnNumber: 17\n          }, this), task.jobId ? _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.25)\n            },\n            children: jobLookup[task.jobId]?.name || `Job #${task.jobId}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 987,\n            columnNumber: 19\n          }, this) : _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.25)\n            },\n            children: \"Unassigned job\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 991,\n            columnNumber: 19\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.5)\n            },\n            children: task.dueDate ? `Due ${formatDate(task.dueDate)}` : 'No due date'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 993,\n            columnNumber: 17\n          }, this), _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              columnGap: spacing(1.5),\n              marginTop: spacing(1.5)\n            },\n            children: [_jsxDEV(QuickAction, {\n              label: \"Mark done\",\n              onPress: () => navigation.navigate('JobDetail', {\n                jobId: task.jobId\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 997,\n              columnNumber: 19\n            }, this), _jsxDEV(QuickAction, {\n              label: \"View job\",\n              onPress: () => navigation.navigate('JobDetail', {\n                jobId: task.jobId\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1001,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 996,\n            columnNumber: 17\n          }, this)]\n        }, task.id || idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 984,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 979,\n        columnNumber: 9\n      }, this), lastUpdated ? _jsxDEV(Text, {\n        style: {\n          color: palette.muted,\n          fontSize: typography.small,\n          marginTop: spacing(2),\n          textAlign: 'center'\n        },\n        children: [\"Updated \", lastUpdated.toLocaleTimeString([], {\n          hour: 'numeric',\n          minute: '2-digit'\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1012,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 837,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 836,\n    columnNumber: 5\n  }, this);\n}\nfunction SignaturePad({\n  onCapturePng\n}) {\n  const [points, setPoints] = useState([]);\n  const [path, setPath] = useState('');\n  const shotRef = useRef(null);\n  return _jsxDEV(ViewShot, {\n    ref: shotRef,\n    options: {\n      format: 'png',\n      quality: 0.9,\n      result: 'base64'\n    },\n    style: {\n      height: 220,\n      borderWidth: 1,\n      backgroundColor: '#fff'\n    },\n    children: _jsxDEV(View, {\n      onStartShouldSetResponder: () => true,\n      onResponderMove: e => {\n        const x = e.nativeEvent.locationX,\n          y = e.nativeEvent.locationY;\n        setPath(p => p + (p ? ` L ${x} ${y}` : ` M ${x} ${y}`));\n      },\n      onResponderRelease: async () => {\n        const base64 = await shotRef.current.capture();\n        onCapturePng && onCapturePng('data:image/png;base64,' + base64);\n      },\n      style: {\n        flex: 1\n      },\n      children: _jsxDEV(Svg, {\n        height: \"100%\",\n        width: \"100%\",\n        children: _jsxDEV(Path, {\n          d: path,\n          stroke: \"black\",\n          strokeWidth: \"2\",\n          fill: \"none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1040,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1040,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1028,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1027,\n    columnNumber: 5\n  }, this);\n}\nfunction SignatureScreen({\n  route,\n  navigation\n}) {\n  const {\n    token\n  } = useAuth();\n  const {\n    estimateId\n  } = route.params;\n  const [sigPng, setSigPng] = useState(null);\n  const save = async () => {\n    if (!sigPng) {\n      Alert.alert('Please sign first');\n      return;\n    }\n    const resp = await api(`/estimates/${estimateId}/approve`, 'POST', {\n      signaturePngUrl: sigPng\n    }, token);\n    Alert.alert('Approved', `Payment link:\n${resp && resp.paymentLink ? resp.paymentLink : 'Unavailable'}`);\n    navigation.goBack();\n  };\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      padding: 16\n    },\n    children: [_jsxDEV(Text, {\n      style: {\n        fontSize: 18,\n        marginBottom: 8\n      },\n      children: [\"Sign Estimate #\", estimateId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1058,\n      columnNumber: 7\n    }, this), _jsxDEV(SignaturePad, {\n      onCapturePng: setSigPng\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1059,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: {\n        height: 12\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1060,\n      columnNumber: 7\n    }, this), _jsxDEV(Button, {\n      title: \"Save Signature\",\n      onPress: save\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1061,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1057,\n    columnNumber: 5\n  }, this);\n}\nconst userRoleOptions = [{\n  label: 'Admin',\n  value: 'ADMIN'\n}, {\n  label: 'Estimator',\n  value: 'ESTIMATOR'\n}, {\n  label: 'Supervisor',\n  value: 'SUPERVISOR'\n}, {\n  label: 'Tech',\n  value: 'TECH'\n}];\nconst invoiceStatusOptions = [{\n  value: 'DRAFT',\n  label: 'Draft'\n}, {\n  value: 'SENT',\n  label: 'Sent'\n}, {\n  value: 'PART_PAID',\n  label: 'Part paid'\n}, {\n  value: 'PAID',\n  label: 'Paid'\n}, {\n  value: 'VOID',\n  label: 'Void'\n}];\nfunction UsersAdminScreen() {\n  const {\n    token\n  } = useAuth();\n  const [users, setUsers] = useState([]);\n  const [email, setEmail] = useState('');\n  const [fullName, setFullName] = useState('');\n  const [role, setRole] = useState('TECH');\n  const [inviting, setInviting] = useState(false);\n  const [refreshing, setRefreshing] = useState(false);\n  const load = useCallback(async () => {\n    try {\n      const response = await api('/users', 'GET', null, token);\n      setUsers(Array.isArray(response) ? response : []);\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to load users.');\n    }\n  }, [token]);\n  useEffect(() => {\n    load();\n  }, [load]);\n  const resetForm = () => {\n    setEmail('');\n    setFullName('');\n    setRole('TECH');\n  };\n  const invite = async () => {\n    const trimmedEmail = email.trim().toLowerCase();\n    const trimmedName = fullName.trim();\n    if (!trimmedEmail) {\n      Alert.alert('Missing email', 'Enter an email address to invite a user.');\n      return;\n    }\n    try {\n      setInviting(true);\n      await api('/users', 'POST', {\n        email: trimmedEmail,\n        fullName: trimmedName || undefined,\n        role: normalizeRole(role)\n      }, token);\n      resetForm();\n      await load();\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to send invite.');\n    } finally {\n      setInviting(false);\n    }\n  };\n  const promote = async (id, newRole) => {\n    try {\n      await api(`/users/${id}`, 'PATCH', {\n        role: normalizeRole(newRole)\n      }, token);\n      await load();\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to update role.');\n    }\n  };\n  const remove = id => {\n    Alert.alert('Remove user', 'Are you sure you want to remove this person?', [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Remove',\n      style: 'destructive',\n      onPress: async () => {\n        try {\n          await api(`/users/${id}`, 'DELETE', null, token);\n          await load();\n        } catch (e) {\n          Alert.alert('Error', e.message || 'Unable to delete user.');\n        }\n      }\n    }]);\n  };\n  const onRefresh = useCallback(async () => {\n    setRefreshing(true);\n    try {\n      await load();\n    } finally {\n      setRefreshing(false);\n    }\n  }, [load]);\n  const renderRolePill = value => {\n    const roleCfg = userRoleOptions.find(option => option.value === normalizeRole(value));\n    const label = roleCfg ? roleCfg.label : normalizeRole(value);\n    return _jsxDEV(View, {\n      style: {\n        backgroundColor: '#e0f3f0',\n        paddingHorizontal: spacing(1.5),\n        paddingVertical: spacing(0.5),\n        borderRadius: 999\n      },\n      children: _jsxDEV(Text, {\n        style: {\n          color: palette.primaryStrong,\n          fontWeight: '600',\n          fontSize: typography.small\n        },\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1168,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1167,\n      columnNumber: 7\n    }, this);\n  };\n  const renderRoleSelector = (selectedRole, onSelect) => _jsxDEV(View, {\n    style: {\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      columnGap: spacing(1),\n      rowGap: spacing(1)\n    },\n    children: userRoleOptions.map(option => {\n      const selected = selectedRole === option.value;\n      return _jsxDEV(TouchableOpacity, {\n        onPress: () => onSelect(option.value),\n        activeOpacity: 0.85,\n        style: {\n          paddingHorizontal: spacing(2),\n          paddingVertical: spacing(1),\n          borderRadius: 999,\n          borderWidth: 1,\n          borderColor: selected ? palette.primary : palette.border,\n          backgroundColor: selected ? '#d9f2ed' : palette.surface\n        },\n        children: _jsxDEV(Text, {\n          style: {\n            color: selected ? palette.primaryStrong : palette.muted,\n            fontWeight: '600',\n            fontSize: typography.small\n          },\n          children: option.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1191,\n          columnNumber: 13\n        }, this)\n      }, option.value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1178,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1174,\n    columnNumber: 5\n  }, this);\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(FlatList, {\n      data: users,\n      keyExtractor: u => String(u.id),\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(6)\n      },\n      refreshControl: _jsxDEV(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh,\n        tintColor: palette.primary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1206,\n        columnNumber: 25\n      }, this),\n      ListHeaderComponent: _jsxDEV(View, {\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontSize: typography.h1,\n            fontWeight: '700',\n            marginBottom: spacing(2)\n          },\n          children: \"Team management\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1209,\n          columnNumber: 13\n        }, this), _jsxDEV(SurfaceCard, {\n          style: {\n            padding: spacing(2.5),\n            marginBottom: spacing(3)\n          },\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.text,\n              fontSize: typography.h2,\n              fontWeight: '700'\n            },\n            children: \"Invite teammate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1211,\n            columnNumber: 15\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.5),\n              marginBottom: spacing(2)\n            },\n            children: \"Send an invite email and choose what they can access.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1212,\n            columnNumber: 15\n          }, this), _jsxDEV(FormInput, {\n            placeholder: \"Full name (optional)\",\n            value: fullName,\n            onChangeText: setFullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1215,\n            columnNumber: 15\n          }, this), _jsxDEV(FormInput, {\n            placeholder: \"Work email\",\n            autoCapitalize: \"none\",\n            keyboardType: \"email-address\",\n            value: email,\n            onChangeText: setEmail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1220,\n            columnNumber: 15\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              fontWeight: '600',\n              fontSize: typography.small,\n              textTransform: 'uppercase',\n              marginBottom: spacing(1)\n            },\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1227,\n            columnNumber: 15\n          }, this), renderRoleSelector(role, setRole), _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              marginTop: spacing(2)\n            },\n            children: [_jsxDEV(QuickAction, {\n              label: \"Clear\",\n              tone: \"muted\",\n              onPress: resetForm\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1230,\n              columnNumber: 17\n            }, this), _jsxDEV(TouchableOpacity, {\n              onPress: invite,\n              activeOpacity: 0.85,\n              disabled: inviting,\n              style: {\n                backgroundColor: palette.primary,\n                paddingHorizontal: spacing(2.5),\n                paddingVertical: spacing(1.5),\n                borderRadius: 12,\n                opacity: inviting ? 0.6 : 1\n              },\n              children: _jsxDEV(Text, {\n                style: {\n                  color: '#fff',\n                  fontWeight: '700'\n                },\n                children: inviting ? 'Sending...' : 'Send invite'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1243,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1231,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1229,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1210,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1208,\n        columnNumber: 11\n      }, this),\n      ListEmptyComponent: _jsxDEV(SurfaceCard, {\n        children: _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: \"Invite your first teammate to collaborate on jobs.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1251,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1250,\n        columnNumber: 11\n      }, this),\n      renderItem: ({\n        item\n      }) => {\n        const normalizedRole = normalizeRole(item.role);\n        return _jsxDEV(SurfaceCard, {\n          style: {\n            marginBottom: spacing(2),\n            padding: spacing(2.5)\n          },\n          children: [_jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              marginBottom: spacing(1.5)\n            },\n            children: [_jsxDEV(View, {\n              children: [_jsxDEV(Text, {\n                style: {\n                  color: palette.text,\n                  fontSize: typography.h2,\n                  fontWeight: '600'\n                },\n                children: item.fullName || item.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1260,\n                columnNumber: 19\n              }, this), _jsxDEV(Text, {\n                style: {\n                  color: palette.muted,\n                  marginTop: spacing(0.5)\n                },\n                children: item.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1261,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1259,\n              columnNumber: 17\n            }, this), renderRolePill(normalizedRole)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1258,\n            columnNumber: 15\n          }, this), _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              flexWrap: 'wrap',\n              columnGap: spacing(1),\n              rowGap: spacing(1)\n            },\n            children: [userRoleOptions.map(option => {\n              const selected = normalizedRole === option.value;\n              return _jsxDEV(TouchableOpacity, {\n                onPress: () => promote(item.id, option.value),\n                disabled: selected,\n                activeOpacity: 0.85,\n                style: {\n                  paddingHorizontal: spacing(1.75),\n                  paddingVertical: spacing(0.75),\n                  borderRadius: 999,\n                  borderWidth: 1,\n                  borderColor: selected ? palette.primary : palette.border,\n                  backgroundColor: selected ? '#d9f2ed' : palette.surface,\n                  opacity: selected ? 0.7 : 1\n                },\n                children: _jsxDEV(Text, {\n                  style: {\n                    color: selected ? palette.primaryStrong : palette.muted,\n                    fontWeight: '600',\n                    fontSize: typography.small\n                  },\n                  children: option.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1284,\n                  columnNumber: 23\n                }, this)\n              }, option.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1269,\n                columnNumber: 21\n              }, this);\n            }), _jsxDEV(TouchableOpacity, {\n              onPress: () => remove(item.id),\n              activeOpacity: 0.85,\n              style: {\n                paddingHorizontal: spacing(1.75),\n                paddingVertical: spacing(0.75),\n                borderRadius: 999,\n                borderWidth: 1,\n                borderColor: '#fecdd3',\n                backgroundColor: '#fee2e2'\n              },\n              children: _jsxDEV(Text, {\n                style: {\n                  color: palette.danger,\n                  fontWeight: '600',\n                  fontSize: typography.small\n                },\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1302,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1290,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1265,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1257,\n          columnNumber: 13\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1202,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1201,\n    columnNumber: 5\n  }, this);\n}\nfunction InvoicesScreen({\n  navigation\n}) {\n  const {\n    token,\n    user\n  } = useAuth();\n  const [loading, setLoading] = useState(true);\n  const [refreshing, setRefreshing] = useState(false);\n  const [summary, setSummary] = useState(null);\n  const [invoices, setInvoices] = useState([]);\n  const [filter, setFilter] = useState('ALL');\n  const [newInvoiceJobId, setNewInvoiceJobId] = useState('');\n  const [newInvoiceAmount, setNewInvoiceAmount] = useState('');\n  const [newInvoiceIssuedAt, setNewInvoiceIssuedAt] = useState('');\n  const [newInvoiceDueAt, setNewInvoiceDueAt] = useState('');\n  const [newInvoiceStatus, setNewInvoiceStatus] = useState('DRAFT');\n  const [creatingInvoice, setCreatingInvoice] = useState(false);\n  const load = useCallback(async (isRefresh = false) => {\n    if (!token) return;\n    isRefresh ? setRefreshing(true) : setLoading(true);\n    try {\n      const [summaryData, list] = await Promise.all([api('/invoices/summary', 'GET', null, token), api('/invoices', 'GET', null, token)]);\n      setSummary(summaryData);\n      setInvoices(list);\n    } catch (e) {} finally {\n      isRefresh ? setRefreshing(false) : setLoading(false);\n    }\n  }, [token]);\n  useFocusEffect(useCallback(() => {\n    if (user?.role === 'ADMIN') {\n      load(false);\n    }\n  }, [load, user?.role]));\n  const onRefresh = useCallback(() => load(true), [load]);\n  const nextInvoiceNumber = useMemo(() => {\n    if (!Array.isArray(invoices) || invoices.length === 0) {\n      return 'INV-0001';\n    }\n    const maxNumber = invoices.reduce((acc, inv) => {\n      const match = String(inv.number || '').match(/(\\d+)$/);\n      if (match) {\n        return Math.max(acc, parseInt(match[1], 10));\n      }\n      if (inv.id) {\n        return Math.max(acc, Number(inv.id));\n      }\n      return acc;\n    }, 0);\n    const next = maxNumber + 1;\n    return `INV-${String(next).padStart(4, '0')}`;\n  }, [invoices]);\n  const resetInvoiceForm = useCallback(() => {\n    setNewInvoiceJobId('');\n    setNewInvoiceAmount('');\n    setNewInvoiceIssuedAt('');\n    setNewInvoiceDueAt('');\n    setNewInvoiceStatus('DRAFT');\n  }, []);\n  const createInvoice = useCallback(async () => {\n    const amountValue = parseFloat(newInvoiceAmount);\n    if (Number.isNaN(amountValue) || amountValue <= 0) {\n      Alert.alert('Missing amount', 'Enter a valid invoice amount.');\n      return;\n    }\n    const jobIdTrimmed = newInvoiceJobId.trim();\n    const jobIdValue = jobIdTrimmed ? parseInt(jobIdTrimmed, 10) : null;\n    if (jobIdTrimmed && Number.isNaN(jobIdValue)) {\n      Alert.alert('Invalid job', 'Job ID must be a number.');\n      return;\n    }\n    const payload = {\n      amount: amountValue,\n      status: newInvoiceStatus,\n      number: nextInvoiceNumber || undefined,\n      jobId: jobIdValue || undefined,\n      issuedAt: newInvoiceIssuedAt || null,\n      dueAt: newInvoiceDueAt || null\n    };\n    try {\n      setCreatingInvoice(true);\n      const created = await api('/invoices', 'POST', payload, token);\n      resetInvoiceForm();\n      await load(false);\n      Alert.alert('Invoice created', `${created?.number || payload.number || 'Invoice'} saved.`);\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to create invoice.');\n    } finally {\n      setCreatingInvoice(false);\n    }\n  }, [newInvoiceAmount, newInvoiceStatus, newInvoiceJobId, newInvoiceIssuedAt, newInvoiceDueAt, token, load, resetInvoiceForm, nextInvoiceNumber]);\n  const deleteInvoice = useCallback(invoice => {\n    Alert.alert('Delete invoice', `Delete invoice #${invoice.number || invoice.id}?`, [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Delete',\n      style: 'destructive',\n      onPress: async () => {\n        try {\n          await api(`/invoices/${invoice.id}`, 'DELETE', null, token);\n          await load(false);\n        } catch (e) {\n          Alert.alert('Error', e.message || 'Unable to delete invoice.');\n        }\n      }\n    }]);\n  }, [token, load]);\n  if (user?.role !== 'ADMIN') {\n    return _jsxDEV(SafeAreaView, {\n      style: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: palette.background\n      },\n      children: _jsxDEV(Text, {\n        style: {\n          color: palette.muted\n        },\n        children: \"Invoices are only available to admin users.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1442,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1441,\n      columnNumber: 7\n    }, this);\n  }\n  const filters = [{\n    key: 'ALL',\n    label: 'All'\n  }, {\n    key: 'OUTSTANDING',\n    label: 'Outstanding'\n  }, {\n    key: 'PAID',\n    label: 'Paid'\n  }];\n  const filteredInvoices = invoices.filter(inv => {\n    if (filter === 'ALL') return true;\n    const status = (inv.status || 'DRAFT').toUpperCase();\n    if (filter === 'PAID') return status === 'PAID';\n    return !['PAID', 'VOID'].includes(status);\n  });\n  const outstanding = formatCurrency(summary?.outstanding || 0);\n  const collected = formatCurrency(summary?.collected || 0);\n  const drafts = formatCurrency(summary?.draftAmount || 0);\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(6)\n      },\n      refreshControl: _jsxDEV(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh,\n        tintColor: palette.primary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1468,\n        columnNumber: 25\n      }, this),\n      children: [_jsxDEV(Text, {\n        style: {\n          color: palette.text,\n          fontSize: typography.h1,\n          fontWeight: '700',\n          marginBottom: spacing(2)\n        },\n        children: \"Invoices\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1470,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: {\n          color: palette.muted,\n          marginBottom: spacing(2)\n        },\n        children: \"Track billing health and spot overdue balances.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1471,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          padding: spacing(2.5),\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontSize: typography.h2,\n            fontWeight: '700'\n          },\n          children: \"Create invoice\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1473,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(0.5),\n            marginBottom: spacing(2)\n          },\n          children: \"Capture billing details and keep your accounts current.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1474,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            marginBottom: spacing(1.5)\n          },\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              fontSize: typography.small,\n              fontWeight: '700',\n              textTransform: 'uppercase'\n            },\n            children: \"Invoice number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1478,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.text,\n              fontSize: typography.h2,\n              fontWeight: '700',\n              marginTop: spacing(0.5)\n            },\n            children: nextInvoiceNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1479,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1477,\n          columnNumber: 11\n        }, this), _jsxDEV(FormInput, {\n          placeholder: \"Job ID (optional)\",\n          value: newInvoiceJobId,\n          onChangeText: setNewInvoiceJobId,\n          keyboardType: \"number-pad\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1481,\n          columnNumber: 11\n        }, this), _jsxDEV(FormInput, {\n          placeholder: \"Amount $\",\n          value: newInvoiceAmount,\n          onChangeText: setNewInvoiceAmount,\n          keyboardType: \"decimal-pad\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1487,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            columnGap: spacing(1.5)\n          },\n          children: [_jsxDEV(View, {\n            style: {\n              flex: 1\n            },\n            children: _jsxDEV(DateInputField, {\n              value: newInvoiceIssuedAt,\n              onChange: setNewInvoiceIssuedAt,\n              placeholder: \"Issued date\",\n              style: {\n                marginBottom: 0\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1495,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1494,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: {\n              flex: 1\n            },\n            children: _jsxDEV(DateInputField, {\n              value: newInvoiceDueAt,\n              onChange: setNewInvoiceDueAt,\n              placeholder: \"Due date (optional)\",\n              style: {\n                marginBottom: 0\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1498,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1497,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1493,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontSize: typography.small,\n            fontWeight: '700',\n            textTransform: 'uppercase',\n            marginTop: spacing(2),\n            marginBottom: spacing(1)\n          },\n          children: \"Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1501,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            columnGap: spacing(1),\n            rowGap: spacing(1)\n          },\n          children: invoiceStatusOptions.map(option => {\n            const selected = option.value === newInvoiceStatus;\n            return _jsxDEV(TouchableOpacity, {\n              onPress: () => setNewInvoiceStatus(option.value),\n              activeOpacity: 0.85,\n              style: {\n                paddingHorizontal: spacing(2),\n                paddingVertical: spacing(1),\n                borderRadius: 999,\n                borderWidth: 1,\n                borderColor: selected ? palette.primary : palette.border,\n                backgroundColor: selected ? '#d9f2ed' : palette.surface\n              },\n              children: _jsxDEV(Text, {\n                style: {\n                  color: selected ? palette.primaryStrong : palette.muted,\n                  fontWeight: '600',\n                  fontSize: typography.small\n                },\n                children: option.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1519,\n                columnNumber: 19\n              }, this)\n            }, option.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1506,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1502,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginTop: spacing(2)\n          },\n          children: [_jsxDEV(QuickAction, {\n            label: \"Reset\",\n            tone: \"muted\",\n            onPress: resetInvoiceForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1527,\n            columnNumber: 13\n          }, this), _jsxDEV(TouchableOpacity, {\n            onPress: createInvoice,\n            activeOpacity: 0.85,\n            disabled: creatingInvoice,\n            style: {\n              backgroundColor: palette.primary,\n              paddingHorizontal: spacing(2.5),\n              paddingVertical: spacing(1.5),\n              borderRadius: 12,\n              opacity: creatingInvoice ? 0.6 : 1\n            },\n            children: _jsxDEV(Text, {\n              style: {\n                color: '#fff',\n                fontWeight: '700'\n              },\n              children: creatingInvoice ? 'Saving...' : 'Create invoice'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1540,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1528,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1526,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1472,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          columnGap: spacing(2),\n          rowGap: spacing(2),\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(View, {\n          style: {\n            flexBasis: '48%',\n            minWidth: 160\n          },\n          children: _jsxDEV(SummaryCard, {\n            title: \"Outstanding\",\n            value: outstanding,\n            subtitle: `${summary?.overdueCount || 0} overdue`,\n            tone: \"warning\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1547,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1546,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexBasis: '48%',\n            minWidth: 160\n          },\n          children: _jsxDEV(SummaryCard, {\n            title: \"Collected\",\n            value: collected,\n            subtitle: \"All payments to date\",\n            tone: \"success\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1550,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1549,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexBasis: '48%',\n            minWidth: 160\n          },\n          children: _jsxDEV(SummaryCard, {\n            title: \"Drafts\",\n            value: drafts,\n            subtitle: `${summary?.totalCount || 0} total invoices`,\n            tone: \"info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1553,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1552,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1545,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          columnGap: spacing(1),\n          rowGap: spacing(1),\n          marginBottom: spacing(2)\n        },\n        children: filters.map(f => {\n          const selected = f.key === filter;\n          return _jsxDEV(TouchableOpacity, {\n            onPress: () => setFilter(f.key),\n            activeOpacity: 0.85,\n            style: {\n              paddingHorizontal: spacing(2),\n              paddingVertical: spacing(1),\n              borderRadius: 999,\n              borderWidth: 1,\n              borderColor: selected ? palette.primary : palette.border,\n              backgroundColor: selected ? '#d9f2ed' : palette.surface\n            },\n            children: _jsxDEV(Text, {\n              style: {\n                color: selected ? palette.primaryStrong : palette.muted,\n                fontWeight: '600',\n                fontSize: typography.small\n              },\n              children: f.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1574,\n              columnNumber: 17\n            }, this)\n          }, f.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1561,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1557,\n        columnNumber: 9\n      }, this), loading ? _jsxDEV(SurfaceCard, {\n        style: {\n          alignItems: 'center',\n          paddingVertical: spacing(6)\n        },\n        children: [_jsxDEV(ActivityIndicator, {\n          color: palette.primary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1582,\n          columnNumber: 13\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(1.5)\n          },\n          children: \"Loading invoices...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1583,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1581,\n        columnNumber: 11\n      }, this) : filteredInvoices.length === 0 ? _jsxDEV(SurfaceCard, {\n        children: _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: \"No invoices match this filter.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1587,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1586,\n        columnNumber: 11\n      }, this) : filteredInvoices.map(inv => {\n        const payments = (inv.Payments || []).reduce((sum, p) => sum + Number(p.amount || 0), 0);\n        const amount = Number(inv.amount || 0);\n        const balance = Math.max(amount - payments, 0);\n        const statusKey = (inv.status || 'DRAFT').toUpperCase();\n        return _jsxDEV(SurfaceCard, {\n          children: [_jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center'\n            },\n            children: [_jsxDEV(View, {\n              children: [_jsxDEV(Text, {\n                style: {\n                  color: palette.text,\n                  fontSize: typography.h2,\n                  fontWeight: '600'\n                },\n                children: [\"Invoice #\", inv.number || inv.id]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1599,\n                columnNumber: 21\n              }, this), _jsxDEV(Text, {\n                style: {\n                  color: palette.muted,\n                  marginTop: spacing(0.5)\n                },\n                children: [\"Issued \", inv.issuedAt ? formatDate(inv.issuedAt) : 'TBD']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1600,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1598,\n              columnNumber: 19\n            }, this), _jsxDEV(StatusPill, {\n              status: statusKey\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1602,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1597,\n            columnNumber: 17\n          }, this), _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              marginTop: spacing(1.5)\n            },\n            children: [_jsxDEV(View, {\n              children: [_jsxDEV(Text, {\n                style: {\n                  color: palette.muted,\n                  fontSize: typography.small\n                },\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1606,\n                columnNumber: 21\n              }, this), _jsxDEV(Text, {\n                style: {\n                  color: palette.text,\n                  fontWeight: '600'\n                },\n                children: formatCurrency(amount)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1607,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1605,\n              columnNumber: 19\n            }, this), _jsxDEV(View, {\n              children: [_jsxDEV(Text, {\n                style: {\n                  color: palette.muted,\n                  fontSize: typography.small\n                },\n                children: \"Collected\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1610,\n                columnNumber: 21\n              }, this), _jsxDEV(Text, {\n                style: {\n                  color: palette.text\n                },\n                children: formatCurrency(payments)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1611,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1609,\n              columnNumber: 19\n            }, this), _jsxDEV(View, {\n              children: [_jsxDEV(Text, {\n                style: {\n                  color: palette.muted,\n                  fontSize: typography.small\n                },\n                children: \"Balance\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1614,\n                columnNumber: 21\n              }, this), _jsxDEV(Text, {\n                style: {\n                  color: balance > 0 ? palette.primaryStrong : palette.muted,\n                  fontWeight: '600'\n                },\n                children: formatCurrency(balance)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1615,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1613,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1604,\n            columnNumber: 17\n          }, this), inv.dueAt ? _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(1)\n            },\n            children: [\"Due \", formatDate(inv.dueAt)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1619,\n            columnNumber: 19\n          }, this) : null, _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              flexWrap: 'wrap',\n              columnGap: spacing(1),\n              rowGap: spacing(1),\n              marginTop: spacing(2)\n            },\n            children: [inv.jobId ? _jsxDEV(QuickAction, {\n              label: \"View job\",\n              onPress: () => navigation.navigate('JobDetail', {\n                jobId: inv.jobId\n              }),\n              tone: \"muted\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1622,\n              columnNumber: 32\n            }, this) : null, _jsxDEV(QuickAction, {\n              label: \"Record payment\",\n              tone: \"success\",\n              onPress: () => Alert.alert('Coming soon', 'Payment logging will land shortly.')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1623,\n              columnNumber: 19\n            }, this), _jsxDEV(QuickAction, {\n              label: \"Delete\",\n              tone: \"danger\",\n              onPress: () => deleteInvoice(inv)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1624,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1621,\n            columnNumber: 17\n          }, this)]\n        }, inv.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1596,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1466,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1465,\n    columnNumber: 5\n  }, this);\n}\nfunction JobsKanbanScreen({\n  navigation,\n  route\n}) {\n  const {\n    token\n  } = useAuth();\n  const [jobs, setJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [refreshing, setRefreshing] = useState(false);\n  const [newJobName, setNewJobName] = useState('');\n  const [newJobStartDate, setNewJobStartDate] = useState('');\n  const [newJobDueDate, setNewJobDueDate] = useState('');\n  const [newJobNotes, setNewJobNotes] = useState('');\n  const [newCustomerName, setNewCustomerName] = useState('');\n  const [newCustomerPhone, setNewCustomerPhone] = useState('');\n  const [newCustomerEmail, setNewCustomerEmail] = useState('');\n  const [newAddressLine1, setNewAddressLine1] = useState('');\n  const [newAddressLine2, setNewAddressLine2] = useState('');\n  const [newCity, setNewCity] = useState('');\n  const [newStateCode, setNewStateCode] = useState('');\n  const [newZip, setNewZip] = useState('');\n  const [jobFormTab, setJobFormTab] = useState('BASICS');\n  const [newJobTags, setNewJobTags] = useState([]);\n  const statusOrder = ['NEW', 'SCHEDULED', 'IN_PROGRESS', 'ON_HOLD', 'COMPLETED', 'DONE', 'PAID', 'CANCELLED', 'CLOSED'];\n  const scrollRef = useRef(null);\n  const [selectedTag, setSelectedTag] = useState(null);\n  const [selectedCity, setSelectedCity] = useState(null);\n  const [selectedUrgency, setSelectedUrgency] = useState('ALL');\n  const load = useCallback(async (isRefresh = false) => {\n    isRefresh ? setRefreshing(true) : setLoading(true);\n    try {\n      const data = await api('/jobs', 'GET', null, token);\n      setJobs(data);\n      db.transaction(tx => {\n        tx.executeSql && tx.executeSql('DELETE FROM jobs_cache;');\n        data.forEach(j => tx.executeSql && tx.executeSql('INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)', [j.id, j.name || '', j.status || 'SCHEDULED', j.startDate || '', j.endDate || '', j.notes || '']));\n      });\n    } catch (e) {\n      db.transaction(tx => tx.executeSql && tx.executeSql('SELECT id, name, status, startDate, endDate, notes FROM jobs_cache', [], (_, {\n        rows\n      }) => setJobs(rows._array || [])));\n    } finally {\n      isRefresh ? setRefreshing(false) : setLoading(false);\n    }\n  }, [token]);\n  useFocusEffect(useCallback(() => {\n    load(false);\n  }, [load]));\n  useEffect(() => {\n    if (route?.params?.focus === 'create-job') {\n      scrollRef.current?.scrollTo({\n        y: 0,\n        animated: true\n      });\n      setJobFormTab('BASICS');\n      if (navigation && typeof navigation.setParams === 'function') {\n        navigation.setParams({\n          focus: undefined\n        });\n      }\n    }\n  }, [route?.params?.focus, navigation]);\n  const availableTags = useMemo(() => {\n    const set = new Set();\n    jobs.forEach(job => {\n      const tags = Array.isArray(job.tags) ? job.tags : [];\n      tags.forEach(tag => {\n        if (tag) set.add(String(tag));\n      });\n    });\n    return Array.from(set).sort((a, b) => a.toLowerCase().localeCompare(b.toLowerCase()));\n  }, [jobs]);\n  const availableCities = useMemo(() => {\n    const set = new Set();\n    jobs.forEach(job => {\n      const city = job?.Jobsite?.city;\n      if (city) set.add(String(city).trim());\n    });\n    return Array.from(set).sort((a, b) => a.toLowerCase().localeCompare(b.toLowerCase()));\n  }, [jobs]);\n  const urgencyFilters = useMemo(() => [{\n    key: 'ALL',\n    label: 'All'\n  }, {\n    key: 'UPCOMING',\n    label: 'Starting soon'\n  }, {\n    key: 'OVERDUE',\n    label: 'Past due'\n  }], []);\n  const filteredJobsRaw = useMemo(() => {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    return jobs.filter(job => {\n      if (selectedTag) {\n        const tags = Array.isArray(job.tags) ? job.tags : [];\n        const hasTag = tags.some(tag => String(tag).toLowerCase() === selectedTag.toLowerCase());\n        if (!hasTag) return false;\n      }\n      if (selectedCity) {\n        const city = job?.Jobsite?.city ? String(job.Jobsite.city) : '';\n        if (city.toLowerCase() !== selectedCity.toLowerCase()) return false;\n      }\n      if (selectedUrgency === 'UPCOMING') {\n        if (!job.startDate) return false;\n        const start = new Date(job.startDate);\n        if (Number.isNaN(start.getTime())) return false;\n        const diff = Math.ceil((start - today) / (1000 * 60 * 60 * 24));\n        if (diff < 0 || diff > 3) return false;\n      } else if (selectedUrgency === 'OVERDUE') {\n        if (!job.endDate) return false;\n        const due = new Date(job.endDate);\n        if (Number.isNaN(due.getTime())) return false;\n        if (due >= today) return false;\n      }\n      return true;\n    });\n  }, [jobs, selectedTag, selectedCity, selectedUrgency]);\n  const hasFilters = useMemo(() => Boolean(selectedTag || selectedCity || selectedUrgency !== 'ALL'), [selectedTag, selectedCity, selectedUrgency]);\n  const clearFilters = useCallback(() => {\n    setSelectedTag(null);\n    setSelectedCity(null);\n    setSelectedUrgency('ALL');\n  }, []);\n  const onRefresh = useCallback(() => load(true), [load]);\n  const resetForm = () => {\n    setNewJobName('');\n    setNewJobStartDate('');\n    setNewJobDueDate('');\n    setNewJobNotes('');\n    setNewCustomerName('');\n    setNewCustomerPhone('');\n    setNewCustomerEmail('');\n    setNewAddressLine1('');\n    setNewAddressLine2('');\n    setNewCity('');\n    setNewStateCode('');\n    setNewZip('');\n    setNewJobTags([]);\n    setJobFormTab('BASICS');\n  };\n  const createJob = async () => {\n    if (!newJobName.trim()) {\n      Alert.alert('Missing info', 'Please add a job name.');\n      setJobFormTab('BASICS');\n      return;\n    }\n    const hasCustomer = [newCustomerName, newCustomerPhone, newCustomerEmail].some(v => v && v.trim());\n    const hasAddress = [newAddressLine1, newCity, newStateCode, newZip].some(v => v && v.trim());\n    const payload = {\n      name: newJobName.trim(),\n      status: 'NEW',\n      startDate: newJobStartDate || null,\n      endDate: newJobDueDate || null,\n      notes: newJobNotes.trim() || null,\n      tags: newJobTags.filter(Boolean)\n    };\n    if (hasCustomer) {\n      payload.customer = {\n        name: newCustomerName.trim(),\n        phone: newCustomerPhone.trim(),\n        email: newCustomerEmail.trim(),\n        billingAddress: newAddressLine1 ? `${newAddressLine1}${newAddressLine2 ? `\n${newAddressLine2}` : ''}${newCity ? `\n${newCity}, ${newStateCode} ${newZip}` : ''}` : null\n      };\n    }\n    if (hasAddress) {\n      payload.jobsite = {\n        addressLine1: newAddressLine1.trim(),\n        addressLine2: newAddressLine2.trim(),\n        city: newCity.trim(),\n        state: newStateCode.trim(),\n        zip: newZip.trim()\n      };\n    }\n    try {\n      const created = await api('/jobs', 'POST', payload, token);\n      setJobs(prev => [created, ...prev]);\n      db.transaction(tx => tx.executeSql && tx.executeSql('INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)', [created.id, created.name || '', created.status || 'SCHEDULED', created.startDate || '', created.endDate || '', created.notes || '']));\n      resetForm();\n      Alert.alert('Job created', `Job #${created.id} ready to schedule.`);\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to create job');\n    }\n  };\n  const updateJobStatus = async (id, status) => {\n    try {\n      const updated = await api(`/jobs/${id}`, 'PATCH', {\n        status\n      }, token);\n      setJobs(prev => prev.map(job => job.id === id ? updated : job));\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to update job status');\n    }\n  };\n  const removeJob = async id => {\n    Alert.alert('Delete Job', `Delete job #${id}?`, [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Delete',\n      style: 'destructive',\n      onPress: async () => {\n        try {\n          await api(`/jobs/${id}`, 'DELETE', null, token);\n          setJobs(prev => prev.filter(job => job.id !== id));\n          db.transaction(tx => tx.executeSql && tx.executeSql('DELETE FROM jobs_cache WHERE id=?', [id]));\n        } catch (e) {\n          Alert.alert('Error', e.message || 'Unable to delete job');\n        }\n      }\n    }]);\n  };\n  const sortedJobs = useMemo(() => {\n    const normalize = status => (status || 'SCHEDULED').toUpperCase();\n    const rank = status => {\n      const key = normalize(status);\n      const idx = statusOrder.indexOf(key);\n      return idx === -1 ? statusOrder.length : idx;\n    };\n    const parseDateSafe = value => {\n      if (!value) return null;\n      const d = new Date(value);\n      return Number.isNaN(d.getTime()) ? null : d;\n    };\n    return [...filteredJobsRaw].sort((a, b) => {\n      const statusDiff = rank(a.status) - rank(b.status);\n      if (statusDiff !== 0) return statusDiff;\n      const startA = parseDateSafe(a.startDate);\n      const startB = parseDateSafe(b.startDate);\n      if (startA && startB) return startA - startB;\n      if (startA) return -1;\n      if (startB) return 1;\n      return (b.id || 0) - (a.id || 0);\n    });\n  }, [filteredJobsRaw, statusOrder]);\n  const groupedJobs = useMemo(() => {\n    const groups = [];\n    let currentStatus = null;\n    sortedJobs.forEach(job => {\n      const statusKey = (job.status || 'SCHEDULED').toUpperCase();\n      if (statusKey !== currentStatus) {\n        groups.push({\n          status: statusKey,\n          jobs: [job]\n        });\n        currentStatus = statusKey;\n      } else {\n        groups[groups.length - 1].jobs.push(job);\n      }\n    });\n    return groups;\n  }, [sortedJobs]);\n  const statusLabel = status => {\n    const key = (status || 'SCHEDULED').toUpperCase();\n    return pillTone[key]?.label || key.charAt(0) + key.slice(1).toLowerCase();\n  };\n  const quickStatusActions = [{\n    label: 'Start job',\n    value: 'IN_PROGRESS',\n    tone: 'primary'\n  }, {\n    label: 'Mark completed',\n    value: 'COMPLETED',\n    tone: 'success'\n  }, {\n    label: 'Mark paid',\n    value: 'PAID',\n    tone: 'success'\n  }, {\n    label: 'Pause',\n    value: 'ON_HOLD',\n    tone: 'warning'\n  }];\n  const inputStyle = {\n    borderWidth: 1,\n    borderColor: palette.border,\n    borderRadius: 12,\n    paddingHorizontal: spacing(1.5),\n    paddingVertical: spacing(1.25),\n    backgroundColor: palette.surfaceMuted,\n    color: palette.text,\n    fontSize: typography.body,\n    marginBottom: spacing(1.5)\n  };\n  const jobTabs = [{\n    key: 'BASICS',\n    label: 'Basics'\n  }, {\n    key: 'CUSTOMER',\n    label: 'Customer'\n  }, {\n    key: 'JOBSITE',\n    label: 'Jobsite'\n  }, {\n    key: 'NOTES',\n    label: 'Notes'\n  }];\n  const renderJobFormFields = () => {\n    if (jobFormTab === 'BASICS') {\n      return _jsxDEV(View, {\n        children: [_jsxDEV(TextInput, {\n          placeholder: \"Job name\",\n          placeholderTextColor: palette.muted,\n          value: newJobName,\n          onChangeText: setNewJobName,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1926,\n          columnNumber: 11\n        }, this), _jsxDEV(DateInputField, {\n          value: newJobStartDate,\n          onChange: setNewJobStartDate,\n          placeholder: \"Start date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1933,\n          columnNumber: 11\n        }, this), _jsxDEV(DateInputField, {\n          value: newJobDueDate,\n          onChange: setNewJobDueDate,\n          placeholder: \"Due date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1938,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            marginTop: spacing(1.5)\n          },\n          children: _jsxDEV(TagInput, {\n            value: newJobTags,\n            onChange: setNewJobTags,\n            placeholder: \"Add tags (e.g. HVAC, Urgent)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1944,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1943,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1925,\n        columnNumber: 9\n      }, this);\n    }\n    if (jobFormTab === 'CUSTOMER') {\n      return _jsxDEV(View, {\n        children: [_jsxDEV(TextInput, {\n          placeholder: \"Customer name\",\n          placeholderTextColor: palette.muted,\n          value: newCustomerName,\n          onChangeText: setNewCustomerName,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1952,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Phone\",\n          placeholderTextColor: palette.muted,\n          keyboardType: \"phone-pad\",\n          value: newCustomerPhone,\n          onChangeText: setNewCustomerPhone,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1959,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Email\",\n          placeholderTextColor: palette.muted,\n          keyboardType: \"email-address\",\n          autoCapitalize: \"none\",\n          value: newCustomerEmail,\n          onChangeText: setNewCustomerEmail,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1967,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1951,\n        columnNumber: 9\n      }, this);\n    }\n    if (jobFormTab === 'JOBSITE') {\n      return _jsxDEV(View, {\n        children: [_jsxDEV(TextInput, {\n          placeholder: \"Address line 1\",\n          placeholderTextColor: palette.muted,\n          value: newAddressLine1,\n          onChangeText: setNewAddressLine1,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1982,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Address line 2\",\n          placeholderTextColor: palette.muted,\n          value: newAddressLine2,\n          onChangeText: setNewAddressLine2,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1989,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            columnGap: spacing(1.5)\n          },\n          children: [_jsxDEV(View, {\n            style: {\n              flex: 1\n            },\n            children: _jsxDEV(TextInput, {\n              placeholder: \"City\",\n              placeholderTextColor: palette.muted,\n              value: newCity,\n              onChangeText: setNewCity,\n              style: [inputStyle, {\n                marginBottom: 0\n              }]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1998,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1997,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: {\n              width: 80\n            },\n            children: _jsxDEV(TextInput, {\n              placeholder: \"State\",\n              placeholderTextColor: palette.muted,\n              value: newStateCode,\n              onChangeText: setNewStateCode,\n              style: [inputStyle, {\n                marginBottom: 0\n              }]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2007,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2006,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: {\n              width: 100\n            },\n            children: _jsxDEV(TextInput, {\n              placeholder: \"ZIP\",\n              placeholderTextColor: palette.muted,\n              value: newZip,\n              onChangeText: setNewZip,\n              style: [inputStyle, {\n                marginBottom: 0\n              }]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2016,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2015,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1996,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1981,\n        columnNumber: 9\n      }, this);\n    }\n    return _jsxDEV(TextInput, {\n      placeholder: \"Internal notes\",\n      placeholderTextColor: palette.muted,\n      value: newJobNotes,\n      onChangeText: setNewJobNotes,\n      multiline: true,\n      style: [inputStyle, {\n        minHeight: 96,\n        textAlignVertical: 'top'\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2029,\n      columnNumber: 7\n    }, this);\n  };\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(ScrollView, {\n      ref: scrollRef,\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(4)\n      },\n      refreshControl: _jsxDEV(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh,\n        tintColor: palette.primary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2045,\n        columnNumber: 25\n      }, this),\n      children: [_jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3),\n          padding: spacing(2.5)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontSize: typography.h2,\n            fontWeight: '700',\n            marginBottom: spacing(2)\n          },\n          children: \"Create job\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2048,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            columnGap: spacing(1),\n            rowGap: spacing(1.5),\n            marginBottom: spacing(2)\n          },\n          children: jobTabs.map(tab => {\n            const selected = tab.key === jobFormTab;\n            return _jsxDEV(TouchableOpacity, {\n              onPress: () => setJobFormTab(tab.key),\n              activeOpacity: 0.85,\n              style: {\n                paddingHorizontal: spacing(2),\n                paddingVertical: spacing(1),\n                borderRadius: 999,\n                borderWidth: 1,\n                borderColor: selected ? palette.primary : palette.border,\n                backgroundColor: selected ? '#d9f2ed' : palette.surface\n              },\n              children: _jsxDEV(Text, {\n                style: {\n                  color: selected ? palette.primaryStrong : palette.muted,\n                  fontWeight: '600',\n                  fontSize: typography.small\n                },\n                children: tab.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2066,\n                columnNumber: 19\n              }, this)\n            }, tab.key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2053,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2049,\n          columnNumber: 11\n        }, this), renderJobFormFields(), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginTop: spacing(2)\n          },\n          children: [_jsxDEV(QuickAction, {\n            label: \"Reset\",\n            tone: \"muted\",\n            onPress: resetForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2075,\n            columnNumber: 13\n          }, this), _jsxDEV(TouchableOpacity, {\n            onPress: createJob,\n            activeOpacity: 0.85,\n            style: {\n              backgroundColor: palette.primary,\n              paddingHorizontal: spacing(2.5),\n              paddingVertical: spacing(1.5),\n              borderRadius: 12\n            },\n            children: _jsxDEV(Text, {\n              style: {\n                color: '#fff',\n                fontWeight: '700'\n              },\n              children: \"Create job\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2081,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2076,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2074,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2047,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3),\n          padding: spacing(2.5)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontSize: typography.h2,\n            fontWeight: '700',\n            marginBottom: spacing(1.5)\n          },\n          children: \"Filters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2087,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginBottom: spacing(1)\n          },\n          children: \"Urgency\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2088,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            columnGap: spacing(1),\n            rowGap: spacing(1),\n            marginBottom: spacing(1.5)\n          },\n          children: urgencyFilters.map(option => _jsxDEV(QuickAction, {\n            label: option.label,\n            tone: selectedUrgency === option.key ? 'primary' : 'muted',\n            onPress: () => setSelectedUrgency(option.key)\n          }, option.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2091,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2089,\n          columnNumber: 11\n        }, this), availableTags.length ? _jsxDEV(View, {\n          style: {\n            marginBottom: spacing(1.5)\n          },\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginBottom: spacing(1)\n            },\n            children: \"Tags\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2101,\n            columnNumber: 15\n          }, this), _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              flexWrap: 'wrap',\n              columnGap: spacing(1),\n              rowGap: spacing(1)\n            },\n            children: availableTags.map(tag => _jsxDEV(QuickAction, {\n              label: `#${tag}`,\n              tone: selectedTag === tag ? 'primary' : 'muted',\n              onPress: () => setSelectedTag(selectedTag === tag ? null : tag)\n            }, tag, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2104,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2102,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2100,\n          columnNumber: 13\n        }, this) : null, availableCities.length ? _jsxDEV(View, {\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginBottom: spacing(1)\n            },\n            children: \"Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2116,\n            columnNumber: 15\n          }, this), _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              flexWrap: 'wrap',\n              columnGap: spacing(1),\n              rowGap: spacing(1)\n            },\n            children: availableCities.map(city => _jsxDEV(QuickAction, {\n              label: city,\n              tone: selectedCity === city ? 'primary' : 'muted',\n              onPress: () => setSelectedCity(selectedCity === city ? null : city)\n            }, city, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2119,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2117,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2115,\n          columnNumber: 13\n        }, this) : null, selectedTag || selectedCity || selectedUrgency !== 'ALL' ? _jsxDEV(View, {\n          style: {\n            marginTop: spacing(2)\n          },\n          children: _jsxDEV(QuickAction, {\n            label: \"Clear filters\",\n            tone: \"muted\",\n            onPress: clearFilters\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2131,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2130,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2086,\n        columnNumber: 9\n      }, this), loading && !refreshing && jobs.length === 0 ? _jsxDEV(SurfaceCard, {\n        style: {\n          alignItems: 'center',\n          paddingVertical: spacing(6),\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(ActivityIndicator, {\n          color: palette.primary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2138,\n          columnNumber: 13\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(1.5)\n          },\n          children: \"Loading jobs...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2139,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2137,\n        columnNumber: 11\n      }, this) : null, groupedJobs.length === 0 ? _jsxDEV(SurfaceCard, {\n        children: _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: hasFilters ? 'No jobs match the current filters.' : 'No jobs yet. Convert a lead or add a job to get started.'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2145,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2144,\n        columnNumber: 11\n      }, this) : groupedJobs.map(group => _jsxDEV(View, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontWeight: '700',\n            fontSize: typography.small,\n            textTransform: 'uppercase',\n            marginBottom: spacing(1)\n          },\n          children: statusLabel(group.status)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2152,\n          columnNumber: 15\n        }, this), group.jobs.map(job => {\n          const customer = job.Customer || {};\n          const jobsite = job.Jobsite || {};\n          const addressParts = [jobsite.addressLine1, jobsite.addressLine2, [jobsite.city, jobsite.state].filter(Boolean).join(', '), jobsite.zip].filter(Boolean);\n          const address = addressParts.join(', ');\n          const statusKey = (job.status || 'SCHEDULED').toUpperCase();\n          const assignedTech = job.assignedTech;\n          return _jsxDEV(SurfaceCard, {\n            style: {\n              marginBottom: spacing(1.5)\n            },\n            children: [_jsxDEV(View, {\n              style: {\n                flexDirection: 'row',\n                justifyContent: 'space-between',\n                alignItems: 'center'\n              },\n              children: [_jsxDEV(Text, {\n                style: {\n                  color: palette.text,\n                  fontSize: typography.h2,\n                  fontWeight: '600'\n                },\n                children: job.name || `Job #${job.id}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2170,\n                columnNumber: 23\n              }, this), _jsxDEV(StatusPill, {\n                status: statusKey\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2171,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2169,\n              columnNumber: 21\n            }, this), job.startDate || job.endDate ? _jsxDEV(Text, {\n              style: {\n                color: palette.muted,\n                marginTop: spacing(0.75)\n              },\n              children: [job.startDate ? `Start ${formatDate(job.startDate)}` : null, job.endDate ? `Due ${formatDate(job.endDate)}` : null].filter(Boolean).join(' | ')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2174,\n              columnNumber: 23\n            }, this) : null, customer.name ? _jsxDEV(Text, {\n              style: {\n                color: palette.text,\n                fontWeight: '600',\n                marginTop: spacing(1)\n              },\n              children: customer.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2178,\n              columnNumber: 38\n            }, this) : null, customer.phone ? _jsxDEV(Text, {\n              style: {\n                color: palette.muted\n              },\n              children: customer.phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2179,\n              columnNumber: 39\n            }, this) : null, customer.email ? _jsxDEV(Text, {\n              style: {\n                color: palette.muted\n              },\n              children: customer.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2180,\n              columnNumber: 39\n            }, this) : null, address ? _jsxDEV(Text, {\n              style: {\n                color: palette.muted,\n                marginTop: spacing(1)\n              },\n              children: address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2181,\n              columnNumber: 32\n            }, this) : null, assignedTech ? _jsxDEV(Text, {\n              style: {\n                color: palette.muted,\n                marginTop: spacing(0.5)\n              },\n              children: [\"Assigned to \", assignedTech.fullName || assignedTech.email || 'Tech']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2183,\n              columnNumber: 23\n            }, this) : null, job.notes ? _jsxDEV(Text, {\n              style: {\n                color: palette.muted,\n                marginTop: spacing(1)\n              },\n              numberOfLines: 3,\n              children: job.notes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2187,\n              columnNumber: 34\n            }, this) : null, Array.isArray(job.tags) && job.tags.length ? _jsxDEV(View, {\n              style: {\n                flexDirection: 'row',\n                flexWrap: 'wrap',\n                columnGap: spacing(1),\n                rowGap: spacing(1),\n                marginTop: spacing(1)\n              },\n              children: job.tags.map(tag => _jsxDEV(View, {\n                style: {\n                  backgroundColor: '#e0f3f0',\n                  borderRadius: 999,\n                  paddingHorizontal: spacing(1.5),\n                  paddingVertical: spacing(0.5)\n                },\n                children: _jsxDEV(Text, {\n                  style: {\n                    color: palette.primaryStrong,\n                    fontWeight: '600',\n                    fontSize: typography.small\n                  },\n                  children: `#${tag}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2195,\n                  columnNumber: 29\n                }, this)\n              }, `${job.id}-${tag}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2191,\n                columnNumber: 27\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2189,\n              columnNumber: 23\n            }, this) : null, _jsxDEV(View, {\n              style: {\n                flexDirection: 'row',\n                flexWrap: 'wrap',\n                columnGap: spacing(1),\n                rowGap: spacing(1),\n                marginTop: spacing(2)\n              },\n              children: [address ? _jsxDEV(QuickAction, {\n                label: \"Map\",\n                tone: \"muted\",\n                onPress: () => openJobInMaps(job)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2201,\n                columnNumber: 34\n              }, this) : null, _jsxDEV(QuickAction, {\n                label: \"View job\",\n                onPress: () => navigation.navigate('JobDetail', {\n                  jobId: job.id\n                }),\n                tone: \"muted\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2202,\n                columnNumber: 23\n              }, this), quickStatusActions.map(action => action.value === statusKey ? null : _jsxDEV(QuickAction, {\n                label: action.label,\n                tone: action.tone,\n                onPress: () => updateJobStatus(job.id, action.value)\n              }, action.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2205,\n                columnNumber: 27\n              }, this)), _jsxDEV(QuickAction, {\n                label: \"Delete\",\n                tone: \"danger\",\n                onPress: () => removeJob(job.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2213,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2200,\n              columnNumber: 21\n            }, this)]\n          }, job.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2168,\n            columnNumber: 19\n          }, this);\n        })]\n      }, group.status, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2151,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2042,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 2041,\n    columnNumber: 5\n  }, this);\n}\nfunction JobDetailScreen({\n  route,\n  navigation\n}) {\n  const {\n    jobId\n  } = route.params;\n  const {\n    token,\n    user\n  } = useAuth();\n  const [jobName, setJobName] = useState('');\n  const [jobStartDate, setJobStartDate] = useState('');\n  const [jobEndDate, setJobEndDate] = useState('');\n  const [jobNotes, setJobNotes] = useState('');\n  const [jobCustomerName, setJobCustomerName] = useState('');\n  const [jobCustomerPhone, setJobCustomerPhone] = useState('');\n  const [jobCustomerEmail, setJobCustomerEmail] = useState('');\n  const [jobAddressLine1, setJobAddressLine1] = useState('');\n  const [jobAddressLine2, setJobAddressLine2] = useState('');\n  const [jobCity, setJobCity] = useState('');\n  const [jobStateCode, setJobStateCode] = useState('');\n  const [jobZip, setJobZip] = useState('');\n  const [jobTags, setJobTags] = useState([]);\n  const [assignedTechId, setAssignedTechId] = useState(null);\n  const [team, setTeam] = useState([]);\n  const [assigningTech, setAssigningTech] = useState(false);\n  const [jobAttachments, setJobAttachments] = useState([]);\n  const [loadingAttachments, setLoadingAttachments] = useState(false);\n  const [uploadingAttachment, setUploadingAttachment] = useState(false);\n  const [jobActivity, setJobActivity] = useState([]);\n  const [newActivityNote, setNewActivityNote] = useState('');\n  const [addingActivity, setAddingActivity] = useState(false);\n  const [changeOrders, setCO] = useState([]);\n  const [title, setTitle] = useState('');\n  const [amountDelta, setAmountDelta] = useState('0');\n  const roleKey = normalizeRole(user?.role);\n  const canManageChangeOrders = ['ADMIN', 'SUPERVISOR', 'ESTIMATOR'].includes(roleKey);\n  const canAssignTech = roleKey === 'ADMIN';\n  const loadCO = useCallback(async () => {\n    setCO(await api(`/change-orders/job/${jobId}`, 'GET', null, token));\n  }, [jobId, token]);\n  const loadJob = useCallback(async () => {\n    try {\n      const j = await api(`/jobs/${jobId}`, 'GET', null, token);\n      setJobName(j.name || '');\n      setJobStartDate(j.startDate || '');\n      setJobEndDate(j.endDate || '');\n      setJobNotes(j.notes || '');\n      const customer = j.Customer || {};\n      const jobsite = j.Jobsite || {};\n      setJobCustomerName(customer.name || '');\n      setJobCustomerPhone(customer.phone || '');\n      setJobCustomerEmail(customer.email || '');\n      setJobAddressLine1(jobsite.addressLine1 || '');\n      setJobAddressLine2(jobsite.addressLine2 || '');\n      setJobCity(jobsite.city || '');\n      setJobStateCode(jobsite.state || '');\n      setJobZip(jobsite.zip || '');\n      setJobTags(Array.isArray(j.tags) ? j.tags : []);\n      setJobActivity(Array.isArray(j.activityLog) ? j.activityLog : []);\n      setAssignedTechId(j.assignedTo ?? j.assignedTech?.id ?? null);\n    } catch (e) {}\n  }, [jobId, token]);\n  const loadTeam = useCallback(async () => {\n    if (!canAssignTech) return;\n    try {\n      const data = await api('/users', 'GET', null, token);\n      setTeam(Array.isArray(data) ? data.filter(member => member.active !== false) : []);\n    } catch (e) {}\n  }, [canAssignTech, token]);\n  const loadAttachments = useCallback(async () => {\n    try {\n      setLoadingAttachments(true);\n      const response = await api(`/attachments?entityType=JOB&entityId=${jobId}`, 'GET', null, token);\n      setJobAttachments(Array.isArray(response) ? response : []);\n    } catch (e) {} finally {\n      setLoadingAttachments(false);\n    }\n  }, [jobId, token]);\n  useEffect(() => {\n    loadJob();\n    loadCO();\n    loadAttachments();\n    if (canAssignTech) loadTeam();\n  }, [loadJob, loadCO, loadAttachments, loadTeam, canAssignTech]);\n  const addCO = async () => {\n    if (!title.trim()) {\n      Alert.alert('Missing info', 'Add a title for the change order.');\n      return;\n    }\n    await api(`/change-orders/job/${jobId}`, 'POST', {\n      title: title.trim(),\n      amountDelta: parseFloat(amountDelta) || 0\n    }, token);\n    setTitle('');\n    setAmountDelta('0');\n    loadCO();\n  };\n  const saveJobDetails = async () => {\n    try {\n      await api(`/jobs/${jobId}`, 'PATCH', {\n        name: jobName,\n        startDate: jobStartDate || null,\n        endDate: jobEndDate || null,\n        notes: jobNotes,\n        tags: Array.isArray(jobTags) ? jobTags.filter(Boolean) : [],\n        customer: {\n          name: jobCustomerName,\n          phone: jobCustomerPhone,\n          email: jobCustomerEmail,\n          billingAddress: jobAddressLine1 ? `${jobAddressLine1}${jobAddressLine2 ? `\n${jobAddressLine2}` : ''}${jobCity ? `\n${jobCity}, ${jobStateCode} ${jobZip}` : ''}` : null\n        },\n        jobsite: {\n          addressLine1: jobAddressLine1,\n          addressLine2: jobAddressLine2,\n          city: jobCity,\n          state: jobStateCode,\n          zip: jobZip\n        }\n      }, token);\n      Alert.alert('Saved', 'Job details updated.');\n      loadJob();\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to save job');\n    }\n  };\n  const deleteJob = () => {\n    Alert.alert('Delete job', `Delete job #${jobId}?`, [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Delete',\n      style: 'destructive',\n      onPress: async () => {\n        try {\n          await api(`/jobs/${jobId}`, 'DELETE', null, token);\n          db.transaction(tx => tx.executeSql('DELETE FROM jobs_cache WHERE id=?', [jobId]));\n          Alert.alert('Deleted', 'Job removed.');\n          navigation.navigate('Tabs', {\n            screen: 'Jobs'\n          });\n        } catch (e) {\n          Alert.alert('Error', e.message || 'Unable to delete job');\n        }\n      }\n    }]);\n  };\n  const handleAssignTech = useCallback(async techId => {\n    if (!canAssignTech) return;\n    setAssigningTech(true);\n    try {\n      await api(`/jobs/${jobId}`, 'PATCH', {\n        assignedTo: techId || null\n      }, token);\n      setAssignedTechId(techId || null);\n      await loadJob();\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to update assignment.');\n    } finally {\n      setAssigningTech(false);\n    }\n  }, [canAssignTech, jobId, token, loadJob]);\n  const scheduleFollowUp = useCallback(async channel => {\n    const scheduledFor = new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString();\n    const payload = {};\n    if (channel === 'EMAIL') {\n      if (!jobCustomerEmail) return false;\n      payload.email = jobCustomerEmail;\n    }\n    if (channel === 'SMS') {\n      if (!jobCustomerPhone) return false;\n      payload.phone = jobCustomerPhone;\n    }\n    try {\n      await api('/reminders', 'POST', {\n        jobId,\n        channel,\n        template: 'FOLLOW_UP',\n        scheduledFor,\n        payload\n      }, token);\n      return true;\n    } catch (error) {\n      console.warn('Failed to schedule follow up', error?.message || error);\n      return false;\n    }\n  }, [jobCustomerEmail, jobCustomerPhone, jobId, token]);\n  const handleCallCustomer = useCallback(async () => {\n    if (!jobCustomerPhone) {\n      Alert.alert('Missing phone', 'Add a phone number to call this customer.');\n      return;\n    }\n    await Linking.openURL(`tel:${jobCustomerPhone}`);\n    const channel = jobCustomerEmail ? 'EMAIL' : 'SMS';\n    const scheduled = await scheduleFollowUp(channel);\n    if (scheduled) {\n      Alert.alert('Reminder scheduled', 'We will send a branded follow-up in 24 hours.');\n    }\n  }, [jobCustomerPhone, jobCustomerEmail, scheduleFollowUp]);\n  const handleTextCustomer = useCallback(async () => {\n    if (!jobCustomerPhone) {\n      Alert.alert('Missing phone', 'Add a phone number to text this customer.');\n      return;\n    }\n    const message = `Reminder: Job #${jobId} is scheduled soon.`;\n    await Linking.openURL(`sms:${jobCustomerPhone}?body=${encodeURIComponent(message)}`);\n    const scheduled = await scheduleFollowUp('SMS');\n    if (scheduled) {\n      Alert.alert('Reminder scheduled', 'We will automatically follow up with a branded text.');\n    }\n  }, [jobCustomerPhone, jobId, scheduleFollowUp]);\n  const handleEmailCustomer = useCallback(async () => {\n    if (!jobCustomerEmail) {\n      Alert.alert('Missing email', 'Add an email to message this customer.');\n      return;\n    }\n    const subject = `Job #${jobId} update`;\n    const body = `Hi ${jobCustomerName || ''},%0D%0A%0D%0AJust a quick update on your project. Let us know if you have any questions.%0D%0A%0D%0AThanks!`;\n    await Linking.openURL(`mailto:${jobCustomerEmail}?subject=${encodeURIComponent(subject)}&body=${body}`);\n    const scheduled = await scheduleFollowUp('EMAIL');\n    if (scheduled) {\n      Alert.alert('Reminder scheduled', 'We will nudge the client with a branded email follow-up.');\n    }\n  }, [jobCustomerEmail, jobCustomerName, jobId, scheduleFollowUp]);\n  const handleOpenJobsiteMap = useCallback(() => {\n    const parts = [jobAddressLine1?.trim(), jobAddressLine2?.trim(), [jobCity?.trim(), jobStateCode?.trim()].filter(Boolean).join(' '), jobZip?.trim()].filter(Boolean);\n    if (!parts.length) {\n      Alert.alert('Missing address', 'Add the jobsite address to open maps.');\n      return;\n    }\n    const address = parts.join(', ');\n    Linking.openURL(`https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(address)}`);\n  }, [jobAddressLine1, jobAddressLine2, jobCity, jobStateCode, jobZip]);\n  const handleUploadAttachment = useCallback(async () => {\n    try {\n      const permission = await ImagePicker.requestMediaLibraryPermissionsAsync();\n      if (permission && permission.granted === false) {\n        Alert.alert('Permission needed', 'Allow photo library access to attach files.');\n        return;\n      }\n      const result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        quality: 0.8,\n        allowsMultipleSelection: false,\n        base64: false\n      });\n      if (result.canceled) return;\n      const asset = result.assets && result.assets[0];\n      if (!asset?.uri) return;\n      setUploadingAttachment(true);\n      const base64 = await FileSystem.readAsStringAsync(asset.uri, {\n        encoding: FileSystem.EncodingType.Base64\n      });\n      const dataUrl = `data:${asset.mimeType || 'image/jpeg'};base64,${base64}`;\n      const uploaded = await api('/upload/image', 'POST', {\n        dataUrl\n      }, token);\n      await api('/attachments', 'POST', {\n        entityType: 'JOB',\n        entityId: jobId,\n        fileUrl: uploaded.url\n      }, token);\n      await loadAttachments();\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to upload attachment.');\n    } finally {\n      setUploadingAttachment(false);\n    }\n  }, [jobId, token, loadAttachments]);\n  const handleDeleteAttachment = useCallback(id => {\n    Alert.alert('Delete attachment', 'Remove this file from the job?', [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Delete',\n      style: 'destructive',\n      onPress: async () => {\n        setJobAttachments(prev => prev.filter(att => att.id !== id));\n        try {\n          await api(`/attachments/${id}`, 'DELETE', null, token);\n          await loadAttachments();\n        } catch (e) {\n          await loadAttachments();\n          Alert.alert('Error', e.message || 'Unable to delete attachment.');\n        }\n      }\n    }]);\n  }, [token, loadAttachments]);\n  const addActivityEntry = useCallback(async () => {\n    const trimmed = newActivityNote.trim();\n    if (!trimmed) {\n      Alert.alert('Missing note', 'Add details before posting to the log.');\n      return;\n    }\n    const entry = {\n      note: trimmed,\n      author: user?.fullName || user?.name || user?.email || 'Team',\n      createdAt: new Date().toISOString()\n    };\n    try {\n      setAddingActivity(true);\n      const nextLog = [entry, ...(Array.isArray(jobActivity) ? jobActivity : [])];\n      await api(`/jobs/${jobId}`, 'PATCH', {\n        activityLog: nextLog\n      }, token);\n      setJobActivity(nextLog);\n      setNewActivityNote('');\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to save activity.');\n    } finally {\n      setAddingActivity(false);\n    }\n  }, [newActivityNote, jobActivity, jobId, token, user]);\n  const activityItems = useMemo(() => {\n    const list = Array.isArray(jobActivity) ? jobActivity.slice() : [];\n    return list.sort((a, b) => {\n      const aTime = new Date(a?.createdAt || 0).getTime();\n      const bTime = new Date(b?.createdAt || 0).getTime();\n      return (Number.isNaN(bTime) ? 0 : bTime) - (Number.isNaN(aTime) ? 0 : aTime);\n    });\n  }, [jobActivity]);\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(6)\n      },\n      children: [_jsxDEV(Text, {\n        style: {\n          color: palette.text,\n          fontSize: typography.h1,\n          fontWeight: '700'\n        },\n        children: [\"Job #\", jobId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2531,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: {\n          color: palette.muted,\n          marginTop: spacing(0.5),\n          marginBottom: spacing(3)\n        },\n        children: \"Keep job information up to date so the field team always has the latest context.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2532,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          padding: spacing(2.5),\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontSize: typography.small,\n            fontWeight: '700',\n            textTransform: 'uppercase',\n            marginBottom: spacing(1)\n          },\n          children: \"Basics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2537,\n          columnNumber: 11\n        }, this), _jsxDEV(FormInput, {\n          placeholder: \"Job name\",\n          value: jobName,\n          onChangeText: setJobName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2540,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            columnGap: spacing(1.5)\n          },\n          children: [_jsxDEV(View, {\n            style: {\n              flex: 1\n            },\n            children: _jsxDEV(DateInputField, {\n              value: jobStartDate,\n              onChange: setJobStartDate,\n              placeholder: \"Start date\",\n              style: {\n                marginBottom: 0\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2543,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2542,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: {\n              flex: 1\n            },\n            children: _jsxDEV(DateInputField, {\n              value: jobEndDate,\n              onChange: setJobEndDate,\n              placeholder: \"End date\",\n              style: {\n                marginBottom: 0\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2546,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2545,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2541,\n          columnNumber: 11\n        }, this), _jsxDEV(FormInput, {\n          placeholder: \"Notes / scope\",\n          value: jobNotes,\n          onChangeText: setJobNotes,\n          multiline: true,\n          style: {\n            minHeight: 112,\n            textAlignVertical: 'top'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2549,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontWeight: '600',\n            marginTop: spacing(1.5),\n            marginBottom: spacing(0.5)\n          },\n          children: \"Tags\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2556,\n          columnNumber: 11\n        }, this), _jsxDEV(TagInput, {\n          value: jobTags,\n          onChange: setJobTags,\n          placeholder: \"Add job tags (e.g. Roofing, Urgent)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2557,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginTop: spacing(2)\n          },\n          children: [_jsxDEV(QuickAction, {\n            label: \"Delete job\",\n            tone: \"danger\",\n            onPress: deleteJob\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2559,\n            columnNumber: 13\n          }, this), _jsxDEV(TouchableOpacity, {\n            onPress: saveJobDetails,\n            activeOpacity: 0.85,\n            style: {\n              backgroundColor: palette.primary,\n              paddingHorizontal: spacing(2.5),\n              paddingVertical: spacing(1.5),\n              borderRadius: 12\n            },\n            children: _jsxDEV(Text, {\n              style: {\n                color: '#fff',\n                fontWeight: '700'\n              },\n              children: \"Save changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2565,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2560,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2558,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2536,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          padding: spacing(2.5),\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontSize: typography.small,\n            fontWeight: '700',\n            textTransform: 'uppercase',\n            marginBottom: spacing(1)\n          },\n          children: \"Customer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2571,\n          columnNumber: 11\n        }, this), _jsxDEV(FormInput, {\n          placeholder: \"Name\",\n          value: jobCustomerName,\n          onChangeText: setJobCustomerName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2574,\n          columnNumber: 11\n        }, this), _jsxDEV(FormInput, {\n          placeholder: \"Phone\",\n          value: jobCustomerPhone,\n          onChangeText: setJobCustomerPhone,\n          keyboardType: \"phone-pad\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2575,\n          columnNumber: 11\n        }, this), _jsxDEV(FormInput, {\n          placeholder: \"Email\",\n          value: jobCustomerEmail,\n          onChangeText: setJobCustomerEmail,\n          keyboardType: \"email-address\",\n          autoCapitalize: \"none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2576,\n          columnNumber: 11\n        }, this), jobCustomerPhone || jobCustomerEmail ? _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            columnGap: spacing(1),\n            rowGap: spacing(1),\n            marginTop: spacing(1.5)\n          },\n          children: [jobCustomerPhone ? _jsxDEV(QuickAction, {\n            label: \"Call\",\n            tone: \"primary\",\n            onPress: handleCallCustomer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2585,\n            columnNumber: 35\n          }, this) : null, jobCustomerPhone ? _jsxDEV(QuickAction, {\n            label: \"Text\",\n            tone: \"primary\",\n            onPress: handleTextCustomer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2586,\n            columnNumber: 35\n          }, this) : null, jobCustomerEmail ? _jsxDEV(QuickAction, {\n            label: \"Email\",\n            tone: \"muted\",\n            onPress: handleEmailCustomer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2587,\n            columnNumber: 35\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2584,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2570,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          padding: spacing(2.5),\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontSize: typography.small,\n            fontWeight: '700',\n            textTransform: 'uppercase',\n            marginBottom: spacing(1)\n          },\n          children: \"Jobsite\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2593,\n          columnNumber: 11\n        }, this), _jsxDEV(FormInput, {\n          placeholder: \"Address line 1\",\n          value: jobAddressLine1,\n          onChangeText: setJobAddressLine1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2596,\n          columnNumber: 11\n        }, this), _jsxDEV(FormInput, {\n          placeholder: \"Address line 2\",\n          value: jobAddressLine2,\n          onChangeText: setJobAddressLine2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2597,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            columnGap: spacing(1.5)\n          },\n          children: [_jsxDEV(FormInput, {\n            placeholder: \"City\",\n            value: jobCity,\n            onChangeText: setJobCity,\n            style: {\n              flex: 1,\n              marginBottom: 0\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2599,\n            columnNumber: 13\n          }, this), _jsxDEV(FormInput, {\n            placeholder: \"State\",\n            value: jobStateCode,\n            onChangeText: setJobStateCode,\n            autoCapitalize: \"characters\",\n            style: {\n              width: 96,\n              marginBottom: 0\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2600,\n            columnNumber: 13\n          }, this), _jsxDEV(FormInput, {\n            placeholder: \"ZIP\",\n            value: jobZip,\n            onChangeText: setJobZip,\n            keyboardType: \"numeric\",\n            style: {\n              width: 112,\n              marginBottom: 0\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2607,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2598,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            marginTop: spacing(1.5)\n          },\n          children: _jsxDEV(QuickAction, {\n            label: \"Open in Maps\",\n            tone: \"primary\",\n            onPress: handleOpenJobsiteMap\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2616,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2615,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2592,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          padding: spacing(2.5),\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontSize: typography.small,\n            fontWeight: '700',\n            textTransform: 'uppercase'\n          },\n          children: \"Attachments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2621,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(0.5)\n          },\n          children: \"Store site photos, permits, and approvals for the crew.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2622,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            columnGap: spacing(1),\n            rowGap: spacing(1),\n            marginTop: spacing(1.5)\n          },\n          children: [_jsxDEV(QuickAction, {\n            label: uploadingAttachment ? 'Uploading...' : 'Add photo',\n            tone: uploadingAttachment ? 'muted' : 'primary',\n            onPress: uploadingAttachment ? undefined : handleUploadAttachment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2624,\n            columnNumber: 13\n          }, this), _jsxDEV(QuickAction, {\n            label: \"Refresh\",\n            tone: \"muted\",\n            onPress: loadAttachments\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2629,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2623,\n          columnNumber: 11\n        }, this), loadingAttachments ? _jsxDEV(View, {\n          style: {\n            alignItems: 'center',\n            paddingVertical: spacing(2)\n          },\n          children: [_jsxDEV(ActivityIndicator, {\n            color: palette.primary\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2633,\n            columnNumber: 15\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(1)\n            },\n            children: \"Syncing attachments...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2634,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2632,\n          columnNumber: 13\n        }, this) : jobAttachments.length === 0 ? _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(1.5)\n          },\n          children: \"No attachments yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2637,\n          columnNumber: 13\n        }, this) : jobAttachments.map(att => {\n          const url = att?.fileUrl || '';\n          const isImage = typeof url === 'string' && /\\.(png|jpe?g|gif|webp)$/i.test(url);\n          return _jsxDEV(View, {\n            style: {\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              marginTop: spacing(1.5),\n              overflow: 'hidden',\n              backgroundColor: palette.surface\n            },\n            children: [isImage && url ? _jsxDEV(TouchableOpacity, {\n              onPress: () => url ? Linking.openURL(url) : null,\n              activeOpacity: 0.85,\n              children: _jsxDEV(Image, {\n                source: {\n                  uri: url\n                },\n                style: {\n                  height: 180,\n                  width: '100%'\n                },\n                resizeMode: \"cover\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2656,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2655,\n              columnNumber: 21\n            }, this) : null, _jsxDEV(View, {\n              style: {\n                padding: spacing(1.5)\n              },\n              children: [_jsxDEV(Text, {\n                style: {\n                  color: palette.text,\n                  fontWeight: '600'\n                },\n                children: att.caption || 'Attachment'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2660,\n                columnNumber: 21\n              }, this), _jsxDEV(Text, {\n                style: {\n                  color: palette.muted,\n                  fontSize: typography.small,\n                  marginTop: spacing(0.5)\n                },\n                children: [att.uploader?.fullName || att.uploader?.email || 'Uploaded', \" \", att.createdAt ? `• ${new Date(att.createdAt).toLocaleString()}` : '']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2661,\n                columnNumber: 21\n              }, this), _jsxDEV(View, {\n                style: {\n                  flexDirection: 'row',\n                  flexWrap: 'wrap',\n                  columnGap: spacing(1),\n                  rowGap: spacing(1),\n                  marginTop: spacing(1.5)\n                },\n                children: [url ? _jsxDEV(QuickAction, {\n                  label: \"Open\",\n                  tone: \"muted\",\n                  onPress: () => Linking.openURL(url)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2665,\n                  columnNumber: 30\n                }, this) : null, _jsxDEV(QuickAction, {\n                  label: \"Delete\",\n                  tone: \"danger\",\n                  onPress: () => handleDeleteAttachment(att.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2666,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2664,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2659,\n              columnNumber: 19\n            }, this)]\n          }, att.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2643,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2620,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          padding: spacing(2.5),\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontSize: typography.small,\n            fontWeight: '700',\n            textTransform: 'uppercase'\n          },\n          children: \"Activity log\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2676,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(0.5),\n            marginBottom: spacing(1.5)\n          },\n          children: \"Capture approvals, client updates, and job milestones.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2677,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          multiline: true,\n          placeholder: \"Add a note for the team\",\n          placeholderTextColor: palette.muted,\n          value: newActivityNote,\n          onChangeText: setNewActivityNote,\n          style: [formInputBaseStyle, {\n            minHeight: 96,\n            textAlignVertical: 'top'\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2678,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            columnGap: spacing(1),\n            rowGap: spacing(1),\n            marginTop: spacing(1)\n          },\n          children: [_jsxDEV(QuickAction, {\n            label: addingActivity ? 'Saving...' : 'Add entry',\n            tone: addingActivity ? 'muted' : 'primary',\n            onPress: addingActivity ? undefined : addActivityEntry\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2687,\n            columnNumber: 13\n          }, this), _jsxDEV(QuickAction, {\n            label: \"Refresh\",\n            tone: \"muted\",\n            onPress: loadJob\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2692,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2686,\n          columnNumber: 11\n        }, this), activityItems.length === 0 ? _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(1.5)\n          },\n          children: \"No log entries yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2695,\n          columnNumber: 13\n        }, this) : activityItems.map((entry, idx) => _jsxDEV(View, {\n          style: {\n            marginTop: spacing(1.5),\n            borderTopWidth: idx === 0 ? 0 : 1,\n            borderTopColor: palette.border,\n            paddingTop: idx === 0 ? 0 : spacing(1.5)\n          },\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.text,\n              fontWeight: '600'\n            },\n            children: entry.note\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2707,\n            columnNumber: 17\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              fontSize: typography.small,\n              marginTop: spacing(0.5)\n            },\n            children: [entry.author || 'Team', \" \", entry.createdAt ? `• ${new Date(entry.createdAt).toLocaleString()}` : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2708,\n            columnNumber: 17\n          }, this)]\n        }, `${entry.createdAt || idx}-${idx}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2698,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2675,\n        columnNumber: 9\n      }, this), canManageChangeOrders ? _jsxDEV(SurfaceCard, {\n        style: {\n          padding: spacing(2.5),\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontSize: typography.small,\n            fontWeight: '700',\n            textTransform: 'uppercase',\n            marginBottom: spacing(1)\n          },\n          children: \"New change order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2718,\n          columnNumber: 13\n        }, this), _jsxDEV(FormInput, {\n          placeholder: \"Title\",\n          value: title,\n          onChangeText: setTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2721,\n          columnNumber: 13\n        }, this), _jsxDEV(FormInput, {\n          placeholder: \"Amount $\",\n          value: amountDelta,\n          onChangeText: setAmountDelta,\n          keyboardType: \"decimal-pad\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2722,\n          columnNumber: 13\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'flex-end',\n            marginTop: spacing(2)\n          },\n          children: _jsxDEV(TouchableOpacity, {\n            onPress: addCO,\n            activeOpacity: 0.85,\n            style: {\n              backgroundColor: palette.primary,\n              paddingHorizontal: spacing(2.5),\n              paddingVertical: spacing(1.5),\n              borderRadius: 12\n            },\n            children: _jsxDEV(Text, {\n              style: {\n                color: '#fff',\n                fontWeight: '700'\n              },\n              children: \"Add change order\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2729,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2724,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2723,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2717,\n        columnNumber: 11\n      }, this) : null, _jsxDEV(View, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontSize: typography.h2,\n            fontWeight: '700',\n            marginBottom: spacing(1.5)\n          },\n          children: \"Change orders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2736,\n          columnNumber: 11\n        }, this), changeOrders.length === 0 ? _jsxDEV(SurfaceCard, {\n          children: _jsxDEV(Text, {\n            style: {\n              color: palette.muted\n            },\n            children: \"No change orders yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2739,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2738,\n          columnNumber: 13\n        }, this) : changeOrders.map(item => {\n          const statusKey = (item.status || 'PENDING').toUpperCase();\n          const statusTone = (() => {\n            if (statusKey === 'APPROVED') return {\n              bg: '#dcfce7',\n              fg: palette.success,\n              label: 'Approved'\n            };\n            if (statusKey === 'REJECTED') return {\n              bg: '#fee2e2',\n              fg: palette.danger,\n              label: 'Rejected'\n            };\n            return {\n              bg: '#e0f3f0',\n              fg: palette.primaryStrong,\n              label: 'Pending'\n            };\n          })();\n          const amountLabel = formatCurrency(item.amountDelta || 0);\n          return _jsxDEV(SurfaceCard, {\n            style: {\n              marginBottom: spacing(1.5),\n              padding: spacing(2.5)\n            },\n            children: [_jsxDEV(View, {\n              style: {\n                flexDirection: 'row',\n                justifyContent: 'space-between',\n                alignItems: 'center'\n              },\n              children: [_jsxDEV(Text, {\n                style: {\n                  color: palette.text,\n                  fontSize: typography.h2,\n                  fontWeight: '600'\n                },\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2752,\n                columnNumber: 19\n              }, this), _jsxDEV(View, {\n                style: {\n                  backgroundColor: statusTone.bg,\n                  borderRadius: 999,\n                  paddingHorizontal: spacing(1.5),\n                  paddingVertical: spacing(0.5)\n                },\n                children: _jsxDEV(Text, {\n                  style: {\n                    color: statusTone.fg,\n                    fontWeight: '600',\n                    fontSize: typography.small\n                  },\n                  children: statusTone.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2754,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2753,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2751,\n              columnNumber: 17\n            }, this), _jsxDEV(Text, {\n              style: {\n                color: palette.muted,\n                marginTop: spacing(0.5)\n              },\n              children: amountLabel\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2757,\n              columnNumber: 17\n            }, this), canManageChangeOrders ? _jsxDEV(View, {\n              style: {\n                flexDirection: 'row',\n                flexWrap: 'wrap',\n                columnGap: spacing(1),\n                rowGap: spacing(1),\n                marginTop: spacing(1.5)\n              },\n              children: [_jsxDEV(QuickAction, {\n                label: \"Approve\",\n                tone: \"success\",\n                onPress: async () => {\n                  await api(`/change-orders/${item.id}`, 'PATCH', {\n                    status: 'APPROVED'\n                  }, token);\n                  loadCO();\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2760,\n                columnNumber: 21\n              }, this), _jsxDEV(QuickAction, {\n                label: \"Reject\",\n                tone: \"danger\",\n                onPress: async () => {\n                  await api(`/change-orders/${item.id}`, 'PATCH', {\n                    status: 'REJECTED'\n                  }, token);\n                  loadCO();\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2765,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2759,\n              columnNumber: 19\n            }, this) : null]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2750,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2735,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: {\n          color: palette.text,\n          fontSize: typography.h2,\n          fontWeight: '700',\n          marginBottom: spacing(1.5)\n        },\n        children: \"Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2777,\n        columnNumber: 9\n      }, this), _jsxDEV(JobTasks, {\n        jobId: jobId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2778,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: {\n          color: palette.text,\n          fontSize: typography.h2,\n          fontWeight: '700',\n          marginTop: spacing(3),\n          marginBottom: spacing(1.5)\n        },\n        children: \"Schedule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2780,\n        columnNumber: 9\n      }, this), _jsxDEV(JobSchedule, {\n        jobId: jobId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2781,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2528,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 2527,\n    columnNumber: 5\n  }, this);\n}\nfunction JobTasks({\n  jobId\n}) {\n  const {\n    token\n  } = useAuth();\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState('');\n  const [dueDate, setDueDate] = useState('');\n  const load = async () => {\n    try {\n      const data = await api(`/tasks?jobId=${jobId}`, 'GET', null, token);\n      setTasks(data);\n      db.transaction(tx => {\n        tx.executeSql('DELETE FROM tasks_cache WHERE jobId=?', [jobId]);\n        data.forEach(t => tx.executeSql('INSERT OR REPLACE INTO tasks_cache (id, jobId, title, status, dueDate) VALUES (?,?,?,?,?)', [t.id, jobId, t.title || '', t.status || 'TODO', t.dueDate || '']));\n      });\n    } catch (e) {\n      db.transaction(tx => tx.executeSql('SELECT id, jobId, title, status, dueDate FROM tasks_cache WHERE jobId=?', [jobId], (_, {\n        rows\n      }) => setTasks(rows._array || [])));\n    }\n  };\n  useEffect(() => {\n    load();\n  }, []);\n  const add = async () => {\n    if (!title.trim()) return Alert.alert('Title required');\n    await api('/tasks', 'POST', {\n      title,\n      jobId,\n      dueDate\n    }, token);\n    setTitle('');\n    setDueDate('');\n    load();\n  };\n  const done = async id => {\n    await api(`/tasks/${id}`, 'PATCH', {\n      status: 'DONE'\n    }, token);\n    load();\n  };\n  const remove = id => {\n    Alert.alert('Delete task', 'Remove this task?', [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Delete',\n      style: 'destructive',\n      onPress: async () => {\n        await api(`/tasks/${id}`, 'DELETE', null, token);\n        load();\n      }\n    }]);\n  };\n  return _jsxDEV(View, {\n    children: [_jsxDEV(SurfaceCard, {\n      style: {\n        marginBottom: spacing(2)\n      },\n      children: [_jsxDEV(Text, {\n        style: {\n          color: palette.text,\n          fontSize: typography.h2,\n          fontWeight: '600',\n          marginBottom: spacing(1.5)\n        },\n        children: \"Add task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2820,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        placeholder: \"Task title\",\n        placeholderTextColor: palette.muted,\n        value: title,\n        onChangeText: setTitle,\n        style: {\n          borderWidth: 1,\n          borderColor: palette.border,\n          borderRadius: 12,\n          padding: spacing(2),\n          color: palette.text,\n          backgroundColor: palette.surfaceMuted,\n          marginBottom: spacing(1.5)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2821,\n        columnNumber: 9\n      }, this), _jsxDEV(DateInputField, {\n        value: dueDate,\n        onChange: setDueDate,\n        placeholder: \"Due date (optional)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2836,\n        columnNumber: 9\n      }, this), _jsxDEV(QuickAction, {\n        label: \"Add task\",\n        onPress: add\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2837,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2819,\n      columnNumber: 7\n    }, this), tasks.length === 0 ? _jsxDEV(SurfaceCard, {\n      children: _jsxDEV(Text, {\n        style: {\n          color: palette.muted\n        },\n        children: \"No tasks yet. Add one to start tracking progress.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2842,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2841,\n      columnNumber: 9\n    }, this) : tasks.map(t => _jsxDEV(SurfaceCard, {\n      style: {\n        marginBottom: spacing(1.5)\n      },\n      children: [_jsxDEV(Text, {\n        style: {\n          color: palette.text,\n          fontWeight: '600',\n          fontSize: typography.h2 - 2\n        },\n        children: t.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2847,\n        columnNumber: 13\n      }, this), _jsxDEV(Text, {\n        style: {\n          color: palette.muted,\n          marginTop: spacing(0.5)\n        },\n        children: [\"Status: \", t.status || 'TODO', t.dueDate ? ` - Due ${formatDate(t.dueDate)}` : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2848,\n        columnNumber: 13\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          columnGap: spacing(1),\n          rowGap: spacing(1),\n          marginTop: spacing(1.5)\n        },\n        children: [!isTaskCompleted(t.status) ? _jsxDEV(QuickAction, {\n          label: \"Mark done\",\n          tone: \"success\",\n          onPress: () => done(t.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2853,\n          columnNumber: 17\n        }, this) : null, _jsxDEV(QuickAction, {\n          label: \"Delete\",\n          tone: \"danger\",\n          onPress: () => remove(t.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2855,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2851,\n        columnNumber: 13\n      }, this)]\n    }, t.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2846,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 2818,\n    columnNumber: 5\n  }, this);\n}\nfunction JobSchedule({\n  jobId\n}) {\n  const {\n    token\n  } = useAuth();\n  const [events, setEvents] = useState([]);\n  const [title, setTitle] = useState('');\n  const [startAt, setStartAt] = useState('');\n  const [endAt, setEndAt] = useState('');\n  const load = async () => {\n    try {\n      const data = await api(`/calendar?jobId=${jobId}`, 'GET', null, token);\n      setEvents(data);\n      db.transaction(tx => {\n        tx.executeSql('DELETE FROM calendar_cache WHERE jobId=?', [jobId]);\n        data.forEach(ev => tx.executeSql('INSERT OR REPLACE INTO calendar_cache (id, jobId, title, startAt, endAt) VALUES (?,?,?,?,?)', [ev.id, jobId, ev.title || '', ev.startAt || '', ev.endAt || '']));\n      });\n    } catch (e) {\n      db.transaction(tx => tx.executeSql('SELECT id, jobId, title, startAt, endAt FROM calendar_cache WHERE jobId=?', [jobId], (_, {\n        rows\n      }) => setEvents(rows._array || [])));\n    }\n  };\n  useEffect(() => {\n    load();\n  }, []);\n  const add = async () => {\n    if (!title.trim() || !startAt) return Alert.alert('Title and start time required');\n    await api('/calendar', 'POST', {\n      title,\n      jobId,\n      startAt,\n      endAt\n    }, token);\n    setTitle('');\n    setStartAt('');\n    setEndAt('');\n    load();\n  };\n  const remove = id => {\n    Alert.alert('Delete event', 'Remove this schedule item?', [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Delete',\n      style: 'destructive',\n      onPress: async () => {\n        await api(`/calendar/${id}`, 'DELETE', null, token);\n        load();\n      }\n    }]);\n  };\n  return _jsxDEV(View, {\n    children: [_jsxDEV(SurfaceCard, {\n      style: {\n        marginBottom: spacing(2)\n      },\n      children: [_jsxDEV(Text, {\n        style: {\n          color: palette.text,\n          fontSize: typography.h2,\n          fontWeight: '600',\n          marginBottom: spacing(1.5)\n        },\n        children: \"Schedule event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2897,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        placeholder: \"Event title\",\n        placeholderTextColor: palette.muted,\n        value: title,\n        onChangeText: setTitle,\n        style: {\n          borderWidth: 1,\n          borderColor: palette.border,\n          borderRadius: 12,\n          padding: spacing(2),\n          color: palette.text,\n          backgroundColor: palette.surfaceMuted,\n          marginBottom: spacing(1.5)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2898,\n        columnNumber: 9\n      }, this), _jsxDEV(DateInputField, {\n        value: startAt,\n        onChange: date => {\n          const existing = startAt || '';\n          const timePartIndex = existing.indexOf('T');\n          const timePart = timePartIndex > -1 ? existing.substring(timePartIndex) : 'T08:00:00';\n          setStartAt(`${date}${timePart}`);\n        },\n        placeholder: \"Start date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2913,\n        columnNumber: 9\n      }, this), _jsxDEV(DateInputField, {\n        value: endAt,\n        onChange: date => {\n          if (!date) {\n            setEndAt('');\n            return;\n          }\n          const existing = endAt || '';\n          const timePartIndex = existing.indexOf('T');\n          const timePart = timePartIndex > -1 ? existing.substring(timePartIndex) : 'T17:00:00';\n          setEndAt(`${date}${timePart}`);\n        },\n        placeholder: \"End date (optional)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2923,\n        columnNumber: 9\n      }, this), _jsxDEV(QuickAction, {\n        label: \"Add event\",\n        onPress: add\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2937,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2896,\n      columnNumber: 7\n    }, this), events.length === 0 ? _jsxDEV(SurfaceCard, {\n      children: _jsxDEV(Text, {\n        style: {\n          color: palette.muted\n        },\n        children: \"No schedule entries yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2942,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2941,\n      columnNumber: 9\n    }, this) : events.map(ev => {\n      const startLabel = ev.startAt ? `Starts ${formatDate(ev.startAt)}` : 'No start date';\n      const endLabel = ev.endAt ? ` - Ends ${formatDate(ev.endAt)}` : '';\n      return _jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(1.5)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontWeight: '600',\n            fontSize: typography.h2 - 2\n          },\n          children: ev.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2950,\n          columnNumber: 15\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(0.5)\n          },\n          children: [startLabel, endLabel]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2951,\n          columnNumber: 15\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            columnGap: spacing(1),\n            marginTop: spacing(1.5)\n          },\n          children: _jsxDEV(QuickAction, {\n            label: \"Delete\",\n            tone: \"danger\",\n            onPress: () => remove(ev.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2955,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2954,\n          columnNumber: 15\n        }, this)]\n      }, ev.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2949,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 2895,\n    columnNumber: 5\n  }, this);\n}\nasync function processQueue(token) {\n  return new Promise(resolve => {\n    db.transaction(tx => {\n      tx.executeSql('SELECT * FROM queue', [], async (_, {\n        rows\n      }) => {\n        const items = rows._array || [];\n        for (const q of items) {\n          try {\n            const payload = JSON.parse(q.payload);\n            if (q.type === 'createLead') {\n              await api('/leads', 'POST', payload, token);\n            }\n            if (q.type === 'uploadPhoto') {\n              await api('/upload/image', 'POST', {\n                dataUrl: payload.dataUrl\n              }, token);\n            }\n            db.transaction(txx => txx.executeSql('DELETE FROM queue WHERE id=?', [q.id]));\n          } catch (e) {}\n        }\n        resolve();\n      });\n    });\n  });\n}\nfunction LeadsScreen({\n  navigation\n}) {\n  const {\n    token\n  } = useAuth();\n  const [leads, setLeads] = useState([]);\n  const [refreshing, setRefreshing] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const fetchLeads = useCallback(async () => {\n    setLoading(true);\n    try {\n      const data = await api('/leads', 'GET', null, token);\n      setLeads(data);\n      db.transaction(tx => {\n        tx.executeSql && tx.executeSql('DELETE FROM leads_cache;');\n        data.forEach(l => tx.executeSql && tx.executeSql('INSERT OR REPLACE INTO leads_cache (id, description, status) VALUES (?,?,?)', [l.id, l.description || '', l.status || 'NEW']));\n      });\n    } catch (e) {\n      db.transaction(tx => tx.executeSql && tx.executeSql('SELECT id, description, status FROM leads_cache', [], (_, {\n        rows\n      }) => setLeads(rows._array || [])));\n    } finally {\n      setLoading(false);\n    }\n  }, [token]);\n  useFocusEffect(useCallback(() => {\n    fetchLeads();\n  }, [fetchLeads]));\n  const onRefresh = useCallback(async () => {\n    setRefreshing(true);\n    await fetchLeads();\n    setRefreshing(false);\n  }, [fetchLeads]);\n  const deleteLead = useCallback(lead => {\n    const title = deriveLeadTitle(lead);\n    Alert.alert('Delete lead', `Remove \"${title}\"?`, [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Delete',\n      style: 'destructive',\n      onPress: async () => {\n        try {\n          await api(`/leads/${lead.id}`, 'DELETE', null, token);\n          setLeads(prev => prev.filter(l => l.id !== lead.id));\n          db.transaction(tx => tx.executeSql && tx.executeSql('DELETE FROM leads_cache WHERE id=?', [lead.id]));\n        } catch (err) {\n          Alert.alert('Error', err.message || 'Unable to delete lead');\n        }\n      }\n    }]);\n  }, [token]);\n  const newLeadsCount = leads.filter(l => (l.status || '').toUpperCase() === 'NEW').length;\n  const renderLeadCard = lead => {\n    const customer = lead.Customer || {};\n    const title = deriveLeadTitle(lead);\n    const subtitle = customer.name && customer.name.trim() && customer.name.trim() !== title ? customer.name : null;\n    const jobsite = lead.Jobsite || {};\n    const addressParts = [jobsite.addressLine1, jobsite.addressLine2, [jobsite.city, jobsite.state].filter(Boolean).join(', '), jobsite.zip].filter(Boolean);\n    const address = addressParts.join(', ');\n    const statusKey = (lead.status || 'NEW').toUpperCase();\n    const tags = Array.isArray(lead.tags) ? lead.tags : [];\n    return _jsxDEV(SurfaceCard, {\n      children: [_jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        children: [_jsxDEV(View, {\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.text,\n              fontSize: typography.h2,\n              fontWeight: '600'\n            },\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3059,\n            columnNumber: 13\n          }, this), subtitle ? _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.5)\n            },\n            children: subtitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3060,\n            columnNumber: 25\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3058,\n          columnNumber: 11\n        }, this), _jsxDEV(StatusPill, {\n          status: statusKey\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3062,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3057,\n        columnNumber: 9\n      }, this), customer.phone ? _jsxDEV(Text, {\n        style: {\n          color: palette.muted,\n          marginTop: spacing(0.5)\n        },\n        children: customer.phone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3064,\n        columnNumber: 27\n      }, this) : null, customer.email ? _jsxDEV(Text, {\n        style: {\n          color: palette.muted\n        },\n        children: customer.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3065,\n        columnNumber: 27\n      }, this) : null, address ? _jsxDEV(Text, {\n        style: {\n          color: palette.muted,\n          marginTop: spacing(1)\n        },\n        children: address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3066,\n        columnNumber: 20\n      }, this) : null, _jsxDEV(Text, {\n        numberOfLines: 3,\n        style: {\n          color: palette.text,\n          marginTop: spacing(1.5)\n        },\n        children: lead.description || 'No scope captured yet.'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3067,\n        columnNumber: 9\n      }, this), tags.length ? _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          columnGap: spacing(1),\n          rowGap: spacing(1),\n          marginTop: spacing(1)\n        },\n        children: tags.map(tag => _jsxDEV(View, {\n          style: {\n            backgroundColor: '#e0f3f0',\n            borderRadius: 999,\n            paddingHorizontal: spacing(1.5),\n            paddingVertical: spacing(0.5)\n          },\n          children: _jsxDEV(Text, {\n            style: {\n              color: palette.primaryStrong,\n              fontWeight: '600',\n              fontSize: typography.small\n            },\n            children: `#${tag}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3072,\n            columnNumber: 17\n          }, this)\n        }, `${lead.id}-${tag}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3071,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3069,\n        columnNumber: 11\n      }, this) : null, _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          columnGap: spacing(1),\n          rowGap: spacing(1),\n          marginTop: spacing(2)\n        },\n        children: [_jsxDEV(QuickAction, {\n          label: \"Open\",\n          onPress: () => navigation.navigate('EstimateEditor', {\n            leadId: lead.id\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3078,\n          columnNumber: 11\n        }, this), _jsxDEV(QuickAction, {\n          label: \"Convert\",\n          tone: \"success\",\n          onPress: () => navigation.navigate('Jobs')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3079,\n          columnNumber: 11\n        }, this), _jsxDEV(QuickAction, {\n          label: \"Delete\",\n          tone: \"danger\",\n          onPress: () => deleteLead(lead)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3080,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3077,\n        columnNumber: 9\n      }, this)]\n    }, lead.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 3056,\n      columnNumber: 7\n    }, this);\n  };\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(FlatList, {\n      data: leads,\n      keyExtractor: item => String(item.id),\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(4)\n      },\n      refreshControl: _jsxDEV(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh,\n        tintColor: palette.primary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3092,\n        columnNumber: 25\n      }, this),\n      ListHeaderComponent: _jsxDEV(View, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginBottom: spacing(2)\n          },\n          children: [_jsxDEV(View, {\n            children: [_jsxDEV(Text, {\n              style: {\n                color: palette.text,\n                fontSize: typography.h1,\n                fontWeight: '700'\n              },\n              children: \"Leads\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3097,\n              columnNumber: 17\n            }, this), _jsxDEV(Text, {\n              style: {\n                color: palette.muted,\n                marginTop: spacing(0.5)\n              },\n              children: \"Keep the funnel moving\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3098,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3096,\n            columnNumber: 15\n          }, this), _jsxDEV(QuickAction, {\n            label: \"New lead\",\n            onPress: () => navigation.navigate('NewLead')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3100,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3095,\n          columnNumber: 13\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            columnGap: spacing(2),\n            rowGap: spacing(2)\n          },\n          children: [_jsxDEV(View, {\n            style: {\n              flexBasis: '48%',\n              minWidth: 160\n            },\n            children: _jsxDEV(SummaryCard, {\n              title: \"Total\",\n              value: leads.length,\n              subtitle: `${newLeadsCount} new`,\n              tone: \"info\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3104,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3103,\n            columnNumber: 15\n          }, this), _jsxDEV(View, {\n            style: {\n              flexBasis: '48%',\n              minWidth: 160\n            },\n            children: _jsxDEV(SummaryCard, {\n              title: \"Outstanding\",\n              value: newLeadsCount,\n              subtitle: \"Require follow up\",\n              tone: \"warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3107,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3106,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3102,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3094,\n        columnNumber: 11\n      }, this),\n      renderItem: ({\n        item\n      }) => renderLeadCard(item),\n      ListEmptyComponent: loading ? _jsxDEV(SurfaceCard, {\n        style: {\n          alignItems: 'center',\n          paddingVertical: spacing(4)\n        },\n        children: [_jsxDEV(ActivityIndicator, {\n          color: palette.primary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3116,\n          columnNumber: 15\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(1)\n          },\n          children: \"Loading leads...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3117,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3115,\n        columnNumber: 13\n      }, this) : _jsxDEV(SurfaceCard, {\n        children: _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: \"No leads yet. Capture a lead to get started.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3121,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3120,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3088,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3087,\n    columnNumber: 5\n  }, this);\n}\nfunction NewLeadScreen({\n  navigation\n}) {\n  const {\n    token\n  } = useAuth();\n  const [description, setDescription] = useState('');\n  const [status, setStatus] = useState('NEW');\n  const [customerName, setCustomerName] = useState('');\n  const [customerPhone, setCustomerPhone] = useState('');\n  const [customerEmail, setCustomerEmail] = useState('');\n  const [addressLine1, setAddressLine1] = useState('');\n  const [addressLine2, setAddressLine2] = useState('');\n  const [city, setCity] = useState('');\n  const [stateCode, setStateCode] = useState('');\n  const [zip, setZip] = useState('');\n  const [leadTags, setLeadTags] = useState([]);\n  const [showCustomerSection, setShowCustomerSection] = useState(false);\n  const [showJobsiteSection, setShowJobsiteSection] = useState(false);\n  const statuses = ['NEW', 'CONTACTED', 'ESTIMATING', 'CONVERTED', 'CLOSED_LOST'];\n  const buildPayload = () => {\n    const customer = [customerName, customerPhone, customerEmail].some(v => v && v.trim()) ? {\n      name: customerName.trim(),\n      phone: customerPhone.trim(),\n      email: customerEmail.trim()\n    } : null;\n    const jobsite = [addressLine1, addressLine2, city, stateCode, zip].some(v => v && v.trim()) ? {\n      addressLine1: addressLine1.trim(),\n      addressLine2: addressLine2.trim(),\n      city: city.trim(),\n      state: stateCode.trim(),\n      zip: zip.trim()\n    } : null;\n    return {\n      description,\n      status,\n      customer,\n      jobsite,\n      tags: Array.isArray(leadTags) ? leadTags.filter(Boolean) : []\n    };\n  };\n  const createLeadOnline = async () => {\n    const payload = buildPayload();\n    const created = await api('/leads', 'POST', payload, token);\n    navigation.replace('EstimateEditor', {\n      leadId: created.id\n    });\n    const title = deriveLeadTitle(created);\n    Alert.alert('Lead created', `\"${title}\" is ready to estimate.`);\n  };\n  const queueLead = () => {\n    const payload = buildPayload();\n    db.transaction(tx => tx.executeSql('INSERT INTO queue (type, payload) VALUES (?,?)', ['createLead', JSON.stringify(payload)]));\n    Alert.alert('Saved offline', 'We will submit this lead when you reconnect.');\n    navigation.goBack();\n  };\n  const submit = async () => {\n    if (!description.trim()) {\n      Alert.alert('Missing scope', 'Please describe the job or scope of work.');\n      return;\n    }\n    try {\n      await createLeadOnline();\n    } catch (e) {\n      queueLead();\n    }\n  };\n  const chipStyle = active => ({\n    paddingHorizontal: spacing(2),\n    paddingVertical: spacing(1),\n    borderRadius: 999,\n    borderWidth: 1,\n    borderColor: active ? palette.primary : palette.border,\n    backgroundColor: active ? '#d9f2ed' : palette.surface\n  });\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(6)\n      },\n      children: [_jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontSize: typography.h1,\n            fontWeight: '700',\n            marginBottom: spacing(2)\n          },\n          children: \"New lead\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3212,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontWeight: '600',\n            marginBottom: spacing(1)\n          },\n          children: \"Scope\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3213,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Describe the job...\",\n          placeholderTextColor: palette.muted,\n          value: description,\n          onChangeText: setDescription,\n          multiline: true,\n          style: {\n            borderWidth: 1,\n            borderColor: palette.border,\n            borderRadius: 12,\n            padding: spacing(2),\n            minHeight: 120,\n            color: palette.text,\n            backgroundColor: palette.surfaceMuted,\n            textAlignVertical: 'top'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3214,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontWeight: '600',\n            marginTop: spacing(2),\n            marginBottom: spacing(1)\n          },\n          children: \"Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3231,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            columnGap: spacing(1),\n            rowGap: spacing(1)\n          },\n          children: statuses.map(s => {\n            const active = status === s;\n            return _jsxDEV(TouchableOpacity, {\n              onPress: () => setStatus(s),\n              activeOpacity: 0.85,\n              style: chipStyle(active),\n              children: _jsxDEV(Text, {\n                style: {\n                  color: active ? palette.primaryStrong : palette.muted,\n                  fontWeight: '600',\n                  fontSize: typography.small\n                },\n                children: s.replace('_', ' ')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3237,\n                columnNumber: 19\n              }, this)\n            }, s, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3236,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3232,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontWeight: '600',\n            marginTop: spacing(2),\n            marginBottom: spacing(0.75)\n          },\n          children: \"Tags\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3242,\n          columnNumber: 11\n        }, this), _jsxDEV(TagInput, {\n          value: leadTags,\n          onChange: setLeadTags,\n          placeholder: \"Add tags (e.g. Roof, Urgent)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3243,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginTop: spacing(3)\n          },\n          children: [_jsxDEV(QuickAction, {\n            label: \"Save offline\",\n            tone: \"muted\",\n            onPress: queueLead\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3245,\n            columnNumber: 13\n          }, this), _jsxDEV(TouchableOpacity, {\n            onPress: submit,\n            activeOpacity: 0.85,\n            style: {\n              backgroundColor: palette.primary,\n              paddingHorizontal: spacing(3),\n              paddingVertical: spacing(1.5),\n              borderRadius: 12\n            },\n            children: _jsxDEV(Text, {\n              style: {\n                color: '#fff',\n                fontWeight: '700'\n              },\n              children: \"Create lead\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3251,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3246,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3244,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3211,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(TouchableOpacity, {\n          onPress: () => setShowCustomerSection(v => !v),\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n          },\n          activeOpacity: 0.8,\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.text,\n              fontSize: typography.h2,\n              fontWeight: '600'\n            },\n            children: \"Customer details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3262,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.primary,\n              fontWeight: '600'\n            },\n            children: showCustomerSection ? 'Hide' : 'Add'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3263,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3257,\n          columnNumber: 11\n        }, this), showCustomerSection ? _jsxDEV(View, {\n          style: {\n            marginTop: spacing(2)\n          },\n          children: [_jsxDEV(TextInput, {\n            placeholder: \"Name\",\n            placeholderTextColor: palette.muted,\n            value: customerName,\n            onChangeText: setCustomerName,\n            style: {\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted,\n              marginBottom: spacing(1.5)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3267,\n            columnNumber: 15\n          }, this), _jsxDEV(TextInput, {\n            placeholder: \"Phone\",\n            placeholderTextColor: palette.muted,\n            keyboardType: \"phone-pad\",\n            value: customerPhone,\n            onChangeText: setCustomerPhone,\n            style: {\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted,\n              marginBottom: spacing(1.5)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3282,\n            columnNumber: 15\n          }, this), _jsxDEV(TextInput, {\n            placeholder: \"Email\",\n            placeholderTextColor: palette.muted,\n            keyboardType: \"email-address\",\n            autoCapitalize: \"none\",\n            value: customerEmail,\n            onChangeText: setCustomerEmail,\n            style: {\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3298,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3266,\n          columnNumber: 13\n        }, this) : _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(1.5)\n          },\n          children: \"Add contact details to help follow up faster.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3316,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3256,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        children: [_jsxDEV(TouchableOpacity, {\n          onPress: () => setShowJobsiteSection(v => !v),\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n          },\n          activeOpacity: 0.8,\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.text,\n              fontSize: typography.h2,\n              fontWeight: '600'\n            },\n            children: \"Jobsite address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3326,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.primary,\n              fontWeight: '600'\n            },\n            children: showJobsiteSection ? 'Hide' : 'Add'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3327,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3321,\n          columnNumber: 11\n        }, this), showJobsiteSection ? _jsxDEV(View, {\n          style: {\n            marginTop: spacing(2)\n          },\n          children: [_jsxDEV(TextInput, {\n            placeholder: \"Address line 1\",\n            placeholderTextColor: palette.muted,\n            value: addressLine1,\n            onChangeText: setAddressLine1,\n            style: {\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted,\n              marginBottom: spacing(1.5)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3331,\n            columnNumber: 15\n          }, this), _jsxDEV(TextInput, {\n            placeholder: \"Address line 2\",\n            placeholderTextColor: palette.muted,\n            value: addressLine2,\n            onChangeText: setAddressLine2,\n            style: {\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted,\n              marginBottom: spacing(1.5)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3346,\n            columnNumber: 15\n          }, this), _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              columnGap: spacing(1.5)\n            },\n            children: [_jsxDEV(View, {\n              style: {\n                flex: 1\n              },\n              children: _jsxDEV(TextInput, {\n                placeholder: \"City\",\n                placeholderTextColor: palette.muted,\n                value: city,\n                onChangeText: setCity,\n                style: {\n                  borderWidth: 1,\n                  borderColor: palette.border,\n                  borderRadius: 12,\n                  padding: spacing(2),\n                  color: palette.text,\n                  backgroundColor: palette.surfaceMuted,\n                  marginBottom: spacing(1.5)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3363,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3362,\n              columnNumber: 17\n            }, this), _jsxDEV(View, {\n              style: {\n                width: 80\n              },\n              children: _jsxDEV(TextInput, {\n                placeholder: \"State\",\n                placeholderTextColor: palette.muted,\n                value: stateCode,\n                onChangeText: setStateCode,\n                style: {\n                  borderWidth: 1,\n                  borderColor: palette.border,\n                  borderRadius: 12,\n                  padding: spacing(2),\n                  color: palette.text,\n                  backgroundColor: palette.surfaceMuted,\n                  marginBottom: spacing(1.5)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3380,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3379,\n              columnNumber: 17\n            }, this), _jsxDEV(View, {\n              style: {\n                width: 100\n              },\n              children: _jsxDEV(TextInput, {\n                placeholder: \"ZIP\",\n                placeholderTextColor: palette.muted,\n                value: zip,\n                onChangeText: setZip,\n                style: {\n                  borderWidth: 1,\n                  borderColor: palette.border,\n                  borderRadius: 12,\n                  padding: spacing(2),\n                  color: palette.text,\n                  backgroundColor: palette.surfaceMuted,\n                  marginBottom: spacing(1.5)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3397,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3396,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3361,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3330,\n          columnNumber: 13\n        }, this) : _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(1.5)\n          },\n          children: \"Add a jobsite to keep crews aligned.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3416,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3320,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 3210,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3209,\n    columnNumber: 5\n  }, this);\n}\nfunction EstimateEditorScreen({\n  route,\n  navigation\n}) {\n  const {\n    token,\n    user\n  } = useAuth();\n  const {\n    leadId\n  } = route.params || {};\n  const [estimateId, setEstimateId] = useState(null);\n  const [items, setItems] = useState([]);\n  const [desc, setDesc] = useState('');\n  const [qty, setQty] = useState('1');\n  const [price, setPrice] = useState('0');\n  const [notes, setNotes] = useState('');\n  const [photoUrl, setPhotoUrl] = useState(null);\n  const [subtotal, setSubtotal] = useState(0);\n  const [taxRate, setTaxRate] = useState('7');\n  const [tax, setTax] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [leadDetails, setLeadDetails] = useState(null);\n  const [leadStatus, setLeadStatus] = useState('NEW');\n  const [leadScope, setLeadScope] = useState('');\n  const [leadCustomerName, setLeadCustomerName] = useState('');\n  const [leadCustomerPhone, setLeadCustomerPhone] = useState('');\n  const [leadCustomerEmail, setLeadCustomerEmail] = useState('');\n  const [leadAddressLine1, setLeadAddressLine1] = useState('');\n  const [leadAddressLine2, setLeadAddressLine2] = useState('');\n  const [leadCity, setLeadCity] = useState('');\n  const [leadStateCode, setLeadStateCode] = useState('');\n  const [leadZip, setLeadZip] = useState('');\n  const leadStatuses = ['NEW', 'CONTACTED', 'ESTIMATING', 'CONVERTED', 'CLOSED_LOST'];\n  const loadLead = useCallback(async () => {\n    if (!leadId) return;\n    try {\n      const data = await api(`/leads/${leadId}`, 'GET', null, token);\n      setLeadDetails(data);\n      setLeadStatus(data.status || 'NEW');\n      setLeadScope(data.description || '');\n      const customer = data.Customer || {};\n      const jobsite = data.Jobsite || {};\n      setLeadCustomerName(customer.name || '');\n      setLeadCustomerPhone(customer.phone || '');\n      setLeadCustomerEmail(customer.email || '');\n      setLeadAddressLine1(jobsite.addressLine1 || '');\n      setLeadAddressLine2(jobsite.addressLine2 || '');\n      setLeadCity(jobsite.city || '');\n      setLeadStateCode(jobsite.state || '');\n      setLeadZip(jobsite.zip || '');\n    } catch (e) {}\n  }, [leadId, token]);\n  useEffect(() => {\n    loadLead();\n  }, [loadLead]);\n  const createEstimate = async () => {\n    const est = await api('/estimates', 'POST', {\n      leadId,\n      customerId: leadDetails?.customerId ?? null,\n      jobsiteId: leadDetails?.jobsiteId ?? null,\n      subtotal: 0,\n      taxRate: parseFloat(taxRate) || 0,\n      total: 0\n    }, token);\n    setEstimateId(est.id);\n    return est;\n  };\n  const ensureEstimate = useCallback(async () => {\n    if (estimateId) return estimateId;\n    const created = await createEstimate();\n    setEstimateId(created.id);\n    return created.id;\n  }, [estimateId, createEstimate]);\n  useEffect(() => {\n    const rate = parseFloat(taxRate) || 0;\n    const newSubtotal = items.reduce((sum, item) => sum + parseFloat(item.qty || 0) * parseFloat(item.unitPrice || 0), 0);\n    const newTax = newSubtotal * (rate / 100);\n    setSubtotal(newSubtotal);\n    setTax(newTax);\n    setTotal(newSubtotal + newTax);\n  }, [items, taxRate]);\n  const addItem = async () => {\n    if (!desc.trim()) {\n      Alert.alert('Line item', 'Please add a description.');\n      return;\n    }\n    try {\n      const targetId = await ensureEstimate();\n      const payload = {\n        description: desc.trim(),\n        qty: parseFloat(qty) || 1,\n        unitPrice: parseFloat(price) || 0\n      };\n      const item = await api(`/estimates/${targetId}/items`, 'POST', payload, token);\n      setItems(prev => [item, ...prev]);\n      setDesc('');\n      setQty('1');\n      setPrice('0');\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to add line item');\n    }\n  };\n  const saveLeadDetails = async () => {\n    if (!leadId) return;\n    const customerPayload = [leadCustomerName, leadCustomerPhone, leadCustomerEmail].some(v => v && v.trim()) ? {\n      name: leadCustomerName.trim(),\n      phone: leadCustomerPhone.trim(),\n      email: leadCustomerEmail.trim()\n    } : null;\n    const jobsitePayload = [leadAddressLine1, leadAddressLine2, leadCity, leadStateCode, leadZip].some(v => v && v.trim()) ? {\n      addressLine1: leadAddressLine1.trim(),\n      addressLine2: leadAddressLine2.trim(),\n      city: leadCity.trim(),\n      state: leadStateCode.trim(),\n      zip: leadZip.trim()\n    } : null;\n    try {\n      await api(`/leads/${leadId}`, 'PATCH', {\n        description: leadScope,\n        status: leadStatus,\n        customer: customerPayload,\n        jobsite: jobsitePayload\n      }, token);\n      Alert.alert('Saved', 'Lead details updated.');\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to save lead details');\n    }\n  };\n  const pickPhoto = async () => {\n    const result = await ImagePicker.launchImageLibraryAsync({\n      allowsEditing: false,\n      quality: 0.6\n    });\n    if (!result.canceled && result.assets?.length) {\n      setPhotoUrl(result.assets[0].uri);\n    }\n  };\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(6)\n      },\n      children: [_jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontSize: typography.h2,\n            fontWeight: '700',\n            marginBottom: spacing(1.5)\n          },\n          children: \"Lead summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3566,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            columnGap: spacing(1),\n            rowGap: spacing(1.5),\n            marginBottom: spacing(2)\n          },\n          children: leadStatuses.map(s => {\n            const selected = leadStatus === s;\n            return _jsxDEV(QuickAction, {\n              label: s.replace('_', ' '),\n              tone: selected ? 'primary' : 'muted',\n              onPress: () => setLeadStatus(s)\n            }, s, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3571,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3567,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Scope / project notes\",\n          placeholderTextColor: palette.muted,\n          value: leadScope,\n          onChangeText: setLeadScope,\n          multiline: true,\n          style: {\n            borderWidth: 1,\n            borderColor: palette.border,\n            borderRadius: 12,\n            padding: spacing(2),\n            minHeight: 120,\n            color: palette.text,\n            backgroundColor: palette.surfaceMuted,\n            textAlignVertical: 'top'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3580,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'flex-end',\n            marginTop: spacing(2)\n          },\n          children: _jsxDEV(QuickAction, {\n            label: \"Save lead\",\n            onPress: saveLeadDetails\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3598,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3597,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3565,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontSize: typography.h2,\n            fontWeight: '700',\n            marginBottom: spacing(1.5)\n          },\n          children: \"Line items\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3603,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Describe the work or material\",\n          placeholderTextColor: palette.muted,\n          value: desc,\n          onChangeText: setDesc,\n          style: {\n            borderWidth: 1,\n            borderColor: palette.border,\n            borderRadius: 12,\n            padding: spacing(2),\n            color: palette.text,\n            backgroundColor: palette.surfaceMuted,\n            marginBottom: spacing(1.5)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3604,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            columnGap: spacing(1.5),\n            marginBottom: spacing(1.5)\n          },\n          children: [_jsxDEV(TextInput, {\n            placeholder: \"Qty\",\n            placeholderTextColor: palette.muted,\n            value: qty,\n            onChangeText: setQty,\n            keyboardType: \"numeric\",\n            style: {\n              flex: 1,\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3620,\n            columnNumber: 13\n          }, this), _jsxDEV(TextInput, {\n            placeholder: \"Unit price\",\n            placeholderTextColor: palette.muted,\n            value: price,\n            onChangeText: setPrice,\n            keyboardType: \"numeric\",\n            style: {\n              flex: 1,\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3636,\n            columnNumber: 13\n          }, this), _jsxDEV(QuickAction, {\n            label: \"Add\",\n            onPress: addItem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3652,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3619,\n          columnNumber: 11\n        }, this), items.length === 0 ? _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: \"No line items yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3655,\n          columnNumber: 13\n        }, this) : items.map((item, idx) => _jsxDEV(SurfaceCard, {\n          style: {\n            marginBottom: spacing(1.5)\n          },\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.text,\n              fontWeight: '600'\n            },\n            children: item.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3659,\n            columnNumber: 17\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.5)\n            },\n            children: [\"Qty \", item.qty, \" x $\", parseFloat(item.unitPrice || 0).toFixed(2), \" = \", (parseFloat(item.qty || 0) * parseFloat(item.unitPrice || 0)).toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3660,\n            columnNumber: 17\n          }, this)]\n        }, item.id || idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3658,\n          columnNumber: 15\n        }, this)), _jsxDEV(View, {\n          style: {\n            marginTop: spacing(2),\n            borderTopWidth: 1,\n            borderTopColor: palette.border,\n            paddingTop: spacing(2)\n          },\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.muted\n            },\n            children: \"Tax rate (%)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3667,\n            columnNumber: 13\n          }, this), _jsxDEV(TextInput, {\n            value: String(taxRate),\n            onChangeText: setTaxRate,\n            keyboardType: \"numeric\",\n            placeholderTextColor: palette.muted,\n            style: {\n              marginTop: spacing(1),\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3668,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: {\n              marginTop: spacing(2)\n            },\n            children: [_jsxDEV(Text, {\n              style: {\n                color: palette.text\n              },\n              children: [\"Subtotal: $\", subtotal.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3684,\n              columnNumber: 15\n            }, this), _jsxDEV(Text, {\n              style: {\n                color: palette.text\n              },\n              children: [\"Tax: $\", tax.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3685,\n              columnNumber: 15\n            }, this), _jsxDEV(Text, {\n              style: {\n                color: palette.text,\n                fontWeight: '700'\n              },\n              children: [\"Total: $\", total.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3686,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3683,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3666,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3602,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontSize: typography.h2,\n            fontWeight: '700',\n            marginBottom: spacing(1.5)\n          },\n          children: \"Attachments & notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3692,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Internal notes\",\n          placeholderTextColor: palette.muted,\n          value: notes,\n          onChangeText: setNotes,\n          multiline: true,\n          style: {\n            borderWidth: 1,\n            borderColor: palette.border,\n            borderRadius: 12,\n            padding: spacing(2),\n            minHeight: 100,\n            color: palette.text,\n            backgroundColor: palette.surfaceMuted,\n            textAlignVertical: 'top'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3693,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            columnGap: spacing(1.5),\n            marginTop: spacing(1.5)\n          },\n          children: _jsxDEV(QuickAction, {\n            label: \"Add photo\",\n            onPress: pickPhoto\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3711,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3710,\n          columnNumber: 11\n        }, this), photoUrl ? _jsxDEV(Image, {\n          source: {\n            uri: photoUrl\n          },\n          style: {\n            height: 160,\n            borderRadius: 12,\n            marginTop: spacing(2)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3714,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3691,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 3564,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3563,\n    columnNumber: 5\n  }, this);\n}\nfunction ScheduleScreen({\n  navigation\n}) {\n  const {\n    token\n  } = useAuth();\n  const [jobs, setJobs] = useState([]);\n  const [filter, setFilter] = useState('ALL');\n  const [queueCount, setQueueCount] = useState(0);\n  const [syncing, setSyncing] = useState(false);\n  const loadQueueCount = useCallback(() => {\n    db.transaction(tx => tx.executeSql('SELECT COUNT(*) as c FROM queue', [], (_, {\n      rows\n    }) => setQueueCount(rows._array?.[0]?.c || 0)));\n  }, []);\n  const load = useCallback(async () => {\n    try {\n      const data = await api('/jobs', 'GET', null, token);\n      setJobs(data);\n      db.transaction(tx => {\n        tx.executeSql('DELETE FROM jobs_cache;');\n        data.forEach(j => tx.executeSql('INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)', [j.id, j.name || '', j.status || 'SCHEDULED', j.startDate || '', j.endDate || '', j.notes || '']));\n      });\n    } catch (e) {\n      db.transaction(tx => tx.executeSql('SELECT id, name, status, startDate, endDate, notes FROM jobs_cache', [], (_, {\n        rows\n      }) => setJobs(rows._array || [])));\n    }\n  }, [token]);\n  useEffect(() => {\n    load();\n    loadQueueCount();\n  }, [load, loadQueueCount]);\n  const filters = [{\n    key: 'ALL',\n    label: 'All'\n  }, {\n    key: 'TODAY',\n    label: 'Today'\n  }, {\n    key: 'WEEK',\n    label: 'This week'\n  }];\n  const inRange = useCallback(dateValue => {\n    if (filter === 'ALL') return true;\n    if (!dateValue) return false;\n    const today = new Date();\n    const dt = new Date(dateValue);\n    if (Number.isNaN(dt.getTime())) return false;\n    if (filter === 'TODAY') {\n      return dt.getFullYear() === today.getFullYear() && dt.getMonth() === today.getMonth() && dt.getDate() === today.getDate();\n    }\n    const start = new Date(today);\n    start.setHours(0, 0, 0, 0);\n    start.setDate(today.getDate() - today.getDay());\n    const end = new Date(start);\n    end.setDate(start.getDate() + 6);\n    return dt >= start && dt <= end;\n  }, [filter]);\n  const filteredJobs = useMemo(() => jobs.filter(job => inRange(job.startDate)).sort((a, b) => new Date(a.startDate || 0) - new Date(b.startDate || 0)), [jobs, inRange]);\n  const openJobInMaps = useCallback(job => {\n    if (!job) return;\n    const jobsite = job.Jobsite || {};\n    const addressParts = [jobsite.addressLine1, jobsite.addressLine2, [jobsite.city, jobsite.state].filter(Boolean).join(' '), jobsite.zip].filter(part => part && String(part).trim());\n    if (!addressParts.length) {\n      Alert.alert('Missing address', 'Add a jobsite address to open navigation.');\n      return;\n    }\n    const address = addressParts.join(', ');\n    Linking.openURL(`https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(address)}`);\n  }, []);\n  const optimizeRoute = useCallback(() => {\n    if (!filteredJobs.length) {\n      Alert.alert('No jobs', 'Apply filters or add jobs before optimizing a route.');\n      return;\n    }\n    const addresses = filteredJobs.map(job => {\n      const site = job.Jobsite || {};\n      const parts = [site.addressLine1, site.addressLine2, [site.city, site.state].filter(Boolean).join(' '), site.zip].filter(part => part && String(part).trim());\n      return parts.length ? parts.join(', ') : null;\n    }).filter(Boolean);\n    if (!addresses.length) {\n      Alert.alert('Missing addresses', 'Add jobsite addresses to build a route.');\n      return;\n    }\n    if (addresses.length === 1) {\n      Linking.openURL(`https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(addresses[0])}`);\n      return;\n    }\n    const origin = addresses[0];\n    const destination = addresses[addresses.length - 1];\n    const waypointsRaw = addresses.slice(1, -1);\n    let url = `https://www.google.com/maps/dir/?api=1&origin=${encodeURIComponent(origin)}&destination=${encodeURIComponent(destination)}`;\n    if (waypointsRaw.length) {\n      url += `&waypoints=${waypointsRaw.map(addr => encodeURIComponent(addr)).join('|')}`;\n    }\n    Linking.openURL(url);\n  }, [filteredJobs]);\n  const techSummary = useMemo(() => {\n    const buckets = {};\n    filteredJobs.forEach(job => {\n      const tech = job?.assignedTech;\n      const key = tech?.fullName || tech?.email || 'Unassigned';\n      buckets[key] = (buckets[key] || 0) + 1;\n    });\n    return Object.entries(buckets);\n  }, [filteredJobs]);\n  const handleSync = useCallback(async () => {\n    setSyncing(true);\n    try {\n      await processQueue(token);\n      await load();\n      loadQueueCount();\n    } finally {\n      setSyncing(false);\n    }\n  }, [token, load, loadQueueCount]);\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(6)\n      },\n      children: [_jsxDEV(Text, {\n        style: {\n          color: palette.text,\n          fontSize: typography.h1,\n          fontWeight: '700',\n          marginBottom: spacing(2)\n        },\n        children: \"Schedule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3853,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          columnGap: spacing(1),\n          rowGap: spacing(1.5),\n          marginBottom: spacing(2)\n        },\n        children: filters.map(option => _jsxDEV(QuickAction, {\n          label: option.label,\n          tone: filter === option.key ? 'primary' : 'muted',\n          onPress: () => setFilter(option.key)\n        }, option.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3856,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3854,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3),\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        children: [_jsxDEV(View, {\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.text,\n              fontWeight: '600'\n            },\n            children: \"Offline queue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3866,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.5)\n            },\n            children: [queueCount, \" items waiting to sync\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3867,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3865,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            columnGap: spacing(1),\n            rowGap: spacing(1)\n          },\n          children: [_jsxDEV(QuickAction, {\n            label: syncing ? 'Syncing...' : 'Sync now',\n            tone: syncing ? 'muted' : 'primary',\n            onPress: syncing ? undefined : handleSync\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3870,\n            columnNumber: 13\n          }, this), _jsxDEV(QuickAction, {\n            label: \"Optimize route\",\n            tone: \"muted\",\n            onPress: optimizeRoute\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3871,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3869,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3864,\n        columnNumber: 9\n      }, this), techSummary.length ? _jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontWeight: '600',\n            marginBottom: spacing(1)\n          },\n          children: \"Technician availability\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3876,\n          columnNumber: 13\n        }, this), techSummary.map(([name, count]) => _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            marginTop: spacing(0.5)\n          },\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.muted\n            },\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3879,\n            columnNumber: 17\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.text\n            },\n            children: [count, \" job\", count === 1 ? '' : 's']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3880,\n            columnNumber: 17\n          }, this)]\n        }, name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3878,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3875,\n        columnNumber: 11\n      }, this) : null, filteredJobs.length === 0 ? _jsxDEV(SurfaceCard, {\n        children: _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: [\"No jobs \", filter !== 'ALL' ? 'in this range' : 'scheduled yet', \". Convert a lead or create a job to populate your schedule.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3888,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3887,\n        columnNumber: 11\n      }, this) : filteredJobs.map(job => {\n        const jobsite = job.Jobsite || {};\n        const addressParts = [jobsite.addressLine1, jobsite.addressLine2, [jobsite.city, jobsite.state].filter(Boolean).join(', '), jobsite.zip].filter(Boolean);\n        const address = addressParts.join(', ');\n        const startLabel = job.startDate ? `Starts ${formatDate(job.startDate)}` : 'No start date';\n        const endLabel = job.endDate ? ` - Due ${formatDate(job.endDate)}` : '';\n        const assignedTech = job.assignedTech;\n        return _jsxDEV(SurfaceCard, {\n          style: {\n            marginBottom: spacing(2)\n          },\n          children: [_jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center'\n            },\n            children: [_jsxDEV(Text, {\n              style: {\n                color: palette.text,\n                fontSize: typography.h2,\n                fontWeight: '600'\n              },\n              children: job.name || `Job #${job.id}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3906,\n              columnNumber: 19\n            }, this), _jsxDEV(StatusPill, {\n              status: job.status || 'SCHEDULED'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3907,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3905,\n            columnNumber: 17\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.5)\n            },\n            children: [startLabel, endLabel]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3909,\n            columnNumber: 17\n          }, this), address ? _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(1)\n            },\n            children: address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3912,\n            columnNumber: 28\n          }, this) : null, assignedTech ? _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.5)\n            },\n            children: [\"Assigned to \", assignedTech.fullName || assignedTech.email || 'Tech']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3914,\n            columnNumber: 19\n          }, this) : null, job.notes ? _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(1)\n            },\n            children: job.notes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3918,\n            columnNumber: 30\n          }, this) : null, _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              flexWrap: 'wrap',\n              columnGap: spacing(1),\n              rowGap: spacing(1),\n              marginTop: spacing(2)\n            },\n            children: [address ? _jsxDEV(QuickAction, {\n              label: \"Map\",\n              tone: \"muted\",\n              onPress: () => openJobInMaps(job)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3920,\n              columnNumber: 30\n            }, this) : null, _jsxDEV(QuickAction, {\n              label: \"Open job\",\n              onPress: () => navigation.navigate('JobDetail', {\n                jobId: job.id\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3921,\n              columnNumber: 19\n            }, this), _jsxDEV(QuickAction, {\n              label: \"View tasks\",\n              onPress: () => navigation.navigate('JobDetail', {\n                jobId: job.id,\n                tab: 'tasks'\n              }),\n              tone: \"muted\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3922,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3919,\n            columnNumber: 17\n          }, this)]\n        }, job.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3904,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 3852,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3851,\n    columnNumber: 5\n  }, this);\n}\nfunction ProfileScreen({\n  navigation\n}) {\n  const {\n    setToken,\n    user\n  } = useAuth();\n  const isAdmin = (user?.role || '').toUpperCase() === 'ADMIN';\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(6)\n      },\n      children: [_jsxDEV(Text, {\n        style: {\n          color: palette.text,\n          fontSize: typography.h1,\n          fontWeight: '700',\n          marginBottom: spacing(2)\n        },\n        children: \"Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3938,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontSize: typography.small,\n            textTransform: 'uppercase',\n            fontWeight: '600'\n          },\n          children: \"Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3940,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontSize: typography.h2,\n            fontWeight: '700',\n            marginTop: spacing(1)\n          },\n          children: user?.name || user?.fullName || 'Team member'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3941,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(0.5)\n          },\n          children: user?.email || 'No email on file'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3942,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(0.5)\n          },\n          children: [\"Role: \", user?.role || 'TECH']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3943,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3939,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontSize: typography.small,\n            textTransform: 'uppercase',\n            fontWeight: '600',\n            marginBottom: spacing(1.5)\n          },\n          children: \"Actions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3947,\n          columnNumber: 11\n        }, this), isAdmin ? _jsxDEV(View, {\n          style: {\n            marginBottom: spacing(1.5)\n          },\n          children: _jsxDEV(QuickAction, {\n            label: \"Manage users\",\n            onPress: () => navigation.navigate('UsersAdmin')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3950,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3949,\n          columnNumber: 13\n        }, this) : null, _jsxDEV(QuickAction, {\n          label: \"Sign out\",\n          tone: \"danger\",\n          onPress: () => setToken(null)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3953,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3946,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 3937,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3936,\n    columnNumber: 5\n  }, this);\n}\nconst Stack = createNativeStackNavigator();\nconst Tabs = createBottomTabNavigator();\nfunction TabsNav() {\n  const {\n    user\n  } = useAuth();\n  const isAdmin = (user?.role || '').toUpperCase() === 'ADMIN';\n  const {\n    width\n  } = useWindowDimensions();\n  const isCompact = Platform.OS !== 'web' ? true : width < 768;\n  const hideTabs = isCompact;\n  return _jsxDEV(Tabs.Navigator, {\n    screenOptions: {\n      headerShown: false,\n      tabBarActiveTintColor: palette.primary,\n      tabBarStyle: {\n        backgroundColor: '#fff',\n        display: hideTabs ? 'none' : 'flex'\n      }\n    },\n    children: [_jsxDEV(Tabs.Screen, {\n      name: \"Dashboard\",\n      component: DashboardScreen,\n      options: {\n        title: 'Home'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3976,\n      columnNumber: 7\n    }, this), _jsxDEV(Tabs.Screen, {\n      name: \"Leads\",\n      component: LeadsScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3977,\n      columnNumber: 7\n    }, this), _jsxDEV(Tabs.Screen, {\n      name: \"Jobs\",\n      component: JobsKanbanScreen,\n      options: {\n        title: 'Jobs'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3978,\n      columnNumber: 7\n    }, this), isAdmin ? _jsxDEV(Tabs.Screen, {\n      name: \"Invoices\",\n      component: InvoicesScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3979,\n      columnNumber: 18\n    }, this) : null, _jsxDEV(Tabs.Screen, {\n      name: \"Schedule\",\n      component: ScheduleScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3980,\n      columnNumber: 7\n    }, this), _jsxDEV(Tabs.Screen, {\n      name: \"Profile\",\n      component: ProfileScreen,\n      options: {\n        title: \"Profile\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3981,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 3969,\n    columnNumber: 5\n  }, this);\n}\nfunction MobileHeader({\n  currentRoute,\n  onNavigate,\n  isAdmin\n}) {\n  const [menuVisible, setMenuVisible] = useState(false);\n  const activeRoute = useMemo(() => {\n    if (currentRoute === 'JobDetail') return 'Jobs';\n    return currentRoute;\n  }, [currentRoute]);\n  const menuItems = useMemo(() => {\n    const items = [{\n      label: 'Dashboard',\n      route: 'Dashboard'\n    }, {\n      label: 'Leads',\n      route: 'Leads'\n    }, {\n      label: 'Jobs',\n      route: 'Jobs'\n    }];\n    if (isAdmin) {\n      items.push({\n        label: 'Invoices',\n        route: 'Invoices'\n      });\n    }\n    items.push({\n      label: 'Schedule',\n      route: 'Schedule'\n    }, {\n      label: 'Profile',\n      route: 'Profile'\n    });\n    if (isAdmin) {\n      items.push({\n        label: 'Manage users',\n        route: 'UsersAdmin'\n      });\n    }\n    return items;\n  }, [isAdmin]);\n  const handleSelect = useCallback(route => {\n    setMenuVisible(false);\n    onNavigate(route);\n  }, [onNavigate]);\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(SafeAreaView, {\n      style: {\n        backgroundColor: '#0B0C10'\n      },\n      children: _jsxDEV(View, {\n        style: {\n          paddingHorizontal: spacing(2),\n          paddingVertical: spacing(1.5),\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'space-between'\n        },\n        children: [_jsxDEV(TouchableOpacity, {\n          onPress: () => setMenuVisible(true),\n          accessibilityLabel: \"Open navigation menu\",\n          accessibilityRole: \"button\",\n          style: {\n            padding: spacing(1)\n          },\n          children: [_jsxDEV(View, {\n            style: {\n              width: 24,\n              height: 2,\n              backgroundColor: '#fff',\n              borderRadius: 999,\n              marginBottom: 4\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4027,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: {\n              width: 24,\n              height: 2,\n              backgroundColor: '#fff',\n              borderRadius: 999,\n              marginBottom: 4\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4028,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: {\n              width: 24,\n              height: 2,\n              backgroundColor: '#fff',\n              borderRadius: 999\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4029,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 4021,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: '#fff',\n            fontSize: typography.h1,\n            fontWeight: '700'\n          },\n          children: \"Precision Tracker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4031,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            width: 24\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4032,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 4020,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4019,\n      columnNumber: 7\n    }, this), _jsxDEV(Modal, {\n      visible: menuVisible,\n      animationType: \"fade\",\n      transparent: true,\n      onRequestClose: () => setMenuVisible(false),\n      children: _jsxDEV(View, {\n        style: {\n          flex: 1,\n          backgroundColor: 'rgba(15,23,42,0.6)',\n          justifyContent: 'flex-start',\n          padding: spacing(3)\n        },\n        children: _jsxDEV(View, {\n          style: {\n            backgroundColor: palette.surface,\n            borderRadius: 16,\n            padding: spacing(2.5)\n          },\n          children: [_jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              marginBottom: spacing(2)\n            },\n            children: [_jsxDEV(Text, {\n              style: {\n                color: palette.text,\n                fontSize: typography.h2,\n                fontWeight: '700'\n              },\n              children: \"Navigate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4044,\n              columnNumber: 15\n            }, this), _jsxDEV(TouchableOpacity, {\n              onPress: () => setMenuVisible(false),\n              accessibilityRole: \"button\",\n              accessibilityLabel: \"Close menu\",\n              children: _jsxDEV(Text, {\n                style: {\n                  color: palette.muted,\n                  fontWeight: '600'\n                },\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 4046,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4045,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 4043,\n            columnNumber: 13\n          }, this), menuItems.map(item => {\n            const selected = activeRoute === item.route;\n            return _jsxDEV(TouchableOpacity, {\n              onPress: () => handleSelect(item.route),\n              activeOpacity: 0.85,\n              style: {\n                paddingVertical: spacing(1.25),\n                paddingHorizontal: spacing(1.5),\n                borderRadius: 12,\n                backgroundColor: selected ? '#d9f2ed' : palette.surfaceMuted,\n                marginBottom: spacing(1)\n              },\n              children: _jsxDEV(Text, {\n                style: {\n                  color: selected ? palette.primaryStrong : palette.text,\n                  fontWeight: '600',\n                  fontSize: typography.body\n                },\n                children: item.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 4064,\n                columnNumber: 19\n              }, this)\n            }, item.route, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4052,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 4042,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 4041,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4035,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\nfunction LoginScreen() {\n  const [email, setEmail] = useState('admin@example.com');\n  const [password, setPassword] = useState('test123');\n  const [busy, setBusy] = useState(false);\n  const {\n    setToken,\n    setUser\n  } = useAuth();\n  async function login() {\n    try {\n      setBusy(true);\n      const res = await fetch(`${API_URL}/auth/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await res.json();\n      if (!res.ok) throw new Error(data?.message || data?.error || 'Login failed');\n      const tok = data.token || data.accessToken;\n      if (!tok) throw new Error('No token returned from server');\n      const normalizedUser = data.user ? Object.assign({}, data.user, {\n        role: normalizeRole(data.user.role)\n      }) : {\n        email,\n        role: 'ADMIN',\n        name: 'Admin'\n      };\n      setToken(tok);\n      setUser(normalizedUser);\n      try {\n        await SecureStore.setItemAsync('auth_token', tok);\n        await SecureStore.setItemAsync('auth_user', JSON.stringify(normalizedUser));\n      } catch {}\n      Alert.alert('Welcome', 'Logged in');\n    } catch (e) {\n      Alert.alert('Error', e.message);\n    } finally {\n      setBusy(false);\n    }\n  }\n  return _jsxDEV(View, {\n    style: {\n      flex: 1,\n      padding: 20,\n      justifyContent: 'center'\n    },\n    children: [_jsxDEV(Text, {\n      style: {\n        fontSize: 24,\n        marginBottom: 16\n      },\n      children: \"PrecisionTracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4121,\n      columnNumber: 7\n    }, this), _jsxDEV(TextInput, {\n      placeholder: \"Email\",\n      autoCapitalize: \"none\",\n      value: email,\n      onChangeText: setEmail,\n      style: {\n        borderWidth: 1,\n        padding: 12,\n        marginBottom: 12\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4122,\n      columnNumber: 7\n    }, this), _jsxDEV(TextInput, {\n      placeholder: \"Password\",\n      secureTextEntry: true,\n      value: password,\n      onChangeText: setPassword,\n      style: {\n        borderWidth: 1,\n        padding: 12,\n        marginBottom: 12\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4129,\n      columnNumber: 7\n    }, this), _jsxDEV(Button, {\n      title: busy ? 'Signing in...' : 'Sign in',\n      onPress: login,\n      disabled: busy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 4120,\n    columnNumber: 5\n  }, this);\n}\nexport default function App() {\n  const [token, setToken] = useState(null);\n  const [user, setUser] = useState(null);\n  const [booting, setBooting] = useState(true);\n  const navigationRef = useRef(null);\n  const [currentRoute, setCurrentRoute] = useState('Dashboard');\n  const {\n    width\n  } = useWindowDimensions();\n  const isCompactLayout = Platform.OS !== 'web' ? true : width < 768;\n  useEffect(() => {\n    let mounted = true;\n    (async () => {\n      try {\n        const [tok, usr] = await Promise.all([SecureStore.getItemAsync('auth_token'), SecureStore.getItemAsync('auth_user')]);\n        if (mounted && tok) {\n          setToken(tok);\n          if (usr) {\n            const parsed = JSON.parse(usr);\n            parsed.role = normalizeRole(parsed.role);\n            setUser(parsed);\n          }\n        }\n      } catch {} finally {\n        if (mounted) setBooting(false);\n      }\n    })();\n    return () => {\n      mounted = false;\n    };\n  }, []);\n  const authValue = {\n    token,\n    setToken: t => {\n      setToken(t);\n      if (!t) {\n        try {\n          SecureStore.deleteItemAsync('auth_token');\n          SecureStore.deleteItemAsync('auth_user');\n        } catch {}\n      }\n    },\n    user,\n    setUser\n  };\n  const updateCurrentRoute = useCallback(() => {\n    if (!navigationRef.current) return;\n    const current = navigationRef.current.getCurrentRoute();\n    if (!current) return;\n    let name = current.name;\n    let state = current.state;\n    while (state && typeof state.index === 'number' && state.routes && state.routes[state.index]) {\n      const nested = state.routes[state.index];\n      name = nested.name;\n      state = nested.state;\n    }\n    if (name) setCurrentRoute(name);\n  }, []);\n  const handleNavigate = useCallback(routeName => {\n    if (!navigationRef.current) return;\n    const tabRoutes = ['Dashboard', 'Leads', 'Jobs', 'Invoices', 'Schedule', 'Profile'];\n    if (tabRoutes.includes(routeName)) {\n      navigationRef.current.navigate('Tabs', {\n        screen: routeName\n      });\n    } else {\n      navigationRef.current.navigate(routeName);\n    }\n  }, []);\n  if (booting) {\n    return _jsxDEV(SafeAreaView, {\n      style: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: _jsxDEV(Text, {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 4210,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4209,\n      columnNumber: 7\n    }, this);\n  }\n  return _jsxDEV(AuthContext.Provider, {\n    value: authValue,\n    children: _jsxDEV(View, {\n      style: {\n        flex: 1,\n        backgroundColor: palette.background\n      },\n      children: [isCompactLayout && token ? _jsxDEV(MobileHeader, {\n        currentRoute: currentRoute,\n        onNavigate: handleNavigate,\n        isAdmin: (user?.role || '').toUpperCase() === 'ADMIN'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 4219,\n        columnNumber: 11\n      }, this) : null, _jsxDEV(View, {\n        style: {\n          flex: 1\n        },\n        children: _jsxDEV(NavigationContainer, {\n          ref: navigationRef,\n          onReady: updateCurrentRoute,\n          onStateChange: updateCurrentRoute,\n          children: !token ? _jsxDEV(Stack.Navigator, {\n            children: _jsxDEV(Stack.Screen, {\n              name: \"Login\",\n              component: LoginScreen\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4233,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4232,\n            columnNumber: 15\n          }, this) : _jsxDEV(Stack.Navigator, {\n            children: [_jsxDEV(Stack.Screen, {\n              name: \"Tabs\",\n              component: TabsNav,\n              options: {\n                headerShown: false\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4237,\n              columnNumber: 17\n            }, this), _jsxDEV(Stack.Screen, {\n              name: \"NewLead\",\n              component: NewLeadScreen,\n              options: {\n                title: 'New Lead'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4238,\n              columnNumber: 17\n            }, this), _jsxDEV(Stack.Screen, {\n              name: \"EstimateEditor\",\n              component: EstimateEditorScreen,\n              options: {\n                title: 'Estimate'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4239,\n              columnNumber: 17\n            }, this), _jsxDEV(Stack.Screen, {\n              name: \"Signature\",\n              component: SignatureScreen,\n              options: {\n                title: 'Signature'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4240,\n              columnNumber: 17\n            }, this), _jsxDEV(Stack.Screen, {\n              name: \"UsersAdmin\",\n              component: UsersAdminScreen,\n              options: {\n                title: 'Users (Admin)'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4241,\n              columnNumber: 17\n            }, this), _jsxDEV(Stack.Screen, {\n              name: \"JobDetail\",\n              component: JobDetailScreen,\n              options: {\n                title: 'Job'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4242,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 4236,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4226,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 4225,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 4217,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4216,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"names":["React","useEffect","useState","createContext","useContext","useRef","useCallback","useMemo","NavigationContainer","useFocusEffect","createNativeStackNavigator","createBottomTabNavigator","Text","TextInput","Button","FlatList","TouchableOpacity","SafeAreaView","Alert","Image","ScrollView","RefreshControl","ActivityIndicator","Modal","useWindowDimensions","Linking","ImagePicker","FileSystem","SQLite","Svg","Path","ViewShot","Platform","View","SecureStore","DateTimePicker","DateTimePickerAndroid","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","process","env","EXPO_PUBLIC_API_URL","initOfflineTables","database","transaction","tx","executeSql","e","db","getDb","OS","fn","execAsync","runAsync","openDatabaseSync","dbHandle","normalizeRole","role","r","String","toUpperCase","includes","AuthContext","useAuth","api","path","method","body","token","headers","Object","assign","Authorization","response","fetch","JSON","stringify","undefined","networkError","Error","message","contentType","get","rawBody","text","data","parse","ok","error","palette","background","surface","surfaceMuted","border","muted","primary","primaryStrong","success","warning","danger","info","spacing","step","typography","h1","h2","small","lineHeightFor","fontSize","Math","round","defaultLineHeight","defaultProps","style","lineHeight","floatingShadow","select","ios","shadowColor","shadowOpacity","shadowRadius","shadowOffset","width","height","android","elevation","default","pillTone","NEW","fg","bg","label","CONTACTED","ESTIMATING","CONVERTED","CLOSED_LOST","SCHEDULED","IN_PROGRESS","COMPLETED","COMPLETE","DONE","ON_HOLD","CANCELLED","DRAFT","SENT","PART_PAID","PAID","VOID","toneMap","formInputBaseStyle","borderWidth","borderColor","borderRadius","paddingVertical","paddingHorizontal","color","backgroundColor","marginBottom","FormInput","forwardRef","props","ref","placeholderTextColor","fileName","_jsxFileName","lineNumber","columnNumber","displayName","formatCurrency","value","amount","Number","isNaN","toLocaleString","minimumFractionDigits","maximumFractionDigits","formatDate","d","Date","getTime","toLocaleDateString","month","day","isTaskCompleted","status","key","SurfaceCard","children","onPress","content","padding","activeOpacity","StatusPill","cfg","fontWeight","SummaryCard","title","subtitle","tone","colors","textTransform","marginTop","StatusCard","description","flexGrow","flexBasis","TagInput","onChange","placeholder","draft","setDraft","tags","Array","isArray","filter","Boolean","map","tag","cleanTag","input","cleaned","replace","trim","handleChangeText","segments","split","pending","pop","nextTags","forEach","segment","exists","some","existing","toLowerCase","push","length","handleAdd","handleSubmit","handleRemove","next","entry","flexDirection","flexWrap","columnGap","rowGap","alignItems","marginLeft","onChangeText","onSubmitEditing","flex","autoCapitalize","autoCorrect","QuickAction","SectionHeader","actionLabel","onAction","justifyContent","toneStyles","textColor","toInputDate","dateValue","yyyy","getFullYear","mm","getMonth","padStart","dd","getDate","parseInputDate","parsed","deriveLeadTitle","lead","customerName","Customer","name","firstLine","slice","id","DateInputField","minimumDate","maximumDate","iosPickerVisible","setIosPickerVisible","isWeb","toDateOnly","datePart","normalizedValue","minDateString","maxDateString","displayLabel","applyDate","selectedDate","handleManualChange","openPicker","baseDate","open","mode","event","selected","type","containerStyle","nativeEvent","target","min","max","display","TECH_ASSIGN_ROLES","TechSelector","team","onSelect","allowAllRoles","allowClear","options","normalized","member","renderLabel","fullName","email","shortLabel","DashboardScreen","navigation","user","loading","setLoading","refreshing","setRefreshing","leads","setLeads","jobs","setJobs","tasks","setTasks","invoiceSummary","setInvoiceSummary","lastUpdated","setLastUpdated","isAdmin","jobLookup","job","loadData","isPullRefresh","fetchLeads","l","Promise","resolve","_","rows","fallback","_array","fetchJobs","j","startDate","endDate","notes","fetchTasks","t","jobId","dueDate","fetchInvoiceSummary","all","onRefresh","newLeads","activeJobs","openTasks","outstandingValue","outstanding","collectedValue","collected","overdueCount","overdueTasks","today","setHours","task","due","statusCards","topLeads","topJobs","nextTasks","contentContainerStyle","paddingBottom","refreshControl","tintColor","navigate","focus","card","minWidth","idx","startLabel","endLabel","join","numberOfLines","tab","leadId","textAlign","toLocaleTimeString","hour","minute","SignaturePad","onCapturePng","points","setPoints","setPath","shotRef","format","quality","result","onStartShouldSetResponder","onResponderMove","x","locationX","y","locationY","p","onResponderRelease","base64","current","capture","stroke","strokeWidth","fill","SignatureScreen","route","estimateId","params","sigPng","setSigPng","save","alert","resp","signaturePngUrl","paymentLink","goBack","userRoleOptions","invoiceStatusOptions","UsersAdminScreen","users","setUsers","setEmail","setFullName","setRole","inviting","setInviting","load","resetForm","invite","trimmedEmail","trimmedName","promote","newRole","remove","renderRolePill","roleCfg","find","option","renderRoleSelector","selectedRole","keyExtractor","u","ListHeaderComponent","keyboardType","disabled","opacity","ListEmptyComponent","renderItem","item","normalizedRole","InvoicesScreen","summary","setSummary","invoices","setInvoices","setFilter","newInvoiceJobId","setNewInvoiceJobId","newInvoiceAmount","setNewInvoiceAmount","newInvoiceIssuedAt","setNewInvoiceIssuedAt","newInvoiceDueAt","setNewInvoiceDueAt","newInvoiceStatus","setNewInvoiceStatus","creatingInvoice","setCreatingInvoice","isRefresh","summaryData","list","nextInvoiceNumber","maxNumber","reduce","acc","inv","match","number","parseInt","resetInvoiceForm","createInvoice","amountValue","parseFloat","jobIdTrimmed","jobIdValue","payload","issuedAt","dueAt","created","deleteInvoice","invoice","filters","filteredInvoices","drafts","draftAmount","totalCount","f","payments","Payments","sum","balance","statusKey","JobsKanbanScreen","newJobName","setNewJobName","newJobStartDate","setNewJobStartDate","newJobDueDate","setNewJobDueDate","newJobNotes","setNewJobNotes","newCustomerName","setNewCustomerName","newCustomerPhone","setNewCustomerPhone","newCustomerEmail","setNewCustomerEmail","newAddressLine1","setNewAddressLine1","newAddressLine2","setNewAddressLine2","newCity","setNewCity","newStateCode","setNewStateCode","newZip","setNewZip","jobFormTab","setJobFormTab","newJobTags","setNewJobTags","statusOrder","scrollRef","selectedTag","setSelectedTag","selectedCity","setSelectedCity","selectedUrgency","setSelectedUrgency","scrollTo","animated","setParams","availableTags","set","Set","add","from","sort","a","b","localeCompare","availableCities","city","Jobsite","urgencyFilters","filteredJobsRaw","hasTag","start","diff","ceil","hasFilters","clearFilters","createJob","hasCustomer","v","hasAddress","customer","phone","billingAddress","jobsite","addressLine1","addressLine2","state","zip","prev","updateJobStatus","updated","removeJob","sortedJobs","normalize","rank","indexOf","parseDateSafe","statusDiff","startA","startB","groupedJobs","groups","currentStatus","statusLabel","charAt","quickStatusActions","inputStyle","jobTabs","renderJobFormFields","multiline","minHeight","textAlignVertical","group","addressParts","address","assignedTech","openJobInMaps","action","JobDetailScreen","jobName","setJobName","jobStartDate","setJobStartDate","jobEndDate","setJobEndDate","jobNotes","setJobNotes","jobCustomerName","setJobCustomerName","jobCustomerPhone","setJobCustomerPhone","jobCustomerEmail","setJobCustomerEmail","jobAddressLine1","setJobAddressLine1","jobAddressLine2","setJobAddressLine2","jobCity","setJobCity","jobStateCode","setJobStateCode","jobZip","setJobZip","jobTags","setJobTags","assignedTechId","setAssignedTechId","setTeam","assigningTech","setAssigningTech","jobAttachments","setJobAttachments","loadingAttachments","setLoadingAttachments","uploadingAttachment","setUploadingAttachment","jobActivity","setJobActivity","newActivityNote","setNewActivityNote","addingActivity","setAddingActivity","changeOrders","setCO","setTitle","amountDelta","setAmountDelta","roleKey","canManageChangeOrders","canAssignTech","loadCO","loadJob","activityLog","assignedTo","loadTeam","active","loadAttachments","addCO","saveJobDetails","deleteJob","screen","handleAssignTech","techId","scheduleFollowUp","channel","scheduledFor","now","toISOString","template","console","warn","handleCallCustomer","openURL","scheduled","handleTextCustomer","encodeURIComponent","handleEmailCustomer","subject","handleOpenJobsiteMap","parts","handleUploadAttachment","permission","requestMediaLibraryPermissionsAsync","granted","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsMultipleSelection","canceled","asset","assets","uri","readAsStringAsync","encoding","EncodingType","Base64","dataUrl","mimeType","uploaded","entityType","entityId","fileUrl","url","handleDeleteAttachment","att","addActivityEntry","trimmed","note","author","createdAt","nextLog","activityItems","aTime","bTime","isImage","test","overflow","source","resizeMode","caption","uploader","borderTopWidth","borderTopColor","paddingTop","statusTone","amountLabel","JobTasks","JobSchedule","setDueDate","done","events","setEvents","startAt","setStartAt","endAt","setEndAt","ev","date","timePartIndex","timePart","substring","processQueue","items","q","txx","LeadsScreen","deleteLead","err","newLeadsCount","renderLeadCard","NewLeadScreen","setDescription","setStatus","setCustomerName","customerPhone","setCustomerPhone","customerEmail","setCustomerEmail","setAddressLine1","setAddressLine2","setCity","stateCode","setStateCode","setZip","leadTags","setLeadTags","showCustomerSection","setShowCustomerSection","showJobsiteSection","setShowJobsiteSection","statuses","buildPayload","createLeadOnline","queueLead","submit","chipStyle","s","EstimateEditorScreen","setEstimateId","setItems","desc","setDesc","qty","setQty","price","setPrice","setNotes","photoUrl","setPhotoUrl","subtotal","setSubtotal","taxRate","setTaxRate","tax","setTax","total","setTotal","leadDetails","setLeadDetails","leadStatus","setLeadStatus","leadScope","setLeadScope","leadCustomerName","setLeadCustomerName","leadCustomerPhone","setLeadCustomerPhone","leadCustomerEmail","setLeadCustomerEmail","leadAddressLine1","setLeadAddressLine1","leadAddressLine2","setLeadAddressLine2","leadCity","setLeadCity","leadStateCode","setLeadStateCode","leadZip","setLeadZip","leadStatuses","loadLead","createEstimate","est","customerId","jobsiteId","ensureEstimate","rate","newSubtotal","unitPrice","newTax","addItem","targetId","saveLeadDetails","customerPayload","jobsitePayload","pickPhoto","allowsEditing","toFixed","ScheduleScreen","queueCount","setQueueCount","syncing","setSyncing","loadQueueCount","c","inRange","dt","setDate","getDay","end","filteredJobs","part","optimizeRoute","addresses","site","origin","destination","waypointsRaw","addr","techSummary","buckets","tech","entries","handleSync","count","ProfileScreen","setToken","Stack","Tabs","TabsNav","isCompact","hideTabs","Navigator","screenOptions","headerShown","tabBarActiveTintColor","tabBarStyle","Screen","component","MobileHeader","currentRoute","onNavigate","menuVisible","setMenuVisible","activeRoute","menuItems","handleSelect","accessibilityLabel","accessibilityRole","visible","animationType","transparent","onRequestClose","LoginScreen","password","setPassword","busy","setBusy","setUser","login","res","json","tok","accessToken","normalizedUser","setItemAsync","secureTextEntry","App","booting","setBooting","navigationRef","setCurrentRoute","isCompactLayout","mounted","usr","getItemAsync","authValue","deleteItemAsync","updateCurrentRoute","getCurrentRoute","index","routes","nested","handleNavigate","routeName","tabRoutes","Provider","onReady","onStateChange"],"sources":["C:/Users/Tyler/Downloads/PrecisionTracker-v4-wired/PrecisionTracker/mobile/App.js"],"sourcesContent":["\r\nimport React, { useEffect, useState, createContext, useContext, useRef, useCallback, useMemo } from 'react';\r\nimport { NavigationContainer, useFocusEffect } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport {Text, TextInput, Button, FlatList, TouchableOpacity, SafeAreaView, Alert, Image, ScrollView, RefreshControl, ActivityIndicator, Modal, useWindowDimensions, Linking } from 'react-native';\nimport * as ImagePicker from 'expo-image-picker';\r\nimport * as FileSystem from 'expo-file-system';\r\nimport * as SQLite from 'expo-sqlite';\r\nimport Svg, { Path } from 'react-native-svg';\r\nimport ViewShot from 'react-native-view-shot';\r\nimport { Platform, View } from 'react-native';\r\nimport * as SecureStore from 'expo-secure-store';\r\nimport DateTimePicker, { DateTimePickerAndroid } from '@react-native-community/datetimepicker';\r\n// import * as SQLite from 'expo-sqlite';\r\n\r\n\r\nconst API_URL = process.env.EXPO_PUBLIC_API_URL || 'http://localhost:4000';\r\n// const db = SQLite.openDatabase('offline.db');\r\n\r\n// function initDB(){\r\n//   db.transaction(tx => {\r\n//     tx.executeSql('CREATE TABLE IF NOT EXISTS queue (id INTEGER PRIMARY KEY AUTOINCREMENT, type TEXT, payload TEXT);');\r\n//     tx.executeSql('CREATE TABLE IF NOT EXISTS uploads (id INTEGER PRIMARY KEY AUTOINCREMENT, dataUrl TEXT);');\r\n//     tx.executeSql('CREATE TABLE IF NOT EXISTS leads_cache (id INTEGER PRIMARY KEY, description TEXT, status TEXT);');\r\n//   });\r\n// }\r\n\r\nfunction initOfflineTables(database){\r\n  try {\r\n    if (!database || typeof database.transaction !== 'function') return;\r\n    database.transaction(tx => {\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS queue (id INTEGER PRIMARY KEY AUTOINCREMENT, type TEXT, payload TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS uploads (id INTEGER PRIMARY KEY AUTOINCREMENT, dataUrl TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS leads_cache (id INTEGER PRIMARY KEY, description TEXT, status TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS jobs_cache (id INTEGER PRIMARY KEY, name TEXT, status TEXT, startDate TEXT, endDate TEXT, notes TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS tasks_cache (id INTEGER PRIMARY KEY, jobId INTEGER, title TEXT, status TEXT, dueDate TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS calendar_cache (id INTEGER PRIMARY KEY, jobId INTEGER, title TEXT, startAt TEXT, endAt TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS estimates_cache (id INTEGER PRIMARY KEY, leadId INTEGER, subtotal REAL, taxRate REAL, total REAL, status TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS estimate_items_cache (id INTEGER PRIMARY KEY, estimateId INTEGER, description TEXT, qty REAL, unitPrice REAL);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS change_orders_cache (id INTEGER PRIMARY KEY, jobId INTEGER, title TEXT, amountDelta REAL, status TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS users_cache (id INTEGER PRIMARY KEY, email TEXT, fullName TEXT, role TEXT);');\r\n    });\r\n  } catch (e) {\r\n    // best-effort; avoid noisy alerts in offline mode\r\n  }\r\n}\r\n\r\nlet db;\r\nexport function getDb() {\r\n  if (db) return db;\r\n\r\n  // Web: safe no-op DB\r\n  if (Platform.OS === 'web') {\r\n    db = {\r\n      transaction: (fn) => fn({ executeSql: () => {} }),\r\n      execAsync: async () => {},\r\n      runAsync: async () => {},\r\n    };\r\n    return db;\r\n  }\r\n\r\n  // SDK 51+: prefer sync, then async; DO NOT reference openDatabase (removed)\r\n  if ('openDatabaseSync' in SQLite) {\r\n    db = SQLite.openDatabaseSync('offline.db');\r\n    return db;\r\n  }\r\n\r\n  if ('openDatabaseAsync' in SQLite) {\r\n    // Minimal adapter so existing code won't crash; refactor later if needed\r\n    db = {\r\n      transaction: (fn) => fn({ executeSql: () => {} }),\r\n      execAsync: async () => {},\r\n      runAsync: async () => {},\r\n    };\r\n    return db;\r\n  }\r\n\r\n  // Safety fallback\r\n  db = {\r\n    transaction: (fn) => fn({ executeSql: () => {} }),\r\n    execAsync: async () => {},\r\n    runAsync: async () => {},\r\n  };\r\n  return db;\r\n}\r\n\r\n// DB handle\r\nconst dbHandle = getDb();\r\ninitOfflineTables(dbHandle);\r\n\r\n// ---------- Helpers ----------\r\nconst normalizeRole = (role) => {\r\n  if (!role) return 'TECH';\r\n  const r = String(role).toUpperCase();\r\n  if (['ADMIN','ESTIMATOR','SUPERVISOR','TECH'].includes(r)) return r;\r\n  if (r === 'STANDARD' || r === 'USER') return 'TECH';\r\n  return r;\r\n};\r\n\r\nconst AuthContext = createContext(null);\r\nfunction useAuth(){ return useContext(AuthContext); }\r\nasync function api(path, method='GET', body, token){\r\n  const headers = {\r\n    ...(token ? { Authorization: `Bearer ${token}` } : {}),\r\n    ...(body ? { 'Content-Type': 'application/json' } : {}),\r\n  };\r\n  let response;\r\n  try {\r\n    response = await fetch(`${API_URL}${path}`, {\r\n      method,\r\n      headers,\r\n      body: body ? JSON.stringify(body) : undefined,\r\n    });\r\n  } catch (networkError) {\r\n    throw new Error(networkError?.message || 'Network request failed');\r\n  }\r\n\r\n  const contentType = response.headers.get('content-type') || '';\r\n  const rawBody = await response.text();\r\n  let data = null;\r\n\r\n  if (rawBody) {\r\n    if (contentType.includes('application/json')) {\r\n      try {\r\n        data = JSON.parse(rawBody);\r\n      } catch {\r\n        data = rawBody;\r\n      }\r\n    } else {\r\n      data = rawBody;\r\n    }\r\n  }\r\n\r\n  if (!response.ok) {\r\n    const message =\r\n      (data && typeof data === 'object' && (data.error || data.message)) ||\r\n      (typeof data === 'string' ? data : 'Request failed');\r\n    throw new Error(message);\r\n  }\r\n\r\n  return data;\r\n}\r\n\r\n// ---------- Design tokens ----------\r\nconst palette = {\r\n  background: '#f4f6f8',\r\n  surface: '#ffffff',\r\n  surfaceMuted: '#f1f5f9',\r\n  border: '#e2e8f0',\r\n  text: '#0f172a',\r\n  muted: '#5f6b7d',\r\n  primary: '#2c8a7d',\r\n  primaryStrong: '#1f6a60',\r\n  success: '#219653',\r\n  warning: '#f59e0b',\r\n  danger: '#d14343',\r\n  info: '#2563eb',\r\n};\r\n\r\nconst spacing = (step = 1) => step * 8;\r\n\r\nconst typography = {\n  h1: 24,\n  h2: 18,\n  body: 15,\n  small: 12,\n};\n\nconst lineHeightFor = (fontSize) => Math.round(fontSize * 1.5);\nconst defaultLineHeight = lineHeightFor(typography.body);\nif (!Text.defaultProps) Text.defaultProps = {};\nText.defaultProps.style = {\n  ...(Text.defaultProps.style || {}),\n  lineHeight: defaultLineHeight,\n};\n\r\nconst floatingShadow = Platform.select({\r\n  ios: { shadowColor: '#0f172a', shadowOpacity: 0.08, shadowRadius: 14, shadowOffset: { width: 0, height: 6 } },\r\n  android: { elevation: 2 },\r\n  default: {},\r\n});\r\n\r\nconst pillTone = {\r\n  NEW: { fg: palette.info, bg: '#e6eeff', label: 'New' },\r\n  CONTACTED: { fg: palette.primary, bg: '#e6f4f2', label: 'Contacted' },\r\n  ESTIMATING: { fg: palette.warning, bg: '#fdf1d6', label: 'Estimating' },\r\n  CONVERTED: { fg: palette.success, bg: '#e6f6ec', label: 'Converted' },\r\n  CLOSED_LOST: { fg: palette.muted, bg: '#e2e8f0', label: 'Lost' },\r\n  SCHEDULED: { fg: palette.primary, bg: '#e6f4f2', label: 'Scheduled' },\n  IN_PROGRESS: { fg: palette.info, bg: '#e6eeff', label: 'In progress' },\n  COMPLETED: { fg: palette.success, bg: '#e6f6ec', label: 'Completed' },\n  COMPLETE: { fg: palette.success, bg: '#e6f6ec', label: 'Complete' },\n  DONE: { fg: palette.success, bg: '#e6f6ec', label: 'Complete' },\n  ON_HOLD: { fg: palette.warning, bg: '#fdf1d6', label: 'On hold' },\r\n  CANCELLED: { fg: palette.muted, bg: '#e2e8f0', label: 'Cancelled' },\r\n  DRAFT: { fg: palette.muted, bg: '#e2e8f0', label: 'Draft' },\r\n  SENT: { fg: palette.info, bg: '#e6eeff', label: 'Sent' },\r\n  PART_PAID: { fg: palette.warning, bg: '#fdf1d6', label: 'Part paid' },\r\n  PAID: { fg: palette.success, bg: '#e6f6ec', label: 'Paid' },\r\n  VOID: { fg: palette.muted, bg: '#f1f5f9', label: 'Void' },\r\n};\r\n\r\nconst toneMap = {\r\n  primary: { fg: palette.primaryStrong, bg: '#e0f3f0' },\r\n  success: { fg: palette.success, bg: '#e6f6ec' },\r\n  warning: { fg: palette.warning, bg: '#fdf1d6' },\r\n  danger: { fg: palette.danger, bg: '#fde4e4' },\r\n  info: { fg: palette.info, bg: '#e6eeff' },\r\n};\r\n\r\nconst formInputBaseStyle = {\r\n  borderWidth: 1,\r\n  borderColor: palette.border,\r\n  borderRadius: 12,\r\n  paddingVertical: spacing(1.5),\r\n  paddingHorizontal: spacing(2),\r\n  color: palette.text,\r\n  backgroundColor: palette.surfaceMuted,\r\n  fontSize: typography.body,\r\n  marginBottom: spacing(1.5),\r\n};\r\n\r\nconst FormInput = React.forwardRef((props, ref) => (\r\n  <TextInput\r\n    ref={ref}\r\n    placeholderTextColor={palette.muted}\r\n    {...props}\r\n    style={[formInputBaseStyle, props.style]}\r\n  />\r\n));\r\nFormInput.displayName = 'FormInput';\r\n\r\nconst formatCurrency = (value) => {\r\n  const amount = Number(value || 0);\r\n  if (Number.isNaN(amount)) return '$0';\r\n  return `$${amount.toLocaleString(undefined, { minimumFractionDigits: amount % 1 ? 2 : 0, maximumFractionDigits: 2 })}`;\r\n};\r\n\r\nconst formatDate = (value) => {\r\n  if (!value) return null;\r\n  const d = new Date(value);\r\n  if (Number.isNaN(d.getTime())) return value;\r\n  return d.toLocaleDateString(undefined, { month: 'short', day: 'numeric' });\r\n};\r\n\r\nconst isTaskCompleted = (status) => {\r\n  if (!status) return false;\r\n  const key = String(status).toUpperCase();\r\n  return key === 'DONE' || key === 'COMPLETE';\r\n};\r\n\r\nfunction SurfaceCard({ children, style, onPress }) {\r\n  const content = (\r\n    <View\r\n      style={[\r\n        { backgroundColor: palette.surface, borderRadius: 16, borderWidth: 1, borderColor: palette.border, padding: spacing(2) },\r\n        floatingShadow,\r\n        style,\r\n      ]}\r\n    >\r\n      {children}\r\n    </View>\r\n  );\r\n  if (!onPress) return content;\r\n  return (\r\n    <TouchableOpacity activeOpacity={0.85} onPress={onPress}>\r\n      {content}\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n\r\nfunction StatusPill({ status }) {\r\n  if (!status) return null;\r\n  const key = String(status).toUpperCase();\r\n  const cfg = pillTone[key] || { fg: palette.muted, bg: '#e2e8f0', label: status };\r\n  return (\r\n    <View style={{ backgroundColor: cfg.bg, borderRadius: 999, paddingHorizontal: spacing(1.5), paddingVertical: spacing(0.5) }}>\r\n      <Text style={{ color: cfg.fg, fontSize: typography.small, fontWeight: '600' }}>{cfg.label}</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction SummaryCard({ title, value, subtitle, tone = 'primary', onPress }) {\n  const colors = toneMap[tone] || toneMap.primary;\n  return (\n    <SurfaceCard\n      onPress={onPress}\n      style={{ backgroundColor: colors.bg, borderColor: 'transparent', padding: spacing(2.5) }}\n    >\n      <Text style={{ color: palette.muted, fontSize: typography.small, textTransform: 'uppercase', fontWeight: '700', lineHeight: lineHeightFor(typography.small) }}>{title}</Text>\n      <Text style={{ color: colors.fg, fontSize: 28, fontWeight: '800', marginTop: spacing(0.5), lineHeight: lineHeightFor(28) }}>{value}</Text>\n      {subtitle ? <Text style={{ color: palette.muted, fontSize: typography.small, marginTop: spacing(0.5), lineHeight: lineHeightFor(typography.small) }}>{subtitle}</Text> : null}\n    </SurfaceCard>\n  );\n}\n\nfunction StatusCard({ label, value, description, tone = 'primary' }) {\n  const colors = toneMap[tone] || toneMap.primary;\n  return (\n    <SurfaceCard\n      style={{\n        backgroundColor: colors.bg,\n        borderColor: colors.fg,\n        borderWidth: 1,\n        paddingVertical: spacing(2),\n        paddingHorizontal: spacing(2.5),\n        flexGrow: 1,\n        flexBasis: '48%',\n      }}\n    >\n      <Text style={{ color: colors.fg, fontSize: typography.small, fontWeight: '700', textTransform: 'uppercase', lineHeight: lineHeightFor(typography.small) }}>{label}</Text>\n      <Text style={{ color: palette.text, fontSize: 24, fontWeight: '700', marginTop: spacing(0.5), lineHeight: lineHeightFor(24) }}>{value}</Text>\n      {description ? <Text style={{ color: palette.muted, fontSize: typography.small, marginTop: spacing(0.5), lineHeight: lineHeightFor(typography.small) }}>{description}</Text> : null}\n    </SurfaceCard>\n  );\n}\n\nfunction TagInput({ value = [], onChange, placeholder = 'Add tag' }) {\n  const [draft, setDraft] = useState('');\n  const tags = useMemo(() => {\n    if (!Array.isArray(value)) return [];\n    return value.filter(Boolean).map(tag => String(tag));\n  }, [value]);\n  const cleanTag = useCallback((input) => {\n    if (!input) return null;\n    const cleaned = String(input).replace(/[#]/g, '').trim();\n    if (!cleaned) return null;\n    return cleaned.replace(/\\s+/g, ' ');\n  }, []);\n  const handleChangeText = useCallback((text) => {\n    if (text.includes(',')) {\n      const segments = text.split(',');\n      const pending = segments.pop() ?? '';\n      const nextTags = [...tags];\n      segments.forEach(segment => {\n        const cleaned = cleanTag(segment);\n        if (!cleaned) return;\n        const exists = nextTags.some(existing => existing.toLowerCase() === cleaned.toLowerCase());\n        if (!exists) nextTags.push(cleaned);\n      });\n      if (nextTags.length !== tags.length) {\n        onChange && onChange(nextTags);\n      }\n      setDraft(pending);\n    } else {\n      setDraft(text);\n    }\n  }, [tags, cleanTag, onChange]);\n  const handleAdd = useCallback(() => {\n    const cleaned = cleanTag(draft);\n    if (!cleaned) {\n      setDraft('');\n      return;\n    }\n    const exists = tags.some(existing => existing.toLowerCase() === cleaned.toLowerCase());\n    if (exists) {\n      setDraft('');\n      return;\n    }\n    onChange && onChange([...tags, cleaned]);\n    setDraft('');\n  }, [draft, tags, cleanTag, onChange]);\n  const handleSubmit = useCallback(() => {\n    handleAdd();\n  }, [handleAdd]);\n  const handleRemove = useCallback((tag) => {\n    const next = tags.filter(entry => entry !== tag);\n    onChange && onChange(next);\n  }, [tags, onChange]);\n  return (\n    <View>\n      {tags.length ? (\n        <View style={{ flexDirection: 'row', flexWrap: 'wrap', columnGap: spacing(1), rowGap: spacing(1), marginBottom: spacing(1) }}>\n          {tags.map(tag => (\n            <TouchableOpacity\n              key={tag}\n              onPress={() => handleRemove(tag)}\n              activeOpacity={0.8}\n              style={{\n                flexDirection: 'row',\n                alignItems: 'center',\n                backgroundColor: '#d9f2ed',\n                borderRadius: 999,\n                paddingHorizontal: spacing(1.5),\n                paddingVertical: spacing(0.5),\n              }}\n            >\n              <Text style={{ color: palette.primaryStrong, fontWeight: '600', fontSize: typography.small }}>{`#${tag}`}</Text>\n              <Text style={{ color: palette.primaryStrong, marginLeft: spacing(0.5), fontSize: typography.small }}>×</Text>\n            </TouchableOpacity>\n          ))}\n        </View>\n      ) : null}\n      <View style={{ flexDirection: 'row', alignItems: 'center', columnGap: spacing(1) }}>\n        <TextInput\n          value={draft}\n          onChangeText={handleChangeText}\n          onSubmitEditing={handleSubmit}\n          placeholder={placeholder}\n          placeholderTextColor={palette.muted}\n          style={[formInputBaseStyle, { flex: 1, marginBottom: 0 }]}\n          autoCapitalize=\"none\"\n          autoCorrect={false}\n        />\n        <QuickAction label=\"Add\" onPress={handleAdd} tone=\"primary\" />\n      </View>\n    </View>\n  );\n}\n\r\nfunction SectionHeader({ title, actionLabel, onAction }) {\n  return (\n    <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', marginBottom: spacing(1.5) }}>\n      <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight: '700', lineHeight: lineHeightFor(typography.h2) }}>{title}</Text>\n      {actionLabel && onAction ? (\n        <TouchableOpacity onPress={onAction} style={{ paddingHorizontal: spacing(1), paddingVertical: spacing(0.5) }}>\n          <Text style={{ color: palette.primary, fontWeight: '600', fontSize: typography.small, lineHeight: lineHeightFor(typography.small) }}>{actionLabel}</Text>\n        </TouchableOpacity>\n      ) : null}\n    </View>\n  );\n}\n\r\nfunction QuickAction({ label, onPress, tone = 'primary' }) {\r\n  const toneStyles = (() => {\r\n    switch (tone) {\r\n      case 'danger':\r\n        return { borderColor: '#fecdd3', backgroundColor: '#fee2e2', textColor: palette.danger };\r\n      case 'success':\r\n        return { borderColor: '#bbf7d0', backgroundColor: '#dcfce7', textColor: palette.success };\r\n      case 'warning':\r\n        return { borderColor: '#fde68a', backgroundColor: '#fef3c7', textColor: palette.warning };\r\n      case 'muted':\r\n        return { borderColor: palette.border, backgroundColor: palette.surface, textColor: palette.muted };\r\n      default:\r\n        return { borderColor: palette.border, backgroundColor: palette.surfaceMuted, textColor: palette.primary };\r\n    }\r\n  })();\r\n  return (\r\n    <TouchableOpacity\r\n      onPress={onPress}\r\n      activeOpacity={0.85}\r\n      style={{\r\n        borderRadius: 10,\r\n        paddingHorizontal: spacing(1.5),\r\n        paddingVertical: spacing(0.75),\r\n        borderWidth: 1,\r\n        borderColor: toneStyles.borderColor,\r\n        backgroundColor: toneStyles.backgroundColor,\r\n      }}\r\n    >\r\n      <Text style={{ color: toneStyles.textColor, fontWeight: '600', fontSize: typography.small, lineHeight: lineHeightFor(typography.small) }}>{label}</Text>\n    </TouchableOpacity>\r\n  );\r\n}\r\n\r\nconst toInputDate = (dateValue) => {\r\n  const d = dateValue instanceof Date ? dateValue : new Date(dateValue);\r\n  if (Number.isNaN(d.getTime())) return '';\r\n  const yyyy = d.getFullYear();\r\n  const mm = String(d.getMonth() + 1).padStart(2, '0');\r\n  const dd = String(d.getDate()).padStart(2, '0');\r\n  return `${yyyy}-${mm}-${dd}`;\r\n};\r\n\r\nconst parseInputDate = (value) => {\r\n  if (!value) return null;\r\n  const parsed = new Date(value);\r\n  if (Number.isNaN(parsed.getTime())) return null;\r\n  return parsed;\r\n};\r\n\r\nconst deriveLeadTitle = (lead) => {\r\n  if (!lead) return 'Untitled lead';\r\n  const customerName = lead.Customer?.name;\r\n  if (customerName && customerName.trim()) return customerName.trim();\r\n  if (lead.description && lead.description.trim()) {\r\n    const firstLine = lead.description.trim().split('\\n')[0];\r\n    return firstLine.length > 60 ? `${firstLine.slice(0, 57)}...` : firstLine;\r\n  }\r\n  return `Lead ${lead.id}`;\r\n};\r\n\r\nfunction DateInputField({ value, onChange, placeholder = 'Select date', minimumDate, maximumDate, style }) {\r\n  const [iosPickerVisible, setIosPickerVisible] = useState(false);\r\n  const isWeb = Platform.OS === 'web';\r\n\r\n  const toDateOnly = (input) => {\r\n    if (!input) return '';\r\n    if (input instanceof Date) return toInputDate(input);\r\n    if (typeof input === 'string') {\r\n      const [datePart] = input.split('T');\r\n      return datePart;\r\n    }\r\n    return '';\r\n  };\r\n\r\n  const normalizedValue = toDateOnly(value);\r\n  const minDateString = minimumDate ? toDateOnly(minimumDate) : undefined;\r\n  const maxDateString = maximumDate ? toDateOnly(maximumDate) : undefined;\r\n  const parsed = parseInputDate(normalizedValue) || new Date();\r\n  const displayLabel = value ? (formatDate(value) || normalizedValue) : '';\r\n\r\n  const applyDate = (selectedDate) => {\r\n    if (!selectedDate) return;\r\n    onChange(toInputDate(selectedDate));\r\n  };\r\n\r\n  const handleManualChange = (text) => {\r\n    if (!text) {\r\n      onChange('');\r\n      return;\r\n    }\r\n    onChange(text);\r\n  };\r\n\r\n  const openPicker = () => {\r\n    if (isWeb) return;\r\n    const baseDate = parseInputDate(normalizedValue) || new Date();\r\n    if (Platform.OS === 'android') {\r\n      DateTimePickerAndroid.open({\r\n        value: baseDate,\r\n        mode: 'date',\r\n        minimumDate: minimumDate ? parseInputDate(minimumDate) || undefined : undefined,\r\n        maximumDate: maximumDate ? parseInputDate(maximumDate) || undefined : undefined,\r\n        onChange: (event, selected) => {\r\n          if (event.type === 'set' && selected) applyDate(selected);\r\n        },\r\n      });\r\n    } else {\r\n      setIosPickerVisible(true);\r\n    }\r\n  };\r\n\r\n  const containerStyle = [\r\n    { marginBottom: spacing(1.5) },\r\n    style,\r\n  ];\r\n\r\n  if (isWeb) {\r\n    return (\r\n      <View style={containerStyle}>\r\n        <TextInput\r\n          value={normalizedValue}\r\n          placeholder={placeholder}\r\n          placeholderTextColor={palette.muted}\r\n          onChangeText={handleManualChange}\r\n          onChange={event => handleManualChange(event?.nativeEvent?.text ?? event?.target?.value ?? '')}\r\n          style={[formInputBaseStyle, { marginBottom: 0 }]}\r\n          type=\"date\"\r\n          min={minDateString}\r\n          max={maxDateString}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <View style={containerStyle}>\r\n      <TouchableOpacity\r\n        onPress={openPicker}\r\n        activeOpacity={0.85}\r\n        style={{\r\n          borderWidth: 1,\r\n          borderColor: palette.border,\r\n          borderRadius: 12,\r\n          backgroundColor: palette.surfaceMuted,\r\n          flexDirection: 'row',\r\n          alignItems: 'center',\r\n          paddingHorizontal: spacing(2),\r\n          paddingVertical: spacing(1.5),\r\n        }}\r\n      >\r\n        <Text style={{ flex: 1, color: displayLabel ? palette.text : palette.muted, fontSize: typography.body }}>\r\n          {displayLabel || placeholder}\r\n        </Text>\r\n        <Text style={{ fontSize: typography.h2 - 6, color: palette.muted }}>CAL</Text>\r\n      </TouchableOpacity>\r\n      {Platform.OS === 'ios' && iosPickerVisible ? (\r\n        <DateTimePicker\r\n          value={parsed}\r\n          mode=\"date\"\r\n          display=\"inline\"\r\n          onChange={(event, selected) => {\r\n            if (event.type === 'set' && selected) {\r\n              applyDate(selected);\r\n            }\r\n            if (event.type === 'dismissed') {\r\n              setIosPickerVisible(false);\r\n              return;\r\n            }\r\n            setIosPickerVisible(false);\r\n          }}\r\n          style={{ marginTop: spacing(1) }}\r\n          minimumDate={minimumDate ? parseInputDate(minimumDate) || undefined : undefined}\r\n          maximumDate={maximumDate ? parseInputDate(maximumDate) || undefined : undefined}\r\n        />\r\n      ) : null}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst TECH_ASSIGN_ROLES = ['TECH','SUPERVISOR','ESTIMATOR'];\r\n\r\nfunction TechSelector({ team = [], value, onSelect, label, allowAllRoles, allowClear }) {\r\n  const options = useMemo(() => {\r\n    const normalized = team.map(member => ({\r\n      ...member,\r\n      role: normalizeRole(member.role),\r\n    }));\r\n    if (allowAllRoles) return normalized;\r\n    return normalized.filter(member => TECH_ASSIGN_ROLES.includes(member.role));\r\n  }, [team, allowAllRoles]);\r\n\r\n  if (!options.length) return null;\r\n\r\n  const renderLabel = label ? (\r\n    <Text style={{ color: palette.muted, fontSize: typography.small, marginBottom: spacing(1) }}>{label}</Text>\r\n  ) : null;\r\n\r\n  return (\r\n    <View style={{ marginTop: spacing(1.5) }}>\r\n      {renderLabel}\r\n      <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1) }}>\r\n        {options.map(member => {\r\n          const selected = member.id === value;\r\n          const displayName = member.fullName || member.email;\r\n          const shortLabel = displayName.length > 22 ? `${displayName.slice(0, 21)}...` : displayName;\n          return (\r\n            <QuickAction\r\n              key={member.id}\r\n              label={shortLabel}\r\n              tone={selected ? 'primary' : 'muted'}\r\n              onPress={() => onSelect(member.id)}\r\n            />\r\n          );\r\n        })}\r\n        {allowClear ? <QuickAction label=\"Clear\" tone=\"muted\" onPress={() => onSelect(null)} /> : null}\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction DashboardScreen({ navigation }) {\n  const { token, user } = useAuth();\n  const [loading, setLoading] = useState(true);\n  const [refreshing, setRefreshing] = useState(false);\n  const [leads, setLeads] = useState([]);\n  const [jobs, setJobs] = useState([]);\n  const [tasks, setTasks] = useState([]);\n  const [invoiceSummary, setInvoiceSummary] = useState(null);\n  const [lastUpdated, setLastUpdated] = useState(null);\n  const isAdmin = (user?.role || '').toUpperCase() === 'ADMIN';\n\r\n  const jobLookup = useMemo(() => {\r\n    const map = {};\r\n    for (const job of jobs) {\r\n      if (job?.id != null) {\r\n        map[job.id] = job;\r\n      }\r\n    }\r\n    return map;\r\n  }, [jobs]);\r\n\r\n  const loadData = useCallback(async (isPullRefresh = false) => {\r\n    if (!token) return;\r\n    isPullRefresh ? setRefreshing(true) : setLoading(true);\r\n\r\n    const fetchLeads = async () => {\r\n      try {\r\n        const data = await api('/leads', 'GET', null, token);\r\n        setLeads(data);\r\n        db.transaction(tx => {\r\n          tx.executeSql && tx.executeSql('DELETE FROM leads_cache;');\r\n          data.forEach(l =>\r\n            tx.executeSql && tx.executeSql(\r\n              'INSERT OR REPLACE INTO leads_cache (id, description, status) VALUES (?,?,?)',\r\n              [l.id, l.description || '', l.status || 'NEW']\r\n            )\r\n          );\r\n        });\r\n        return data;\r\n      } catch (e) {\r\n        return await new Promise(resolve => {\r\n          db.transaction(tx =>\r\n            tx.executeSql && tx.executeSql(\r\n              'SELECT id, description, status FROM leads_cache',\r\n              [],\r\n              (_, { rows }) => {\r\n                const fallback = rows?._array || [];\r\n                setLeads(fallback);\r\n                resolve(fallback);\r\n              }\r\n            )\r\n          );\r\n        });\r\n      }\r\n    };\r\n\r\n    const fetchJobs = async () => {\r\n      try {\r\n        const data = await api('/jobs', 'GET', null, token);\r\n        setJobs(data);\r\n        db.transaction(tx => {\r\n          tx.executeSql && tx.executeSql('DELETE FROM jobs_cache;');\r\n          data.forEach(j =>\r\n            tx.executeSql && tx.executeSql(\r\n              'INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)',\r\n              [j.id, j.name || '', j.status || 'SCHEDULED', j.startDate || '', j.endDate || '', j.notes || '']\r\n            )\r\n          );\r\n        });\r\n        return data;\r\n      } catch (e) {\r\n        return await new Promise(resolve => {\r\n          db.transaction(tx =>\r\n            tx.executeSql && tx.executeSql(\r\n              'SELECT id, name, status, startDate, endDate, notes FROM jobs_cache',\r\n              [],\r\n              (_, { rows }) => {\r\n                const fallback = rows?._array || [];\r\n                setJobs(fallback);\r\n                resolve(fallback);\r\n              }\r\n            )\r\n          );\r\n        });\r\n      }\r\n    };\r\n\r\n    const fetchTasks = async () => {\r\n      try {\r\n        const data = await api('/tasks', 'GET', null, token);\r\n        setTasks(data);\r\n        db.transaction(tx => {\r\n          data.forEach(t =>\r\n            tx.executeSql && tx.executeSql(\r\n              'INSERT OR REPLACE INTO tasks_cache (id, jobId, title, status, dueDate) VALUES (?,?,?,?,?)',\r\n              [t.id, t.jobId || null, t.title || '', t.status || 'TODO', t.dueDate || '']\r\n            )\r\n          );\r\n        });\r\n        return data;\r\n      } catch (e) {\r\n        return await new Promise(resolve => {\r\n          db.transaction(tx =>\r\n            tx.executeSql && tx.executeSql(\r\n              'SELECT id, jobId, title, status, dueDate FROM tasks_cache ORDER BY id DESC',\r\n              [],\r\n              (_, { rows }) => {\r\n                const fallback = rows?._array || [];\r\n                setTasks(fallback);\r\n                resolve(fallback);\r\n              }\r\n            )\r\n          );\r\n        });\r\n      }\r\n    };\r\n\r\n    const fetchInvoiceSummary = async () => {\r\n      try {\r\n        const data = await api('/invoices/summary', 'GET', null, token);\r\n        setInvoiceSummary(data);\r\n        return data;\r\n      } catch (e) {\r\n        return null;\r\n      }\r\n    };\r\n\r\n    try {\r\n      await Promise.all([fetchLeads(), fetchJobs(), fetchTasks(), fetchInvoiceSummary()]);\r\n      setLastUpdated(new Date());\r\n    } finally {\r\n      isPullRefresh ? setRefreshing(false) : setLoading(false);\r\n    }\r\n  }, [token]);\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      loadData(false);\r\n    }, [loadData])\r\n  );\r\n\r\n  const onRefresh = useCallback(() => loadData(true), [loadData]);\r\n\r\n  const newLeads = leads.filter(l => (l.status || '').toUpperCase() === 'NEW').length;\n  const activeJobs = jobs.filter(j => ['SCHEDULED', 'IN_PROGRESS'].includes((j.status || '').toUpperCase())).length;\n  const openTasks = tasks.filter(t => !isTaskCompleted(t.status)).length;\n  const outstandingValue = invoiceSummary?.outstanding || 0;\n  const collectedValue = invoiceSummary?.collected || 0;\n  const overdueCount = invoiceSummary?.overdueCount || 0;\n  const overdueTasks = useMemo(() => {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    return tasks.filter(task => {\n      if (!task?.dueDate || isTaskCompleted(task.status)) return false;\n      const due = new Date(task.dueDate);\n      if (Number.isNaN(due.getTime())) return false;\n      return due < today;\n    }).length;\n  }, [tasks]);\n  const statusCards = useMemo(() => [\n    {\n      label: 'Active',\n      value: String(activeJobs),\n      description: 'Jobs in progress or scheduled',\n      tone: 'primary',\n    },\n    {\n      label: 'Pending',\n      value: formatCurrency(outstandingValue),\n      description: 'Unpaid invoices',\n      tone: 'warning',\n    },\n    {\n      label: 'Paid',\n      value: formatCurrency(collectedValue),\n      description: 'Collected to date',\n      tone: 'success',\n    },\n    {\n      label: 'Overdue',\n      value: String(overdueTasks),\n      description: `Tasks overdue; ${overdueCount} invoices late`,\n      tone: 'danger',\n    },\n  ], [activeJobs, outstandingValue, collectedValue, overdueTasks, overdueCount]);\n\n  const topLeads = leads.slice(0, 3);\n  const topJobs = jobs.slice(0, 3);\n  const nextTasks = tasks.filter(t => !isTaskCompleted(t.status)).slice(0, 3);\n\r\n  return (\n    <SafeAreaView style={{ flex: 1, backgroundColor: palette.background }}>\n      <ScrollView\n        contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(5) }}\n        refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} tintColor={palette.primary} />}\n      >\n        <Text style={{ color: palette.text, fontSize: typography.h1, fontWeight: '700', marginBottom: spacing(2), lineHeight: lineHeightFor(typography.h1) }}>Dashboard</Text>\n\n        <View style={{ flexDirection: 'row', flexWrap: 'wrap', columnGap: spacing(1.5), rowGap: spacing(1.5), marginBottom: spacing(3) }}>\n          <QuickAction label=\"New job\" onPress={() => navigation.navigate('Jobs', { focus: 'create-job' })} />\n          <QuickAction label=\"New lead\" onPress={() => navigation.navigate('NewLead')} />\n          {isAdmin ? <QuickAction label=\"Create invoice\" tone=\"success\" onPress={() => navigation.navigate('Invoices')} /> : null}\n        </View>\n\n        <View style={{ marginBottom: spacing(3) }}>\n          <Text style={{ color: palette.muted, fontSize: typography.small, fontWeight: '600', marginBottom: spacing(0.5), lineHeight: lineHeightFor(typography.small) }}>\n            Operations pulse\n          </Text>\n          <Text style={{ color: palette.muted, fontSize: typography.body, marginBottom: spacing(1.5), lineHeight: lineHeightFor(typography.body) }}>\n            Monitor workload, collections, and looming risks at a glance.\n          </Text>\n          <View style={{ flexDirection: 'row', flexWrap: 'wrap', columnGap: spacing(1.5), rowGap: spacing(1.5) }}>\n            {statusCards.map(card => (\n              <StatusCard\n                key={card.label}\n                label={card.label}\n                value={card.value}\n                description={card.description}\n                tone={card.tone}\n              />\n            ))}\n          </View>\n        </View>\n\n        <View style={{ marginBottom: spacing(3) }}>\n          <Text style={{ color: palette.muted, fontSize: typography.small, fontWeight: '600', marginBottom: spacing(0.5), lineHeight: lineHeightFor(typography.small) }}>\n            Pipeline snapshot\n          </Text>\n          <Text style={{ color: palette.muted, fontSize: typography.body, marginBottom: spacing(1.5), lineHeight: lineHeightFor(typography.body) }}>\n            Stay ahead of demand by keeping leads, jobs, tasks, and invoices moving.\n          </Text>\n          <View style={{ flexDirection: 'row', flexWrap: 'wrap', columnGap: spacing(1.5), rowGap: spacing(1.5) }}>\n            <View style={{ flexBasis: '48%', minWidth: 160 }}>\n              <SummaryCard\n                title=\"Leads\"\n                value={leads.length}\n                subtitle={`${newLeads} new to triage`}\n                tone=\"info\"\n                onPress={() => navigation.navigate('Leads')}\n              />\n            </View>\n            <View style={{ flexBasis: '48%', minWidth: 160 }}>\n              <SummaryCard\n                title=\"Jobs\"\n                value={jobs.length}\n                subtitle={`${activeJobs} active`}\n                tone=\"primary\"\n                onPress={() => navigation.navigate('Jobs')}\n              />\n            </View>\n            <View style={{ flexBasis: '48%', minWidth: 160 }}>\n              <SummaryCard\n                title=\"Tasks\"\n                value={openTasks}\n                subtitle={`${overdueTasks} overdue • ${tasks.length} total`}\n                tone=\"warning\"\n                onPress={() => navigation.navigate('Jobs')}\n              />\n            </View>\n            <View style={{ flexBasis: '48%', minWidth: 160 }}>\n              <SummaryCard\n                title=\"Invoices\"\n                value={formatCurrency(outstandingValue)}\n                subtitle={`${overdueCount} overdue | ${formatCurrency(collectedValue)} collected`}\n                tone=\"success\"\n                onPress={() => navigation.navigate('Invoices')}\n              />\n            </View>\n          </View>\n        </View>\n\r\n        {loading && !refreshing ? (\r\n          <SurfaceCard style={{ alignItems: 'center', justifyContent: 'center', paddingVertical: spacing(6) }}>\r\n            <ActivityIndicator color={palette.primary} />\r\n            <Text style={{ color: palette.muted, marginTop: spacing(1.5) }}>Loading summary...</Text>\r\n          </SurfaceCard>\r\n        ) : null}\r\n\r\n        <SectionHeader title=\"Next Jobs\" actionLabel=\"View all\" onAction={() => navigation.navigate('Jobs')} />\r\n        <SurfaceCard style={{ marginBottom: spacing(3) }}>\r\n          {topJobs.length === 0 ? (\r\n            <Text style={{ color: palette.muted }}>No jobs yet. Create one from the Jobs tab.</Text>\r\n          ) : (\r\n            topJobs.map((job, idx) => {\r\n              const startLabel = job.startDate ? `Start ${formatDate(job.startDate)}` : null;\r\n              const endLabel = job.endDate ? `Due ${formatDate(job.endDate)}` : null;\r\n              return (\r\n                <View key={job.id || idx} style={{ marginBottom: idx === topJobs.length - 1 ? 0 : spacing(2.5) }}>\r\n                  <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                    <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight: '600' }}>{job.name || `Job #${job.id}`}</Text>\r\n                    <StatusPill status={job.status || 'SCHEDULED'} />\r\n                  </View>\r\n                  {startLabel || endLabel ? (\r\n                    <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>\r\n                      {[startLabel, endLabel].filter(Boolean).join(' - ')}\r\n                    </Text>\r\n                  ) : null}\r\n                  {job.notes ? (\r\n                    <Text style={{ color: palette.muted, marginTop: spacing(1) }} numberOfLines={2}>{job.notes}</Text>\r\n                  ) : null}\r\n                  <View style={{ flexDirection: 'row', columnGap: spacing(1.5), marginTop: spacing(1.5) }}>\r\n                    <QuickAction label=\"Open job\" onPress={() => navigation.navigate('JobDetail', { jobId: job.id })} />\r\n                    <QuickAction label=\"Tasks\" onPress={() => navigation.navigate('JobDetail', { jobId: job.id, tab: 'tasks' })} />\r\n                  </View>\r\n                </View>\r\n              );\r\n            })\r\n          )}\r\n        </SurfaceCard>\r\n\r\n        <SectionHeader title=\"Hot Leads\" actionLabel=\"Leads\" onAction={() => navigation.navigate('Leads')} />\r\n        <SurfaceCard style={{ marginBottom: spacing(3) }}>\r\n          {topLeads.length === 0 ? (\r\n            <Text style={{ color: palette.muted }}>No leads yet. Capture leads to keep the funnel full.</Text>\r\n        ) : (\r\n          topLeads.map((lead, idx) => (\r\n            <View key={lead.id || idx} style={{ marginBottom: idx === topLeads.length - 1 ? 0 : spacing(2) }}>\r\n              <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                <Text style={{ color: palette.text, fontWeight: '600', fontSize: typography.h2 }}>{deriveLeadTitle(lead)}</Text>\r\n                <StatusPill status={lead.status || 'NEW'} />\r\n              </View>\r\n              <Text style={{ color: palette.muted, marginTop: spacing(0.5) }} numberOfLines={3}>\r\n                {lead.description || 'No scope captured yet.'}\r\n              </Text>\r\n                <View style={{ flexDirection: 'row', columnGap: spacing(1.5), marginTop: spacing(1.5) }}>\r\n                  <QuickAction label=\"Follow up\" onPress={() => navigation.navigate('EstimateEditor', { leadId: lead.id })} />\r\n                  <QuickAction label=\"Convert\" onPress={() => navigation.navigate('Jobs')} />\r\n                </View>\r\n              </View>\r\n            ))\r\n          )}\r\n        </SurfaceCard>\r\n\r\n        <SectionHeader title=\"Open Tasks\" actionLabel=\"Jobs\" onAction={() => navigation.navigate('Jobs')} />\r\n        <SurfaceCard>\r\n          {nextTasks.length === 0 ? (\r\n            <Text style={{ color: palette.muted }}>All clear. Add tasks from a job to keep crews aligned.</Text>\r\n          ) : (\r\n            nextTasks.map((task, idx) => (\r\n              <View key={task.id || idx} style={{ marginBottom: idx === nextTasks.length - 1 ? 0 : spacing(2) }}>\r\n                <Text style={{ color: palette.text, fontWeight: '600' }}>{task.title || 'Task'}</Text>\r\n                {task.jobId ? (\r\n                  <Text style={{ color: palette.muted, marginTop: spacing(0.25) }}>\r\n                    {jobLookup[task.jobId]?.name || `Job #${task.jobId}`}\r\n                  </Text>\r\n                ) : (\r\n                  <Text style={{ color: palette.muted, marginTop: spacing(0.25) }}>Unassigned job</Text>\r\n                )}\r\n                <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>\r\n                  {task.dueDate ? `Due ${formatDate(task.dueDate)}` : 'No due date'}\r\n                </Text>\r\n                <View style={{ flexDirection: 'row', columnGap: spacing(1.5), marginTop: spacing(1.5) }}>\r\n                  <QuickAction\r\n                    label=\"Mark done\"\r\n                    onPress={() => navigation.navigate('JobDetail', { jobId: task.jobId })}\r\n                  />\r\n                  <QuickAction\r\n                    label=\"View job\"\r\n                    onPress={() => navigation.navigate('JobDetail', { jobId: task.jobId })}\r\n                  />\r\n                </View>\r\n              </View>\r\n            ))\r\n          )}\r\n        </SurfaceCard>\r\n\r\n        {lastUpdated ? (\r\n          <Text style={{ color: palette.muted, fontSize: typography.small, marginTop: spacing(2), textAlign: 'center' }}>\r\n            Updated {lastUpdated.toLocaleTimeString([], { hour: 'numeric', minute: '2-digit' })}\r\n          </Text>\r\n        ) : null}\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\n// ---------- Signature Pad to PNG ----------\r\nfunction SignaturePad({ onCapturePng }){\r\n  const [points, setPoints] = useState([]);\r\n  const [path, setPath] = useState('');\r\n  const shotRef = useRef(null);\r\n  return (\r\n    <ViewShot ref={shotRef} options={{ format: 'png', quality: 0.9, result: 'base64' }} style={{ height:220, borderWidth:1, backgroundColor:'#fff' }}>\r\n      <View\r\n        onStartShouldSetResponder={()=>true}\r\n        onResponderMove={(e)=>{\r\n          const x = e.nativeEvent.locationX, y = e.nativeEvent.locationY;\r\n          setPath(p => p + (p ? ` L ${x} ${y}` : ` M ${x} ${y}`));\r\n        }}\r\n        onResponderRelease={async ()=>{\r\n          const base64 = await shotRef.current.capture();\r\n          onCapturePng && onCapturePng('data:image/png;base64,' + base64);\r\n        }}\r\n        style={{ flex:1 }}\r\n      >\r\n        <Svg height=\"100%\" width=\"100%\"><Path d={path} stroke=\"black\" strokeWidth=\"2\" fill=\"none\" /></Svg>\r\n      </View>\r\n    </ViewShot>\r\n  );\r\n}\r\n\r\nfunction SignatureScreen({ route, navigation }){\r\n  const { token } = useAuth();\r\n  const { estimateId } = route.params;\r\n  const [sigPng, setSigPng] = useState(null);\r\n  const save = async () => {\r\n    if(!sigPng){ Alert.alert('Please sign first'); return; }\r\n    const resp = await api(`/estimates/${estimateId}/approve`, 'POST', { signaturePngUrl: sigPng }, token);\r\n    Alert.alert('Approved', `Payment link:\r\n${(resp && resp.paymentLink) ? resp.paymentLink : 'Unavailable'}`); navigation.goBack();\r\n  };\r\n  return (\r\n    <SafeAreaView style={{ padding:16 }}>\r\n      <Text style={{ fontSize:18, marginBottom:8 }}>Sign Estimate #{estimateId}</Text>\r\n      <SignaturePad onCapturePng={setSigPng} />\r\n      <View style={{ height:12 }} />\r\n      <Button title=\"Save Signature\" onPress={save} />\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\n// ---------- Admin: Users ----------\r\nconst userRoleOptions = [\r\n  { label: 'Admin', value: 'ADMIN' },\r\n  { label: 'Estimator', value: 'ESTIMATOR' },\r\n  { label: 'Supervisor', value: 'SUPERVISOR' },\r\n  { label: 'Tech', value: 'TECH' },\r\n];\r\n\r\nconst invoiceStatusOptions = [\r\n  { value: 'DRAFT', label: 'Draft' },\r\n  { value: 'SENT', label: 'Sent' },\r\n  { value: 'PART_PAID', label: 'Part paid' },\r\n  { value: 'PAID', label: 'Paid' },\r\n  { value: 'VOID', label: 'Void' },\r\n];\r\n\r\nfunction UsersAdminScreen(){\r\n  const { token } = useAuth();\r\n  const [users, setUsers] = useState([]);\r\n  const [email, setEmail] = useState('');\r\n  const [fullName, setFullName] = useState('');\r\n  const [role, setRole] = useState('TECH');\r\n  const [inviting, setInviting] = useState(false);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n\r\n  const load = useCallback(async () => {\r\n    try {\r\n      const response = await api('/users','GET',null,token);\r\n      setUsers(Array.isArray(response) ? response : []);\r\n    } catch (e) {\r\n      Alert.alert('Error', e.message || 'Unable to load users.');\r\n    }\r\n  }, [token]);\r\n\r\n  useEffect(() => { load(); }, [load]);\r\n\r\n  const resetForm = () => {\r\n    setEmail('');\r\n    setFullName('');\r\n    setRole('TECH');\r\n  };\r\n\r\n  const invite = async ()=>{\r\n    const trimmedEmail = email.trim().toLowerCase();\r\n    const trimmedName = fullName.trim();\r\n    if (!trimmedEmail) {\r\n      Alert.alert('Missing email', 'Enter an email address to invite a user.');\r\n      return;\r\n    }\r\n    try {\r\n      setInviting(true);\r\n      await api('/users','POST', { email: trimmedEmail, fullName: trimmedName || undefined, role: normalizeRole(role) }, token);\r\n      resetForm();\r\n      await load();\r\n    } catch (e) {\r\n      Alert.alert('Error', e.message || 'Unable to send invite.');\r\n    } finally {\r\n      setInviting(false);\r\n    }\r\n  };\r\n\r\n  const promote = async (id, newRole)=>{\r\n    try {\r\n      await api(`/users/${id}`,'PATCH',{ role: normalizeRole(newRole) }, token);\r\n      await load();\r\n    } catch (e) {\r\n      Alert.alert('Error', e.message || 'Unable to update role.');\r\n    }\r\n  };\r\n\r\n  const remove = (id) => {\r\n    Alert.alert('Remove user', 'Are you sure you want to remove this person?', [\r\n      { text: 'Cancel', style: 'cancel' },\r\n      {\r\n        text: 'Remove',\r\n        style: 'destructive',\r\n        onPress: async () => {\r\n          try {\r\n            await api(`/users/${id}`,'DELETE',null,token);\r\n            await load();\r\n          } catch (e) {\r\n            Alert.alert('Error', e.message || 'Unable to delete user.');\r\n          }\r\n        }\r\n      }\r\n    ]);\r\n  };\r\n\r\n  const onRefresh = useCallback(async () => {\r\n    setRefreshing(true);\r\n    try {\r\n      await load();\r\n    } finally {\r\n      setRefreshing(false);\r\n    }\r\n  }, [load]);\r\n\r\n  const renderRolePill = (value) => {\r\n    const roleCfg = userRoleOptions.find(option => option.value === normalizeRole(value));\r\n    const label = roleCfg ? roleCfg.label : normalizeRole(value);\r\n    return (\r\n      <View style={{ backgroundColor: '#e0f3f0', paddingHorizontal: spacing(1.5), paddingVertical: spacing(0.5), borderRadius: 999 }}>\r\n        <Text style={{ color: palette.primaryStrong, fontWeight:'600', fontSize: typography.small }}>{label}</Text>\r\n      </View>\r\n    );\r\n  };\r\n\r\n  const renderRoleSelector = (selectedRole, onSelect) => (\r\n    <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1) }}>\r\n      {userRoleOptions.map(option => {\r\n        const selected = selectedRole === option.value;\r\n        return (\r\n          <TouchableOpacity\r\n            key={option.value}\r\n            onPress={() => onSelect(option.value)}\r\n            activeOpacity={0.85}\r\n            style={{\r\n              paddingHorizontal: spacing(2),\r\n              paddingVertical: spacing(1),\r\n              borderRadius: 999,\r\n              borderWidth: 1,\r\n              borderColor: selected ? palette.primary : palette.border,\r\n              backgroundColor: selected ? '#d9f2ed' : palette.surface,\r\n            }}\r\n          >\r\n            <Text style={{ color: selected ? palette.primaryStrong : palette.muted, fontWeight:'600', fontSize: typography.small }}>\r\n              {option.label}\r\n            </Text>\r\n          </TouchableOpacity>\r\n        );\r\n      })}\r\n    </View>\r\n  );\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\r\n      <FlatList\r\n        data={users}\r\n        keyExtractor={u=>String(u.id)}\r\n        contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(6) }}\r\n        refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} tintColor={palette.primary} />}\r\n        ListHeaderComponent={(\r\n          <View>\r\n            <Text style={{ color: palette.text, fontSize: typography.h1, fontWeight:'700', marginBottom: spacing(2) }}>Team management</Text>\r\n            <SurfaceCard style={{ padding: spacing(2.5), marginBottom: spacing(3) }}>\r\n              <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700' }}>Invite teammate</Text>\r\n              <Text style={{ color: palette.muted, marginTop: spacing(0.5), marginBottom: spacing(2) }}>\r\n                Send an invite email and choose what they can access.\r\n              </Text>\r\n              <FormInput\r\n                placeholder=\"Full name (optional)\"\r\n                value={fullName}\r\n                onChangeText={setFullName}\r\n              />\r\n              <FormInput\r\n                placeholder=\"Work email\"\r\n                autoCapitalize=\"none\"\r\n                keyboardType=\"email-address\"\r\n                value={email}\r\n                onChangeText={setEmail}\r\n              />\r\n              <Text style={{ color: palette.muted, fontWeight:'600', fontSize: typography.small, textTransform:'uppercase', marginBottom: spacing(1) }}>Role</Text>\r\n              {renderRoleSelector(role, setRole)}\r\n              <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center', marginTop: spacing(2) }}>\r\n                <QuickAction label=\"Clear\" tone=\"muted\" onPress={resetForm} />\r\n                <TouchableOpacity\r\n                  onPress={invite}\r\n                  activeOpacity={0.85}\r\n                  disabled={inviting}\r\n                  style={{\r\n                    backgroundColor: palette.primary,\r\n                    paddingHorizontal: spacing(2.5),\r\n                    paddingVertical: spacing(1.5),\r\n                    borderRadius: 12,\r\n                    opacity: inviting ? 0.6 : 1,\r\n                  }}\r\n                >\r\n                  <Text style={{ color:'#fff', fontWeight:'700' }}>{inviting ? 'Sending...' : 'Send invite'}</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </SurfaceCard>\r\n          </View>\r\n        )}\r\n        ListEmptyComponent={(\r\n          <SurfaceCard>\r\n            <Text style={{ color: palette.muted }}>Invite your first teammate to collaborate on jobs.</Text>\r\n          </SurfaceCard>\r\n        )}\r\n        renderItem={({item}) => {\r\n          const normalizedRole = normalizeRole(item.role);\r\n          return (\r\n            <SurfaceCard style={{ marginBottom: spacing(2), padding: spacing(2.5) }}>\r\n              <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center', marginBottom: spacing(1.5) }}>\r\n                <View>\r\n                  <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600' }}>{item.fullName || item.email}</Text>\r\n                  <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>{item.email}</Text>\r\n                </View>\r\n                {renderRolePill(normalizedRole)}\r\n              </View>\r\n              <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1) }}>\r\n                {userRoleOptions.map(option => {\r\n                  const selected = normalizedRole === option.value;\r\n                  return (\r\n                    <TouchableOpacity\r\n                      key={option.value}\r\n                      onPress={() => promote(item.id, option.value)}\r\n                      disabled={selected}\r\n                      activeOpacity={0.85}\r\n                      style={{\r\n                        paddingHorizontal: spacing(1.75),\r\n                        paddingVertical: spacing(0.75),\r\n                        borderRadius: 999,\r\n                        borderWidth: 1,\r\n                        borderColor: selected ? palette.primary : palette.border,\r\n                        backgroundColor: selected ? '#d9f2ed' : palette.surface,\r\n                        opacity: selected ? 0.7 : 1,\r\n                      }}\r\n                    >\r\n                      <Text style={{ color: selected ? palette.primaryStrong : palette.muted, fontWeight:'600', fontSize: typography.small }}>\r\n                        {option.label}\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  );\r\n                })}\r\n                <TouchableOpacity\r\n                  onPress={() => remove(item.id)}\r\n                  activeOpacity={0.85}\r\n                  style={{\r\n                    paddingHorizontal: spacing(1.75),\r\n                    paddingVertical: spacing(0.75),\r\n                    borderRadius: 999,\r\n                    borderWidth: 1,\r\n                    borderColor: '#fecdd3',\r\n                    backgroundColor: '#fee2e2',\r\n                  }}\r\n                >\r\n                  <Text style={{ color: palette.danger, fontWeight:'600', fontSize: typography.small }}>Remove</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </SurfaceCard>\r\n          );\r\n        }}\r\n      />\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\n// ---------- Jobs Kanban + Change Orders ----------\r\nfunction InvoicesScreen({ navigation }){\r\n  const { token, user } = useAuth();\r\n  const [loading, setLoading] = useState(true);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [summary, setSummary] = useState(null);\r\n  const [invoices, setInvoices] = useState([]);\r\n  const [filter, setFilter] = useState('ALL');\r\n  const [newInvoiceJobId, setNewInvoiceJobId] = useState('');\r\n  const [newInvoiceAmount, setNewInvoiceAmount] = useState('');\r\n  const [newInvoiceIssuedAt, setNewInvoiceIssuedAt] = useState('');\r\n  const [newInvoiceDueAt, setNewInvoiceDueAt] = useState('');\r\n  const [newInvoiceStatus, setNewInvoiceStatus] = useState('DRAFT');\r\n  const [creatingInvoice, setCreatingInvoice] = useState(false);\r\n\r\n  const load = useCallback(async (isRefresh = false) => {\r\n    if (!token) return;\r\n    isRefresh ? setRefreshing(true) : setLoading(true);\r\n    try {\r\n      const [summaryData, list] = await Promise.all([\r\n        api('/invoices/summary', 'GET', null, token),\r\n        api('/invoices', 'GET', null, token),\r\n      ]);\r\n      setSummary(summaryData);\r\n      setInvoices(list);\r\n    } catch (e) {\r\n      // keep prior data on failure\r\n    } finally {\r\n      isRefresh ? setRefreshing(false) : setLoading(false);\r\n    }\r\n  }, [token]);\r\n\r\n  useFocusEffect(useCallback(() => {\r\n    if (user?.role === 'ADMIN') {\r\n      load(false);\r\n    }\r\n  }, [load, user?.role]));\r\n\r\n  const onRefresh = useCallback(() => load(true), [load]);\r\n  const nextInvoiceNumber = useMemo(() => {\r\n    if (!Array.isArray(invoices) || invoices.length === 0) {\r\n      return 'INV-0001';\r\n    }\r\n    const maxNumber = invoices.reduce((acc, inv) => {\r\n      const match = String(inv.number || '').match(/(\\d+)$/);\r\n      if (match) {\r\n        return Math.max(acc, parseInt(match[1], 10));\r\n      }\r\n      if (inv.id) {\r\n        return Math.max(acc, Number(inv.id));\r\n      }\r\n      return acc;\r\n    }, 0);\r\n    const next = maxNumber + 1;\r\n    return `INV-${String(next).padStart(4, '0')}`;\r\n  }, [invoices]);\r\n\r\n  const resetInvoiceForm = useCallback(() => {\r\n    setNewInvoiceJobId('');\r\n    setNewInvoiceAmount('');\r\n    setNewInvoiceIssuedAt('');\r\n    setNewInvoiceDueAt('');\r\n    setNewInvoiceStatus('DRAFT');\r\n  }, []);\r\n\r\n  const createInvoice = useCallback(async () => {\r\n    const amountValue = parseFloat(newInvoiceAmount);\r\n    if (Number.isNaN(amountValue) || amountValue <= 0) {\r\n      Alert.alert('Missing amount', 'Enter a valid invoice amount.');\r\n      return;\r\n    }\r\n    const jobIdTrimmed = newInvoiceJobId.trim();\r\n    const jobIdValue = jobIdTrimmed ? parseInt(jobIdTrimmed, 10) : null;\r\n    if (jobIdTrimmed && Number.isNaN(jobIdValue)) {\r\n      Alert.alert('Invalid job', 'Job ID must be a number.');\r\n      return;\r\n    }\r\n    const payload = {\r\n      amount: amountValue,\r\n      status: newInvoiceStatus,\r\n      number: nextInvoiceNumber || undefined,\r\n      jobId: jobIdValue || undefined,\r\n      issuedAt: newInvoiceIssuedAt || null,\r\n      dueAt: newInvoiceDueAt || null,\r\n    };\r\n    try {\r\n      setCreatingInvoice(true);\r\n      const created = await api('/invoices', 'POST', payload, token);\r\n      resetInvoiceForm();\r\n      await load(false);\r\n      Alert.alert('Invoice created', `${created?.number || payload.number || 'Invoice'} saved.`);\r\n    } catch (e) {\r\n      Alert.alert('Error', e.message || 'Unable to create invoice.');\r\n    } finally {\r\n      setCreatingInvoice(false);\r\n    }\r\n  }, [\r\n    newInvoiceAmount,\r\n    newInvoiceStatus,\r\n    newInvoiceJobId,\r\n    newInvoiceIssuedAt,\r\n    newInvoiceDueAt,\r\n    token,\r\n    load,\r\n    resetInvoiceForm,\r\n    nextInvoiceNumber,\r\n  ]);\r\n\r\n  const deleteInvoice = useCallback((invoice) => {\r\n    Alert.alert('Delete invoice', `Delete invoice #${invoice.number || invoice.id}?`, [\r\n      { text:'Cancel', style:'cancel' },\r\n      {\r\n        text:'Delete',\r\n        style:'destructive',\r\n        onPress: async () => {\r\n          try {\r\n            await api(`/invoices/${invoice.id}`, 'DELETE', null, token);\r\n            await load(false);\r\n          } catch (e) {\r\n            Alert.alert('Error', e.message || 'Unable to delete invoice.');\r\n          }\r\n        }\r\n      }\r\n    ]);\r\n  }, [token, load]);\r\n\r\n  if (user?.role !== 'ADMIN') {\r\n    return (\r\n      <SafeAreaView style={{ flex:1, alignItems:'center', justifyContent:'center', backgroundColor: palette.background }}>\r\n        <Text style={{ color: palette.muted }}>Invoices are only available to admin users.</Text>\r\n      </SafeAreaView>\r\n    );\r\n  }\r\n\r\n  const filters = [\r\n    { key:'ALL', label:'All' },\r\n    { key:'OUTSTANDING', label:'Outstanding' },\r\n    { key:'PAID', label:'Paid' },\r\n  ];\r\n\r\n  const filteredInvoices = invoices.filter(inv => {\r\n    if (filter === 'ALL') return true;\r\n    const status = (inv.status || 'DRAFT').toUpperCase();\r\n    if (filter === 'PAID') return status === 'PAID';\r\n    return !['PAID','VOID'].includes(status);\r\n  });\r\n\r\n  const outstanding = formatCurrency(summary?.outstanding || 0);\r\n  const collected = formatCurrency(summary?.collected || 0);\r\n  const drafts = formatCurrency(summary?.draftAmount || 0);\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\r\n      <ScrollView\r\n        contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(6) }}\r\n        refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} tintColor={palette.primary} />}\r\n      >\r\n        <Text style={{ color: palette.text, fontSize: typography.h1, fontWeight:'700', marginBottom: spacing(2) }}>Invoices</Text>\r\n        <Text style={{ color: palette.muted, marginBottom: spacing(2) }}>Track billing health and spot overdue balances.</Text>\r\n        <SurfaceCard style={{ padding: spacing(2.5), marginBottom: spacing(3) }}>\r\n          <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700' }}>Create invoice</Text>\r\n          <Text style={{ color: palette.muted, marginTop: spacing(0.5), marginBottom: spacing(2) }}>\r\n            Capture billing details and keep your accounts current.\r\n          </Text>\r\n          <View style={{ marginBottom: spacing(1.5) }}>\r\n            <Text style={{ color: palette.muted, fontSize: typography.small, fontWeight:'700', textTransform:'uppercase' }}>Invoice number</Text>\r\n            <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700', marginTop: spacing(0.5) }}>{nextInvoiceNumber}</Text>\r\n          </View>\r\n          <FormInput\r\n            placeholder=\"Job ID (optional)\"\r\n            value={newInvoiceJobId}\r\n            onChangeText={setNewInvoiceJobId}\r\n            keyboardType=\"number-pad\"\r\n          />\r\n          <FormInput\r\n            placeholder=\"Amount $\"\r\n            value={newInvoiceAmount}\r\n            onChangeText={setNewInvoiceAmount}\r\n            keyboardType=\"decimal-pad\"\r\n          />\r\n          <View style={{ flexDirection:'row', columnGap: spacing(1.5) }}>\r\n            <View style={{ flex:1 }}>\r\n              <DateInputField value={newInvoiceIssuedAt} onChange={setNewInvoiceIssuedAt} placeholder=\"Issued date\" style={{ marginBottom: 0 }} />\r\n            </View>\r\n            <View style={{ flex:1 }}>\r\n              <DateInputField value={newInvoiceDueAt} onChange={setNewInvoiceDueAt} placeholder=\"Due date (optional)\" style={{ marginBottom: 0 }} />\r\n            </View>\r\n          </View>\r\n          <Text style={{ color: palette.muted, fontSize: typography.small, fontWeight:'700', textTransform:'uppercase', marginTop: spacing(2), marginBottom: spacing(1) }}>Status</Text>\r\n          <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1) }}>\r\n            {invoiceStatusOptions.map(option => {\r\n              const selected = option.value === newInvoiceStatus;\r\n              return (\r\n                <TouchableOpacity\r\n                  key={option.value}\r\n                  onPress={() => setNewInvoiceStatus(option.value)}\r\n                  activeOpacity={0.85}\r\n                  style={{\r\n                    paddingHorizontal: spacing(2),\r\n                    paddingVertical: spacing(1),\r\n                    borderRadius: 999,\r\n                    borderWidth: 1,\r\n                    borderColor: selected ? palette.primary : palette.border,\r\n                    backgroundColor: selected ? '#d9f2ed' : palette.surface,\r\n                  }}\r\n                >\r\n                  <Text style={{ color: selected ? palette.primaryStrong : palette.muted, fontWeight:'600', fontSize: typography.small }}>\r\n                    {option.label}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              );\r\n            })}\r\n          </View>\r\n          <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center', marginTop: spacing(2) }}>\r\n            <QuickAction label=\"Reset\" tone=\"muted\" onPress={resetInvoiceForm} />\r\n            <TouchableOpacity\r\n              onPress={createInvoice}\r\n              activeOpacity={0.85}\r\n              disabled={creatingInvoice}\r\n              style={{\r\n                backgroundColor: palette.primary,\r\n                paddingHorizontal: spacing(2.5),\r\n                paddingVertical: spacing(1.5),\r\n                borderRadius: 12,\r\n                opacity: creatingInvoice ? 0.6 : 1,\r\n              }}\r\n            >\r\n              <Text style={{ color:'#fff', fontWeight:'700' }}>{creatingInvoice ? 'Saving...' : 'Create invoice'}</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </SurfaceCard>\r\n\r\n        <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(2), rowGap: spacing(2), marginBottom: spacing(3) }}>\r\n          <View style={{ flexBasis:'48%', minWidth: 160 }}>\r\n            <SummaryCard title=\"Outstanding\" value={outstanding} subtitle={`${summary?.overdueCount || 0} overdue`} tone=\"warning\" />\r\n          </View>\r\n          <View style={{ flexBasis:'48%', minWidth: 160 }}>\r\n            <SummaryCard title=\"Collected\" value={collected} subtitle=\"All payments to date\" tone=\"success\" />\r\n          </View>\r\n          <View style={{ flexBasis:'48%', minWidth: 160 }}>\r\n            <SummaryCard title=\"Drafts\" value={drafts} subtitle={`${summary?.totalCount || 0} total invoices`} tone=\"info\" />\r\n          </View>\r\n        </View>\r\n\r\n        <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginBottom: spacing(2) }}>\r\n          {filters.map(f => {\r\n            const selected = f.key === filter;\r\n            return (\r\n              <TouchableOpacity\r\n                key={f.key}\r\n                onPress={() => setFilter(f.key)}\r\n                activeOpacity={0.85}\r\n                style={{\r\n                  paddingHorizontal: spacing(2),\r\n                  paddingVertical: spacing(1),\r\n                  borderRadius: 999,\r\n                  borderWidth: 1,\r\n                  borderColor: selected ? palette.primary : palette.border,\r\n                  backgroundColor: selected ? '#d9f2ed' : palette.surface,\r\n                }}\r\n              >\r\n                <Text style={{ color: selected ? palette.primaryStrong : palette.muted, fontWeight:'600', fontSize: typography.small }}>{f.label}</Text>\r\n              </TouchableOpacity>\r\n            );\r\n          })}\r\n        </View>\r\n\r\n        {loading ? (\r\n          <SurfaceCard style={{ alignItems:'center', paddingVertical: spacing(6) }}>\r\n            <ActivityIndicator color={palette.primary} />\r\n            <Text style={{ color: palette.muted, marginTop: spacing(1.5) }}>Loading invoices...</Text>\r\n          </SurfaceCard>\r\n        ) : filteredInvoices.length === 0 ? (\r\n          <SurfaceCard>\r\n            <Text style={{ color: palette.muted }}>No invoices match this filter.</Text>\r\n          </SurfaceCard>\r\n        ) : (\r\n          filteredInvoices.map(inv => {\r\n            const payments = (inv.Payments || []).reduce((sum, p) => sum + Number(p.amount || 0), 0);\r\n            const amount = Number(inv.amount || 0);\r\n            const balance = Math.max(amount - payments, 0);\r\n            const statusKey = (inv.status || 'DRAFT').toUpperCase();\r\n            return (\r\n              <SurfaceCard key={inv.id}>\r\n                <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center' }}>\r\n                  <View>\r\n                    <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600' }}>Invoice #{inv.number || inv.id}</Text>\r\n                    <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>Issued {inv.issuedAt ? formatDate(inv.issuedAt) : 'TBD'}</Text>\r\n                  </View>\r\n                  <StatusPill status={statusKey} />\r\n                </View>\r\n                <View style={{ flexDirection:'row', justifyContent:'space-between', marginTop: spacing(1.5) }}>\r\n                  <View>\r\n                    <Text style={{ color: palette.muted, fontSize: typography.small }}>Amount</Text>\r\n                    <Text style={{ color: palette.text, fontWeight:'600' }}>{formatCurrency(amount)}</Text>\r\n                  </View>\r\n                  <View>\r\n                    <Text style={{ color: palette.muted, fontSize: typography.small }}>Collected</Text>\r\n                    <Text style={{ color: palette.text }}>{formatCurrency(payments)}</Text>\r\n                  </View>\r\n                  <View>\r\n                    <Text style={{ color: palette.muted, fontSize: typography.small }}>Balance</Text>\r\n                    <Text style={{ color: balance > 0 ? palette.primaryStrong : palette.muted, fontWeight:'600' }}>{formatCurrency(balance)}</Text>\r\n                  </View>\r\n                </View>\r\n                {inv.dueAt ? (\r\n                  <Text style={{ color: palette.muted, marginTop: spacing(1) }}>Due {formatDate(inv.dueAt)}</Text>\r\n                ) : null}\r\n                <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginTop: spacing(2) }}>\r\n                  {inv.jobId ? <QuickAction label=\"View job\" onPress={() => navigation.navigate('JobDetail', { jobId: inv.jobId })} tone=\"muted\" /> : null}\r\n                  <QuickAction label=\"Record payment\" tone=\"success\" onPress={() => Alert.alert('Coming soon', 'Payment logging will land shortly.')} />\r\n                  <QuickAction label=\"Delete\" tone=\"danger\" onPress={() => deleteInvoice(inv)} />\r\n                </View>\r\n              </SurfaceCard>\r\n            );\r\n          })\r\n        )}\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\nfunction JobsKanbanScreen({ navigation, route }){\n  const { token } = useAuth();\n  const [jobs, setJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [refreshing, setRefreshing] = useState(false);\n  const [newJobName, setNewJobName] = useState('');\n  const [newJobStartDate, setNewJobStartDate] = useState('');\r\n  const [newJobDueDate, setNewJobDueDate] = useState('');\r\n  const [newJobNotes, setNewJobNotes] = useState('');\r\n  const [newCustomerName, setNewCustomerName] = useState('');\r\n  const [newCustomerPhone, setNewCustomerPhone] = useState('');\r\n  const [newCustomerEmail, setNewCustomerEmail] = useState('');\n  const [newAddressLine1, setNewAddressLine1] = useState('');\n  const [newAddressLine2, setNewAddressLine2] = useState('');\n  const [newCity, setNewCity] = useState('');\n  const [newStateCode, setNewStateCode] = useState('');\n  const [newZip, setNewZip] = useState('');\n  const [jobFormTab, setJobFormTab] = useState('BASICS');\n  const [newJobTags, setNewJobTags] = useState([]);\n  const statusOrder = ['NEW','SCHEDULED','IN_PROGRESS','ON_HOLD','COMPLETED','DONE','PAID','CANCELLED','CLOSED'];\n  const scrollRef = useRef(null);\n  const [selectedTag, setSelectedTag] = useState(null);\n  const [selectedCity, setSelectedCity] = useState(null);\n  const [selectedUrgency, setSelectedUrgency] = useState('ALL');\n\r\n  const load = useCallback(async (isRefresh = false) => {\r\n    isRefresh ? setRefreshing(true) : setLoading(true);\r\n    try {\r\n      const data = await api('/jobs','GET',null,token);\r\n      setJobs(data);\r\n      db.transaction(tx => {\r\n        tx.executeSql && tx.executeSql('DELETE FROM jobs_cache;');\r\n        data.forEach(j => tx.executeSql && tx.executeSql(\r\n          'INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)',\r\n          [j.id, j.name||'', j.status||'SCHEDULED', j.startDate||'', j.endDate||'', j.notes||'']\r\n        ));\r\n      });\r\n    } catch(e) {\r\n      db.transaction(tx =>\r\n        tx.executeSql && tx.executeSql(\r\n          'SELECT id, name, status, startDate, endDate, notes FROM jobs_cache',\r\n          [],\r\n          (_, { rows }) => setJobs(rows._array || [])\r\n        )\r\n      );\r\n    } finally {\r\n      isRefresh ? setRefreshing(false) : setLoading(false);\r\n    }\r\n  }, [token]);\r\n\r\n  useFocusEffect(\n    useCallback(() => {\n      load(false);\n    }, [load])\n  );\n  useEffect(() => {\n    if (route?.params?.focus === 'create-job') {\n      scrollRef.current?.scrollTo({ y: 0, animated: true });\n      setJobFormTab('BASICS');\n      if (navigation && typeof navigation.setParams === 'function') {\n        navigation.setParams({ focus: undefined });\n      }\n    }\n  }, [route?.params?.focus, navigation]);\n  const availableTags = useMemo(() => {\n    const set = new Set();\n    jobs.forEach(job => {\n      const tags = Array.isArray(job.tags) ? job.tags : [];\n      tags.forEach(tag => {\n        if (tag) set.add(String(tag));\n      });\n    });\n    return Array.from(set).sort((a, b) => a.toLowerCase().localeCompare(b.toLowerCase()));\n  }, [jobs]);\n  const availableCities = useMemo(() => {\n    const set = new Set();\n    jobs.forEach(job => {\n      const city = job?.Jobsite?.city;\n      if (city) set.add(String(city).trim());\n    });\n    return Array.from(set).sort((a, b) => a.toLowerCase().localeCompare(b.toLowerCase()));\n  }, [jobs]);\n  const urgencyFilters = useMemo(() => ([\n    { key: 'ALL', label: 'All' },\n    { key: 'UPCOMING', label: 'Starting soon' },\n    { key: 'OVERDUE', label: 'Past due' },\n  ]), []);\n  const filteredJobsRaw = useMemo(() => {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    return jobs.filter(job => {\n      if (selectedTag) {\n        const tags = Array.isArray(job.tags) ? job.tags : [];\n        const hasTag = tags.some(tag => String(tag).toLowerCase() === selectedTag.toLowerCase());\n        if (!hasTag) return false;\n      }\n      if (selectedCity) {\n        const city = job?.Jobsite?.city ? String(job.Jobsite.city) : '';\n        if (city.toLowerCase() !== selectedCity.toLowerCase()) return false;\n      }\n      if (selectedUrgency === 'UPCOMING') {\n        if (!job.startDate) return false;\n        const start = new Date(job.startDate);\n        if (Number.isNaN(start.getTime())) return false;\n        const diff = Math.ceil((start - today) / (1000 * 60 * 60 * 24));\n        if (diff < 0 || diff > 3) return false;\n      } else if (selectedUrgency === 'OVERDUE') {\n        if (!job.endDate) return false;\n        const due = new Date(job.endDate);\n        if (Number.isNaN(due.getTime())) return false;\n        if (due >= today) return false;\n      }\n      return true;\n    });\n  }, [jobs, selectedTag, selectedCity, selectedUrgency]);\n  const hasFilters = useMemo(() => Boolean(selectedTag || selectedCity || selectedUrgency !== 'ALL'), [selectedTag, selectedCity, selectedUrgency]);\n  const clearFilters = useCallback(() => {\n    setSelectedTag(null);\n    setSelectedCity(null);\n    setSelectedUrgency('ALL');\n  }, []);\n\r\n  const onRefresh = useCallback(() => load(true), [load]);\r\n\r\n  const resetForm = () => {\n    setNewJobName('');\n    setNewJobStartDate('');\n    setNewJobDueDate('');\n    setNewJobNotes('');\n    setNewCustomerName('');\r\n    setNewCustomerPhone('');\r\n    setNewCustomerEmail('');\r\n    setNewAddressLine1('');\r\n    setNewAddressLine2('');\r\n    setNewCity('');\n    setNewStateCode('');\n    setNewZip('');\n    setNewJobTags([]);\n    setJobFormTab('BASICS');\n  };\n\r\n  const createJob = async () => {\r\n    if(!newJobName.trim()){\r\n      Alert.alert('Missing info', 'Please add a job name.');\r\n      setJobFormTab('BASICS');\r\n      return;\r\n    }\r\n    const hasCustomer = [newCustomerName, newCustomerPhone, newCustomerEmail].some(v => v && v.trim());\r\n    const hasAddress = [newAddressLine1, newCity, newStateCode, newZip].some(v => v && v.trim());\r\n    const payload = {\n      name: newJobName.trim(),\n      status: 'NEW',\n      startDate: newJobStartDate || null,\n      endDate: newJobDueDate || null,\n      notes: newJobNotes.trim() || null,\n      tags: newJobTags.filter(Boolean),\n    };\n    if (hasCustomer) {\r\n      payload.customer = {\r\n        name: newCustomerName.trim(),\r\n        phone: newCustomerPhone.trim(),\r\n        email: newCustomerEmail.trim(),\r\n        billingAddress: newAddressLine1\r\n          ? `${newAddressLine1}${newAddressLine2 ? `\r\n${newAddressLine2}` : ''}${newCity ? `\r\n${newCity}, ${newStateCode} ${newZip}` : ''}`\r\n          : null,\r\n      };\r\n    }\r\n    if (hasAddress) {\r\n      payload.jobsite = {\r\n        addressLine1: newAddressLine1.trim(),\r\n        addressLine2: newAddressLine2.trim(),\r\n        city: newCity.trim(),\r\n        state: newStateCode.trim(),\r\n        zip: newZip.trim(),\r\n      };\r\n    }\r\n    try {\r\n      const created = await api('/jobs','POST', payload, token);\r\n      setJobs(prev => [created, ...prev]);\r\n      db.transaction(tx =>\r\n        tx.executeSql && tx.executeSql(\r\n          'INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)',\r\n          [created.id, created.name||'', created.status||'SCHEDULED', created.startDate||'', created.endDate||'', created.notes||'']\r\n        )\r\n      );\r\n      resetForm();\r\n      Alert.alert('Job created', `Job #${created.id} ready to schedule.`);\r\n    } catch(e) {\r\n      Alert.alert('Error', e.message || 'Unable to create job');\r\n    }\r\n  };\r\n\r\n  const updateJobStatus = async (id, status) => {\r\n    try {\r\n      const updated = await api(`/jobs/${id}`,'PATCH',{ status }, token);\r\n      setJobs(prev => prev.map(job => job.id === id ? updated : job));\r\n    } catch(e) {\r\n      Alert.alert('Error', e.message || 'Unable to update job status');\r\n    }\r\n  };\r\n\r\n  const removeJob = async (id) => {\r\n    Alert.alert('Delete Job', `Delete job #${id}?`, [\r\n      { text:'Cancel', style:'cancel' },\r\n      { text:'Delete', style:'destructive', onPress: async () => {\r\n        try {\r\n          await api(`/jobs/${id}`,'DELETE',null,token);\r\n          setJobs(prev => prev.filter(job => job.id !== id));\r\n          db.transaction(tx => tx.executeSql && tx.executeSql('DELETE FROM jobs_cache WHERE id=?', [id]));\r\n        } catch(e) {\r\n          Alert.alert('Error', e.message || 'Unable to delete job');\r\n        }\r\n      } }\r\n    ]);\r\n  };\r\n\r\n  const sortedJobs = useMemo(() => {\n    const normalize = (status) => (status || 'SCHEDULED').toUpperCase();\n    const rank = (status) => {\n      const key = normalize(status);\n      const idx = statusOrder.indexOf(key);\n      return idx === -1 ? statusOrder.length : idx;\n    };\r\n    const parseDateSafe = (value) => {\r\n      if (!value) return null;\r\n      const d = new Date(value);\r\n      return Number.isNaN(d.getTime()) ? null : d;\r\n    };\r\n    return [...filteredJobsRaw].sort((a, b) => {\n      const statusDiff = rank(a.status) - rank(b.status);\n      if (statusDiff !== 0) return statusDiff;\n      const startA = parseDateSafe(a.startDate);\n      const startB = parseDateSafe(b.startDate);\n      if (startA && startB) return startA - startB;\n      if (startA) return -1;\n      if (startB) return 1;\n      return (b.id || 0) - (a.id || 0);\n    });\n  }, [filteredJobsRaw, statusOrder]);\n\r\n  const groupedJobs = useMemo(() => {\r\n    const groups = [];\r\n    let currentStatus = null;\r\n    sortedJobs.forEach(job => {\r\n      const statusKey = (job.status || 'SCHEDULED').toUpperCase();\r\n      if (statusKey !== currentStatus) {\r\n        groups.push({ status: statusKey, jobs: [job] });\r\n        currentStatus = statusKey;\r\n      } else {\r\n        groups[groups.length - 1].jobs.push(job);\r\n      }\r\n    });\r\n    return groups;\r\n  }, [sortedJobs]);\r\n\r\n  const statusLabel = (status) => {\r\n    const key = (status || 'SCHEDULED').toUpperCase();\r\n    return pillTone[key]?.label || key.charAt(0) + key.slice(1).toLowerCase();\r\n  };\r\n\r\n  const quickStatusActions = [\n    { label:'Start job', value:'IN_PROGRESS', tone:'primary' },\n    { label:'Mark completed', value:'COMPLETED', tone:'success' },\n    { label:'Mark paid', value:'PAID', tone:'success' },\n    { label:'Pause', value:'ON_HOLD', tone:'warning' },\n  ];\n\r\n  const inputStyle = {\r\n    borderWidth: 1,\r\n    borderColor: palette.border,\r\n    borderRadius: 12,\r\n    paddingHorizontal: spacing(1.5),\r\n    paddingVertical: spacing(1.25),\r\n    backgroundColor: palette.surfaceMuted,\r\n    color: palette.text,\r\n    fontSize: typography.body,\r\n    marginBottom: spacing(1.5),\r\n  };\r\n\r\n  const jobTabs = [\r\n    { key:'BASICS', label:'Basics' },\r\n    { key:'CUSTOMER', label:'Customer' },\r\n    { key:'JOBSITE', label:'Jobsite' },\r\n    { key:'NOTES', label:'Notes' },\r\n  ];\r\n\r\n  const renderJobFormFields = () => {\r\n    if (jobFormTab === 'BASICS') {\n      return (\n        <View>\n          <TextInput\n            placeholder=\"Job name\"\n            placeholderTextColor={palette.muted}\r\n            value={newJobName}\r\n            onChangeText={setNewJobName}\r\n            style={inputStyle}\r\n          />\r\n          <DateInputField\r\n            value={newJobStartDate}\r\n            onChange={setNewJobStartDate}\r\n            placeholder=\"Start date\"\r\n          />\n          <DateInputField\n            value={newJobDueDate}\n            onChange={setNewJobDueDate}\n            placeholder=\"Due date\"\n          />\n          <View style={{ marginTop: spacing(1.5) }}>\n            <TagInput value={newJobTags} onChange={setNewJobTags} placeholder=\"Add tags (e.g. HVAC, Urgent)\" />\n          </View>\n        </View>\n      );\n    }\n    if (jobFormTab === 'CUSTOMER') {\r\n      return (\r\n        <View>\r\n          <TextInput\r\n            placeholder=\"Customer name\"\r\n            placeholderTextColor={palette.muted}\r\n            value={newCustomerName}\r\n            onChangeText={setNewCustomerName}\r\n            style={inputStyle}\r\n          />\r\n          <TextInput\r\n            placeholder=\"Phone\"\r\n            placeholderTextColor={palette.muted}\r\n            keyboardType=\"phone-pad\"\r\n            value={newCustomerPhone}\r\n            onChangeText={setNewCustomerPhone}\r\n            style={inputStyle}\r\n          />\r\n          <TextInput\r\n            placeholder=\"Email\"\r\n            placeholderTextColor={palette.muted}\r\n            keyboardType=\"email-address\"\r\n            autoCapitalize=\"none\"\r\n            value={newCustomerEmail}\r\n            onChangeText={setNewCustomerEmail}\r\n            style={inputStyle}\r\n          />\r\n        </View>\r\n      );\r\n    }\r\n    if (jobFormTab === 'JOBSITE') {\r\n      return (\r\n        <View>\r\n          <TextInput\r\n            placeholder=\"Address line 1\"\r\n            placeholderTextColor={palette.muted}\r\n            value={newAddressLine1}\r\n            onChangeText={setNewAddressLine1}\r\n            style={inputStyle}\r\n          />\r\n          <TextInput\r\n            placeholder=\"Address line 2\"\r\n            placeholderTextColor={palette.muted}\r\n            value={newAddressLine2}\r\n            onChangeText={setNewAddressLine2}\r\n            style={inputStyle}\r\n          />\r\n          <View style={{ flexDirection:'row', columnGap: spacing(1.5) }}>\r\n            <View style={{ flex:1 }}>\r\n              <TextInput\r\n                placeholder=\"City\"\r\n                placeholderTextColor={palette.muted}\r\n                value={newCity}\r\n                onChangeText={setNewCity}\r\n                style={[inputStyle, { marginBottom: 0 }]}\r\n              />\r\n            </View>\r\n            <View style={{ width: 80 }}>\r\n              <TextInput\r\n                placeholder=\"State\"\r\n                placeholderTextColor={palette.muted}\r\n                value={newStateCode}\r\n                onChangeText={setNewStateCode}\r\n                style={[inputStyle, { marginBottom: 0 }]}\r\n              />\r\n            </View>\r\n            <View style={{ width: 100 }}>\r\n              <TextInput\r\n                placeholder=\"ZIP\"\r\n                placeholderTextColor={palette.muted}\r\n                value={newZip}\r\n                onChangeText={setNewZip}\r\n                style={[inputStyle, { marginBottom: 0 }]}\r\n              />\r\n            </View>\r\n          </View>\r\n        </View>\r\n      );\r\n    }\r\n    return (\r\n      <TextInput\r\n        placeholder=\"Internal notes\"\r\n        placeholderTextColor={palette.muted}\r\n        value={newJobNotes}\r\n        onChangeText={setNewJobNotes}\r\n        multiline\r\n        style={[inputStyle, { minHeight: 96, textAlignVertical: 'top' }]}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\n      <ScrollView\n        ref={scrollRef}\n        contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(4) }}\n        refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} tintColor={palette.primary} />}\n      >\n        <SurfaceCard style={{ marginBottom: spacing(3), padding: spacing(2.5) }}>\r\n          <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700', marginBottom: spacing(2) }}>Create job</Text>\r\n          <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1.5), marginBottom: spacing(2) }}>\r\n            {jobTabs.map(tab => {\r\n              const selected = tab.key === jobFormTab;\r\n              return (\r\n                <TouchableOpacity\r\n                  key={tab.key}\r\n                  onPress={() => setJobFormTab(tab.key)}\r\n                  activeOpacity={0.85}\r\n                  style={{\r\n                    paddingHorizontal: spacing(2),\r\n                    paddingVertical: spacing(1),\r\n                    borderRadius: 999,\r\n                    borderWidth: 1,\r\n                    borderColor: selected ? palette.primary : palette.border,\r\n                    backgroundColor: selected ? '#d9f2ed' : palette.surface,\r\n                  }}\r\n                >\r\n                  <Text style={{ color: selected ? palette.primaryStrong : palette.muted, fontWeight:'600', fontSize: typography.small }}>\r\n                    {tab.label}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              );\r\n            })}\r\n          </View>\r\n          {renderJobFormFields()}\r\n          <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center', marginTop: spacing(2) }}>\r\n            <QuickAction label=\"Reset\" tone=\"muted\" onPress={resetForm} />\r\n            <TouchableOpacity\r\n              onPress={createJob}\r\n              activeOpacity={0.85}\r\n              style={{ backgroundColor: palette.primary, paddingHorizontal: spacing(2.5), paddingVertical: spacing(1.5), borderRadius: 12 }}\r\n            >\r\n              <Text style={{ color:'#fff', fontWeight:'700' }}>Create job</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </SurfaceCard>\n\n        <SurfaceCard style={{ marginBottom: spacing(3), padding: spacing(2.5) }}>\n          <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700', marginBottom: spacing(1.5) }}>Filters</Text>\n          <Text style={{ color: palette.muted, marginBottom: spacing(1) }}>Urgency</Text>\n          <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginBottom: spacing(1.5) }}>\n            {urgencyFilters.map(option => (\n              <QuickAction\n                key={option.key}\n                label={option.label}\n                tone={selectedUrgency === option.key ? 'primary' : 'muted'}\n                onPress={() => setSelectedUrgency(option.key)}\n              />\n            ))}\n          </View>\n          {availableTags.length ? (\n            <View style={{ marginBottom: spacing(1.5) }}>\n              <Text style={{ color: palette.muted, marginBottom: spacing(1) }}>Tags</Text>\n              <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1) }}>\n                {availableTags.map(tag => (\n                  <QuickAction\n                    key={tag}\n                    label={`#${tag}`}\n                    tone={selectedTag === tag ? 'primary' : 'muted'}\n                    onPress={() => setSelectedTag(selectedTag === tag ? null : tag)}\n                  />\n                ))}\n              </View>\n            </View>\n          ) : null}\n          {availableCities.length ? (\n            <View>\n              <Text style={{ color: palette.muted, marginBottom: spacing(1) }}>Location</Text>\n              <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1) }}>\n                {availableCities.map(city => (\n                  <QuickAction\n                    key={city}\n                    label={city}\n                    tone={selectedCity === city ? 'primary' : 'muted'}\n                    onPress={() => setSelectedCity(selectedCity === city ? null : city)}\n                  />\n                ))}\n              </View>\n            </View>\n          ) : null}\n          {(selectedTag || selectedCity || selectedUrgency !== 'ALL') ? (\n            <View style={{ marginTop: spacing(2) }}>\n              <QuickAction label=\"Clear filters\" tone=\"muted\" onPress={clearFilters} />\n            </View>\n          ) : null}\n        </SurfaceCard>\n\n        {loading && !refreshing && jobs.length === 0 ? (\n          <SurfaceCard style={{ alignItems:'center', paddingVertical: spacing(6), marginBottom: spacing(3) }}>\n            <ActivityIndicator color={palette.primary} />\n            <Text style={{ color: palette.muted, marginTop: spacing(1.5) }}>Loading jobs...</Text>\n          </SurfaceCard>\n        ) : null}\r\n\r\n        {groupedJobs.length === 0 ? (\n          <SurfaceCard>\n            <Text style={{ color: palette.muted }}>\n              {hasFilters ? 'No jobs match the current filters.' : 'No jobs yet. Convert a lead or add a job to get started.'}\n            </Text>\n          </SurfaceCard>\n        ) : (\n          groupedJobs.map(group => (\r\n            <View key={group.status} style={{ marginBottom: spacing(3) }}>\r\n              <Text style={{ color: palette.muted, fontWeight:'700', fontSize: typography.small, textTransform:'uppercase', marginBottom: spacing(1) }}>\r\n                {statusLabel(group.status)}\r\n              </Text>\r\n              {group.jobs.map(job => {\r\n                const customer = job.Customer || {};\r\n                const jobsite = job.Jobsite || {};\r\n                const addressParts = [\r\n                  jobsite.addressLine1,\r\n                  jobsite.addressLine2,\r\n                  [jobsite.city, jobsite.state].filter(Boolean).join(', '),\r\n                  jobsite.zip\r\n                ].filter(Boolean);\r\n                const address = addressParts.join(', ');\n                const statusKey = (job.status || 'SCHEDULED').toUpperCase();\n                const assignedTech = job.assignedTech;\n                return (\r\n                  <SurfaceCard key={job.id} style={{ marginBottom: spacing(1.5) }}>\r\n                    <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center' }}>\r\n                      <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600' }}>{job.name || `Job #${job.id}`}</Text>\r\n                      <StatusPill status={statusKey} />\r\n                    </View>\r\n                    {(job.startDate || job.endDate) ? (\r\n                      <Text style={{ color: palette.muted, marginTop: spacing(0.75) }}>\r\n                        {[job.startDate ? `Start ${formatDate(job.startDate)}` : null, job.endDate ? `Due ${formatDate(job.endDate)}` : null].filter(Boolean).join(' | ')}\r\n                      </Text>\r\n                    ) : null}\r\n                    {customer.name ? <Text style={{ color: palette.text, fontWeight:'600', marginTop: spacing(1) }}>{customer.name}</Text> : null}\n                    {customer.phone ? <Text style={{ color: palette.muted }}>{customer.phone}</Text> : null}\n                    {customer.email ? <Text style={{ color: palette.muted }}>{customer.email}</Text> : null}\n                    {address ? <Text style={{ color: palette.muted, marginTop: spacing(1) }}>{address}</Text> : null}\n                    {assignedTech ? (\n                      <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>\n                        Assigned to {assignedTech.fullName || assignedTech.email || 'Tech'}\n                      </Text>\n                    ) : null}\n                    {job.notes ? <Text style={{ color: palette.muted, marginTop: spacing(1) }} numberOfLines={3}>{job.notes}</Text> : null}\n                    {Array.isArray(job.tags) && job.tags.length ? (\n                      <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginTop: spacing(1) }}>\n                        {job.tags.map(tag => (\n                          <View\n                            key={`${job.id}-${tag}`}\n                            style={{ backgroundColor: '#e0f3f0', borderRadius: 999, paddingHorizontal: spacing(1.5), paddingVertical: spacing(0.5) }}\n                          >\n                            <Text style={{ color: palette.primaryStrong, fontWeight:'600', fontSize: typography.small }}>{`#${tag}`}</Text>\n                          </View>\n                        ))}\n                      </View>\n                    ) : null}\n                    <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginTop: spacing(2) }}>\n                      {address ? <QuickAction label=\"Map\" tone=\"muted\" onPress={() => openJobInMaps(job)} /> : null}\n                      <QuickAction label=\"View job\" onPress={() => navigation.navigate('JobDetail', { jobId: job.id })} tone=\"muted\" />\n                      {quickStatusActions.map(action => (\n                        action.value === statusKey ? null : (\r\n                          <QuickAction\r\n                            key={action.value}\r\n                            label={action.label}\r\n                            tone={action.tone}\r\n                            onPress={() => updateJobStatus(job.id, action.value)}\r\n                          />\r\n                        )\r\n                      ))}\r\n                      <QuickAction label=\"Delete\" tone=\"danger\" onPress={() => removeJob(job.id)} />\r\n                    </View>\r\n                  </SurfaceCard>\r\n                );\r\n              })}\r\n            </View>\r\n          ))\r\n        )}\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\nfunction JobDetailScreen({ route, navigation }){\r\n  const { jobId } = route.params;\r\n  const { token, user } = useAuth();\r\n  const [jobName, setJobName] = useState('');\r\n  const [jobStartDate, setJobStartDate] = useState('');\r\n  const [jobEndDate, setJobEndDate] = useState('');\r\n  const [jobNotes, setJobNotes] = useState('');\r\n  const [jobCustomerName, setJobCustomerName] = useState('');\r\n  const [jobCustomerPhone, setJobCustomerPhone] = useState('');\r\n  const [jobCustomerEmail, setJobCustomerEmail] = useState('');\r\n  const [jobAddressLine1, setJobAddressLine1] = useState('');\r\n  const [jobAddressLine2, setJobAddressLine2] = useState('');\r\n  const [jobCity, setJobCity] = useState('');\n  const [jobStateCode, setJobStateCode] = useState('');\n  const [jobZip, setJobZip] = useState('');\n  const [jobTags, setJobTags] = useState([]);\n  const [assignedTechId, setAssignedTechId] = useState(null);\n  const [team, setTeam] = useState([]);\n  const [assigningTech, setAssigningTech] = useState(false);\n  const [jobAttachments, setJobAttachments] = useState([]);\n  const [loadingAttachments, setLoadingAttachments] = useState(false);\n  const [uploadingAttachment, setUploadingAttachment] = useState(false);\n  const [jobActivity, setJobActivity] = useState([]);\n  const [newActivityNote, setNewActivityNote] = useState('');\n  const [addingActivity, setAddingActivity] = useState(false);\n  const [changeOrders, setCO] = useState([]);\n  const [title, setTitle] = useState('');\n  const [amountDelta, setAmountDelta] = useState('0');\n  const roleKey = normalizeRole(user?.role);\n  const canManageChangeOrders = ['ADMIN','SUPERVISOR','ESTIMATOR'].includes(roleKey);\n  const canAssignTech = roleKey === 'ADMIN';\n  const loadCO = useCallback(async () => {\n    setCO(await api(`/change-orders/job/${jobId}`,'GET',null,token));\n  }, [jobId, token]);\n  const loadJob = useCallback(async () => {\n    try {\n      const j = await api(`/jobs/${jobId}`,'GET',null,token);\n      setJobName(j.name||'');\n      setJobStartDate(j.startDate||'');\n      setJobEndDate(j.endDate||'');\n      setJobNotes(j.notes||'');\n      const customer = j.Customer || {};\n      const jobsite = j.Jobsite || {};\n      setJobCustomerName(customer.name || '');\n      setJobCustomerPhone(customer.phone || '');\n      setJobCustomerEmail(customer.email || '');\n      setJobAddressLine1(jobsite.addressLine1 || '');\n      setJobAddressLine2(jobsite.addressLine2 || '');\n      setJobCity(jobsite.city || '');\n      setJobStateCode(jobsite.state || '');\n      setJobZip(jobsite.zip || '');\n      setJobTags(Array.isArray(j.tags) ? j.tags : []);\n      setJobActivity(Array.isArray(j.activityLog) ? j.activityLog : []);\n      setAssignedTechId(j.assignedTo ?? j.assignedTech?.id ?? null);\n    } catch(e) { }\n  }, [jobId, token]);\n  const loadTeam = useCallback(async () => {\n    if (!canAssignTech) return;\n    try {\n      const data = await api('/users','GET',null,token);\n      setTeam(Array.isArray(data) ? data.filter(member => member.active !== false) : []);\n    } catch (e) {\n      // ignore; admin-only feature\n    }\n  }, [canAssignTech, token]);\n  const loadAttachments = useCallback(async () => {\n    try {\n      setLoadingAttachments(true);\n      const response = await api(`/attachments?entityType=JOB&entityId=${jobId}`,'GET',null,token);\n      setJobAttachments(Array.isArray(response) ? response : []);\n    } catch (e) {\n      // ignore best effort offline\n    } finally {\n      setLoadingAttachments(false);\n    }\n  }, [jobId, token]);\n  useEffect(()=>{ loadJob(); loadCO(); loadAttachments(); if (canAssignTech) loadTeam(); },[loadJob, loadCO, loadAttachments, loadTeam, canAssignTech]);\n  const addCO = async ()=>{\r\n    if(!title.trim()){\r\n      Alert.alert('Missing info', 'Add a title for the change order.');\r\n      return;\r\n    }\r\n    await api(`/change-orders/job/${jobId}`,'POST',{ title: title.trim(), amountDelta: parseFloat(amountDelta) || 0 }, token);\r\n    setTitle(''); setAmountDelta('0'); loadCO();\r\n  };\r\n  const saveJobDetails = async () => {\r\n    try {\r\n      await api(`/jobs/${jobId}`,'PATCH',{\n        name: jobName,\n        startDate: jobStartDate || null,\n        endDate: jobEndDate || null,\n        notes: jobNotes,\n        tags: Array.isArray(jobTags) ? jobTags.filter(Boolean) : [],\n        customer: {\n          name: jobCustomerName,\n          phone: jobCustomerPhone,\n          email: jobCustomerEmail,\r\n          billingAddress: jobAddressLine1 ? `${jobAddressLine1}${jobAddressLine2 ? `\r\n${jobAddressLine2}` : ''}${jobCity ? `\r\n${jobCity}, ${jobStateCode} ${jobZip}` : ''}` : null,\r\n        },\r\n        jobsite: {\r\n          addressLine1: jobAddressLine1,\r\n          addressLine2: jobAddressLine2,\r\n          city: jobCity,\r\n          state: jobStateCode,\r\n          zip: jobZip,\r\n        },\r\n      }, token);\r\n      Alert.alert('Saved', 'Job details updated.');\r\n      loadJob();\r\n    } catch(e) {\r\n      Alert.alert('Error', e.message || 'Unable to save job');\r\n    }\r\n  };\r\n  const deleteJob = () => {\n    Alert.alert('Delete job', `Delete job #${jobId}?`, [\n      { text:'Cancel', style:'cancel' },\n      { text:'Delete', style:'destructive', onPress: async ()=>{\n        try{\n          await api(`/jobs/${jobId}`,'DELETE',null,token);\n          db.transaction(tx => tx.executeSql('DELETE FROM jobs_cache WHERE id=?', [jobId]));\n          Alert.alert('Deleted', 'Job removed.');\n          navigation.navigate('Tabs', { screen:'Jobs' });\n        }catch(e){\n          Alert.alert('Error', e.message || 'Unable to delete job');\n        }\n      }}\n    ]);\n  };\n  const handleAssignTech = useCallback(async (techId) => {\n    if (!canAssignTech) return;\n    setAssigningTech(true);\n    try {\n      await api(`/jobs/${jobId}`,'PATCH',{ assignedTo: techId || null }, token);\n      setAssignedTechId(techId || null);\n      await loadJob();\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to update assignment.');\n    } finally {\n      setAssigningTech(false);\n    }\n  }, [canAssignTech, jobId, token, loadJob]);\n  const scheduleFollowUp = useCallback(async (channel) => {\n    const scheduledFor = new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString();\n    const payload = {};\n    if (channel === 'EMAIL') {\n      if (!jobCustomerEmail) return false;\n      payload.email = jobCustomerEmail;\n    }\n    if (channel === 'SMS') {\n      if (!jobCustomerPhone) return false;\n      payload.phone = jobCustomerPhone;\n    }\n    try {\n      await api('/reminders', 'POST', {\n        jobId,\n        channel,\n        template: 'FOLLOW_UP',\n        scheduledFor,\n        payload,\n      }, token);\n      return true;\n    } catch (error) {\n      console.warn('Failed to schedule follow up', error?.message || error);\n      return false;\n    }\n  }, [jobCustomerEmail, jobCustomerPhone, jobId, token]);\n  const handleCallCustomer = useCallback(async () => {\n    if (!jobCustomerPhone) {\n      Alert.alert('Missing phone', 'Add a phone number to call this customer.');\n      return;\n    }\n    await Linking.openURL(`tel:${jobCustomerPhone}`);\n    const channel = jobCustomerEmail ? 'EMAIL' : 'SMS';\n    const scheduled = await scheduleFollowUp(channel);\n    if (scheduled) {\n      Alert.alert('Reminder scheduled', 'We will send a branded follow-up in 24 hours.');\n    }\n  }, [jobCustomerPhone, jobCustomerEmail, scheduleFollowUp]);\n  const handleTextCustomer = useCallback(async () => {\n    if (!jobCustomerPhone) {\n      Alert.alert('Missing phone', 'Add a phone number to text this customer.');\n      return;\n    }\n    const message = `Reminder: Job #${jobId} is scheduled soon.`;\n    await Linking.openURL(`sms:${jobCustomerPhone}?body=${encodeURIComponent(message)}`);\n    const scheduled = await scheduleFollowUp('SMS');\n    if (scheduled) {\n      Alert.alert('Reminder scheduled', 'We will automatically follow up with a branded text.');\n    }\n  }, [jobCustomerPhone, jobId, scheduleFollowUp]);\n  const handleEmailCustomer = useCallback(async () => {\n    if (!jobCustomerEmail) {\n      Alert.alert('Missing email', 'Add an email to message this customer.');\n      return;\n    }\n    const subject = `Job #${jobId} update`;\n    const body = `Hi ${jobCustomerName || ''},%0D%0A%0D%0AJust a quick update on your project. Let us know if you have any questions.%0D%0A%0D%0AThanks!`;\n    await Linking.openURL(`mailto:${jobCustomerEmail}?subject=${encodeURIComponent(subject)}&body=${body}`);\n    const scheduled = await scheduleFollowUp('EMAIL');\n    if (scheduled) {\n      Alert.alert('Reminder scheduled', 'We will nudge the client with a branded email follow-up.');\n    }\n  }, [jobCustomerEmail, jobCustomerName, jobId, scheduleFollowUp]);\n  const handleOpenJobsiteMap = useCallback(() => {\n    const parts = [\n      jobAddressLine1?.trim(),\n      jobAddressLine2?.trim(),\n      [jobCity?.trim(), jobStateCode?.trim()].filter(Boolean).join(' '),\n      jobZip?.trim(),\n    ].filter(Boolean);\n    if (!parts.length) {\n      Alert.alert('Missing address', 'Add the jobsite address to open maps.');\n      return;\n    }\n    const address = parts.join(', ');\n    Linking.openURL(`https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(address)}`);\n  }, [jobAddressLine1, jobAddressLine2, jobCity, jobStateCode, jobZip]);\n  const handleUploadAttachment = useCallback(async () => {\n    try {\n      const permission = await ImagePicker.requestMediaLibraryPermissionsAsync();\n      if (permission && permission.granted === false) {\n        Alert.alert('Permission needed', 'Allow photo library access to attach files.');\n        return;\n      }\n      const result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        quality: 0.8,\n        allowsMultipleSelection: false,\n        base64: false,\n      });\n      if (result.canceled) return;\n      const asset = result.assets && result.assets[0];\n      if (!asset?.uri) return;\n      setUploadingAttachment(true);\n      const base64 = await FileSystem.readAsStringAsync(asset.uri, { encoding: FileSystem.EncodingType.Base64 });\n      const dataUrl = `data:${asset.mimeType || 'image/jpeg'};base64,${base64}`;\n      const uploaded = await api('/upload/image','POST',{ dataUrl }, token);\n      await api('/attachments','POST',{\n        entityType: 'JOB',\n        entityId: jobId,\n        fileUrl: uploaded.url,\n      }, token);\n      await loadAttachments();\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to upload attachment.');\n    } finally {\n      setUploadingAttachment(false);\n    }\n  }, [jobId, token, loadAttachments]);\n  const handleDeleteAttachment = useCallback((id) => {\n    Alert.alert('Delete attachment', 'Remove this file from the job?', [\n      { text:'Cancel', style:'cancel' },\n      {\n        text:'Delete',\n        style:'destructive',\n        onPress: async () => {\n          setJobAttachments(prev => prev.filter(att => att.id !== id));\n          try {\n            await api(`/attachments/${id}`,'DELETE',null,token);\n            await loadAttachments();\n          } catch (e) {\n            await loadAttachments();\n            Alert.alert('Error', e.message || 'Unable to delete attachment.');\n          }\n        }\n      }\n    ]);\n  }, [token, loadAttachments]);\n  const addActivityEntry = useCallback(async () => {\n    const trimmed = newActivityNote.trim();\n    if (!trimmed) {\n      Alert.alert('Missing note', 'Add details before posting to the log.');\n      return;\n    }\n    const entry = {\n      note: trimmed,\n      author: user?.fullName || user?.name || user?.email || 'Team',\n      createdAt: new Date().toISOString(),\n    };\n    try {\n      setAddingActivity(true);\n      const nextLog = [entry, ...(Array.isArray(jobActivity) ? jobActivity : [])];\n      await api(`/jobs/${jobId}`,'PATCH',{ activityLog: nextLog }, token);\n      setJobActivity(nextLog);\n      setNewActivityNote('');\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to save activity.');\n    } finally {\n      setAddingActivity(false);\n    }\n  }, [newActivityNote, jobActivity, jobId, token, user]);\n  const activityItems = useMemo(() => {\n    const list = Array.isArray(jobActivity) ? jobActivity.slice() : [];\n    return list.sort((a, b) => {\n      const aTime = new Date(a?.createdAt || 0).getTime();\n      const bTime = new Date(b?.createdAt || 0).getTime();\n      return (Number.isNaN(bTime) ? 0 : bTime) - (Number.isNaN(aTime) ? 0 : aTime);\n    });\n  }, [jobActivity]);\n  return (\r\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\r\n      <ScrollView\r\n        contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(6) }}\r\n      >\r\n        <Text style={{ color: palette.text, fontSize: typography.h1, fontWeight:'700' }}>Job #{jobId}</Text>\r\n        <Text style={{ color: palette.muted, marginTop: spacing(0.5), marginBottom: spacing(3) }}>\r\n          Keep job information up to date so the field team always has the latest context.\r\n        </Text>\r\n\r\n        <SurfaceCard style={{ padding: spacing(2.5), marginBottom: spacing(3) }}>\r\n          <Text style={{ color: palette.muted, fontSize: typography.small, fontWeight:'700', textTransform:'uppercase', marginBottom: spacing(1) }}>\r\n            Basics\r\n          </Text>\r\n          <FormInput placeholder=\"Job name\" value={jobName} onChangeText={setJobName} />\r\n          <View style={{ flexDirection:'row', columnGap: spacing(1.5) }}>\r\n            <View style={{ flex:1 }}>\r\n              <DateInputField value={jobStartDate} onChange={setJobStartDate} placeholder=\"Start date\" style={{ marginBottom: 0 }} />\r\n            </View>\r\n            <View style={{ flex:1 }}>\r\n              <DateInputField value={jobEndDate} onChange={setJobEndDate} placeholder=\"End date\" style={{ marginBottom: 0 }} />\r\n            </View>\r\n          </View>\r\n          <FormInput\n            placeholder=\"Notes / scope\"\n            value={jobNotes}\n            onChangeText={setJobNotes}\n            multiline\n            style={{ minHeight: 112, textAlignVertical: 'top' }}\n          />\n          <Text style={{ color: palette.muted, fontWeight:'600', marginTop: spacing(1.5), marginBottom: spacing(0.5) }}>Tags</Text>\n          <TagInput value={jobTags} onChange={setJobTags} placeholder=\"Add job tags (e.g. Roofing, Urgent)\" />\n          <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center', marginTop: spacing(2) }}>\n            <QuickAction label=\"Delete job\" tone=\"danger\" onPress={deleteJob} />\n            <TouchableOpacity\r\n              onPress={saveJobDetails}\r\n              activeOpacity={0.85}\r\n              style={{ backgroundColor: palette.primary, paddingHorizontal: spacing(2.5), paddingVertical: spacing(1.5), borderRadius: 12 }}\r\n            >\r\n              <Text style={{ color:'#fff', fontWeight:'700' }}>Save changes</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </SurfaceCard>\r\n\r\n        <SurfaceCard style={{ padding: spacing(2.5), marginBottom: spacing(3) }}>\n          <Text style={{ color: palette.muted, fontSize: typography.small, fontWeight:'700', textTransform:'uppercase', marginBottom: spacing(1) }}>\n            Customer\n          </Text>\n          <FormInput placeholder=\"Name\" value={jobCustomerName} onChangeText={setJobCustomerName} />\n          <FormInput placeholder=\"Phone\" value={jobCustomerPhone} onChangeText={setJobCustomerPhone} keyboardType=\"phone-pad\" />\n          <FormInput\n            placeholder=\"Email\"\n            value={jobCustomerEmail}\n            onChangeText={setJobCustomerEmail}\n            keyboardType=\"email-address\"\n            autoCapitalize=\"none\"\n          />\n          {(jobCustomerPhone || jobCustomerEmail) ? (\n            <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginTop: spacing(1.5) }}>\n              {jobCustomerPhone ? <QuickAction label=\"Call\" tone=\"primary\" onPress={handleCallCustomer} /> : null}\n              {jobCustomerPhone ? <QuickAction label=\"Text\" tone=\"primary\" onPress={handleTextCustomer} /> : null}\n              {jobCustomerEmail ? <QuickAction label=\"Email\" tone=\"muted\" onPress={handleEmailCustomer} /> : null}\n            </View>\n          ) : null}\n        </SurfaceCard>\n\n        <SurfaceCard style={{ padding: spacing(2.5), marginBottom: spacing(3) }}>\n          <Text style={{ color: palette.muted, fontSize: typography.small, fontWeight:'700', textTransform:'uppercase', marginBottom: spacing(1) }}>\n            Jobsite\n          </Text>\n          <FormInput placeholder=\"Address line 1\" value={jobAddressLine1} onChangeText={setJobAddressLine1} />\r\n          <FormInput placeholder=\"Address line 2\" value={jobAddressLine2} onChangeText={setJobAddressLine2} />\r\n          <View style={{ flexDirection:'row', columnGap: spacing(1.5) }}>\n            <FormInput placeholder=\"City\" value={jobCity} onChangeText={setJobCity} style={{ flex:1, marginBottom: 0 }} />\n            <FormInput\n              placeholder=\"State\"\n              value={jobStateCode}\n              onChangeText={setJobStateCode}\n              autoCapitalize=\"characters\"\n              style={{ width: 96, marginBottom: 0 }}\n            />\n            <FormInput\n              placeholder=\"ZIP\"\n              value={jobZip}\n              onChangeText={setJobZip}\n              keyboardType=\"numeric\"\n              style={{ width: 112, marginBottom: 0 }}\n            />\n          </View>\n          <View style={{ marginTop: spacing(1.5) }}>\n            <QuickAction label=\"Open in Maps\" tone=\"primary\" onPress={handleOpenJobsiteMap} />\n          </View>\n        </SurfaceCard>\n\n        <SurfaceCard style={{ padding: spacing(2.5), marginBottom: spacing(3) }}>\n          <Text style={{ color: palette.muted, fontSize: typography.small, fontWeight:'700', textTransform:'uppercase' }}>Attachments</Text>\n          <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>Store site photos, permits, and approvals for the crew.</Text>\n          <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginTop: spacing(1.5) }}>\n            <QuickAction\n              label={uploadingAttachment ? 'Uploading...' : 'Add photo'}\n              tone={uploadingAttachment ? 'muted' : 'primary'}\n              onPress={uploadingAttachment ? undefined : handleUploadAttachment}\n            />\n            <QuickAction label=\"Refresh\" tone=\"muted\" onPress={loadAttachments} />\n          </View>\n          {loadingAttachments ? (\n            <View style={{ alignItems:'center', paddingVertical: spacing(2) }}>\n              <ActivityIndicator color={palette.primary} />\n              <Text style={{ color: palette.muted, marginTop: spacing(1) }}>Syncing attachments...</Text>\n            </View>\n          ) : jobAttachments.length === 0 ? (\n            <Text style={{ color: palette.muted, marginTop: spacing(1.5) }}>No attachments yet.</Text>\n          ) : (\n            jobAttachments.map(att => {\n              const url = att?.fileUrl || '';\n              const isImage = typeof url === 'string' && /\\.(png|jpe?g|gif|webp)$/i.test(url);\n              return (\n                <View\n                  key={att.id}\n                  style={{\n                    borderWidth: 1,\n                    borderColor: palette.border,\n                    borderRadius: 12,\n                    marginTop: spacing(1.5),\n                    overflow: 'hidden',\n                    backgroundColor: palette.surface,\n                  }}\n                >\n                  {isImage && url ? (\n                    <TouchableOpacity onPress={() => url ? Linking.openURL(url) : null} activeOpacity={0.85}>\n                      <Image source={{ uri: url }} style={{ height: 180, width: '100%' }} resizeMode=\"cover\" />\n                    </TouchableOpacity>\n                  ) : null}\n                  <View style={{ padding: spacing(1.5) }}>\n                    <Text style={{ color: palette.text, fontWeight:'600' }}>{att.caption || 'Attachment'}</Text>\n                    <Text style={{ color: palette.muted, fontSize: typography.small, marginTop: spacing(0.5) }}>\n                      {(att.uploader?.fullName || att.uploader?.email || 'Uploaded')} {att.createdAt ? `• ${new Date(att.createdAt).toLocaleString()}` : ''}\n                    </Text>\n                    <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginTop: spacing(1.5) }}>\n                      {url ? <QuickAction label=\"Open\" tone=\"muted\" onPress={() => Linking.openURL(url)} /> : null}\n                      <QuickAction label=\"Delete\" tone=\"danger\" onPress={() => handleDeleteAttachment(att.id)} />\n                    </View>\n                  </View>\n                </View>\n              );\n            })\n          )}\n        </SurfaceCard>\n\n        <SurfaceCard style={{ padding: spacing(2.5), marginBottom: spacing(3) }}>\n          <Text style={{ color: palette.muted, fontSize: typography.small, fontWeight:'700', textTransform:'uppercase' }}>Activity log</Text>\n          <Text style={{ color: palette.muted, marginTop: spacing(0.5), marginBottom: spacing(1.5) }}>Capture approvals, client updates, and job milestones.</Text>\n          <TextInput\n            multiline\n            placeholder=\"Add a note for the team\"\n            placeholderTextColor={palette.muted}\n            value={newActivityNote}\n            onChangeText={setNewActivityNote}\n            style={[formInputBaseStyle, { minHeight: 96, textAlignVertical: 'top' }]}\n          />\n          <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginTop: spacing(1) }}>\n            <QuickAction\n              label={addingActivity ? 'Saving...' : 'Add entry'}\n              tone={addingActivity ? 'muted' : 'primary'}\n              onPress={addingActivity ? undefined : addActivityEntry}\n            />\n            <QuickAction label=\"Refresh\" tone=\"muted\" onPress={loadJob} />\n          </View>\n          {activityItems.length === 0 ? (\n            <Text style={{ color: palette.muted, marginTop: spacing(1.5) }}>No log entries yet.</Text>\n          ) : (\n            activityItems.map((entry, idx) => (\n              <View\n                key={`${entry.createdAt || idx}-${idx}`}\n                style={{\n                  marginTop: spacing(1.5),\n                  borderTopWidth: idx === 0 ? 0 : 1,\n                  borderTopColor: palette.border,\n                  paddingTop: idx === 0 ? 0 : spacing(1.5),\n                }}\n              >\n                <Text style={{ color: palette.text, fontWeight:'600' }}>{entry.note}</Text>\n                <Text style={{ color: palette.muted, fontSize: typography.small, marginTop: spacing(0.5) }}>\n                  {(entry.author || 'Team')} {entry.createdAt ? `• ${new Date(entry.createdAt).toLocaleString()}` : ''}\n                </Text>\n              </View>\n            ))\n          )}\n        </SurfaceCard>\n\n        {canManageChangeOrders ? (\n          <SurfaceCard style={{ padding: spacing(2.5), marginBottom: spacing(3) }}>\r\n            <Text style={{ color: palette.muted, fontSize: typography.small, fontWeight:'700', textTransform:'uppercase', marginBottom: spacing(1) }}>\r\n              New change order\r\n            </Text>\r\n            <FormInput placeholder=\"Title\" value={title} onChangeText={setTitle} />\r\n            <FormInput placeholder=\"Amount $\" value={amountDelta} onChangeText={setAmountDelta} keyboardType=\"decimal-pad\" />\r\n            <View style={{ flexDirection:'row', justifyContent:'flex-end', marginTop: spacing(2) }}>\r\n              <TouchableOpacity\r\n                onPress={addCO}\r\n                activeOpacity={0.85}\r\n                style={{ backgroundColor: palette.primary, paddingHorizontal: spacing(2.5), paddingVertical: spacing(1.5), borderRadius: 12 }}\r\n              >\r\n                <Text style={{ color:'#fff', fontWeight:'700' }}>Add change order</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </SurfaceCard>\r\n        ) : null}\r\n\r\n        <View style={{ marginBottom: spacing(3) }}>\r\n          <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700', marginBottom: spacing(1.5) }}>Change orders</Text>\r\n          {changeOrders.length === 0 ? (\r\n            <SurfaceCard>\r\n              <Text style={{ color: palette.muted }}>No change orders yet.</Text>\r\n            </SurfaceCard>\r\n          ) : changeOrders.map(item => {\r\n            const statusKey = (item.status || 'PENDING').toUpperCase();\r\n            const statusTone = (() => {\r\n              if (statusKey === 'APPROVED') return { bg: '#dcfce7', fg: palette.success, label: 'Approved' };\r\n              if (statusKey === 'REJECTED') return { bg: '#fee2e2', fg: palette.danger, label: 'Rejected' };\r\n              return { bg: '#e0f3f0', fg: palette.primaryStrong, label: 'Pending' };\r\n            })();\r\n            const amountLabel = formatCurrency(item.amountDelta || 0);\r\n            return (\r\n              <SurfaceCard key={item.id} style={{ marginBottom: spacing(1.5), padding: spacing(2.5) }}>\r\n                <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center' }}>\r\n                  <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600' }}>{item.title}</Text>\r\n                  <View style={{ backgroundColor: statusTone.bg, borderRadius: 999, paddingHorizontal: spacing(1.5), paddingVertical: spacing(0.5) }}>\r\n                    <Text style={{ color: statusTone.fg, fontWeight:'600', fontSize: typography.small }}>{statusTone.label}</Text>\r\n                  </View>\r\n                </View>\r\n                <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>{amountLabel}</Text>\r\n                {canManageChangeOrders ? (\r\n                  <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginTop: spacing(1.5) }}>\r\n                    <QuickAction\r\n                      label=\"Approve\"\r\n                      tone=\"success\"\r\n                      onPress={async ()=>{ await api(`/change-orders/${item.id}`,'PATCH',{ status:'APPROVED' }, token); loadCO(); }}\r\n                    />\r\n                    <QuickAction\r\n                      label=\"Reject\"\r\n                      tone=\"danger\"\r\n                      onPress={async ()=>{ await api(`/change-orders/${item.id}`,'PATCH',{ status:'REJECTED' }, token); loadCO(); }}\r\n                    />\r\n                  </View>\r\n                ) : null}\r\n              </SurfaceCard>\r\n            );\r\n          })}\r\n        </View>\r\n\r\n        <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700', marginBottom: spacing(1.5) }}>Tasks</Text>\r\n        <JobTasks jobId={jobId} />\r\n\r\n        <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700', marginTop: spacing(3), marginBottom: spacing(1.5) }}>Schedule</Text>\r\n        <JobSchedule jobId={jobId} />\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nfunction JobTasks({ jobId }){\r\n  const { token } = useAuth();\r\n  const [tasks, setTasks] = useState([]);\r\n  const [title, setTitle] = useState('');\r\n  const [dueDate, setDueDate] = useState('');\r\n  const load = async()=> {\r\n    try {\r\n      const data = await api(`/tasks?jobId=${jobId}`,'GET',null,token);\r\n      setTasks(data);\r\n      db.transaction(tx => {\r\n        tx.executeSql('DELETE FROM tasks_cache WHERE jobId=?', [jobId]);\r\n        data.forEach(t => tx.executeSql('INSERT OR REPLACE INTO tasks_cache (id, jobId, title, status, dueDate) VALUES (?,?,?,?,?)', [t.id, jobId, t.title||'', t.status||'TODO', t.dueDate||'']));\r\n      });\r\n    } catch(e) {\r\n      db.transaction(tx => tx.executeSql('SELECT id, jobId, title, status, dueDate FROM tasks_cache WHERE jobId=?', [jobId], (_, { rows }) => setTasks(rows._array || [])));\r\n    }\r\n  };\r\n  useEffect(()=>{ load(); },[]);\r\n  const add = async()=>{\r\n    if(!title.trim()) return Alert.alert('Title required');\r\n    await api('/tasks','POST',{ title, jobId, dueDate }, token);\r\n    setTitle(''); setDueDate(''); load();\r\n  };\r\n  const done = async(id)=>{ await api(`/tasks/${id}`,'PATCH',{ status:'DONE' }, token); load(); };\r\n  const remove = (id)=>{\r\n    Alert.alert('Delete task', 'Remove this task?', [\r\n      { text:'Cancel', style:'cancel' },\r\n      { text:'Delete', style:'destructive', onPress: async ()=>{ await api(`/tasks/${id}`,'DELETE',null,token); load(); } },\r\n    ]);\r\n  };\r\n  return (\r\n    <View>\r\n      <SurfaceCard style={{ marginBottom: spacing(2) }}>\r\n        <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600', marginBottom: spacing(1.5) }}>Add task</Text>\r\n        <TextInput\r\n          placeholder=\"Task title\"\r\n          placeholderTextColor={palette.muted}\r\n          value={title}\r\n          onChangeText={setTitle}\r\n          style={{\r\n            borderWidth:1,\r\n            borderColor: palette.border,\r\n            borderRadius: 12,\r\n            padding: spacing(2),\r\n            color: palette.text,\r\n            backgroundColor: palette.surfaceMuted,\r\n            marginBottom: spacing(1.5),\r\n          }}\r\n        />\r\n        <DateInputField value={dueDate} onChange={setDueDate} placeholder=\"Due date (optional)\" />\r\n        <QuickAction label=\"Add task\" onPress={add} />\r\n      </SurfaceCard>\r\n\r\n      {tasks.length === 0 ? (\r\n        <SurfaceCard>\r\n          <Text style={{ color: palette.muted }}>No tasks yet. Add one to start tracking progress.</Text>\r\n        </SurfaceCard>\r\n      ) : (\r\n        tasks.map(t => (\r\n          <SurfaceCard key={t.id} style={{ marginBottom: spacing(1.5) }}>\r\n            <Text style={{ color: palette.text, fontWeight:'600', fontSize: typography.h2 - 2 }}>{t.title}</Text>\r\n            <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>\r\n              Status: {t.status || 'TODO'}{t.dueDate ? ` - Due ${formatDate(t.dueDate)}` : ''}\r\n            </Text>\r\n            <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginTop: spacing(1.5) }}>\r\n              {!isTaskCompleted(t.status) ? (\r\n                <QuickAction label=\"Mark done\" tone=\"success\" onPress={() => done(t.id)} />\r\n              ) : null}\r\n              <QuickAction label=\"Delete\" tone=\"danger\" onPress={() => remove(t.id)} />\r\n            </View>\r\n          </SurfaceCard>\r\n        ))\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction JobSchedule({ jobId }){\r\n  const { token } = useAuth();\r\n  const [events, setEvents] = useState([]);\r\n  const [title, setTitle] = useState('');\r\n  const [startAt, setStartAt] = useState('');\r\n  const [endAt, setEndAt] = useState('');\r\n  const load = async()=> {\r\n    try {\r\n      const data = await api(`/calendar?jobId=${jobId}`,'GET',null,token);\r\n      setEvents(data);\r\n      db.transaction(tx => {\r\n        tx.executeSql('DELETE FROM calendar_cache WHERE jobId=?', [jobId]);\r\n        data.forEach(ev => tx.executeSql('INSERT OR REPLACE INTO calendar_cache (id, jobId, title, startAt, endAt) VALUES (?,?,?,?,?)', [ev.id, jobId, ev.title||'', ev.startAt||'', ev.endAt||'']));\r\n      });\r\n    } catch(e) {\r\n      db.transaction(tx => tx.executeSql('SELECT id, jobId, title, startAt, endAt FROM calendar_cache WHERE jobId=?', [jobId], (_, { rows }) => setEvents(rows._array || [])));\r\n    }\r\n  };\r\n  useEffect(()=>{ load(); },[]);\r\n  const add = async()=>{\r\n    if(!title.trim() || !startAt) return Alert.alert('Title and start time required');\r\n    await api('/calendar','POST',{ title, jobId, startAt, endAt }, token);\r\n    setTitle(''); setStartAt(''); setEndAt(''); load();\r\n  };\r\n  const remove = (id)=>{\r\n    Alert.alert('Delete event', 'Remove this schedule item?', [\r\n      { text:'Cancel', style:'cancel' },\r\n      { text:'Delete', style:'destructive', onPress: async ()=>{ await api(`/calendar/${id}`,'DELETE',null,token); load(); } },\r\n    ]);\r\n  };\r\n  return (\r\n    <View>\r\n      <SurfaceCard style={{ marginBottom: spacing(2) }}>\r\n        <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600', marginBottom: spacing(1.5) }}>Schedule event</Text>\r\n        <TextInput\r\n          placeholder=\"Event title\"\r\n          placeholderTextColor={palette.muted}\r\n          value={title}\r\n          onChangeText={setTitle}\r\n          style={{\r\n            borderWidth:1,\r\n            borderColor: palette.border,\r\n            borderRadius: 12,\r\n            padding: spacing(2),\r\n            color: palette.text,\r\n            backgroundColor: palette.surfaceMuted,\r\n            marginBottom: spacing(1.5),\r\n          }}\r\n        />\r\n        <DateInputField\r\n          value={startAt}\r\n          onChange={(date) => {\r\n            const existing = startAt || '';\r\n            const timePartIndex = existing.indexOf('T');\r\n            const timePart = timePartIndex > -1 ? existing.substring(timePartIndex) : 'T08:00:00';\r\n            setStartAt(`${date}${timePart}`);\r\n          }}\r\n          placeholder=\"Start date\"\r\n        />\r\n        <DateInputField\r\n          value={endAt}\r\n          onChange={(date) => {\r\n            if (!date) {\r\n              setEndAt('');\r\n              return;\r\n            }\r\n            const existing = endAt || '';\r\n            const timePartIndex = existing.indexOf('T');\r\n            const timePart = timePartIndex > -1 ? existing.substring(timePartIndex) : 'T17:00:00';\r\n            setEndAt(`${date}${timePart}`);\r\n          }}\r\n          placeholder=\"End date (optional)\"\r\n        />\r\n        <QuickAction label=\"Add event\" onPress={add} />\r\n      </SurfaceCard>\r\n\r\n      {events.length === 0 ? (\r\n        <SurfaceCard>\r\n          <Text style={{ color: palette.muted }}>No schedule entries yet.</Text>\r\n        </SurfaceCard>\r\n      ) : (\r\n        events.map(ev => {\r\n          const startLabel = ev.startAt ? `Starts ${formatDate(ev.startAt)}` : 'No start date';\r\n          const endLabel = ev.endAt ? ` - Ends ${formatDate(ev.endAt)}` : '';\r\n          return (\r\n            <SurfaceCard key={ev.id} style={{ marginBottom: spacing(1.5) }}>\r\n              <Text style={{ color: palette.text, fontWeight:'600', fontSize: typography.h2 - 2 }}>{ev.title}</Text>\r\n              <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>\r\n                {startLabel}{endLabel}\r\n              </Text>\r\n              <View style={{ flexDirection:'row', columnGap: spacing(1), marginTop: spacing(1.5) }}>\r\n                <QuickAction label=\"Delete\" tone=\"danger\" onPress={()=>remove(ev.id)} />\r\n              </View>\r\n            </SurfaceCard>\r\n          );\r\n        })\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n\r\n// ---------- Leads / Estimates (with photo queue) ----------\r\nasync function processQueue(token){\r\n  return new Promise(resolve => {\r\n    db.transaction(tx => {\r\n      tx.executeSql('SELECT * FROM queue', [], async (_, { rows }) => {\r\n        const items = rows._array || [];\r\n        for(const q of items){\r\n          try{\r\n            const payload = JSON.parse(q.payload);\r\n            if(q.type === 'createLead'){ await api('/leads', 'POST', payload, token); }\r\n            if(q.type === 'uploadPhoto'){ await api('/upload/image', 'POST', { dataUrl: payload.dataUrl }, token); }\r\n            db.transaction(txx => txx.executeSql('DELETE FROM queue WHERE id=?', [q.id]));\r\n          }catch(e){ /* keep for later */ }\r\n        }\r\n        resolve();\r\n      });\r\n    });\r\n  });\r\n}\r\n\r\nfunction LeadsScreen({ navigation }){\r\n  const { token } = useAuth();\r\n  const [leads, setLeads] = useState([]);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const fetchLeads = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n      const data = await api('/leads', 'GET', null, token);\r\n      setLeads(data);\r\n      db.transaction(tx => {\r\n        tx.executeSql && tx.executeSql('DELETE FROM leads_cache;');\r\n        data.forEach(l => tx.executeSql && tx.executeSql(\r\n          'INSERT OR REPLACE INTO leads_cache (id, description, status) VALUES (?,?,?)',\r\n          [l.id, l.description || '', l.status || 'NEW']\r\n        ));\r\n      });\r\n    } catch(e){\r\n      db.transaction(tx =>\r\n        tx.executeSql && tx.executeSql('SELECT id, description, status FROM leads_cache', [], (_, { rows }) => setLeads(rows._array || []))\r\n      );\r\n    }\r\n    finally {\r\n      setLoading(false);\r\n    }\r\n  }, [token]);\r\n\r\n  useFocusEffect(useCallback(() => {\r\n    fetchLeads();\r\n  }, [fetchLeads]));\r\n\r\n  const onRefresh = useCallback(async () => {\r\n    setRefreshing(true);\r\n    await fetchLeads();\r\n    setRefreshing(false);\r\n  }, [fetchLeads]);\r\n\r\n  const deleteLead = useCallback((lead) => {\r\n    const title = deriveLeadTitle(lead);\r\n    Alert.alert('Delete lead', `Remove \"${title}\"?`, [\r\n      { text:'Cancel', style:'cancel' },\r\n      { text:'Delete', style:'destructive', onPress: async () => {\r\n        try {\r\n          await api(`/leads/${lead.id}`,'DELETE',null,token);\r\n          setLeads(prev => prev.filter(l => l.id !== lead.id));\r\n          db.transaction(tx => tx.executeSql && tx.executeSql('DELETE FROM leads_cache WHERE id=?', [lead.id]));\r\n        } catch(err) {\r\n          Alert.alert('Error', err.message || 'Unable to delete lead');\r\n        }\r\n      }}\r\n    ]);\r\n  }, [token]);\r\n\r\n  const newLeadsCount = leads.filter(l => (l.status || '').toUpperCase() === 'NEW').length;\r\n\r\n  const renderLeadCard = (lead) => {\n    const customer = lead.Customer || {};\n    const title = deriveLeadTitle(lead);\n    const subtitle = customer.name && customer.name.trim() && customer.name.trim() !== title ? customer.name : null;\n    const jobsite = lead.Jobsite || {};\n    const addressParts = [\r\n      jobsite.addressLine1,\r\n      jobsite.addressLine2,\r\n      [jobsite.city, jobsite.state].filter(Boolean).join(', '),\r\n      jobsite.zip\n    ].filter(Boolean);\n    const address = addressParts.join(', ');\n    const statusKey = (lead.status || 'NEW').toUpperCase();\n    const tags = Array.isArray(lead.tags) ? lead.tags : [];\n    return (\n      <SurfaceCard key={lead.id}>\n        <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center' }}>\n          <View>\n            <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600' }}>{title}</Text>\n            {subtitle ? <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>{subtitle}</Text> : null}\r\n          </View>\r\n          <StatusPill status={statusKey} />\r\n        </View>\r\n        {customer.phone ? <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>{customer.phone}</Text> : null}\r\n        {customer.email ? <Text style={{ color: palette.muted }}>{customer.email}</Text> : null}\n        {address ? <Text style={{ color: palette.muted, marginTop: spacing(1) }}>{address}</Text> : null}\n        <Text numberOfLines={3} style={{ color: palette.text, marginTop: spacing(1.5) }}>{lead.description || 'No scope captured yet.'}</Text>\n        {tags.length ? (\n          <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginTop: spacing(1) }}>\n            {tags.map(tag => (\n              <View key={`${lead.id}-${tag}`} style={{ backgroundColor: '#e0f3f0', borderRadius: 999, paddingHorizontal: spacing(1.5), paddingVertical: spacing(0.5) }}>\n                <Text style={{ color: palette.primaryStrong, fontWeight:'600', fontSize: typography.small }}>{`#${tag}`}</Text>\n              </View>\n            ))}\n          </View>\n        ) : null}\n        <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginTop: spacing(2) }}>\n          <QuickAction label=\"Open\" onPress={() => navigation.navigate('EstimateEditor', { leadId: lead.id })} />\n          <QuickAction label=\"Convert\" tone=\"success\" onPress={() => navigation.navigate('Jobs')} />\n          <QuickAction label=\"Delete\" tone=\"danger\" onPress={() => deleteLead(lead)} />\n        </View>\n      </SurfaceCard>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\r\n      <FlatList\r\n        data={leads}\r\n        keyExtractor={item => String(item.id)}\r\n        contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(4) }}\r\n        refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} tintColor={palette.primary} />}\r\n        ListHeaderComponent={\r\n          <View style={{ marginBottom: spacing(3) }}>\r\n            <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center', marginBottom: spacing(2) }}>\r\n              <View>\r\n                <Text style={{ color: palette.text, fontSize: typography.h1, fontWeight:'700' }}>Leads</Text>\r\n                <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>Keep the funnel moving</Text>\r\n              </View>\r\n              <QuickAction label=\"New lead\" onPress={() => navigation.navigate('NewLead')} />\r\n            </View>\r\n            <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(2), rowGap: spacing(2) }}>\r\n              <View style={{ flexBasis:'48%', minWidth: 160 }}>\r\n                <SummaryCard title=\"Total\" value={leads.length} subtitle={`${newLeadsCount} new`} tone=\"info\" />\r\n              </View>\r\n              <View style={{ flexBasis:'48%', minWidth: 160 }}>\r\n                <SummaryCard title=\"Outstanding\" value={newLeadsCount} subtitle=\"Require follow up\" tone=\"warning\" />\r\n              </View>\r\n            </View>\r\n          </View>\r\n        }\r\n        renderItem={({ item }) => renderLeadCard(item)}\r\n        ListEmptyComponent={\r\n          loading ? (\r\n            <SurfaceCard style={{ alignItems:'center', paddingVertical: spacing(4) }}>\r\n              <ActivityIndicator color={palette.primary} />\r\n              <Text style={{ color: palette.muted, marginTop: spacing(1) }}>Loading leads...</Text>\r\n            </SurfaceCard>\r\n          ) : (\r\n            <SurfaceCard>\r\n              <Text style={{ color: palette.muted }}>No leads yet. Capture a lead to get started.</Text>\r\n            </SurfaceCard>\r\n          )\r\n        }\r\n      />\r\n    </SafeAreaView>\r\n  );\r\n}\r\nfunction NewLeadScreen({ navigation }){\n  const { token } = useAuth();\n  const [description, setDescription] = useState('');\n  const [status, setStatus] = useState('NEW');\n  const [customerName, setCustomerName] = useState('');\n  const [customerPhone, setCustomerPhone] = useState('');\n  const [customerEmail, setCustomerEmail] = useState('');\n  const [addressLine1, setAddressLine1] = useState('');\n  const [addressLine2, setAddressLine2] = useState('');\n  const [city, setCity] = useState('');\n  const [stateCode, setStateCode] = useState('');\n  const [zip, setZip] = useState('');\n  const [leadTags, setLeadTags] = useState([]);\n  const [showCustomerSection, setShowCustomerSection] = useState(false);\r\n  const [showJobsiteSection, setShowJobsiteSection] = useState(false);\r\n  const statuses = ['NEW','CONTACTED','ESTIMATING','CONVERTED','CLOSED_LOST'];\r\n\r\n  const buildPayload = () => {\r\n    const customer = [customerName, customerPhone, customerEmail].some(v => v && v.trim())\r\n      ? {\r\n          name: customerName.trim(),\r\n          phone: customerPhone.trim(),\r\n          email: customerEmail.trim(),\r\n        }\r\n      : null;\r\n    const jobsite = [addressLine1, addressLine2, city, stateCode, zip].some(v => v && v.trim())\r\n      ? {\r\n          addressLine1: addressLine1.trim(),\r\n          addressLine2: addressLine2.trim(),\r\n          city: city.trim(),\r\n          state: stateCode.trim(),\r\n          zip: zip.trim(),\r\n        }\r\n      : null;\r\n    return {\n      description,\n      status,\n      customer,\n      jobsite,\n      tags: Array.isArray(leadTags) ? leadTags.filter(Boolean) : [],\n    };\n  };\n\r\n  const createLeadOnline = async () => {\r\n    const payload = buildPayload();\r\n    const created = await api('/leads', 'POST', payload, token);\r\n    navigation.replace('EstimateEditor', { leadId: created.id });\r\n    const title = deriveLeadTitle(created);\r\n    Alert.alert('Lead created', `\"${title}\" is ready to estimate.`);\r\n  };\r\n\r\n  const queueLead = () => {\r\n    const payload = buildPayload();\r\n    db.transaction(tx => tx.executeSql('INSERT INTO queue (type, payload) VALUES (?,?)', ['createLead', JSON.stringify(payload)]));\r\n    Alert.alert('Saved offline', 'We will submit this lead when you reconnect.');\r\n    navigation.goBack();\r\n  };\r\n\r\n  const submit = async () => {\r\n    if(!description.trim()){\r\n      Alert.alert('Missing scope', 'Please describe the job or scope of work.');\r\n      return;\r\n    }\r\n    try {\r\n      await createLeadOnline();\r\n    } catch(e){\r\n      queueLead();\r\n    }\r\n  };\r\n\r\n  const chipStyle = (active) => ({\r\n    paddingHorizontal: spacing(2),\r\n    paddingVertical: spacing(1),\r\n    borderRadius: 999,\r\n    borderWidth: 1,\r\n    borderColor: active ? palette.primary : palette.border,\r\n    backgroundColor: active ? '#d9f2ed' : palette.surface,\r\n  });\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\r\n      <ScrollView contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(6) }}>\r\n        <SurfaceCard style={{ marginBottom: spacing(3) }}>\r\n          <Text style={{ color: palette.text, fontSize: typography.h1, fontWeight:'700', marginBottom: spacing(2) }}>New lead</Text>\r\n          <Text style={{ color: palette.muted, fontWeight:'600', marginBottom: spacing(1) }}>Scope</Text>\r\n          <TextInput\r\n            placeholder=\"Describe the job...\"\r\n            placeholderTextColor={palette.muted}\r\n            value={description}\r\n            onChangeText={setDescription}\r\n            multiline\r\n            style={{\r\n              borderWidth: 1,\r\n              borderColor: palette.border,\r\n              borderRadius: 12,\r\n              padding: spacing(2),\r\n              minHeight: 120,\r\n              color: palette.text,\r\n              backgroundColor: palette.surfaceMuted,\r\n              textAlignVertical: 'top',\r\n            }}\r\n          />\r\n          <Text style={{ color: palette.muted, fontWeight:'600', marginTop: spacing(2), marginBottom: spacing(1) }}>Status</Text>\r\n          <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1) }}>\n            {statuses.map(s => {\n              const active = status === s;\n              return (\n                <TouchableOpacity key={s} onPress={() => setStatus(s)} activeOpacity={0.85} style={chipStyle(active)}>\n                  <Text style={{ color: active ? palette.primaryStrong : palette.muted, fontWeight:'600', fontSize: typography.small }}>{s.replace('_',' ')}</Text>\n                </TouchableOpacity>\n              );\n            })}\n          </View>\n          <Text style={{ color: palette.muted, fontWeight:'600', marginTop: spacing(2), marginBottom: spacing(0.75) }}>Tags</Text>\n          <TagInput value={leadTags} onChange={setLeadTags} placeholder=\"Add tags (e.g. Roof, Urgent)\" />\n          <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center', marginTop: spacing(3) }}>\n            <QuickAction label=\"Save offline\" tone=\"muted\" onPress={queueLead} />\n            <TouchableOpacity\n              onPress={submit}\n              activeOpacity={0.85}\n              style={{ backgroundColor: palette.primary, paddingHorizontal: spacing(3), paddingVertical: spacing(1.5), borderRadius: 12 }}\r\n            >\r\n              <Text style={{ color:'#fff', fontWeight:'700' }}>Create lead</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </SurfaceCard>\r\n\r\n        <SurfaceCard style={{ marginBottom: spacing(3) }}>\r\n          <TouchableOpacity\r\n            onPress={() => setShowCustomerSection(v => !v)}\r\n            style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center' }}\r\n            activeOpacity={0.8}\r\n          >\r\n            <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600' }}>Customer details</Text>\r\n            <Text style={{ color: palette.primary, fontWeight:'600' }}>{showCustomerSection ? 'Hide' : 'Add'}</Text>\r\n          </TouchableOpacity>\r\n          {showCustomerSection ? (\r\n            <View style={{ marginTop: spacing(2) }}>\r\n              <TextInput\r\n                placeholder=\"Name\"\r\n                placeholderTextColor={palette.muted}\r\n                value={customerName}\r\n                onChangeText={setCustomerName}\r\n                style={{\r\n                  borderWidth: 1,\r\n                  borderColor: palette.border,\r\n                  borderRadius: 12,\r\n                  padding: spacing(2),\r\n                  color: palette.text,\r\n                  backgroundColor: palette.surfaceMuted,\r\n                  marginBottom: spacing(1.5),\r\n                }}\r\n              />\r\n              <TextInput\r\n                placeholder=\"Phone\"\r\n                placeholderTextColor={palette.muted}\r\n                keyboardType=\"phone-pad\"\r\n                value={customerPhone}\r\n                onChangeText={setCustomerPhone}\r\n                style={{\r\n                  borderWidth: 1,\r\n                  borderColor: palette.border,\r\n                  borderRadius: 12,\r\n                  padding: spacing(2),\r\n                  color: palette.text,\r\n                  backgroundColor: palette.surfaceMuted,\r\n                  marginBottom: spacing(1.5),\r\n                }}\r\n              />\r\n              <TextInput\r\n                placeholder=\"Email\"\r\n                placeholderTextColor={palette.muted}\r\n                keyboardType=\"email-address\"\r\n                autoCapitalize=\"none\"\r\n                value={customerEmail}\r\n                onChangeText={setCustomerEmail}\r\n                style={{\r\n                  borderWidth: 1,\r\n                  borderColor: palette.border,\r\n                  borderRadius: 12,\r\n                  padding: spacing(2),\r\n                  color: palette.text,\r\n                  backgroundColor: palette.surfaceMuted,\r\n                }}\r\n              />\r\n            </View>\r\n          ) : (\r\n            <Text style={{ color: palette.muted, marginTop: spacing(1.5) }}>Add contact details to help follow up faster.</Text>\r\n          )}\r\n        </SurfaceCard>\r\n\r\n        <SurfaceCard>\r\n          <TouchableOpacity\r\n            onPress={() => setShowJobsiteSection(v => !v)}\r\n            style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center' }}\r\n            activeOpacity={0.8}\r\n          >\r\n            <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600' }}>Jobsite address</Text>\r\n            <Text style={{ color: palette.primary, fontWeight:'600' }}>{showJobsiteSection ? 'Hide' : 'Add'}</Text>\r\n          </TouchableOpacity>\r\n          {showJobsiteSection ? (\r\n            <View style={{ marginTop: spacing(2) }}>\r\n              <TextInput\r\n                placeholder=\"Address line 1\"\r\n                placeholderTextColor={palette.muted}\r\n                value={addressLine1}\r\n                onChangeText={setAddressLine1}\r\n                style={{\r\n                  borderWidth: 1,\r\n                  borderColor: palette.border,\r\n                  borderRadius: 12,\r\n                  padding: spacing(2),\r\n                  color: palette.text,\r\n                  backgroundColor: palette.surfaceMuted,\r\n                  marginBottom: spacing(1.5),\r\n                }}\r\n              />\r\n              <TextInput\r\n                placeholder=\"Address line 2\"\r\n                placeholderTextColor={palette.muted}\r\n                value={addressLine2}\r\n                onChangeText={setAddressLine2}\r\n                style={{\r\n                  borderWidth: 1,\r\n                  borderColor: palette.border,\r\n                  borderRadius: 12,\r\n                  padding: spacing(2),\r\n                  color: palette.text,\r\n                  backgroundColor: palette.surfaceMuted,\r\n                  marginBottom: spacing(1.5),\r\n                }}\r\n              />\r\n              <View style={{ flexDirection:'row', columnGap: spacing(1.5) }}>\r\n                <View style={{ flex:1 }}>\r\n                  <TextInput\r\n                    placeholder=\"City\"\r\n                    placeholderTextColor={palette.muted}\r\n                    value={city}\r\n                    onChangeText={setCity}\r\n                    style={{\r\n                      borderWidth: 1,\r\n                      borderColor: palette.border,\r\n                      borderRadius: 12,\r\n                      padding: spacing(2),\r\n                      color: palette.text,\r\n                      backgroundColor: palette.surfaceMuted,\r\n                      marginBottom: spacing(1.5),\r\n                    }}\r\n                  />\r\n                </View>\r\n                <View style={{ width: 80 }}>\r\n                  <TextInput\r\n                    placeholder=\"State\"\r\n                    placeholderTextColor={palette.muted}\r\n                    value={stateCode}\r\n                    onChangeText={setStateCode}\r\n                    style={{\r\n                      borderWidth: 1,\r\n                      borderColor: palette.border,\r\n                      borderRadius: 12,\r\n                      padding: spacing(2),\r\n                      color: palette.text,\r\n                      backgroundColor: palette.surfaceMuted,\r\n                      marginBottom: spacing(1.5),\r\n                    }}\r\n                  />\r\n                </View>\r\n                <View style={{ width: 100 }}>\r\n                  <TextInput\r\n                    placeholder=\"ZIP\"\r\n                    placeholderTextColor={palette.muted}\r\n                    value={zip}\r\n                    onChangeText={setZip}\r\n                    style={{\r\n                      borderWidth: 1,\r\n                      borderColor: palette.border,\r\n                      borderRadius: 12,\r\n                      padding: spacing(2),\r\n                      color: palette.text,\r\n                      backgroundColor: palette.surfaceMuted,\r\n                      marginBottom: spacing(1.5),\r\n                    }}\r\n                  />\r\n                </View>\r\n              </View>\r\n            </View>\r\n          ) : (\r\n            <Text style={{ color: palette.muted, marginTop: spacing(1.5) }}>Add a jobsite to keep crews aligned.</Text>\r\n          )}\r\n        </SurfaceCard>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\nfunction EstimateEditorScreen({ route, navigation }){\r\n  const { token, user } = useAuth();\r\n  const { leadId } = route.params || {};\r\n  const [estimateId, setEstimateId] = useState(null);\r\n  const [items, setItems] = useState([]);\r\n  const [desc, setDesc] = useState('');\r\n  const [qty, setQty] = useState('1');\r\n  const [price, setPrice] = useState('0');\r\n  const [notes, setNotes] = useState('');\r\n  const [photoUrl, setPhotoUrl] = useState(null);\r\n  const [subtotal, setSubtotal] = useState(0);\r\n  const [taxRate, setTaxRate] = useState('7');\r\n  const [tax, setTax] = useState(0);\r\n  const [total, setTotal] = useState(0);\r\n  const [leadDetails, setLeadDetails] = useState(null);\r\n  const [leadStatus, setLeadStatus] = useState('NEW');\r\n  const [leadScope, setLeadScope] = useState('');\r\n  const [leadCustomerName, setLeadCustomerName] = useState('');\r\n  const [leadCustomerPhone, setLeadCustomerPhone] = useState('');\r\n  const [leadCustomerEmail, setLeadCustomerEmail] = useState('');\r\n  const [leadAddressLine1, setLeadAddressLine1] = useState('');\r\n  const [leadAddressLine2, setLeadAddressLine2] = useState('');\r\n  const [leadCity, setLeadCity] = useState('');\r\n  const [leadStateCode, setLeadStateCode] = useState('');\r\n  const [leadZip, setLeadZip] = useState('');\r\n  const leadStatuses = ['NEW','CONTACTED','ESTIMATING','CONVERTED','CLOSED_LOST'];\r\n\r\n  const loadLead = useCallback(async () => {\r\n    if (!leadId) return;\r\n    try {\r\n      const data = await api(`/leads/${leadId}`,'GET',null,token);\r\n      setLeadDetails(data);\r\n      setLeadStatus(data.status || 'NEW');\r\n      setLeadScope(data.description || '');\r\n      const customer = data.Customer || {};\r\n      const jobsite = data.Jobsite || {};\r\n      setLeadCustomerName(customer.name || '');\r\n      setLeadCustomerPhone(customer.phone || '');\r\n      setLeadCustomerEmail(customer.email || '');\r\n      setLeadAddressLine1(jobsite.addressLine1 || '');\r\n      setLeadAddressLine2(jobsite.addressLine2 || '');\r\n      setLeadCity(jobsite.city || '');\r\n      setLeadStateCode(jobsite.state || '');\r\n      setLeadZip(jobsite.zip || '');\r\n    } catch(e) { }\r\n  }, [leadId, token]);\r\n\r\n  useEffect(() => {\r\n    loadLead();\r\n  }, [loadLead]);\r\n\r\n  const createEstimate = async () => {\r\n    const est = await api('/estimates', 'POST', {\r\n      leadId,\r\n      customerId: leadDetails?.customerId ?? null,\r\n      jobsiteId: leadDetails?.jobsiteId ?? null,\r\n      subtotal: 0,\r\n      taxRate: parseFloat(taxRate) || 0,\r\n      total: 0\r\n    }, token);\r\n    setEstimateId(est.id);\r\n    return est;\r\n  };\r\n\r\n  const ensureEstimate = useCallback(async () => {\r\n    if (estimateId) return estimateId;\r\n    const created = await createEstimate();\r\n    setEstimateId(created.id);\r\n    return created.id;\r\n  }, [estimateId, createEstimate]);\r\n\r\n  useEffect(() => {\r\n    const rate = parseFloat(taxRate) || 0;\r\n    const newSubtotal = items.reduce((sum, item) => sum + (parseFloat(item.qty || 0) * parseFloat(item.unitPrice || 0)), 0);\r\n    const newTax = newSubtotal * (rate / 100);\r\n    setSubtotal(newSubtotal);\r\n    setTax(newTax);\r\n    setTotal(newSubtotal + newTax);\r\n  }, [items, taxRate]);\r\n\r\n  const addItem = async () => {\r\n    if (!desc.trim()) {\r\n      Alert.alert('Line item', 'Please add a description.');\r\n      return;\r\n    }\r\n    try {\r\n      const targetId = await ensureEstimate();\r\n      const payload = {\r\n        description: desc.trim(),\r\n        qty: parseFloat(qty) || 1,\r\n        unitPrice: parseFloat(price) || 0,\r\n      };\r\n      const item = await api(`/estimates/${targetId}/items`, 'POST', payload, token);\r\n      setItems(prev => [item, ...prev]);\r\n      setDesc('');\r\n      setQty('1');\r\n      setPrice('0');\r\n    } catch (e) {\r\n      Alert.alert('Error', e.message || 'Unable to add line item');\r\n    }\r\n  };\r\n\r\n  const saveLeadDetails = async () => {\r\n    if (!leadId) return;\r\n    const customerPayload = [leadCustomerName, leadCustomerPhone, leadCustomerEmail].some(v => v && v.trim()) ? {\r\n      name: leadCustomerName.trim(),\r\n      phone: leadCustomerPhone.trim(),\r\n      email: leadCustomerEmail.trim(),\r\n    } : null;\r\n    const jobsitePayload = [leadAddressLine1, leadAddressLine2, leadCity, leadStateCode, leadZip].some(v => v && v.trim()) ? {\r\n      addressLine1: leadAddressLine1.trim(),\r\n      addressLine2: leadAddressLine2.trim(),\r\n      city: leadCity.trim(),\r\n      state: leadStateCode.trim(),\r\n      zip: leadZip.trim(),\r\n    } : null;\r\n    try {\r\n      await api(`/leads/${leadId}`,'PATCH',{\r\n        description: leadScope,\r\n        status: leadStatus,\r\n        customer: customerPayload,\r\n        jobsite: jobsitePayload,\r\n      }, token);\r\n      Alert.alert('Saved', 'Lead details updated.');\r\n    } catch (e) {\r\n      Alert.alert('Error', e.message || 'Unable to save lead details');\r\n    }\r\n  };\r\n\r\n  const pickPhoto = async () => {\r\n    const result = await ImagePicker.launchImageLibraryAsync({\r\n      allowsEditing: false,\r\n      quality: 0.6,\r\n    });\r\n    if (!result.canceled && result.assets?.length) {\r\n      setPhotoUrl(result.assets[0].uri);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\r\n      <ScrollView contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(6) }}>\r\n        <SurfaceCard style={{ marginBottom: spacing(3) }}>\r\n          <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700', marginBottom: spacing(1.5) }}>Lead summary</Text>\r\n          <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1.5), marginBottom: spacing(2) }}>\r\n            {leadStatuses.map(s => {\r\n              const selected = leadStatus === s;\r\n              return (\r\n                <QuickAction\r\n                  key={s}\r\n                  label={s.replace('_',' ')}\r\n                  tone={selected ? 'primary' : 'muted'}\r\n                  onPress={() => setLeadStatus(s)}\r\n                />\r\n              );\r\n            })}\r\n          </View>\r\n          <TextInput\r\n            placeholder=\"Scope / project notes\"\r\n            placeholderTextColor={palette.muted}\r\n            value={leadScope}\r\n            onChangeText={setLeadScope}\r\n            multiline\r\n            style={{\r\n              borderWidth:1,\r\n              borderColor: palette.border,\r\n              borderRadius: 12,\r\n              padding: spacing(2),\r\n              minHeight: 120,\r\n              color: palette.text,\r\n              backgroundColor: palette.surfaceMuted,\r\n              textAlignVertical: 'top',\r\n            }}\r\n          />\r\n          <View style={{ flexDirection:'row', justifyContent:'flex-end', marginTop: spacing(2) }}>\r\n            <QuickAction label=\"Save lead\" onPress={saveLeadDetails} />\r\n          </View>\r\n        </SurfaceCard>\r\n\r\n        <SurfaceCard style={{ marginBottom: spacing(3) }}>\r\n          <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700', marginBottom: spacing(1.5) }}>Line items</Text>\r\n          <TextInput\r\n            placeholder=\"Describe the work or material\"\r\n            placeholderTextColor={palette.muted}\r\n            value={desc}\r\n            onChangeText={setDesc}\r\n            style={{\r\n              borderWidth:1,\r\n              borderColor: palette.border,\r\n              borderRadius: 12,\r\n              padding: spacing(2),\r\n              color: palette.text,\r\n              backgroundColor: palette.surfaceMuted,\r\n              marginBottom: spacing(1.5),\r\n            }}\r\n          />\r\n          <View style={{ flexDirection:'row', columnGap: spacing(1.5), marginBottom: spacing(1.5) }}>\r\n            <TextInput\r\n              placeholder=\"Qty\"\r\n              placeholderTextColor={palette.muted}\r\n              value={qty}\r\n              onChangeText={setQty}\r\n              keyboardType=\"numeric\"\r\n              style={{\r\n                flex:1,\r\n                borderWidth:1,\r\n                borderColor: palette.border,\r\n                borderRadius: 12,\r\n                padding: spacing(2),\r\n                color: palette.text,\r\n                backgroundColor: palette.surfaceMuted,\r\n              }}\r\n            />\r\n            <TextInput\r\n              placeholder=\"Unit price\"\r\n              placeholderTextColor={palette.muted}\r\n              value={price}\r\n              onChangeText={setPrice}\r\n              keyboardType=\"numeric\"\r\n              style={{\r\n                flex:1,\r\n                borderWidth:1,\r\n                borderColor: palette.border,\r\n                borderRadius: 12,\r\n                padding: spacing(2),\r\n                color: palette.text,\r\n                backgroundColor: palette.surfaceMuted,\r\n              }}\r\n            />\r\n            <QuickAction label=\"Add\" onPress={addItem} />\r\n          </View>\r\n          {items.length === 0 ? (\r\n            <Text style={{ color: palette.muted }}>No line items yet.</Text>\r\n          ) : (\r\n            items.map((item, idx) => (\r\n              <SurfaceCard key={item.id || idx} style={{ marginBottom: spacing(1.5) }}>\r\n                <Text style={{ color: palette.text, fontWeight:'600' }}>{item.description}</Text>\r\n                <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>\r\n                  Qty {item.qty} x ${parseFloat(item.unitPrice || 0).toFixed(2)} = {(parseFloat(item.qty || 0) * parseFloat(item.unitPrice || 0)).toFixed(2)}\r\n                </Text>\r\n              </SurfaceCard>\r\n            ))\r\n          )}\r\n          <View style={{ marginTop: spacing(2), borderTopWidth:1, borderTopColor: palette.border, paddingTop: spacing(2) }}>\r\n            <Text style={{ color: palette.muted }}>Tax rate (%)</Text>\r\n            <TextInput\r\n              value={String(taxRate)}\r\n              onChangeText={setTaxRate}\r\n              keyboardType=\"numeric\"\r\n              placeholderTextColor={palette.muted}\r\n              style={{\r\n                marginTop: spacing(1),\r\n                borderWidth:1,\r\n                borderColor: palette.border,\r\n                borderRadius: 12,\r\n                padding: spacing(2),\r\n                color: palette.text,\r\n                backgroundColor: palette.surfaceMuted,\r\n              }}\r\n            />\r\n            <View style={{ marginTop: spacing(2) }}>\r\n              <Text style={{ color: palette.text }}>Subtotal: ${subtotal.toFixed(2)}</Text>\r\n              <Text style={{ color: palette.text }}>Tax: ${tax.toFixed(2)}</Text>\r\n              <Text style={{ color: palette.text, fontWeight:'700' }}>Total: ${total.toFixed(2)}</Text>\r\n            </View>\r\n          </View>\r\n        </SurfaceCard>\r\n\r\n        <SurfaceCard>\r\n          <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700', marginBottom: spacing(1.5) }}>Attachments & notes</Text>\r\n          <TextInput\r\n            placeholder=\"Internal notes\"\r\n            placeholderTextColor={palette.muted}\r\n            value={notes}\r\n            onChangeText={setNotes}\r\n            multiline\r\n            style={{\r\n              borderWidth:1,\r\n              borderColor: palette.border,\r\n              borderRadius: 12,\r\n              padding: spacing(2),\r\n              minHeight: 100,\r\n              color: palette.text,\r\n              backgroundColor: palette.surfaceMuted,\r\n              textAlignVertical: 'top',\r\n            }}\r\n          />\r\n          <View style={{ flexDirection:'row', columnGap: spacing(1.5), marginTop: spacing(1.5) }}>\r\n            <QuickAction label=\"Add photo\" onPress={pickPhoto} />\r\n          </View>\r\n          {photoUrl ? (\r\n            <Image source={{ uri: photoUrl }} style={{ height: 160, borderRadius: 12, marginTop: spacing(2) }} />\r\n          ) : null}\r\n        </SurfaceCard>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nfunction ScheduleScreen({ navigation }){\r\n  const { token } = useAuth();\r\n  const [jobs, setJobs] = useState([]);\r\n  const [filter, setFilter] = useState('ALL');\r\n  const [queueCount, setQueueCount] = useState(0);\r\n  const [syncing, setSyncing] = useState(false);\r\n\r\n  const loadQueueCount = useCallback(() => {\r\n    db.transaction(tx => tx.executeSql('SELECT COUNT(*) as c FROM queue', [], (_, { rows }) => setQueueCount((rows._array?.[0]?.c)||0)));\r\n  }, []);\r\n\r\n  const load = useCallback(async () => {\r\n    try {\r\n      const data = await api('/jobs','GET',null,token);\r\n      setJobs(data);\r\n      db.transaction(tx => {\r\n        tx.executeSql('DELETE FROM jobs_cache;');\r\n        data.forEach(j => tx.executeSql('INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)', [j.id, j.name||'', j.status||'SCHEDULED', j.startDate||'', j.endDate||'', j.notes||'']));\r\n      });\r\n    } catch(e) {\r\n      db.transaction(tx => tx.executeSql('SELECT id, name, status, startDate, endDate, notes FROM jobs_cache', [], (_, { rows }) => setJobs(rows._array || [])));\r\n    }\r\n  }, [token]);\r\n\r\n  useEffect(() => {\r\n    load();\r\n    loadQueueCount();\r\n  }, [load, loadQueueCount]);\r\n\r\n  const filters = [\r\n    { key:'ALL', label:'All' },\r\n    { key:'TODAY', label:'Today' },\r\n    { key:'WEEK', label:'This week' },\r\n  ];\r\n\r\n  const inRange = useCallback((dateValue) => {\r\n    if (filter === 'ALL') return true;\r\n    if (!dateValue) return false;\r\n    const today = new Date();\r\n    const dt = new Date(dateValue);\r\n    if (Number.isNaN(dt.getTime())) return false;\r\n    if (filter === 'TODAY') {\r\n      return dt.getFullYear() === today.getFullYear() && dt.getMonth() === today.getMonth() && dt.getDate() === today.getDate();\r\n    }\r\n    const start = new Date(today);\r\n    start.setHours(0, 0, 0, 0);\r\n    start.setDate(today.getDate() - today.getDay());\r\n    const end = new Date(start);\r\n    end.setDate(start.getDate() + 6);\r\n    return dt >= start && dt <= end;\r\n  }, [filter]);\r\n\r\n  const filteredJobs = useMemo(() => (\n    jobs\n      .filter(job => inRange(job.startDate))\n      .sort((a, b) => new Date(a.startDate || 0) - new Date(b.startDate || 0))\n  ), [jobs, inRange]);\n  const openJobInMaps = useCallback((job) => {\n    if (!job) return;\n    const jobsite = job.Jobsite || {};\n    const addressParts = [\n      jobsite.addressLine1,\n      jobsite.addressLine2,\n      [jobsite.city, jobsite.state].filter(Boolean).join(' '),\n      jobsite.zip,\n    ].filter(part => part && String(part).trim());\n    if (!addressParts.length) {\n      Alert.alert('Missing address', 'Add a jobsite address to open navigation.');\n      return;\n    }\n    const address = addressParts.join(', ');\n    Linking.openURL(`https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(address)}`);\n  }, []);\n  const optimizeRoute = useCallback(() => {\n    if (!filteredJobs.length) {\n      Alert.alert('No jobs', 'Apply filters or add jobs before optimizing a route.');\n      return;\n    }\n    const addresses = filteredJobs\n      .map(job => {\n        const site = job.Jobsite || {};\n        const parts = [\n          site.addressLine1,\n          site.addressLine2,\n          [site.city, site.state].filter(Boolean).join(' '),\n          site.zip,\n        ].filter(part => part && String(part).trim());\n        return parts.length ? parts.join(', ') : null;\n      })\n      .filter(Boolean);\n    if (!addresses.length) {\n      Alert.alert('Missing addresses', 'Add jobsite addresses to build a route.');\n      return;\n    }\n    if (addresses.length === 1) {\n      Linking.openURL(`https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(addresses[0])}`);\n      return;\n    }\n    const origin = addresses[0];\n    const destination = addresses[addresses.length - 1];\n    const waypointsRaw = addresses.slice(1, -1);\n    let url = `https://www.google.com/maps/dir/?api=1&origin=${encodeURIComponent(origin)}&destination=${encodeURIComponent(destination)}`;\n    if (waypointsRaw.length) {\n      url += `&waypoints=${waypointsRaw.map(addr => encodeURIComponent(addr)).join('|')}`;\n    }\n    Linking.openURL(url);\n  }, [filteredJobs]);\n  const techSummary = useMemo(() => {\n    const buckets = {};\n    filteredJobs.forEach(job => {\n      const tech = job?.assignedTech;\n      const key = tech?.fullName || tech?.email || 'Unassigned';\n      buckets[key] = (buckets[key] || 0) + 1;\n    });\n    return Object.entries(buckets);\n  }, [filteredJobs]);\n\n  const handleSync = useCallback(async () => {\n    setSyncing(true);\n    try {\r\n      await processQueue(token);\r\n      await load();\r\n      loadQueueCount();\r\n    } finally {\r\n      setSyncing(false);\r\n    }\r\n  }, [token, load, loadQueueCount]);\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\r\n      <ScrollView contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(6) }}>\r\n        <Text style={{ color: palette.text, fontSize: typography.h1, fontWeight:'700', marginBottom: spacing(2) }}>Schedule</Text>\r\n        <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1.5), marginBottom: spacing(2) }}>\r\n          {filters.map(option => (\r\n            <QuickAction\r\n              key={option.key}\r\n              label={option.label}\r\n              tone={filter === option.key ? 'primary' : 'muted'}\r\n              onPress={() => setFilter(option.key)}\r\n            />\r\n          ))}\r\n        </View>\r\n        <SurfaceCard style={{ marginBottom: spacing(3), flexDirection:'row', justifyContent:'space-between', alignItems:'center' }}>\n          <View>\n            <Text style={{ color: palette.text, fontWeight:'600' }}>Offline queue</Text>\n            <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>{queueCount} items waiting to sync</Text>\n          </View>\n          <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1) }}>\n            <QuickAction label={syncing ? 'Syncing...' : 'Sync now'} tone={syncing ? 'muted' : 'primary'} onPress={syncing ? undefined : handleSync} />\n            <QuickAction label=\"Optimize route\" tone=\"muted\" onPress={optimizeRoute} />\n          </View>\n        </SurfaceCard>\n        {techSummary.length ? (\n          <SurfaceCard style={{ marginBottom: spacing(3) }}>\n            <Text style={{ color: palette.text, fontWeight:'600', marginBottom: spacing(1) }}>Technician availability</Text>\n            {techSummary.map(([name, count]) => (\n              <View key={name} style={{ flexDirection:'row', justifyContent:'space-between', marginTop: spacing(0.5) }}>\n                <Text style={{ color: palette.muted }}>{name}</Text>\n                <Text style={{ color: palette.text }}>{count} job{count === 1 ? '' : 's'}</Text>\n              </View>\n            ))}\n          </SurfaceCard>\n        ) : null}\n\n        {filteredJobs.length === 0 ? (\n          <SurfaceCard>\r\n            <Text style={{ color: palette.muted }}>No jobs {filter !== 'ALL' ? 'in this range' : 'scheduled yet'}. Convert a lead or create a job to populate your schedule.</Text>\r\n          </SurfaceCard>\r\n        ) : (\r\n          filteredJobs.map(job => {\r\n            const jobsite = job.Jobsite || {};\r\n            const addressParts = [\n              jobsite.addressLine1,\n              jobsite.addressLine2,\n              [jobsite.city, jobsite.state].filter(Boolean).join(', '),\n              jobsite.zip,\n            ].filter(Boolean);\n            const address = addressParts.join(', ');\n            const startLabel = job.startDate ? `Starts ${formatDate(job.startDate)}` : 'No start date';\n            const endLabel = job.endDate ? ` - Due ${formatDate(job.endDate)}` : '';\n            const assignedTech = job.assignedTech;\n            return (\n              <SurfaceCard key={job.id} style={{ marginBottom: spacing(2) }}>\n                <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center' }}>\n                  <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600' }}>{job.name || `Job #${job.id}`}</Text>\n                  <StatusPill status={job.status || 'SCHEDULED'} />\n                </View>\n                <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>\n                  {startLabel}{endLabel}\n                </Text>\n                {address ? <Text style={{ color: palette.muted, marginTop: spacing(1) }}>{address}</Text> : null}\n                {assignedTech ? (\n                  <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>\n                    Assigned to {assignedTech.fullName || assignedTech.email || 'Tech'}\n                  </Text>\n                ) : null}\n                {job.notes ? <Text style={{ color: palette.muted, marginTop: spacing(1) }}>{job.notes}</Text> : null}\n                <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginTop: spacing(2) }}>\n                  {address ? <QuickAction label=\"Map\" tone=\"muted\" onPress={() => openJobInMaps(job)} /> : null}\n                  <QuickAction label=\"Open job\" onPress={() => navigation.navigate('JobDetail', { jobId: job.id })} />\n                  <QuickAction label=\"View tasks\" onPress={() => navigation.navigate('JobDetail', { jobId: job.id, tab: 'tasks' })} tone=\"muted\" />\n                </View>\n              </SurfaceCard>\n            );\n          })\r\n        )}\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\nfunction ProfileScreen({ navigation }){\r\n  const { setToken, user } = useAuth();\r\n  const isAdmin = (user?.role || '').toUpperCase() === 'ADMIN';\r\n  return (\r\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\r\n      <ScrollView contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(6) }}>\r\n        <Text style={{ color: palette.text, fontSize: typography.h1, fontWeight:'700', marginBottom: spacing(2) }}>Profile</Text>\r\n        <SurfaceCard style={{ marginBottom: spacing(3) }}>\r\n          <Text style={{ color: palette.muted, fontSize: typography.small, textTransform:'uppercase', fontWeight:'600' }}>Account</Text>\r\n          <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700', marginTop: spacing(1) }}>{user?.name || user?.fullName || 'Team member'}</Text>\r\n          <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>{user?.email || 'No email on file'}</Text>\r\n          <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>Role: {user?.role || 'TECH'}</Text>\r\n        </SurfaceCard>\r\n\r\n        <SurfaceCard>\r\n          <Text style={{ color: palette.muted, fontSize: typography.small, textTransform:'uppercase', fontWeight:'600', marginBottom: spacing(1.5) }}>Actions</Text>\r\n          {isAdmin ? (\r\n            <View style={{ marginBottom: spacing(1.5) }}>\r\n              <QuickAction label=\"Manage users\" onPress={() => navigation.navigate('UsersAdmin')} />\r\n            </View>\r\n          ) : null}\r\n          <QuickAction label=\"Sign out\" tone=\"danger\" onPress={() => setToken(null)} />\r\n        </SurfaceCard>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\nconst Stack = createNativeStackNavigator();\r\nconst Tabs = createBottomTabNavigator();\r\n\r\nfunction TabsNav(){\r\n  const { user } = useAuth();\r\n  const isAdmin = (user?.role || '').toUpperCase() === 'ADMIN';\r\n  const { width } = useWindowDimensions();\r\n  const isCompact = Platform.OS !== 'web' ? true : width < 768;\r\n  const hideTabs = isCompact;\r\n  return (\r\n    <Tabs.Navigator\r\n      screenOptions={{\r\n        headerShown: false,\r\n        tabBarActiveTintColor: palette.primary,\r\n        tabBarStyle: { backgroundColor: '#fff', display: hideTabs ? 'none' : 'flex' },\r\n      }}\r\n    >\r\n      <Tabs.Screen name=\"Dashboard\" component={DashboardScreen} options={{ title: 'Home' }} />\r\n      <Tabs.Screen name=\"Leads\" component={LeadsScreen} />\r\n      <Tabs.Screen name=\"Jobs\" component={JobsKanbanScreen} options={{ title:'Jobs' }} />\r\n      {isAdmin ? <Tabs.Screen name=\"Invoices\" component={InvoicesScreen} /> : null}\r\n      <Tabs.Screen name=\"Schedule\" component={ScheduleScreen} />\r\n      <Tabs.Screen name=\"Profile\" component={ProfileScreen} options={{ title:\"Profile\" }} />\r\n    </Tabs.Navigator>\r\n  );\r\n}\r\n\r\nfunction MobileHeader({ currentRoute, onNavigate, isAdmin }){\r\n  const [menuVisible, setMenuVisible] = useState(false);\r\n  const activeRoute = useMemo(() => {\r\n    if (currentRoute === 'JobDetail') return 'Jobs';\r\n    return currentRoute;\r\n  }, [currentRoute]);\r\n\r\n  const menuItems = useMemo(() => {\r\n    const items = [\r\n      { label: 'Dashboard', route: 'Dashboard' },\r\n      { label: 'Leads', route: 'Leads' },\r\n      { label: 'Jobs', route: 'Jobs' },\r\n    ];\r\n    if (isAdmin) {\r\n      items.push({ label: 'Invoices', route: 'Invoices' });\r\n    }\r\n    items.push(\r\n      { label: 'Schedule', route: 'Schedule' },\r\n      { label: 'Profile', route: 'Profile' },\r\n    );\r\n    if (isAdmin) {\r\n      items.push({ label: 'Manage users', route: 'UsersAdmin' });\r\n    }\r\n    return items;\r\n  }, [isAdmin]);\r\n\r\n  const handleSelect = useCallback((route) => {\r\n    setMenuVisible(false);\r\n    onNavigate(route);\r\n  }, [onNavigate]);\r\n\r\n  return (\r\n    <>\r\n      <SafeAreaView style={{ backgroundColor: '#0B0C10' }}>\r\n        <View style={{ paddingHorizontal: spacing(2), paddingVertical: spacing(1.5), flexDirection:'row', alignItems:'center', justifyContent:'space-between' }}>\r\n          <TouchableOpacity\r\n            onPress={() => setMenuVisible(true)}\r\n            accessibilityLabel=\"Open navigation menu\"\r\n            accessibilityRole=\"button\"\r\n            style={{ padding: spacing(1) }}\r\n          >\r\n            <View style={{ width: 24, height: 2, backgroundColor: '#fff', borderRadius: 999, marginBottom: 4 }} />\r\n            <View style={{ width: 24, height: 2, backgroundColor: '#fff', borderRadius: 999, marginBottom: 4 }} />\r\n            <View style={{ width: 24, height: 2, backgroundColor: '#fff', borderRadius: 999 }} />\r\n          </TouchableOpacity>\r\n          <Text style={{ color:'#fff', fontSize: typography.h1, fontWeight:'700' }}>Precision Tracker</Text>\r\n          <View style={{ width: 24 }} />\r\n        </View>\r\n      </SafeAreaView>\r\n      <Modal\r\n        visible={menuVisible}\r\n        animationType=\"fade\"\r\n        transparent\r\n        onRequestClose={() => setMenuVisible(false)}\r\n      >\r\n        <View style={{ flex:1, backgroundColor:'rgba(15,23,42,0.6)', justifyContent:'flex-start', padding: spacing(3) }}>\r\n          <View style={{ backgroundColor: palette.surface, borderRadius: 16, padding: spacing(2.5) }}>\r\n            <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center', marginBottom: spacing(2) }}>\r\n              <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700' }}>Navigate</Text>\r\n              <TouchableOpacity onPress={() => setMenuVisible(false)} accessibilityRole=\"button\" accessibilityLabel=\"Close menu\">\r\n                <Text style={{ color: palette.muted, fontWeight:'600' }}>Close</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n            {menuItems.map(item => {\r\n              const selected = activeRoute === item.route;\r\n              return (\r\n                <TouchableOpacity\r\n                  key={item.route}\r\n                  onPress={() => handleSelect(item.route)}\r\n                  activeOpacity={0.85}\r\n                  style={{\r\n                    paddingVertical: spacing(1.25),\r\n                    paddingHorizontal: spacing(1.5),\r\n                    borderRadius: 12,\r\n                    backgroundColor: selected ? '#d9f2ed' : palette.surfaceMuted,\r\n                    marginBottom: spacing(1),\r\n                  }}\r\n                >\r\n                  <Text style={{ color: selected ? palette.primaryStrong : palette.text, fontWeight:'600', fontSize: typography.body }}>\r\n                    {item.label}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              );\r\n            })}\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction LoginScreen() {\r\n  const [email, setEmail] = useState('admin@example.com');\r\n  // If you kept the hardcoded backend login, default to test123:\r\n  const [password, setPassword] = useState('test123');\r\n  const [busy, setBusy] = useState(false);\r\n\r\n  // <-- use the auth context to flip the app into \"logged-in\" mode\r\n  const { setToken, setUser } = useAuth();\r\n\r\n  async function login() {\r\n    try {\r\n      setBusy(true);\r\n      const res = await fetch(`${API_URL}/auth/login`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n      const data = await res.json();\r\n      if (!res.ok) throw new Error(data?.message || data?.error || 'Login failed');\r\n\r\n      // Accept dev or real payload shape\r\n      const tok = data.token || data.accessToken;\r\n      if (!tok) throw new Error('No token returned from server');\r\n\r\n      // Store token/user in global auth state + persist\r\n      const normalizedUser = data.user ? { ...data.user, role: normalizeRole(data.user.role) } : { email, role: 'ADMIN', name: 'Admin' };\r\n      setToken(tok);\r\n      setUser(normalizedUser);\r\n      try {\r\n        await SecureStore.setItemAsync('auth_token', tok);\r\n        await SecureStore.setItemAsync('auth_user', JSON.stringify(normalizedUser));\r\n      } catch {}\r\n\r\n      // Optional: toast\r\n      Alert.alert('Welcome', 'Logged in');\r\n    } catch (e) {\r\n      Alert.alert('Error', e.message);\r\n    } finally {\r\n      setBusy(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View style={{ flex: 1, padding: 20, justifyContent: 'center' }}>\r\n      <Text style={{ fontSize: 24, marginBottom: 16 }}>PrecisionTracker</Text>\r\n      <TextInput\r\n        placeholder=\"Email\"\r\n        autoCapitalize=\"none\"\r\n        value={email}\r\n        onChangeText={setEmail}\r\n        style={{ borderWidth: 1, padding: 12, marginBottom: 12 }}\r\n      />\r\n      <TextInput\r\n        placeholder=\"Password\"\r\n        secureTextEntry\r\n        value={password}\r\n        onChangeText={setPassword}\r\n        style={{ borderWidth: 1, padding: 12, marginBottom: 12 }}\r\n      />\r\n      <Button title={busy ? 'Signing in...' : 'Sign in'} onPress={login} disabled={busy} />\r\n    </View>\r\n  );\r\n}\r\n\r\n\r\nexport default function App(){\r\n  const [token, setToken] = useState(null);\r\n  const [user, setUser] = useState(null);\r\n  const [booting, setBooting] = useState(true);\r\n  const navigationRef = useRef(null);\r\n  const [currentRoute, setCurrentRoute] = useState('Dashboard');\r\n  const { width } = useWindowDimensions();\r\n  const isCompactLayout = Platform.OS !== 'web' ? true : width < 768;\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    (async () => {\r\n      try {\r\n        const [tok, usr] = await Promise.all([\r\n          SecureStore.getItemAsync('auth_token'),\r\n          SecureStore.getItemAsync('auth_user')\r\n        ]);\r\n        if (mounted && tok) {\r\n          setToken(tok);\r\n          if (usr) {\r\n            const parsed = JSON.parse(usr);\r\n            parsed.role = normalizeRole(parsed.role);\r\n            setUser(parsed);\r\n          }\r\n        }\r\n      } catch {}\r\n      finally { if (mounted) setBooting(false); }\r\n    })();\r\n    return () => { mounted = false; };\r\n  }, []);\r\n\r\n  const authValue = {\r\n    token,\r\n    setToken: (t) => {\r\n      setToken(t);\r\n      if (!t) { try { SecureStore.deleteItemAsync('auth_token'); SecureStore.deleteItemAsync('auth_user'); } catch {} }\r\n    },\r\n    user,\r\n    setUser\r\n  };\r\n\r\n  const updateCurrentRoute = useCallback(() => {\r\n    if (!navigationRef.current) return;\r\n    const current = navigationRef.current.getCurrentRoute();\r\n    if (!current) return;\r\n    let name = current.name;\r\n    let state = current.state;\r\n    while (state && typeof state.index === 'number' && state.routes && state.routes[state.index]) {\r\n      const nested = state.routes[state.index];\r\n      name = nested.name;\r\n      state = nested.state;\r\n    }\r\n    if (name) setCurrentRoute(name);\r\n  }, []);\r\n\r\n  const handleNavigate = useCallback((routeName) => {\r\n    if (!navigationRef.current) return;\r\n    const tabRoutes = ['Dashboard','Leads','Jobs','Invoices','Schedule','Profile'];\r\n    if (tabRoutes.includes(routeName)) {\r\n      navigationRef.current.navigate('Tabs', { screen: routeName });\r\n    } else {\r\n      navigationRef.current.navigate(routeName);\r\n    }\r\n  }, []);\r\n\r\n  if (booting) {\r\n    return (\r\n      <SafeAreaView style={{ flex:1, alignItems:'center', justifyContent:'center' }}>\r\n        <Text>Loading...</Text>\r\n      </SafeAreaView>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={authValue}>\r\n      <View style={{ flex:1, backgroundColor: palette.background }}>\r\n        {isCompactLayout && token ? (\r\n          <MobileHeader\r\n            currentRoute={currentRoute}\r\n            onNavigate={handleNavigate}\r\n            isAdmin={(user?.role || '').toUpperCase() === 'ADMIN'}\r\n          />\r\n        ) : null}\r\n        <View style={{ flex:1 }}>\r\n          <NavigationContainer\r\n            ref={navigationRef}\r\n            onReady={updateCurrentRoute}\r\n            onStateChange={updateCurrentRoute}\r\n          >\r\n            {!token ? (\r\n              <Stack.Navigator>\r\n                <Stack.Screen name=\"Login\" component={LoginScreen} />\r\n              </Stack.Navigator>\r\n            ) : (\r\n              <Stack.Navigator>\r\n                <Stack.Screen name=\"Tabs\" component={TabsNav} options={{ headerShown:false }} />\r\n                <Stack.Screen name=\"NewLead\" component={NewLeadScreen} options={{ title:'New Lead' }} />\r\n                <Stack.Screen name=\"EstimateEditor\" component={EstimateEditorScreen} options={{ title:'Estimate' }} />\r\n                <Stack.Screen name=\"Signature\" component={SignatureScreen} options={{ title:'Signature' }} />\r\n                <Stack.Screen name=\"UsersAdmin\" component={UsersAdminScreen} options={{ title:'Users (Admin)' }} />\r\n                <Stack.Screen name=\"JobDetail\" component={JobDetailScreen} options={{ title:'Job' }} />\r\n              </Stack.Navigator>\r\n            )}\r\n          </NavigationContainer>\r\n        </View>\r\n      </View>\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}