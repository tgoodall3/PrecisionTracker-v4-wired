{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tyler\\\\Downloads\\\\PrecisionTracker-v4-wired\\\\PrecisionTracker\\\\mobile\\\\App.js\";\nimport React, { useEffect, useState, createContext, useContext, useRef, useCallback, useMemo } from 'react';\nimport { NavigationContainer, useFocusEffect } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport Share from \"react-native-web/dist/exports/Share\";\nimport * as ImagePicker from 'expo-image-picker';\nimport * as FileSystem from 'expo-file-system';\nimport * as Sharing from 'expo-sharing';\nimport * as Print from 'expo-print';\nimport * as SQLite from 'expo-sqlite';\nimport Svg, { Path } from 'react-native-svg';\nimport ViewShot from 'react-native-view-shot';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"react-native-web/dist/exports/View\";\nimport * as SecureStore from 'expo-secure-store';\nimport DateTimePicker, { DateTimePickerAndroid } from '@react-native-community/datetimepicker';\nimport { Buffer } from 'buffer';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.EXPO_PUBLIC_API_URL || 'http://localhost:4000';\nfunction initOfflineTables(database) {\n  try {\n    if (!database || typeof database.transaction !== 'function') return;\n    database.transaction(tx => {\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS queue (id INTEGER PRIMARY KEY AUTOINCREMENT, type TEXT, payload TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS uploads (id INTEGER PRIMARY KEY AUTOINCREMENT, dataUrl TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS leads_cache (id INTEGER PRIMARY KEY, description TEXT, status TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS jobs_cache (id INTEGER PRIMARY KEY, name TEXT, status TEXT, startDate TEXT, endDate TEXT, notes TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS tasks_cache (id INTEGER PRIMARY KEY, jobId INTEGER, title TEXT, status TEXT, dueDate TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS calendar_cache (id INTEGER PRIMARY KEY, jobId INTEGER, title TEXT, startAt TEXT, endAt TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS estimates_cache (id INTEGER PRIMARY KEY, leadId INTEGER, subtotal REAL, taxRate REAL, total REAL, status TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS estimate_items_cache (id INTEGER PRIMARY KEY, estimateId INTEGER, description TEXT, qty REAL, unitPrice REAL);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS change_orders_cache (id INTEGER PRIMARY KEY, jobId INTEGER, title TEXT, amountDelta REAL, status TEXT);');\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS users_cache (id INTEGER PRIMARY KEY, email TEXT, fullName TEXT, role TEXT);');\n    });\n  } catch (e) {}\n}\nlet db;\nexport function getDb() {\n  if (db) return db;\n  if (Platform.OS === 'web') {\n    db = {\n      transaction: fn => fn({\n        executeSql: () => {}\n      }),\n      execAsync: async () => {},\n      runAsync: async () => {}\n    };\n    return db;\n  }\n  if ('openDatabaseSync' in SQLite) {\n    db = SQLite.openDatabaseSync('offline.db');\n    return db;\n  }\n  if ('openDatabaseAsync' in SQLite) {\n    db = {\n      transaction: fn => fn({\n        executeSql: () => {}\n      }),\n      execAsync: async () => {},\n      runAsync: async () => {}\n    };\n    return db;\n  }\n  db = {\n    transaction: fn => fn({\n      executeSql: () => {}\n    }),\n    execAsync: async () => {},\n    runAsync: async () => {}\n  };\n  return db;\n}\nconst dbHandle = getDb();\ninitOfflineTables(dbHandle);\nconst normalizeRole = role => {\n  if (!role) return 'TECH';\n  const r = String(role).toUpperCase();\n  if (['ADMIN', 'ESTIMATOR', 'SUPERVISOR', 'TECH'].includes(r)) return r;\n  if (r === 'STANDARD' || r === 'USER') return 'TECH';\n  return r;\n};\nconst AuthContext = createContext(null);\nfunction useAuth() {\n  return useContext(AuthContext);\n}\nasync function api(path, method = 'GET', body, token) {\n  const headers = Object.assign({}, token ? {\n    Authorization: `Bearer ${token}`\n  } : {}, body ? {\n    'Content-Type': 'application/json'\n  } : {});\n  let response;\n  try {\n    response = await fetch(`${API_URL}${path}`, {\n      method,\n      headers,\n      body: body ? JSON.stringify(body) : undefined\n    });\n  } catch (networkError) {\n    throw new Error(networkError?.message || 'Network request failed');\n  }\n  const contentType = response.headers.get('content-type') || '';\n  const rawBody = await response.text();\n  let data = null;\n  if (rawBody) {\n    if (contentType.includes('application/json')) {\n      try {\n        data = JSON.parse(rawBody);\n      } catch {\n        data = rawBody;\n      }\n    } else {\n      data = rawBody;\n    }\n  }\n  if (!response.ok) {\n    const message = data && typeof data === 'object' && (data.error || data.message) || (typeof data === 'string' ? data : 'Request failed');\n    const error = new Error(message);\n    error.status = response.status;\n    error.payload = data;\n    error.body = rawBody;\n    error.path = path;\n    throw error;\n  }\n  return data;\n}\nconst palette = {\n  background: '#F1F5F9',\n  surface: '#FFFFFF',\n  surfaceMuted: '#E2E8F0',\n  border: '#CBD5E1',\n  text: '#0F172A',\n  muted: '#475569',\n  primary: '#10B981',\n  primaryStrong: '#047857',\n  success: '#10B981',\n  warning: '#FACC15',\n  danger: '#EF4444',\n  info: '#0EA5E9',\n  ink: '#0F172A'\n};\nconst defaultTagSeeds = ['Urgent', 'Follow-up', 'Inspection', 'Warranty', 'Priority', 'Safety', 'Internal'];\nconst spacing = (step = 1) => step * 8;\nconst typography = {\n  h1: 24,\n  h2: 18,\n  body: 15,\n  small: 12\n};\nconst lineHeightFor = fontSize => Math.round(fontSize * 1.5);\nconst defaultLineHeight = lineHeightFor(typography.body);\nif (!Text.defaultProps) Text.defaultProps = {};\nText.defaultProps.style = Object.assign({}, Text.defaultProps.style || {}, {\n  lineHeight: defaultLineHeight,\n  fontFamily: Platform.select({\n    ios: 'Inter',\n    android: 'Inter',\n    default: 'Inter'\n  }),\n  color: palette.text\n});\nconst floatingShadow = Platform.select({\n  ios: {\n    shadowColor: palette.ink,\n    shadowOpacity: 0.08,\n    shadowRadius: 14,\n    shadowOffset: {\n      width: 0,\n      height: 6\n    }\n  },\n  android: {\n    elevation: 2\n  },\n  default: {}\n});\nconst pillTone = {\n  NEW: {\n    fg: palette.info,\n    bg: '#E0F2FE',\n    label: 'New'\n  },\n  CONTACTED: {\n    fg: palette.primaryStrong,\n    bg: '#DCFCE7',\n    label: 'Contacted'\n  },\n  ESTIMATING: {\n    fg: '#92400E',\n    bg: '#FEF3C7',\n    label: 'Estimating'\n  },\n  CONVERTED: {\n    fg: palette.success,\n    bg: '#DCFCE7',\n    label: 'Converted'\n  },\n  CLOSED_LOST: {\n    fg: palette.muted,\n    bg: '#E2E8F0',\n    label: 'Lost'\n  },\n  SCHEDULED: {\n    fg: palette.primaryStrong,\n    bg: '#D1FAE5',\n    label: 'Scheduled'\n  },\n  IN_PROGRESS: {\n    fg: palette.info,\n    bg: '#E0F2FE',\n    label: 'In progress'\n  },\n  COMPLETED: {\n    fg: palette.success,\n    bg: '#DCFCE7',\n    label: 'Completed'\n  },\n  COMPLETE: {\n    fg: palette.success,\n    bg: '#DCFCE7',\n    label: 'Complete'\n  },\n  DONE: {\n    fg: palette.success,\n    bg: '#DCFCE7',\n    label: 'Complete'\n  },\n  ON_HOLD: {\n    fg: '#92400E',\n    bg: '#FEF3C7',\n    label: 'On hold'\n  },\n  CANCELLED: {\n    fg: palette.muted,\n    bg: '#E2E8F0',\n    label: 'Cancelled'\n  },\n  DRAFT: {\n    fg: palette.muted,\n    bg: '#E2E8F0',\n    label: 'Draft'\n  },\n  SENT: {\n    fg: palette.info,\n    bg: '#E0F2FE',\n    label: 'Sent'\n  },\n  PART_PAID: {\n    fg: '#92400E',\n    bg: '#FEF3C7',\n    label: 'Part paid'\n  },\n  PAID: {\n    fg: palette.success,\n    bg: '#DCFCE7',\n    label: 'Paid'\n  },\n  VOID: {\n    fg: palette.muted,\n    bg: '#F8FAFC',\n    label: 'Void'\n  }\n};\nconst toneMap = {\n  primary: {\n    fg: palette.primaryStrong,\n    bg: '#ECFDF5'\n  },\n  success: {\n    fg: palette.success,\n    bg: '#DCFCE7'\n  },\n  warning: {\n    fg: '#92400E',\n    bg: '#FEF3C7'\n  },\n  danger: {\n    fg: palette.danger,\n    bg: '#FEE2E2'\n  },\n  info: {\n    fg: palette.info,\n    bg: '#E0F2FE'\n  }\n};\nconst formInputBaseStyle = {\n  borderWidth: 1,\n  borderColor: palette.border,\n  borderRadius: 12,\n  paddingVertical: spacing(1.5),\n  paddingHorizontal: spacing(2),\n  color: palette.text,\n  backgroundColor: palette.surfaceMuted,\n  fontSize: typography.body,\n  marginBottom: spacing(1.5)\n};\nconst FormInput = React.forwardRef((props, ref) => _jsxDEV(TextInput, Object.assign({\n  ref: ref,\n  placeholderTextColor: palette.muted\n}, props, {\n  style: [formInputBaseStyle, props.style]\n}), void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 238,\n  columnNumber: 3\n}, this));\nFormInput.displayName = 'FormInput';\nconst formatCurrency = value => {\n  const amount = Number(value || 0);\n  if (Number.isNaN(amount)) return '$0';\n  return `$${amount.toLocaleString(undefined, {\n    minimumFractionDigits: amount % 1 ? 2 : 0,\n    maximumFractionDigits: 2\n  })}`;\n};\nconst formatDate = value => {\n  if (!value) return null;\n  const d = new Date(value);\n  if (Number.isNaN(d.getTime())) return value;\n  return d.toLocaleDateString(undefined, {\n    month: 'short',\n    day: 'numeric'\n  });\n};\nconst isTaskCompleted = status => {\n  if (!status) return false;\n  const key = String(status).toUpperCase();\n  return key === 'DONE' || key === 'COMPLETE';\n};\nfunction SurfaceCard({\n  children,\n  style,\n  onPress\n}) {\n  const content = _jsxDEV(View, {\n    style: [{\n      backgroundColor: palette.surface,\n      borderRadius: 16,\n      borderWidth: 1,\n      borderColor: palette.border,\n      padding: spacing(2)\n    }, floatingShadow, style],\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 268,\n    columnNumber: 5\n  }, this);\n  if (!onPress) return content;\n  return _jsxDEV(TouchableOpacity, {\n    activeOpacity: 0.85,\n    onPress: onPress,\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 280,\n    columnNumber: 5\n  }, this);\n}\nfunction StatusPill({\n  status\n}) {\n  if (!status) return null;\n  const key = String(status).toUpperCase();\n  const cfg = pillTone[key] || {\n    fg: palette.muted,\n    bg: '#e2e8f0',\n    label: status\n  };\n  return _jsxDEV(View, {\n    style: {\n      backgroundColor: cfg.bg,\n      borderRadius: 999,\n      paddingHorizontal: spacing(1.5),\n      paddingVertical: spacing(0.5)\n    },\n    children: _jsxDEV(Text, {\n      style: {\n        color: cfg.fg,\n        fontSize: typography.small,\n        fontWeight: '600'\n      },\n      children: cfg.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 291,\n    columnNumber: 5\n  }, this);\n}\nfunction SummaryCard({\n  title,\n  value,\n  subtitle,\n  tone = 'primary',\n  onPress\n}) {\n  const colors = toneMap[tone] || toneMap.primary;\n  return _jsxDEV(SurfaceCard, {\n    onPress: onPress,\n    style: {\n      backgroundColor: colors.bg,\n      borderColor: 'transparent',\n      padding: spacing(2.5)\n    },\n    children: [_jsxDEV(Text, {\n      style: {\n        color: palette.muted,\n        fontSize: typography.small,\n        textTransform: 'uppercase',\n        fontWeight: '700',\n        lineHeight: lineHeightFor(typography.small)\n      },\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this), _jsxDEV(Text, {\n      style: {\n        color: colors.fg,\n        fontSize: 28,\n        fontWeight: '800',\n        marginTop: spacing(0.5),\n        lineHeight: lineHeightFor(28)\n      },\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this), subtitle ? _jsxDEV(Text, {\n      style: {\n        color: palette.muted,\n        fontSize: typography.small,\n        marginTop: spacing(0.5),\n        lineHeight: lineHeightFor(typography.small)\n      },\n      children: subtitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 19\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 300,\n    columnNumber: 5\n  }, this);\n}\nfunction StatusCard({\n  label,\n  value,\n  description,\n  tone = 'primary'\n}) {\n  const colors = toneMap[tone] || toneMap.primary;\n  return _jsxDEV(SurfaceCard, {\n    style: {\n      backgroundColor: colors.bg,\n      borderColor: 'transparent',\n      borderWidth: 1,\n      paddingVertical: spacing(2),\n      paddingHorizontal: spacing(2.5),\n      flexGrow: 1,\n      flexBasis: '48%'\n    },\n    children: [_jsxDEV(Text, {\n      style: {\n        color: colors.fg,\n        fontSize: typography.small,\n        fontWeight: '700',\n        textTransform: 'uppercase',\n        lineHeight: lineHeightFor(typography.small)\n      },\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this), _jsxDEV(Text, {\n      style: {\n        color: palette.text,\n        fontSize: 24,\n        fontWeight: '700',\n        marginTop: spacing(0.5),\n        lineHeight: lineHeightFor(24)\n      },\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }, this), description ? _jsxDEV(Text, {\n      style: {\n        color: palette.muted,\n        fontSize: typography.small,\n        marginTop: spacing(0.5),\n        lineHeight: lineHeightFor(typography.small)\n      },\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 22\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 314,\n    columnNumber: 5\n  }, this);\n}\nfunction TagInput({\n  value = [],\n  onChange,\n  placeholder = 'Add tag',\n  suggestions = []\n}) {\n  const [draft, setDraft] = useState('');\n  const [focused, setFocused] = useState(false);\n  const tags = useMemo(() => {\n    if (!Array.isArray(value)) return [];\n    return value.filter(Boolean).map(tag => String(tag));\n  }, [value]);\n  const cleanTag = useCallback(input => {\n    if (!input) return null;\n    const cleaned = String(input).replace(/[#]/g, '').trim();\n    if (!cleaned) return null;\n    return cleaned.replace(/\\s+/g, ' ');\n  }, []);\n  const handleChangeText = useCallback(text => {\n    setDraft(text);\n    setFocused(true);\n  }, []);\n  const normalizedSuggestions = useMemo(() => {\n    const library = new Set();\n    (Array.isArray(suggestions) ? suggestions : []).forEach(seed => {\n      const cleaned = cleanTag(seed);\n      if (cleaned) library.add(cleaned);\n    });\n    tags.forEach(tag => library.add(String(tag)));\n    return Array.from(library);\n  }, [suggestions, tags, cleanTag]);\n  const availableSuggestions = useMemo(() => normalizedSuggestions.filter(suggestion => !tags.some(tag => tag.toLowerCase() === suggestion.toLowerCase())), [normalizedSuggestions, tags]);\n  const filteredSuggestions = useMemo(() => {\n    const query = draft.trim().toLowerCase();\n    const results = query ? availableSuggestions.filter(suggestion => suggestion.toLowerCase().includes(query)) : availableSuggestions;\n    return results.slice(0, 6);\n  }, [availableSuggestions, draft]);\n  const shouldShowSuggestions = focused && filteredSuggestions.length > 0;\n  const handleAdd = useCallback(() => {\n    const cleaned = cleanTag(draft);\n    if (!cleaned) return;\n    const exists = tags.some(existing => existing.toLowerCase() === cleaned.toLowerCase());\n    if (exists) {\n      setDraft('');\n      return;\n    }\n    onChange && onChange([...tags, cleaned]);\n    setDraft('');\n    setFocused(false);\n  }, [draft, tags, cleanTag, onChange]);\n  const handleSubmit = useCallback(() => {\n    handleAdd();\n  }, [handleAdd]);\n  const handleRemove = useCallback(tag => {\n    const next = tags.filter(entry => entry !== tag);\n    onChange && onChange(next);\n  }, [tags, onChange]);\n  const handleSelectSuggestion = useCallback(tag => {\n    const cleaned = cleanTag(tag);\n    if (!cleaned) return;\n    const exists = tags.some(existing => existing.toLowerCase() === cleaned.toLowerCase());\n    if (!exists) {\n      onChange && onChange([...tags, cleaned]);\n    }\n    setDraft('');\n    setFocused(false);\n  }, [tags, onChange, cleanTag]);\n  const handleBlur = useCallback(() => {\n    setTimeout(() => setFocused(false), 120);\n  }, []);\n  return _jsxDEV(View, {\n    children: [tags.length ? _jsxDEV(View, {\n      style: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        columnGap: spacing(1),\n        rowGap: spacing(1),\n        marginBottom: spacing(1)\n      },\n      children: tags.map(tag => _jsxDEV(TouchableOpacity, {\n        onPress: () => handleRemove(tag),\n        activeOpacity: 0.8,\n        style: {\n          flexDirection: 'row',\n          alignItems: 'center',\n          backgroundColor: '#d9f2ed',\n          borderRadius: 999,\n          paddingHorizontal: spacing(1.5),\n          paddingVertical: spacing(0.5)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.primaryStrong,\n            fontWeight: '600',\n            fontSize: typography.small\n          },\n          children: `#${tag}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 15\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.primaryStrong,\n            marginLeft: spacing(0.5),\n            fontSize: typography.small\n          },\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 15\n        }, this)]\n      }, tag, true, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 9\n    }, this) : null, _jsxDEV(View, {\n      style: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        columnGap: spacing(1)\n      },\n      children: [_jsxDEV(TextInput, {\n        value: draft,\n        onChangeText: handleChangeText,\n        onSubmitEditing: handleSubmit,\n        placeholder: placeholder,\n        placeholderTextColor: palette.muted,\n        style: [formInputBaseStyle, {\n          flex: 1,\n          marginBottom: 0\n        }],\n        autoCapitalize: \"none\",\n        autoCorrect: false,\n        onFocus: () => setFocused(true),\n        onBlur: handleBlur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 9\n      }, this), _jsxDEV(QuickAction, {\n        label: \"Add\",\n        onPress: handleAdd,\n        tone: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 7\n    }, this), shouldShowSuggestions ? _jsxDEV(View, {\n      style: {\n        marginTop: spacing(1),\n        borderWidth: 1,\n        borderColor: palette.border,\n        borderRadius: 12,\n        backgroundColor: palette.surface\n      },\n      children: [_jsxDEV(Text, {\n        style: {\n          color: palette.muted,\n          fontSize: typography.small,\n          fontWeight: '600',\n          paddingHorizontal: spacing(1.5),\n          paddingTop: spacing(1.25)\n        },\n        children: \"Suggestions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 11\n      }, this), filteredSuggestions.map(suggestion => _jsxDEV(TouchableOpacity, {\n        onPress: () => handleSelectSuggestion(suggestion),\n        activeOpacity: 0.85,\n        style: {\n          paddingVertical: spacing(1.1),\n          paddingHorizontal: spacing(1.5)\n        },\n        children: _jsxDEV(Text, {\n          style: {\n            color: palette.primaryStrong,\n            fontWeight: '600'\n          },\n          children: `#${suggestion}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 15\n        }, this)\n      }, suggestion, false, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 408,\n    columnNumber: 5\n  }, this);\n}\nfunction SectionHeader({\n  title,\n  actionLabel,\n  onAction\n}) {\n  return _jsxDEV(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      marginBottom: spacing(1.5)\n    },\n    children: [_jsxDEV(Text, {\n      style: {\n        color: palette.text,\n        fontSize: typography.h2,\n        fontWeight: '700',\n        lineHeight: lineHeightFor(typography.h2)\n      },\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 7\n    }, this), actionLabel && onAction ? _jsxDEV(TouchableOpacity, {\n      onPress: onAction,\n      style: {\n        paddingHorizontal: spacing(1),\n        paddingVertical: spacing(0.5)\n      },\n      children: _jsxDEV(Text, {\n        style: {\n          color: palette.primary,\n          fontWeight: '600',\n          fontSize: typography.small,\n          lineHeight: lineHeightFor(typography.small)\n        },\n        children: actionLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 467,\n    columnNumber: 5\n  }, this);\n}\nfunction QuickAction({\n  label,\n  onPress,\n  tone = 'primary'\n}) {\n  const toneStyles = (() => {\n    switch (tone) {\n      case 'danger':\n        return {\n          borderColor: '#FECACA',\n          backgroundColor: '#FEE2E2',\n          textColor: palette.danger\n        };\n      case 'success':\n        return {\n          borderColor: '#A7F3D0',\n          backgroundColor: '#DCFCE7',\n          textColor: palette.success\n        };\n      case 'warning':\n        return {\n          borderColor: '#FDE68A',\n          backgroundColor: '#FEF9C3',\n          textColor: '#92400E'\n        };\n      case 'muted':\n        return {\n          borderColor: palette.border,\n          backgroundColor: palette.surface,\n          textColor: palette.muted\n        };\n      default:\n        return {\n          borderColor: palette.primary,\n          backgroundColor: '#ECFDF5',\n          textColor: palette.primaryStrong\n        };\n    }\n  })();\n  return _jsxDEV(TouchableOpacity, {\n    onPress: onPress,\n    activeOpacity: 0.85,\n    style: {\n      borderRadius: 10,\n      paddingHorizontal: spacing(1.5),\n      paddingVertical: spacing(0.75),\n      borderWidth: 1,\n      borderColor: toneStyles.borderColor,\n      backgroundColor: toneStyles.backgroundColor\n    },\n    children: _jsxDEV(Text, {\n      style: {\n        color: toneStyles.textColor,\n        fontWeight: '600',\n        fontSize: typography.small,\n        lineHeight: lineHeightFor(typography.small)\n      },\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 494,\n    columnNumber: 5\n  }, this);\n}\nconst toInputDate = dateValue => {\n  const d = dateValue instanceof Date ? dateValue : new Date(dateValue);\n  if (Number.isNaN(d.getTime())) return '';\n  const yyyy = d.getFullYear();\n  const mm = String(d.getMonth() + 1).padStart(2, '0');\n  const dd = String(d.getDate()).padStart(2, '0');\n  return `${yyyy}-${mm}-${dd}`;\n};\nconst parseInputDate = value => {\n  if (!value) return null;\n  const parsed = new Date(value);\n  if (Number.isNaN(parsed.getTime())) return null;\n  return parsed;\n};\nconst deriveLeadTitle = lead => {\n  if (!lead) return 'Untitled lead';\n  const customerName = lead.Customer?.name;\n  if (customerName && customerName.trim()) return customerName.trim();\n  if (lead.description && lead.description.trim()) {\n    const firstLine = lead.description.trim().split('\\n')[0];\n    return firstLine.length > 60 ? `${firstLine.slice(0, 57)}...` : firstLine;\n  }\n  return `Lead ${lead.id}`;\n};\nfunction DateInputField({\n  value,\n  onChange,\n  placeholder = 'Select date',\n  minimumDate,\n  maximumDate,\n  style\n}) {\n  const [iosPickerVisible, setIosPickerVisible] = useState(false);\n  const isWeb = Platform.OS === 'web';\n  const toDateOnly = input => {\n    if (!input) return '';\n    if (input instanceof Date) return toInputDate(input);\n    if (typeof input === 'string') {\n      const [datePart] = input.split('T');\n      return datePart;\n    }\n    return '';\n  };\n  const normalizedValue = toDateOnly(value);\n  const minDateString = minimumDate ? toDateOnly(minimumDate) : undefined;\n  const maxDateString = maximumDate ? toDateOnly(maximumDate) : undefined;\n  const parsed = parseInputDate(normalizedValue) || new Date();\n  const displayLabel = value ? formatDate(value) || normalizedValue : '';\n  const applyDate = selectedDate => {\n    if (!selectedDate) return;\n    onChange(toInputDate(selectedDate));\n  };\n  const handleManualChange = text => {\n    if (!text) {\n      onChange('');\n      return;\n    }\n    onChange(text);\n  };\n  const openPicker = () => {\n    if (isWeb) return;\n    const baseDate = parseInputDate(normalizedValue) || new Date();\n    if (Platform.OS === 'android') {\n      DateTimePickerAndroid.open({\n        value: baseDate,\n        mode: 'date',\n        minimumDate: minimumDate ? parseInputDate(minimumDate) || undefined : undefined,\n        maximumDate: maximumDate ? parseInputDate(maximumDate) || undefined : undefined,\n        onChange: (event, selected) => {\n          if (event.type === 'set' && selected) applyDate(selected);\n        }\n      });\n    } else {\n      setIosPickerVisible(true);\n    }\n  };\n  const containerStyle = [{\n    marginBottom: spacing(1.5)\n  }, style];\n  if (isWeb) {\n    return _jsxDEV(View, {\n      style: containerStyle,\n      children: _jsxDEV(TextInput, {\n        value: normalizedValue,\n        placeholder: placeholder,\n        placeholderTextColor: palette.muted,\n        onChangeText: handleManualChange,\n        onChange: event => handleManualChange(event?.nativeEvent?.text ?? event?.target?.value ?? ''),\n        style: [formInputBaseStyle, {\n          marginBottom: 0\n        }],\n        type: \"date\",\n        min: minDateString,\n        max: maxDateString\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 7\n    }, this);\n  }\n  return _jsxDEV(View, {\n    style: containerStyle,\n    children: [_jsxDEV(TouchableOpacity, {\n      onPress: openPicker,\n      activeOpacity: 0.85,\n      style: {\n        borderWidth: 1,\n        borderColor: palette.border,\n        borderRadius: 12,\n        backgroundColor: palette.surfaceMuted,\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(1.5)\n      },\n      children: [_jsxDEV(Text, {\n        style: {\n          flex: 1,\n          color: displayLabel ? palette.text : palette.muted,\n          fontSize: typography.body\n        },\n        children: displayLabel || placeholder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 628,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: {\n          fontSize: typography.h2 - 6,\n          color: palette.muted\n        },\n        children: \"CAL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 614,\n      columnNumber: 7\n    }, this), Platform.OS === 'ios' && iosPickerVisible ? _jsxDEV(DateTimePicker, {\n      value: parsed,\n      mode: \"date\",\n      display: \"inline\",\n      onChange: (event, selected) => {\n        if (event.type === 'set' && selected) {\n          applyDate(selected);\n        }\n        if (event.type === 'dismissed') {\n          setIosPickerVisible(false);\n          return;\n        }\n        setIosPickerVisible(false);\n      },\n      style: {\n        marginTop: spacing(1)\n      },\n      minimumDate: minimumDate ? parseInputDate(minimumDate) || undefined : undefined,\n      maximumDate: maximumDate ? parseInputDate(maximumDate) || undefined : undefined\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 613,\n    columnNumber: 5\n  }, this);\n}\nconst TECH_ASSIGN_ROLES = ['TECH', 'SUPERVISOR', 'ESTIMATOR'];\nfunction TechSelector({\n  team = [],\n  value,\n  onSelect,\n  label,\n  allowAllRoles,\n  allowClear\n}) {\n  const options = useMemo(() => {\n    const normalized = team.map(member => Object.assign({}, member, {\n      role: normalizeRole(member.role)\n    }));\n    if (allowAllRoles) return normalized;\n    return normalized.filter(member => TECH_ASSIGN_ROLES.includes(member.role));\n  }, [team, allowAllRoles]);\n  if (!options.length) return null;\n  const renderLabel = label ? _jsxDEV(Text, {\n    style: {\n      color: palette.muted,\n      fontSize: typography.small,\n      marginBottom: spacing(1)\n    },\n    children: label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 672,\n    columnNumber: 5\n  }, this) : null;\n  return _jsxDEV(View, {\n    style: {\n      marginTop: spacing(1.5)\n    },\n    children: [renderLabel, _jsxDEV(View, {\n      style: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        columnGap: spacing(1),\n        rowGap: spacing(1)\n      },\n      children: [options.map(member => {\n        const selected = member.id === value;\n        const displayName = member.fullName || member.email;\n        const shortLabel = displayName.length > 22 ? `${displayName.slice(0, 21)}...` : displayName;\n        return _jsxDEV(QuickAction, {\n          label: shortLabel,\n          tone: selected ? 'primary' : 'muted',\n          onPress: () => onSelect(member.id)\n        }, member.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 684,\n          columnNumber: 13\n        }, this);\n      }), allowClear ? _jsxDEV(QuickAction, {\n        label: \"Clear\",\n        tone: \"muted\",\n        onPress: () => onSelect(null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 23\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 678,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 676,\n    columnNumber: 5\n  }, this);\n}\nfunction DashboardScreen({\n  navigation\n}) {\n  const {\n    token,\n    user\n  } = useAuth();\n  const [loading, setLoading] = useState(true);\n  const [refreshing, setRefreshing] = useState(false);\n  const [leads, setLeads] = useState([]);\n  const [jobs, setJobs] = useState([]);\n  const [tasks, setTasks] = useState([]);\n  const [invoiceSummary, setInvoiceSummary] = useState(null);\n  const [lastUpdated, setLastUpdated] = useState(null);\n  const isAdmin = (user?.role || '').toUpperCase() === 'ADMIN';\n  const jobLookup = useMemo(() => {\n    const map = {};\n    for (const job of jobs) {\n      if (job?.id != null) {\n        map[job.id] = job;\n      }\n    }\n    return map;\n  }, [jobs]);\n  const loadData = useCallback(async (isPullRefresh = false) => {\n    if (!token) return;\n    isPullRefresh ? setRefreshing(true) : setLoading(true);\n    const fetchLeads = async () => {\n      try {\n        const data = await api('/leads', 'GET', null, token);\n        const filtered = data.filter(item => (item.status || '').toUpperCase() !== 'CONVERTED');\n        setLeads(filtered);\n        db.transaction(tx => {\n          tx.executeSql && tx.executeSql('DELETE FROM leads_cache;');\n          filtered.forEach(l => tx.executeSql && tx.executeSql('INSERT OR REPLACE INTO leads_cache (id, description, status) VALUES (?,?,?)', [l.id, l.description || '', l.status || 'NEW']));\n        });\n        return data;\n      } catch (e) {\n        return await new Promise(resolve => {\n          db.transaction(tx => tx.executeSql && tx.executeSql('SELECT id, description, status FROM leads_cache', [], (_, {\n            rows\n          }) => {\n            const fallback = (rows?._array || []).filter(item => (item.status || '').toUpperCase() !== 'CONVERTED');\n            setLeads(fallback);\n            resolve(fallback);\n          }));\n        });\n      }\n    };\n    const fetchJobs = async () => {\n      try {\n        const data = await api('/jobs', 'GET', null, token);\n        setJobs(data);\n        db.transaction(tx => {\n          tx.executeSql && tx.executeSql('DELETE FROM jobs_cache;');\n          data.forEach(j => tx.executeSql && tx.executeSql('INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)', [j.id, j.name || '', j.status || 'SCHEDULED', j.startDate || '', j.endDate || '', j.notes || '']));\n        });\n        return data;\n      } catch (e) {\n        return await new Promise(resolve => {\n          db.transaction(tx => tx.executeSql && tx.executeSql('SELECT id, name, status, startDate, endDate, notes FROM jobs_cache', [], (_, {\n            rows\n          }) => {\n            const fallback = rows?._array || [];\n            setJobs(fallback);\n            resolve(fallback);\n          }));\n        });\n      }\n    };\n    const fetchTasks = async () => {\n      try {\n        const data = await api('/tasks', 'GET', null, token);\n        setTasks(data);\n        db.transaction(tx => {\n          data.forEach(t => tx.executeSql && tx.executeSql('INSERT OR REPLACE INTO tasks_cache (id, jobId, title, status, dueDate) VALUES (?,?,?,?,?)', [t.id, t.jobId || null, t.title || '', t.status || 'TODO', t.dueDate || '']));\n        });\n        return data;\n      } catch (e) {\n        return await new Promise(resolve => {\n          db.transaction(tx => tx.executeSql && tx.executeSql('SELECT id, jobId, title, status, dueDate FROM tasks_cache ORDER BY id DESC', [], (_, {\n            rows\n          }) => {\n            const fallback = rows?._array || [];\n            setTasks(fallback);\n            resolve(fallback);\n          }));\n        });\n      }\n    };\n    const fetchInvoiceSummary = async () => {\n      try {\n        const data = await api('/invoices/summary', 'GET', null, token);\n        setInvoiceSummary(data);\n        return data;\n      } catch (e) {\n        return null;\n      }\n    };\n    try {\n      await Promise.all([fetchLeads(), fetchJobs(), fetchTasks(), fetchInvoiceSummary()]);\n      setLastUpdated(new Date());\n    } finally {\n      isPullRefresh ? setRefreshing(false) : setLoading(false);\n    }\n  }, [token]);\n  useFocusEffect(useCallback(() => {\n    loadData(false);\n  }, [loadData]));\n  const onRefresh = useCallback(() => loadData(true), [loadData]);\n  const newLeads = leads.filter(l => (l.status || '').toUpperCase() === 'NEW').length;\n  const activeJobs = jobs.filter(j => ['SCHEDULED', 'IN_PROGRESS'].includes((j.status || '').toUpperCase())).length;\n  const openTasks = tasks.filter(t => !isTaskCompleted(t.status)).length;\n  const outstandingValue = invoiceSummary?.outstanding || 0;\n  const collectedValue = invoiceSummary?.collected || 0;\n  const overdueCount = invoiceSummary?.overdueCount || 0;\n  const overdueTasks = useMemo(() => {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    return tasks.filter(task => {\n      if (!task?.dueDate || isTaskCompleted(task.status)) return false;\n      const due = new Date(task.dueDate);\n      if (Number.isNaN(due.getTime())) return false;\n      return due < today;\n    }).length;\n  }, [tasks]);\n  const statusCards = useMemo(() => [{\n    label: 'Active',\n    value: String(activeJobs),\n    description: 'Jobs in progress or scheduled',\n    tone: 'primary'\n  }, {\n    label: 'Pending',\n    value: formatCurrency(outstandingValue),\n    description: 'Unpaid invoices',\n    tone: 'warning'\n  }, {\n    label: 'Paid',\n    value: formatCurrency(collectedValue),\n    description: 'Collected to date',\n    tone: 'success'\n  }, {\n    label: 'Overdue',\n    value: String(overdueTasks),\n    description: `Tasks overdue; ${overdueCount} invoices late`,\n    tone: 'danger'\n  }], [activeJobs, outstandingValue, collectedValue, overdueTasks, overdueCount]);\n  const downloadReport = useCallback(async (format = 'csv') => {\n    const endpoint = format === 'quickbooks' ? '/invoices/export/quickbooks' : '/invoices/export/csv';\n    const filename = `precision-report-${Date.now()}.${format === 'quickbooks' ? 'iif' : 'csv'}`;\n    try {\n      const response = await fetch(`${API_URL}${endpoint}`, {\n        method: 'GET',\n        headers: token ? {\n          Authorization: `Bearer ${token}`\n        } : undefined\n      });\n      const text = await response.text();\n      if (!response.ok) throw new Error(text || 'Unable to download report.');\n      const extension = format === 'quickbooks' ? 'iif' : 'csv';\n      const mimeType = format === 'quickbooks' ? 'text/plain' : 'text/csv';\n      if (Platform.OS === 'web' && true) {\n        try {\n          const blob = new Blob([text], {\n            type: mimeType\n          });\n          const url = URL.createObjectURL(blob);\n          const anchor = document.createElement('a');\n          anchor.href = url;\n          anchor.download = filename;\n          anchor.click();\n          setTimeout(() => URL.revokeObjectURL(url), 4000);\n          Alert.alert('Download started', `Look for ${filename} in your browser downloads.`);\n        } catch (shareError) {\n          Alert.alert('Download ready', `Save this file manually: ${filename}`);\n        }\n        return;\n      }\n      if (!FileSystem?.cacheDirectory) throw new Error('Storage unavailable');\n      const fileUri = `${FileSystem.cacheDirectory}${filename}`;\n      await FileSystem.writeAsStringAsync(fileUri, text, {\n        encoding: FileSystem.EncodingType.UTF8\n      });\n      const sharingSupported = Sharing?.isAvailableAsync ? await Sharing.isAvailableAsync() : false;\n      if (sharingSupported) {\n        await Sharing.shareAsync(fileUri, {\n          mimeType,\n          dialogTitle: filename\n        });\n      } else {\n        try {\n          await Share.share({\n            message: `Precision Tracker report ready: ${filename}`,\n            url: fileUri,\n            title: filename\n          });\n        } catch {\n          Alert.alert('Report saved', `File stored at ${fileUri}.`);\n          return;\n        }\n        Alert.alert('Report saved', `If you skipped sharing, find it at ${fileUri}.`);\n      }\n    } catch (error) {\n      Alert.alert('Download failed', error?.message || 'Unable to download report.');\n    }\n  }, [token]);\n  const topLeads = leads.slice(0, 3);\n  const topJobs = jobs.slice(0, 3);\n  const nextTasks = tasks.filter(t => !isTaskCompleted(t.status)).slice(0, 3);\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(5)\n      },\n      refreshControl: _jsxDEV(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh,\n        tintColor: palette.primary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 945,\n        columnNumber: 25\n      }, this),\n      children: [_jsxDEV(View, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(View, {\n          style: {\n            width: spacing(5),\n            height: spacing(5),\n            borderRadius: 14,\n            backgroundColor: palette.ink,\n            alignItems: 'center',\n            justifyContent: 'center',\n            marginBottom: spacing(1.5)\n          },\n          children: _jsxDEV(Text, {\n            style: {\n              color: '#FFFFFF',\n              fontWeight: '800',\n              fontSize: typography.h2\n            },\n            children: \"PT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 949,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 948,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.ink,\n            fontSize: 30,\n            fontWeight: '800',\n            lineHeight: lineHeightFor(30)\n          },\n          children: \"Precision Tracker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 951,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontSize: typography.body,\n            marginTop: spacing(0.5),\n            lineHeight: lineHeightFor(typography.body)\n          },\n          children: \"Built for crews who don\\u2019t miss details.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 952,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontSize: typography.body,\n            marginTop: spacing(0.5),\n            lineHeight: lineHeightFor(typography.body)\n          },\n          children: \"Stay on track, every job.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 955,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 947,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          columnGap: spacing(1.5),\n          rowGap: spacing(1.5),\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(QuickAction, {\n          label: \"New job\",\n          onPress: () => navigation.navigate('Jobs', {\n            focus: 'create-job'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 961,\n          columnNumber: 11\n        }, this), _jsxDEV(QuickAction, {\n          label: \"New lead\",\n          onPress: () => navigation.navigate('NewLead')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 962,\n          columnNumber: 11\n        }, this), isAdmin ? _jsxDEV(_Fragment, {\n          children: [_jsxDEV(QuickAction, {\n            label: \"Create invoice\",\n            tone: \"success\",\n            onPress: () => navigation.navigate('Invoices')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 965,\n            columnNumber: 15\n          }, this), _jsxDEV(QuickAction, {\n            tone: \"muted\",\n            label: \"Export CSV\",\n            onPress: () => downloadReport('csv')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 966,\n            columnNumber: 15\n          }, this), _jsxDEV(QuickAction, {\n            tone: \"muted\",\n            label: \"QuickBooks export\",\n            onPress: () => downloadReport('quickbooks')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 967,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 960,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontSize: typography.small,\n            fontWeight: '600',\n            marginBottom: spacing(0.5),\n            lineHeight: lineHeightFor(typography.small)\n          },\n          children: \"Executive pulse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 973,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontSize: typography.body,\n            marginBottom: spacing(1.5),\n            lineHeight: lineHeightFor(typography.body)\n          },\n          children: \"Know what\\u2019s running smoothly and what needs attention before wheels come off.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 976,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            columnGap: spacing(1.5),\n            rowGap: spacing(1.5)\n          },\n          children: statusCards.map(card => _jsxDEV(StatusCard, {\n            label: card.label,\n            value: card.value,\n            description: card.description,\n            tone: card.tone\n          }, card.label, false, {\n            fileName: _jsxFileName,\n            lineNumber: 981,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 979,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 972,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontSize: typography.small,\n            fontWeight: '600',\n            marginBottom: spacing(0.5),\n            lineHeight: lineHeightFor(typography.small)\n          },\n          children: \"Pipeline snapshot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 993,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontSize: typography.body,\n            marginBottom: spacing(1.5),\n            lineHeight: lineHeightFor(typography.body)\n          },\n          children: \"Stay ahead of demand by keeping leads, jobs, tasks, and invoices moving.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 996,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            columnGap: spacing(1.5),\n            rowGap: spacing(1.5)\n          },\n          children: [_jsxDEV(View, {\n            style: {\n              flexBasis: '48%',\n              minWidth: 160\n            },\n            children: _jsxDEV(SummaryCard, {\n              title: \"Leads\",\n              value: leads.length,\n              subtitle: `${newLeads} new to triage`,\n              tone: \"info\",\n              onPress: () => navigation.navigate('Leads')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1001,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1000,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: {\n              flexBasis: '48%',\n              minWidth: 160\n            },\n            children: _jsxDEV(SummaryCard, {\n              title: \"Jobs\",\n              value: jobs.length,\n              subtitle: `${activeJobs} active`,\n              tone: \"primary\",\n              onPress: () => navigation.navigate('Jobs')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1010,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1009,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: {\n              flexBasis: '48%',\n              minWidth: 160\n            },\n            children: _jsxDEV(SummaryCard, {\n              title: \"Tasks\",\n              value: openTasks,\n              subtitle: `${overdueTasks} overdue • ${tasks.length} total`,\n              tone: \"warning\",\n              onPress: () => navigation.navigate('Jobs')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1019,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1018,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: {\n              flexBasis: '48%',\n              minWidth: 160\n            },\n            children: _jsxDEV(SummaryCard, {\n              title: \"Invoices\",\n              value: formatCurrency(outstandingValue),\n              subtitle: `${overdueCount} overdue | ${formatCurrency(collectedValue)} collected`,\n              tone: \"success\",\n              onPress: () => navigation.navigate('Invoices')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1028,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1027,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 999,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 992,\n        columnNumber: 9\n      }, this), loading && !refreshing ? _jsxDEV(SurfaceCard, {\n        style: {\n          alignItems: 'center',\n          justifyContent: 'center',\n          paddingVertical: spacing(6)\n        },\n        children: [_jsxDEV(ActivityIndicator, {\n          color: palette.primary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1041,\n          columnNumber: 13\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(1.5)\n          },\n          children: \"Loading summary...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1042,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1040,\n        columnNumber: 11\n      }, this) : null, _jsxDEV(SectionHeader, {\n        title: \"Next Jobs\",\n        actionLabel: \"View all\",\n        onAction: () => navigation.navigate('Jobs')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1046,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: topJobs.length === 0 ? _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: \"No jobs yet. Create one from the Jobs tab.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1049,\n          columnNumber: 13\n        }, this) : topJobs.map((job, idx) => {\n          const startLabel = job.startDate ? `Start ${formatDate(job.startDate)}` : null;\n          const endLabel = job.endDate ? `Due ${formatDate(job.endDate)}` : null;\n          return _jsxDEV(View, {\n            style: {\n              marginBottom: idx === topJobs.length - 1 ? 0 : spacing(2.5)\n            },\n            children: [_jsxDEV(View, {\n              style: {\n                flexDirection: 'row',\n                justifyContent: 'space-between',\n                alignItems: 'center'\n              },\n              children: [_jsxDEV(Text, {\n                style: {\n                  color: palette.text,\n                  fontSize: typography.h2,\n                  fontWeight: '600'\n                },\n                children: job.name || `Job #${job.id}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1057,\n                columnNumber: 21\n              }, this), _jsxDEV(StatusPill, {\n                status: job.status || 'SCHEDULED'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1058,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1056,\n              columnNumber: 19\n            }, this), startLabel || endLabel ? _jsxDEV(Text, {\n              style: {\n                color: palette.muted,\n                marginTop: spacing(0.5)\n              },\n              children: [startLabel, endLabel].filter(Boolean).join(' - ')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1061,\n              columnNumber: 21\n            }, this) : null, job.notes ? _jsxDEV(Text, {\n              style: {\n                color: palette.muted,\n                marginTop: spacing(1)\n              },\n              numberOfLines: 2,\n              children: job.notes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1066,\n              columnNumber: 21\n            }, this) : null, _jsxDEV(View, {\n              style: {\n                flexDirection: 'row',\n                columnGap: spacing(1.5),\n                marginTop: spacing(1.5)\n              },\n              children: [_jsxDEV(QuickAction, {\n                label: \"Open job\",\n                onPress: () => navigation.navigate('JobDetail', {\n                  jobId: job.id\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1069,\n                columnNumber: 21\n              }, this), _jsxDEV(QuickAction, {\n                label: \"Tasks\",\n                onPress: () => navigation.navigate('JobDetail', {\n                  jobId: job.id,\n                  tab: 'tasks'\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1070,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1068,\n              columnNumber: 19\n            }, this)]\n          }, job.id || idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1055,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1047,\n        columnNumber: 9\n      }, this), _jsxDEV(SectionHeader, {\n        title: \"Hot Leads\",\n        actionLabel: \"Leads\",\n        onAction: () => navigation.navigate('Leads')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1078,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: topLeads.length === 0 ? _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: \"No leads yet. Capture leads to keep the funnel full.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1081,\n          columnNumber: 13\n        }, this) : topLeads.map((lead, idx) => _jsxDEV(View, {\n          style: {\n            marginBottom: idx === topLeads.length - 1 ? 0 : spacing(2)\n          },\n          children: [_jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center'\n            },\n            children: [_jsxDEV(Text, {\n              style: {\n                color: palette.text,\n                fontWeight: '600',\n                fontSize: typography.h2\n              },\n              children: deriveLeadTitle(lead)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1086,\n              columnNumber: 17\n            }, this), _jsxDEV(StatusPill, {\n              status: lead.status || 'NEW'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1087,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1085,\n            columnNumber: 15\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.5)\n            },\n            numberOfLines: 3,\n            children: lead.description || 'No scope captured yet.'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1089,\n            columnNumber: 15\n          }, this), _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              columnGap: spacing(1.5),\n              marginTop: spacing(1.5)\n            },\n            children: [_jsxDEV(QuickAction, {\n              label: \"Follow up\",\n              onPress: () => navigation.navigate('EstimateEditor', {\n                leadId: lead.id\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1093,\n              columnNumber: 19\n            }, this), _jsxDEV(QuickAction, {\n              label: \"Open lead\",\n              tone: \"muted\",\n              onPress: () => navigation.navigate('Leads')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1094,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1092,\n            columnNumber: 17\n          }, this)]\n        }, lead.id || idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1084,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1079,\n        columnNumber: 9\n      }, this), _jsxDEV(SectionHeader, {\n        title: \"Open Tasks\",\n        actionLabel: \"Jobs\",\n        onAction: () => navigation.navigate('Jobs')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1101,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        children: nextTasks.length === 0 ? _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: \"All clear. Add tasks from a job to keep crews aligned.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1104,\n          columnNumber: 13\n        }, this) : nextTasks.map((task, idx) => _jsxDEV(View, {\n          style: {\n            marginBottom: idx === nextTasks.length - 1 ? 0 : spacing(2)\n          },\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.text,\n              fontWeight: '600'\n            },\n            children: task.title || 'Task'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1108,\n            columnNumber: 17\n          }, this), task.jobId ? _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.25)\n            },\n            children: jobLookup[task.jobId]?.name || `Job #${task.jobId}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1110,\n            columnNumber: 19\n          }, this) : _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.25)\n            },\n            children: \"Unassigned job\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1114,\n            columnNumber: 19\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.5)\n            },\n            children: task.dueDate ? `Due ${formatDate(task.dueDate)}` : 'No due date'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1116,\n            columnNumber: 17\n          }, this), _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              columnGap: spacing(1.5),\n              marginTop: spacing(1.5)\n            },\n            children: [_jsxDEV(QuickAction, {\n              label: \"Mark done\",\n              onPress: () => navigation.navigate('JobDetail', {\n                jobId: task.jobId\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1120,\n              columnNumber: 19\n            }, this), _jsxDEV(QuickAction, {\n              label: \"View job\",\n              onPress: () => navigation.navigate('JobDetail', {\n                jobId: task.jobId\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1124,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1119,\n            columnNumber: 17\n          }, this)]\n        }, task.id || idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1107,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1102,\n        columnNumber: 9\n      }, this), lastUpdated ? _jsxDEV(Text, {\n        style: {\n          color: palette.muted,\n          fontSize: typography.small,\n          marginTop: spacing(2),\n          textAlign: 'center'\n        },\n        children: [\"Updated \", lastUpdated.toLocaleTimeString([], {\n          hour: 'numeric',\n          minute: '2-digit'\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1135,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 943,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 942,\n    columnNumber: 5\n  }, this);\n}\nfunction SignaturePad({\n  onCapturePng\n}) {\n  const [points, setPoints] = useState([]);\n  const [path, setPath] = useState('');\n  const shotRef = useRef(null);\n  return _jsxDEV(ViewShot, {\n    ref: shotRef,\n    options: {\n      format: 'png',\n      quality: 0.9,\n      result: 'base64'\n    },\n    style: {\n      height: 220,\n      borderWidth: 1,\n      backgroundColor: '#fff'\n    },\n    children: _jsxDEV(View, {\n      onStartShouldSetResponder: () => true,\n      onResponderMove: e => {\n        const x = e.nativeEvent.locationX,\n          y = e.nativeEvent.locationY;\n        setPath(p => p + (p ? ` L ${x} ${y}` : ` M ${x} ${y}`));\n      },\n      onResponderRelease: async () => {\n        const base64 = await shotRef.current.capture();\n        onCapturePng && onCapturePng('data:image/png;base64,' + base64);\n      },\n      style: {\n        flex: 1\n      },\n      children: _jsxDEV(Svg, {\n        height: \"100%\",\n        width: \"100%\",\n        children: _jsxDEV(Path, {\n          d: path,\n          stroke: \"black\",\n          strokeWidth: \"2\",\n          fill: \"none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1163,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1163,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1151,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1150,\n    columnNumber: 5\n  }, this);\n}\nfunction SignatureScreen({\n  route,\n  navigation\n}) {\n  const {\n    token\n  } = useAuth();\n  const {\n    estimateId\n  } = route.params;\n  const [sigPng, setSigPng] = useState(null);\n  const save = async () => {\n    if (!sigPng) {\n      Alert.alert('Please sign first');\n      return;\n    }\n    const resp = await api(`/estimates/${estimateId}/approve`, 'POST', {\n      signaturePngUrl: sigPng\n    }, token);\n    Alert.alert('Approved', `Payment link:\n${resp && resp.paymentLink ? resp.paymentLink : 'Unavailable'}`);\n    navigation.goBack();\n  };\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      padding: 16\n    },\n    children: [_jsxDEV(Text, {\n      style: {\n        fontSize: 18,\n        marginBottom: 8\n      },\n      children: [\"Sign Estimate #\", estimateId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1181,\n      columnNumber: 7\n    }, this), _jsxDEV(SignaturePad, {\n      onCapturePng: setSigPng\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1182,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: {\n        height: 12\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1183,\n      columnNumber: 7\n    }, this), _jsxDEV(TouchableOpacity, {\n      onPress: save,\n      activeOpacity: 0.85,\n      style: {\n        backgroundColor: palette.primary,\n        paddingVertical: spacing(1.5),\n        borderRadius: 12,\n        alignItems: 'center'\n      },\n      children: _jsxDEV(Text, {\n        style: {\n          color: '#FFFFFF',\n          fontWeight: '700'\n        },\n        children: \"Save signature\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1189,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1184,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1180,\n    columnNumber: 5\n  }, this);\n}\nconst userRoleOptions = [{\n  label: 'Admin',\n  value: 'ADMIN'\n}, {\n  label: 'Estimator',\n  value: 'ESTIMATOR'\n}, {\n  label: 'Supervisor',\n  value: 'SUPERVISOR'\n}, {\n  label: 'Tech',\n  value: 'TECH'\n}];\nconst invoiceStatusOptions = [{\n  value: 'DRAFT',\n  label: 'Draft'\n}, {\n  value: 'SENT',\n  label: 'Sent'\n}, {\n  value: 'PART_PAID',\n  label: 'Part paid'\n}, {\n  value: 'PAID',\n  label: 'Paid'\n}, {\n  value: 'VOID',\n  label: 'Void'\n}];\nfunction UsersAdminScreen() {\n  const {\n    token\n  } = useAuth();\n  const [users, setUsers] = useState([]);\n  const [email, setEmail] = useState('');\n  const [fullName, setFullName] = useState('');\n  const [role, setRole] = useState('TECH');\n  const [inviting, setInviting] = useState(false);\n  const [refreshing, setRefreshing] = useState(false);\n  const load = useCallback(async () => {\n    try {\n      const response = await api('/users', 'GET', null, token);\n      setUsers(Array.isArray(response) ? response : []);\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to load users.');\n    }\n  }, [token]);\n  useEffect(() => {\n    load();\n  }, [load]);\n  const resetForm = () => {\n    setEmail('');\n    setFullName('');\n    setRole('TECH');\n  };\n  const invite = async () => {\n    const trimmedEmail = email.trim().toLowerCase();\n    const trimmedName = fullName.trim();\n    if (!trimmedEmail) {\n      Alert.alert('Missing email', 'Enter an email address to invite a user.');\n      return;\n    }\n    try {\n      setInviting(true);\n      const result = await api('/users', 'POST', {\n        email: trimmedEmail,\n        fullName: trimmedName || undefined,\n        role: normalizeRole(role)\n      }, token);\n      resetForm();\n      await load();\n      const inviteInfo = result?.invitation;\n      const tempPassword = result?.temporaryPassword;\n      if (inviteInfo?.sent) {\n        Alert.alert('Invite sent', `${trimmedEmail} will receive login instructions shortly.`);\n      } else if (inviteInfo?.mock) {\n        Alert.alert('Invite ready', `Email delivery is disabled in this environment. Share this temporary password: ${tempPassword || 'Set via admin'}.`);\n      } else if (tempPassword) {\n        Alert.alert('Invite created', `Share this temporary password with ${trimmedEmail}: ${tempPassword}`);\n      } else {\n        Alert.alert('Invite created', `${trimmedEmail} is ready to sign in.`);\n      }\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to send invite.');\n    } finally {\n      setInviting(false);\n    }\n  };\n  const promote = async (id, newRole) => {\n    try {\n      await api(`/users/${id}`, 'PATCH', {\n        role: normalizeRole(newRole)\n      }, token);\n      await load();\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to update role.');\n    }\n  };\n  const remove = id => {\n    Alert.alert('Remove user', 'Are you sure you want to remove this person?', [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Remove',\n      style: 'destructive',\n      onPress: async () => {\n        try {\n          await api(`/users/${id}`, 'DELETE', null, token);\n          await load();\n          Alert.alert('Removed', 'User access revoked.');\n        } catch (e) {\n          Alert.alert('Error', e.message || 'Unable to delete user.');\n        }\n      }\n    }]);\n  };\n  const onRefresh = useCallback(async () => {\n    setRefreshing(true);\n    try {\n      await load();\n    } finally {\n      setRefreshing(false);\n    }\n  }, [load]);\n  const renderRolePill = value => {\n    const roleCfg = userRoleOptions.find(option => option.value === normalizeRole(value));\n    const label = roleCfg ? roleCfg.label : normalizeRole(value);\n    return _jsxDEV(View, {\n      style: {\n        backgroundColor: '#e0f3f0',\n        paddingHorizontal: spacing(1.5),\n        paddingVertical: spacing(0.5),\n        borderRadius: 999\n      },\n      children: _jsxDEV(Text, {\n        style: {\n          color: palette.primaryStrong,\n          fontWeight: '600',\n          fontSize: typography.small\n        },\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1312,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1311,\n      columnNumber: 7\n    }, this);\n  };\n  const renderRoleSelector = (selectedRole, onSelect) => _jsxDEV(View, {\n    style: {\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      columnGap: spacing(1),\n      rowGap: spacing(1)\n    },\n    children: userRoleOptions.map(option => {\n      const selected = selectedRole === option.value;\n      return _jsxDEV(TouchableOpacity, {\n        onPress: () => onSelect(option.value),\n        activeOpacity: 0.85,\n        style: {\n          paddingHorizontal: spacing(2),\n          paddingVertical: spacing(1),\n          borderRadius: 999,\n          borderWidth: 1,\n          borderColor: selected ? palette.primary : palette.border,\n          backgroundColor: selected ? '#d9f2ed' : palette.surface\n        },\n        children: _jsxDEV(Text, {\n          style: {\n            color: selected ? palette.primaryStrong : palette.muted,\n            fontWeight: '600',\n            fontSize: typography.small\n          },\n          children: option.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1335,\n          columnNumber: 13\n        }, this)\n      }, option.value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1322,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1318,\n    columnNumber: 5\n  }, this);\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(FlatList, {\n      data: users,\n      keyExtractor: u => String(u.id),\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(6)\n      },\n      refreshControl: _jsxDEV(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh,\n        tintColor: palette.primary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1350,\n        columnNumber: 25\n      }, this),\n      ListHeaderComponent: _jsxDEV(View, {\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontSize: typography.h1,\n            fontWeight: '700',\n            marginBottom: spacing(2)\n          },\n          children: \"Team management\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1353,\n          columnNumber: 13\n        }, this), _jsxDEV(SurfaceCard, {\n          style: {\n            padding: spacing(2.5),\n            marginBottom: spacing(3)\n          },\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.text,\n              fontSize: typography.h2,\n              fontWeight: '700'\n            },\n            children: \"Invite teammate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1355,\n            columnNumber: 15\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.5),\n              marginBottom: spacing(2)\n            },\n            children: \"Send an invite email and choose what they can access.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1356,\n            columnNumber: 15\n          }, this), _jsxDEV(FormInput, {\n            placeholder: \"Full name (optional)\",\n            value: fullName,\n            onChangeText: setFullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1359,\n            columnNumber: 15\n          }, this), _jsxDEV(FormInput, {\n            placeholder: \"Work email\",\n            autoCapitalize: \"none\",\n            keyboardType: \"email-address\",\n            value: email,\n            onChangeText: setEmail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1364,\n            columnNumber: 15\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              fontWeight: '600',\n              fontSize: typography.small,\n              textTransform: 'uppercase',\n              marginBottom: spacing(1)\n            },\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1371,\n            columnNumber: 15\n          }, this), renderRoleSelector(role, setRole), _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              marginTop: spacing(2)\n            },\n            children: [_jsxDEV(QuickAction, {\n              label: \"Clear\",\n              tone: \"muted\",\n              onPress: resetForm\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1374,\n              columnNumber: 17\n            }, this), _jsxDEV(TouchableOpacity, {\n              onPress: invite,\n              activeOpacity: 0.85,\n              disabled: inviting,\n              style: {\n                backgroundColor: palette.primary,\n                paddingHorizontal: spacing(2.5),\n                paddingVertical: spacing(1.5),\n                borderRadius: 12,\n                opacity: inviting ? 0.6 : 1\n              },\n              children: _jsxDEV(Text, {\n                style: {\n                  color: '#fff',\n                  fontWeight: '700'\n                },\n                children: inviting ? 'Sending...' : 'Send invite'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1387,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1375,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1373,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1354,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1352,\n        columnNumber: 11\n      }, this),\n      ListEmptyComponent: _jsxDEV(SurfaceCard, {\n        children: _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: \"Invite your first teammate to collaborate on jobs.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1395,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1394,\n        columnNumber: 11\n      }, this),\n      renderItem: ({\n        item\n      }) => {\n        const normalizedRole = normalizeRole(item.role);\n        return _jsxDEV(SurfaceCard, {\n          style: {\n            marginBottom: spacing(2),\n            padding: spacing(2.5)\n          },\n          children: [_jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              marginBottom: spacing(1.5)\n            },\n            children: [_jsxDEV(View, {\n              children: [_jsxDEV(Text, {\n                style: {\n                  color: palette.text,\n                  fontSize: typography.h2,\n                  fontWeight: '600'\n                },\n                children: item.fullName || item.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1404,\n                columnNumber: 19\n              }, this), _jsxDEV(Text, {\n                style: {\n                  color: palette.muted,\n                  marginTop: spacing(0.5)\n                },\n                children: item.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1405,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1403,\n              columnNumber: 17\n            }, this), renderRolePill(normalizedRole)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1402,\n            columnNumber: 15\n          }, this), _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              flexWrap: 'wrap',\n              columnGap: spacing(1),\n              rowGap: spacing(1)\n            },\n            children: [userRoleOptions.map(option => {\n              const selected = normalizedRole === option.value;\n              return _jsxDEV(TouchableOpacity, {\n                onPress: () => promote(item.id, option.value),\n                disabled: selected,\n                activeOpacity: 0.85,\n                style: {\n                  paddingHorizontal: spacing(1.75),\n                  paddingVertical: spacing(0.75),\n                  borderRadius: 999,\n                  borderWidth: 1,\n                  borderColor: selected ? palette.primary : palette.border,\n                  backgroundColor: selected ? '#d9f2ed' : palette.surface,\n                  opacity: selected ? 0.7 : 1\n                },\n                children: _jsxDEV(Text, {\n                  style: {\n                    color: selected ? palette.primaryStrong : palette.muted,\n                    fontWeight: '600',\n                    fontSize: typography.small\n                  },\n                  children: option.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1428,\n                  columnNumber: 23\n                }, this)\n              }, option.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1413,\n                columnNumber: 21\n              }, this);\n            }), _jsxDEV(TouchableOpacity, {\n              onPress: () => remove(item.id),\n              activeOpacity: 0.85,\n              style: {\n                paddingHorizontal: spacing(1.75),\n                paddingVertical: spacing(0.75),\n                borderRadius: 999,\n                borderWidth: 1,\n                borderColor: '#fecdd3',\n                backgroundColor: '#fee2e2'\n              },\n              children: _jsxDEV(Text, {\n                style: {\n                  color: palette.danger,\n                  fontWeight: '600',\n                  fontSize: typography.small\n                },\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1446,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1434,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1409,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1401,\n          columnNumber: 13\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1346,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1345,\n    columnNumber: 5\n  }, this);\n}\nfunction InvoicesScreen({\n  navigation\n}) {\n  const {\n    token,\n    user\n  } = useAuth();\n  const [loading, setLoading] = useState(true);\n  const [refreshing, setRefreshing] = useState(false);\n  const [summary, setSummary] = useState(null);\n  const [invoices, setInvoices] = useState([]);\n  const [filter, setFilter] = useState('ALL');\n  const [newInvoiceJobId, setNewInvoiceJobId] = useState('');\n  const [newInvoiceAmount, setNewInvoiceAmount] = useState('');\n  const [newInvoiceIssuedAt, setNewInvoiceIssuedAt] = useState('');\n  const [newInvoiceDueAt, setNewInvoiceDueAt] = useState('');\n  const [newInvoiceStatus, setNewInvoiceStatus] = useState('DRAFT');\n  const [creatingInvoice, setCreatingInvoice] = useState(false);\n  const load = useCallback(async (isRefresh = false) => {\n    if (!token) return;\n    isRefresh ? setRefreshing(true) : setLoading(true);\n    try {\n      const [summaryData, list] = await Promise.all([api('/invoices/summary', 'GET', null, token), api('/invoices', 'GET', null, token)]);\n      setSummary(summaryData);\n      setInvoices(list);\n    } catch (e) {} finally {\n      isRefresh ? setRefreshing(false) : setLoading(false);\n    }\n  }, [token]);\n  useFocusEffect(useCallback(() => {\n    if (user?.role === 'ADMIN') {\n      load(false);\n    }\n  }, [load, user?.role]));\n  const onRefresh = useCallback(() => load(true), [load]);\n  const nextInvoiceNumber = useMemo(() => {\n    if (!Array.isArray(invoices) || invoices.length === 0) {\n      return 'INV-0001';\n    }\n    const maxNumber = invoices.reduce((acc, inv) => {\n      const match = String(inv.number || '').match(/(\\d+)$/);\n      if (match) {\n        return Math.max(acc, parseInt(match[1], 10));\n      }\n      if (inv.id) {\n        return Math.max(acc, Number(inv.id));\n      }\n      return acc;\n    }, 0);\n    const next = maxNumber + 1;\n    return `INV-${String(next).padStart(4, '0')}`;\n  }, [invoices]);\n  const downloadReport = useCallback(async (format = 'csv') => {\n    const endpoint = format === 'quickbooks' ? '/invoices/export/quickbooks' : '/invoices/export/csv';\n    const filename = `precision-report-${Date.now()}.${format === 'quickbooks' ? 'iif' : 'csv'}`;\n    try {\n      const response = await fetch(`${API_URL}${endpoint}`, {\n        method: 'GET',\n        headers: token ? {\n          Authorization: `Bearer ${token}`\n        } : undefined\n      });\n      const text = await response.text();\n      if (!response.ok) throw new Error(text || 'Unable to download report.');\n      const extension = format === 'quickbooks' ? 'iif' : 'csv';\n      const mimeType = format === 'quickbooks' ? 'text/plain' : 'text/csv';\n      if (Platform.OS === 'web' && true) {\n        try {\n          const blob = new Blob([text], {\n            type: mimeType\n          });\n          const url = URL.createObjectURL(blob);\n          const anchor = document.createElement('a');\n          anchor.href = url;\n          anchor.download = filename;\n          anchor.click();\n          setTimeout(() => URL.revokeObjectURL(url), 4000);\n          Alert.alert('Download started', `Look for ${filename} in your browser downloads.`);\n        } catch (shareError) {\n          Alert.alert('Download ready', `Save this file manually: ${filename}`);\n        }\n        return;\n      }\n      if (!FileSystem?.cacheDirectory) throw new Error('Storage unavailable');\n      const fileUri = `${FileSystem.cacheDirectory}${filename}`;\n      await FileSystem.writeAsStringAsync(fileUri, text, {\n        encoding: FileSystem.EncodingType.UTF8\n      });\n      const sharingSupported = Sharing?.isAvailableAsync ? await Sharing.isAvailableAsync() : false;\n      if (sharingSupported) {\n        await Sharing.shareAsync(fileUri, {\n          mimeType,\n          dialogTitle: filename\n        });\n      } else {\n        try {\n          await Share.share({\n            message: `Precision Tracker report ready: ${filename}`,\n            url: fileUri,\n            title: filename\n          });\n        } catch {\n          Alert.alert('Report saved', `File stored at ${fileUri}.`);\n          return;\n        }\n        Alert.alert('Report saved', `If you skipped sharing, find it at ${fileUri}.`);\n      }\n    } catch (error) {\n      Alert.alert('Download failed', error?.message || 'Unable to download report.');\n    }\n  }, [token]);\n  const prepareInvoicePdf = useCallback(async invoiceId => {\n    const headers = token ? {\n      Authorization: `Bearer ${token}`\n    } : undefined;\n    const endpoint = `${API_URL}/pdf/invoice/${invoiceId}`;\n    if (Platform.OS === 'web' && true) {\n      const response = await fetch(endpoint, {\n        method: 'GET',\n        headers\n      });\n      const ok = response.ok;\n      const blob = await response.blob();\n      if (!ok) throw new Error('Unable to download invoice PDF.');\n      const url = URL.createObjectURL(blob);\n      return {\n        uri: url,\n        cleanup: () => setTimeout(() => URL.revokeObjectURL(url), 4000)\n      };\n    }\n    if (!FileSystem?.cacheDirectory) throw new Error('Storage unavailable');\n    const targetPath = `${FileSystem.cacheDirectory}invoice-${invoiceId}-${Date.now()}.pdf`;\n    if (typeof FileSystem.downloadAsync === 'function') {\n      const result = await FileSystem.downloadAsync(endpoint, targetPath, {\n        headers\n      });\n      if (result?.status && result.status >= 400) {\n        throw new Error('Unable to download invoice PDF.');\n      }\n      return {\n        uri: result.uri,\n        cleanup: () => {}\n      };\n    }\n    const response = await fetch(endpoint, {\n      method: 'GET',\n      headers\n    });\n    const buffer = await response.arrayBuffer();\n    if (!response.ok) throw new Error('Unable to download invoice PDF.');\n    const base64 = Buffer.from(buffer).toString('base64');\n    await FileSystem.writeAsStringAsync(targetPath, base64, {\n      encoding: FileSystem.EncodingType.Base64\n    });\n    return {\n      uri: targetPath,\n      cleanup: () => {}\n    };\n  }, [token]);\n  const shareInvoicePdf = useCallback(async invoice => {\n    try {\n      const payload = await prepareInvoicePdf(invoice.id);\n      try {\n        if (Platform.OS === 'web' && true) {\n          window.open(payload.uri, '_blank', 'noopener,noreferrer');\n          Alert.alert('PDF opened', 'A new browser tab should display the invoice.');\n        } else {\n          const sharingSupported = Sharing?.isAvailableAsync ? await Sharing.isAvailableAsync() : false;\n          if (sharingSupported) {\n            await Sharing.shareAsync(payload.uri, {\n              mimeType: 'application/pdf',\n              dialogTitle: `Invoice ${invoice.number || invoice.id}`\n            });\n          } else {\n            try {\n              await Share.share({\n                title: `Invoice ${invoice.number || invoice.id}`,\n                message: `Invoice ${invoice.number || invoice.id} ready.`,\n                url: payload.uri\n              });\n            } catch {\n              Alert.alert('PDF saved', `Invoice stored at ${payload.uri}.`);\n            }\n          }\n        }\n      } finally {\n        payload.cleanup?.();\n      }\n    } catch (error) {\n      Alert.alert('PDF unavailable', error?.message || 'Unable to prepare invoice PDF.');\n    }\n  }, [prepareInvoicePdf]);\n  const printInvoicePdf = useCallback(async invoice => {\n    try {\n      const payload = await prepareInvoicePdf(invoice.id);\n      try {\n        if (Platform.OS === 'web' && true) {\n          const printWindow = window.open(payload.uri, '_blank', 'noopener,noreferrer');\n          if (printWindow) {\n            printWindow.onload = () => {\n              printWindow.focus();\n              printWindow.print();\n            };\n          } else {\n            Alert.alert('Print blocked', 'Allow pop-ups to print this invoice.');\n          }\n        } else if (Print?.printAsync) {\n          await Print.printAsync({\n            uri: payload.uri\n          });\n        } else {\n          Alert.alert('Print unavailable', 'Printing is not supported in this environment.');\n        }\n      } finally {\n        payload.cleanup?.();\n      }\n    } catch (error) {\n      Alert.alert('Print failed', error?.message || 'Unable to send invoice to printer.');\n    }\n  }, [prepareInvoicePdf]);\n  const resetInvoiceForm = useCallback(() => {\n    setNewInvoiceJobId('');\n    setNewInvoiceAmount('');\n    setNewInvoiceIssuedAt('');\n    setNewInvoiceDueAt('');\n    setNewInvoiceStatus('DRAFT');\n  }, []);\n  const createInvoice = useCallback(async () => {\n    const amountValue = parseFloat(newInvoiceAmount);\n    if (Number.isNaN(amountValue) || amountValue <= 0) {\n      Alert.alert('Missing amount', 'Enter a valid invoice amount.');\n      return;\n    }\n    const jobIdTrimmed = newInvoiceJobId.trim();\n    const jobIdValue = jobIdTrimmed ? parseInt(jobIdTrimmed, 10) : null;\n    if (jobIdTrimmed && Number.isNaN(jobIdValue)) {\n      Alert.alert('Invalid job', 'Job ID must be a number.');\n      return;\n    }\n    const payload = {\n      amount: amountValue,\n      status: newInvoiceStatus,\n      number: nextInvoiceNumber || undefined,\n      jobId: jobIdValue || undefined,\n      issuedAt: newInvoiceIssuedAt || null,\n      dueAt: newInvoiceDueAt || null\n    };\n    try {\n      setCreatingInvoice(true);\n      const created = await api('/invoices', 'POST', payload, token);\n      resetInvoiceForm();\n      await load(false);\n      Alert.alert('Invoice created', `${created?.number || payload.number || 'Invoice'} saved.`);\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to create invoice.');\n    } finally {\n      setCreatingInvoice(false);\n    }\n  }, [newInvoiceAmount, newInvoiceStatus, newInvoiceJobId, newInvoiceIssuedAt, newInvoiceDueAt, token, load, resetInvoiceForm, nextInvoiceNumber]);\n  const deleteInvoice = useCallback(invoice => {\n    Alert.alert('Delete invoice', `Delete invoice #${invoice.number || invoice.id}?`, [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Delete',\n      style: 'destructive',\n      onPress: async () => {\n        try {\n          await api(`/invoices/${invoice.id}`, 'DELETE', null, token);\n          await load(false);\n          Alert.alert('Deleted', 'Invoice removed.');\n        } catch (e) {\n          Alert.alert('Error', e.message || 'Unable to delete invoice.');\n        }\n      }\n    }]);\n  }, [token, load]);\n  if (user?.role !== 'ADMIN') {\n    return _jsxDEV(SafeAreaView, {\n      style: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: palette.background\n      },\n      children: _jsxDEV(Text, {\n        style: {\n          color: palette.muted\n        },\n        children: \"Invoices are only available to admin users.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1740,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1739,\n      columnNumber: 7\n    }, this);\n  }\n  const filters = [{\n    key: 'ALL',\n    label: 'All'\n  }, {\n    key: 'OUTSTANDING',\n    label: 'Outstanding'\n  }, {\n    key: 'PAID',\n    label: 'Paid'\n  }];\n  const filteredInvoices = invoices.filter(inv => {\n    if (filter === 'ALL') return true;\n    const status = (inv.status || 'DRAFT').toUpperCase();\n    if (filter === 'PAID') return status === 'PAID';\n    return !['PAID', 'VOID'].includes(status);\n  });\n  const outstanding = formatCurrency(summary?.outstanding || 0);\n  const collected = formatCurrency(summary?.collected || 0);\n  const drafts = formatCurrency(summary?.draftAmount || 0);\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(6)\n      },\n      refreshControl: _jsxDEV(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh,\n        tintColor: palette.primary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1766,\n        columnNumber: 25\n      }, this),\n      children: [_jsxDEV(Text, {\n        style: {\n          color: palette.text,\n          fontSize: typography.h1,\n          fontWeight: '700',\n          marginBottom: spacing(2)\n        },\n        children: \"Invoices\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1768,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: {\n          color: palette.muted,\n          marginBottom: spacing(2)\n        },\n        children: \"Track billing health and spot overdue balances.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1769,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          columnGap: spacing(1),\n          rowGap: spacing(1),\n          marginBottom: spacing(2)\n        },\n        children: [_jsxDEV(QuickAction, {\n          tone: \"muted\",\n          label: \"Export CSV\",\n          onPress: () => downloadReport('csv')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1771,\n          columnNumber: 11\n        }, this), _jsxDEV(QuickAction, {\n          tone: \"muted\",\n          label: \"QuickBooks export\",\n          onPress: () => downloadReport('quickbooks')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1772,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1770,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          padding: spacing(2.5),\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontSize: typography.h2,\n            fontWeight: '700'\n          },\n          children: \"Create invoice\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1775,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(0.5),\n            marginBottom: spacing(2)\n          },\n          children: \"Capture billing details and keep your accounts current.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1776,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            marginBottom: spacing(1.5)\n          },\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              fontSize: typography.small,\n              fontWeight: '700',\n              textTransform: 'uppercase'\n            },\n            children: \"Invoice number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1780,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.text,\n              fontSize: typography.h2,\n              fontWeight: '700',\n              marginTop: spacing(0.5)\n            },\n            children: nextInvoiceNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1781,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1779,\n          columnNumber: 11\n        }, this), _jsxDEV(FormInput, {\n          placeholder: \"Job ID (optional)\",\n          value: newInvoiceJobId,\n          onChangeText: setNewInvoiceJobId,\n          keyboardType: \"number-pad\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1783,\n          columnNumber: 11\n        }, this), _jsxDEV(FormInput, {\n          placeholder: \"Amount $\",\n          value: newInvoiceAmount,\n          onChangeText: setNewInvoiceAmount,\n          keyboardType: \"decimal-pad\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1789,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            columnGap: spacing(1.5)\n          },\n          children: [_jsxDEV(View, {\n            style: {\n              flex: 1\n            },\n            children: _jsxDEV(DateInputField, {\n              value: newInvoiceIssuedAt,\n              onChange: setNewInvoiceIssuedAt,\n              placeholder: \"Issued date\",\n              style: {\n                marginBottom: 0\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1797,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1796,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: {\n              flex: 1\n            },\n            children: _jsxDEV(DateInputField, {\n              value: newInvoiceDueAt,\n              onChange: setNewInvoiceDueAt,\n              placeholder: \"Due date (optional)\",\n              style: {\n                marginBottom: 0\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1800,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1799,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1795,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontSize: typography.small,\n            fontWeight: '700',\n            textTransform: 'uppercase',\n            marginTop: spacing(2),\n            marginBottom: spacing(1)\n          },\n          children: \"Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1803,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            columnGap: spacing(1),\n            rowGap: spacing(1)\n          },\n          children: invoiceStatusOptions.map(option => {\n            const selected = option.value === newInvoiceStatus;\n            return _jsxDEV(TouchableOpacity, {\n              onPress: () => setNewInvoiceStatus(option.value),\n              activeOpacity: 0.85,\n              style: {\n                paddingHorizontal: spacing(2),\n                paddingVertical: spacing(1),\n                borderRadius: 999,\n                borderWidth: 1,\n                borderColor: selected ? palette.primary : palette.border,\n                backgroundColor: selected ? '#d9f2ed' : palette.surface\n              },\n              children: _jsxDEV(Text, {\n                style: {\n                  color: selected ? palette.primaryStrong : palette.muted,\n                  fontWeight: '600',\n                  fontSize: typography.small\n                },\n                children: option.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1821,\n                columnNumber: 19\n              }, this)\n            }, option.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1808,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1804,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginTop: spacing(2)\n          },\n          children: [_jsxDEV(QuickAction, {\n            label: \"Reset\",\n            tone: \"muted\",\n            onPress: resetInvoiceForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1829,\n            columnNumber: 13\n          }, this), _jsxDEV(TouchableOpacity, {\n            onPress: createInvoice,\n            activeOpacity: 0.85,\n            disabled: creatingInvoice,\n            style: {\n              backgroundColor: palette.primary,\n              paddingHorizontal: spacing(2.5),\n              paddingVertical: spacing(1.5),\n              borderRadius: 12,\n              opacity: creatingInvoice ? 0.6 : 1\n            },\n            children: _jsxDEV(Text, {\n              style: {\n                color: '#fff',\n                fontWeight: '700'\n              },\n              children: creatingInvoice ? 'Saving...' : 'Create invoice'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1842,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1830,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1828,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1774,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          columnGap: spacing(2),\n          rowGap: spacing(2),\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(View, {\n          style: {\n            flexBasis: '48%',\n            minWidth: 160\n          },\n          children: _jsxDEV(SummaryCard, {\n            title: \"Outstanding\",\n            value: outstanding,\n            subtitle: `${summary?.overdueCount || 0} overdue`,\n            tone: \"warning\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1849,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1848,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexBasis: '48%',\n            minWidth: 160\n          },\n          children: _jsxDEV(SummaryCard, {\n            title: \"Collected\",\n            value: collected,\n            subtitle: \"All payments to date\",\n            tone: \"success\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1852,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1851,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexBasis: '48%',\n            minWidth: 160\n          },\n          children: _jsxDEV(SummaryCard, {\n            title: \"Drafts\",\n            value: drafts,\n            subtitle: `${summary?.totalCount || 0} total invoices`,\n            tone: \"info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1855,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1854,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1847,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          columnGap: spacing(1),\n          rowGap: spacing(1),\n          marginBottom: spacing(2)\n        },\n        children: filters.map(f => {\n          const selected = f.key === filter;\n          return _jsxDEV(TouchableOpacity, {\n            onPress: () => setFilter(f.key),\n            activeOpacity: 0.85,\n            style: {\n              paddingHorizontal: spacing(2),\n              paddingVertical: spacing(1),\n              borderRadius: 999,\n              borderWidth: 1,\n              borderColor: selected ? palette.primary : palette.border,\n              backgroundColor: selected ? '#d9f2ed' : palette.surface\n            },\n            children: _jsxDEV(Text, {\n              style: {\n                color: selected ? palette.primaryStrong : palette.muted,\n                fontWeight: '600',\n                fontSize: typography.small\n              },\n              children: f.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1876,\n              columnNumber: 17\n            }, this)\n          }, f.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1863,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1859,\n        columnNumber: 9\n      }, this), loading ? _jsxDEV(SurfaceCard, {\n        style: {\n          alignItems: 'center',\n          paddingVertical: spacing(6)\n        },\n        children: [_jsxDEV(ActivityIndicator, {\n          color: palette.primary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1884,\n          columnNumber: 13\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(1.5)\n          },\n          children: \"Loading invoices...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1885,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1883,\n        columnNumber: 11\n      }, this) : filteredInvoices.length === 0 ? _jsxDEV(SurfaceCard, {\n        children: _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: \"No invoices match this filter.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1889,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1888,\n        columnNumber: 11\n      }, this) : filteredInvoices.map(inv => {\n        const payments = (inv.Payments || []).reduce((sum, p) => sum + Number(p.amount || 0), 0);\n        const amount = Number(inv.amount || 0);\n        const balance = Math.max(amount - payments, 0);\n        const statusKey = (inv.status || 'DRAFT').toUpperCase();\n        return _jsxDEV(SurfaceCard, {\n          children: [_jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center'\n            },\n            children: [_jsxDEV(View, {\n              children: [_jsxDEV(Text, {\n                style: {\n                  color: palette.text,\n                  fontSize: typography.h2,\n                  fontWeight: '600'\n                },\n                children: [\"Invoice #\", inv.number || inv.id]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1901,\n                columnNumber: 21\n              }, this), _jsxDEV(Text, {\n                style: {\n                  color: palette.muted,\n                  marginTop: spacing(0.5)\n                },\n                children: [\"Issued \", inv.issuedAt ? formatDate(inv.issuedAt) : 'TBD']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1902,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1900,\n              columnNumber: 19\n            }, this), _jsxDEV(StatusPill, {\n              status: statusKey\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1904,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1899,\n            columnNumber: 17\n          }, this), _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              marginTop: spacing(1.5)\n            },\n            children: [_jsxDEV(View, {\n              children: [_jsxDEV(Text, {\n                style: {\n                  color: palette.muted,\n                  fontSize: typography.small\n                },\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1908,\n                columnNumber: 21\n              }, this), _jsxDEV(Text, {\n                style: {\n                  color: palette.text,\n                  fontWeight: '600'\n                },\n                children: formatCurrency(amount)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1909,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1907,\n              columnNumber: 19\n            }, this), _jsxDEV(View, {\n              children: [_jsxDEV(Text, {\n                style: {\n                  color: palette.muted,\n                  fontSize: typography.small\n                },\n                children: \"Collected\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1912,\n                columnNumber: 21\n              }, this), _jsxDEV(Text, {\n                style: {\n                  color: palette.text\n                },\n                children: formatCurrency(payments)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1913,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1911,\n              columnNumber: 19\n            }, this), _jsxDEV(View, {\n              children: [_jsxDEV(Text, {\n                style: {\n                  color: palette.muted,\n                  fontSize: typography.small\n                },\n                children: \"Balance\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1916,\n                columnNumber: 21\n              }, this), _jsxDEV(Text, {\n                style: {\n                  color: balance > 0 ? palette.primaryStrong : palette.muted,\n                  fontWeight: '600'\n                },\n                children: formatCurrency(balance)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1917,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1915,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1906,\n            columnNumber: 17\n          }, this), inv.dueAt ? _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(1)\n            },\n            children: [\"Due \", formatDate(inv.dueAt)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1921,\n            columnNumber: 19\n          }, this) : null, _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              flexWrap: 'wrap',\n              columnGap: spacing(1),\n              rowGap: spacing(1),\n              marginTop: spacing(2)\n            },\n            children: [_jsxDEV(QuickAction, {\n              tone: \"muted\",\n              label: \"Share PDF\",\n              onPress: () => shareInvoicePdf(inv)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1924,\n              columnNumber: 19\n            }, this), _jsxDEV(QuickAction, {\n              tone: \"muted\",\n              label: \"Print\",\n              onPress: () => printInvoicePdf(inv)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1925,\n              columnNumber: 19\n            }, this), inv.jobId ? _jsxDEV(QuickAction, {\n              label: \"View job\",\n              onPress: () => navigation.navigate('JobDetail', {\n                jobId: inv.jobId\n              }),\n              tone: \"muted\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1926,\n              columnNumber: 32\n            }, this) : null, _jsxDEV(QuickAction, {\n              label: \"Record payment\",\n              tone: \"success\",\n              onPress: () => Alert.alert('Coming soon', 'Payment logging will land shortly.')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1927,\n              columnNumber: 19\n            }, this), _jsxDEV(QuickAction, {\n              label: \"Delete\",\n              tone: \"danger\",\n              onPress: () => deleteInvoice(inv)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1928,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1923,\n            columnNumber: 17\n          }, this)]\n        }, inv.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1898,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1764,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1763,\n    columnNumber: 5\n  }, this);\n}\nfunction JobsKanbanScreen({\n  navigation,\n  route\n}) {\n  const {\n    token\n  } = useAuth();\n  const [jobs, setJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [refreshing, setRefreshing] = useState(false);\n  const [newJobName, setNewJobName] = useState('');\n  const [newJobStartDate, setNewJobStartDate] = useState('');\n  const [newJobDueDate, setNewJobDueDate] = useState('');\n  const [newJobNotes, setNewJobNotes] = useState('');\n  const [newCustomerName, setNewCustomerName] = useState('');\n  const [newCustomerPhone, setNewCustomerPhone] = useState('');\n  const [newCustomerEmail, setNewCustomerEmail] = useState('');\n  const [newAddressLine1, setNewAddressLine1] = useState('');\n  const [newAddressLine2, setNewAddressLine2] = useState('');\n  const [newCity, setNewCity] = useState('');\n  const [newStateCode, setNewStateCode] = useState('');\n  const [newZip, setNewZip] = useState('');\n  const [jobFormTab, setJobFormTab] = useState('BASICS');\n  const [newJobTags, setNewJobTags] = useState([]);\n  const statusOrder = ['NEW', 'SCHEDULED', 'IN_PROGRESS', 'ON_HOLD', 'COMPLETED', 'DONE', 'PAID', 'CANCELLED', 'CLOSED'];\n  const scrollRef = useRef(null);\n  const [selectedTag, setSelectedTag] = useState(null);\n  const [selectedCity, setSelectedCity] = useState(null);\n  const [selectedUrgency, setSelectedUrgency] = useState('ALL');\n  const jobTagSuggestions = useMemo(() => {\n    const library = new Set(defaultTagSeeds);\n    jobs.forEach(job => {\n      (Array.isArray(job.tags) ? job.tags : []).forEach(tag => library.add(String(tag)));\n    });\n    return Array.from(library);\n  }, [jobs]);\n  const load = useCallback(async (isRefresh = false) => {\n    isRefresh ? setRefreshing(true) : setLoading(true);\n    try {\n      const data = await api('/jobs', 'GET', null, token);\n      setJobs(data);\n      db.transaction(tx => {\n        tx.executeSql && tx.executeSql('DELETE FROM jobs_cache;');\n        data.forEach(j => tx.executeSql && tx.executeSql('INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)', [j.id, j.name || '', j.status || 'SCHEDULED', j.startDate || '', j.endDate || '', j.notes || '']));\n      });\n    } catch (e) {\n      db.transaction(tx => tx.executeSql && tx.executeSql('SELECT id, name, status, startDate, endDate, notes FROM jobs_cache', [], (_, {\n        rows\n      }) => setJobs(rows._array || [])));\n    } finally {\n      isRefresh ? setRefreshing(false) : setLoading(false);\n    }\n  }, [token]);\n  useFocusEffect(useCallback(() => {\n    load(false);\n  }, [load]));\n  useEffect(() => {\n    if (route?.params?.focus === 'create-job') {\n      scrollRef.current?.scrollTo({\n        y: 0,\n        animated: true\n      });\n      setJobFormTab('BASICS');\n      if (navigation && typeof navigation.setParams === 'function') {\n        navigation.setParams({\n          focus: undefined\n        });\n      }\n    }\n  }, [route?.params?.focus, navigation]);\n  const availableTags = useMemo(() => {\n    const set = new Set();\n    jobs.forEach(job => {\n      const tags = Array.isArray(job.tags) ? job.tags : [];\n      tags.forEach(tag => {\n        if (tag) set.add(String(tag));\n      });\n    });\n    return Array.from(set).sort((a, b) => a.toLowerCase().localeCompare(b.toLowerCase()));\n  }, [jobs]);\n  const availableCities = useMemo(() => {\n    const set = new Set();\n    jobs.forEach(job => {\n      const city = job?.Jobsite?.city;\n      if (city) set.add(String(city).trim());\n    });\n    return Array.from(set).sort((a, b) => a.toLowerCase().localeCompare(b.toLowerCase()));\n  }, [jobs]);\n  const urgencyFilters = useMemo(() => [{\n    key: 'ALL',\n    label: 'All'\n  }, {\n    key: 'UPCOMING',\n    label: 'Starting soon'\n  }, {\n    key: 'OVERDUE',\n    label: 'Past due'\n  }], []);\n  const filteredJobsRaw = useMemo(() => {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    return jobs.filter(job => {\n      if (selectedTag) {\n        const tags = Array.isArray(job.tags) ? job.tags : [];\n        const hasTag = tags.some(tag => String(tag).toLowerCase() === selectedTag.toLowerCase());\n        if (!hasTag) return false;\n      }\n      if (selectedCity) {\n        const city = job?.Jobsite?.city ? String(job.Jobsite.city) : '';\n        if (city.toLowerCase() !== selectedCity.toLowerCase()) return false;\n      }\n      if (selectedUrgency === 'UPCOMING') {\n        if (!job.startDate) return false;\n        const start = new Date(job.startDate);\n        if (Number.isNaN(start.getTime())) return false;\n        const diff = Math.ceil((start - today) / (1000 * 60 * 60 * 24));\n        if (diff < 0 || diff > 3) return false;\n      } else if (selectedUrgency === 'OVERDUE') {\n        if (!job.endDate) return false;\n        const due = new Date(job.endDate);\n        if (Number.isNaN(due.getTime())) return false;\n        if (due >= today) return false;\n      }\n      return true;\n    });\n  }, [jobs, selectedTag, selectedCity, selectedUrgency]);\n  const hasFilters = useMemo(() => Boolean(selectedTag || selectedCity || selectedUrgency !== 'ALL'), [selectedTag, selectedCity, selectedUrgency]);\n  const clearFilters = useCallback(() => {\n    setSelectedTag(null);\n    setSelectedCity(null);\n    setSelectedUrgency('ALL');\n  }, []);\n  const onRefresh = useCallback(() => load(true), [load]);\n  const resetForm = () => {\n    setNewJobName('');\n    setNewJobStartDate('');\n    setNewJobDueDate('');\n    setNewJobNotes('');\n    setNewCustomerName('');\n    setNewCustomerPhone('');\n    setNewCustomerEmail('');\n    setNewAddressLine1('');\n    setNewAddressLine2('');\n    setNewCity('');\n    setNewStateCode('');\n    setNewZip('');\n    setNewJobTags([]);\n    setJobFormTab('BASICS');\n  };\n  const createJob = async () => {\n    if (!newJobName.trim()) {\n      Alert.alert('Missing info', 'Please add a job name.');\n      setJobFormTab('BASICS');\n      return;\n    }\n    const hasCustomer = [newCustomerName, newCustomerPhone, newCustomerEmail].some(v => v && v.trim());\n    const hasAddress = [newAddressLine1, newCity, newStateCode, newZip].some(v => v && v.trim());\n    const payload = {\n      name: newJobName.trim(),\n      status: 'NEW',\n      startDate: newJobStartDate || null,\n      endDate: newJobDueDate || null,\n      notes: newJobNotes.trim() || null,\n      tags: newJobTags.filter(Boolean)\n    };\n    if (hasCustomer) {\n      payload.customer = {\n        name: newCustomerName.trim(),\n        phone: newCustomerPhone.trim(),\n        email: newCustomerEmail.trim(),\n        billingAddress: newAddressLine1 ? `${newAddressLine1}${newAddressLine2 ? `\n${newAddressLine2}` : ''}${newCity ? `\n${newCity}, ${newStateCode} ${newZip}` : ''}` : null\n      };\n    }\n    if (hasAddress) {\n      payload.jobsite = {\n        addressLine1: newAddressLine1.trim(),\n        addressLine2: newAddressLine2.trim(),\n        city: newCity.trim(),\n        state: newStateCode.trim(),\n        zip: newZip.trim()\n      };\n    }\n    try {\n      const created = await api('/jobs', 'POST', payload, token);\n      setJobs(prev => [created, ...prev]);\n      db.transaction(tx => tx.executeSql && tx.executeSql('INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)', [created.id, created.name || '', created.status || 'SCHEDULED', created.startDate || '', created.endDate || '', created.notes || '']));\n      resetForm();\n      Alert.alert('Job created', `Job #${created.id} ready to schedule.`);\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to create job');\n    }\n  };\n  const updateJobStatus = async (id, status) => {\n    try {\n      const updated = await api(`/jobs/${id}`, 'PATCH', {\n        status\n      }, token);\n      setJobs(prev => prev.map(job => job.id === id ? updated : job));\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to update job status');\n    }\n  };\n  const removeJob = useCallback(id => {\n    Alert.alert('Delete Job', `Delete job #${id}?`, [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Delete',\n      style: 'destructive',\n      onPress: async () => {\n        try {\n          await api(`/jobs/${id}`, 'DELETE', null, token);\n          setJobs(prev => prev.filter(job => Number(job.id) !== Number(id)));\n          db.transaction(tx => tx.executeSql && tx.executeSql('DELETE FROM jobs_cache WHERE id=?', [id]));\n          Alert.alert('Deleted', 'Job removed.');\n          await load(false);\n        } catch (e) {\n          Alert.alert('Error', e.message || 'Unable to delete job');\n        }\n      }\n    }]);\n  }, [token, load]);\n  const sortedJobs = useMemo(() => {\n    const normalize = status => (status || 'SCHEDULED').toUpperCase();\n    const rank = status => {\n      const key = normalize(status);\n      const idx = statusOrder.indexOf(key);\n      return idx === -1 ? statusOrder.length : idx;\n    };\n    const parseDateSafe = value => {\n      if (!value) return null;\n      const d = new Date(value);\n      return Number.isNaN(d.getTime()) ? null : d;\n    };\n    return [...filteredJobsRaw].sort((a, b) => {\n      const statusDiff = rank(a.status) - rank(b.status);\n      if (statusDiff !== 0) return statusDiff;\n      const startA = parseDateSafe(a.startDate);\n      const startB = parseDateSafe(b.startDate);\n      if (startA && startB) return startA - startB;\n      if (startA) return -1;\n      if (startB) return 1;\n      return (b.id || 0) - (a.id || 0);\n    });\n  }, [filteredJobsRaw, statusOrder]);\n  const groupedJobs = useMemo(() => {\n    const groups = [];\n    let currentStatus = null;\n    sortedJobs.forEach(job => {\n      const statusKey = (job.status || 'SCHEDULED').toUpperCase();\n      if (statusKey !== currentStatus) {\n        groups.push({\n          status: statusKey,\n          jobs: [job]\n        });\n        currentStatus = statusKey;\n      } else {\n        groups[groups.length - 1].jobs.push(job);\n      }\n    });\n    return groups;\n  }, [sortedJobs]);\n  const statusLabel = status => {\n    const key = (status || 'SCHEDULED').toUpperCase();\n    return pillTone[key]?.label || key.charAt(0) + key.slice(1).toLowerCase();\n  };\n  const quickStatusActions = [{\n    label: 'Start job',\n    value: 'IN_PROGRESS',\n    tone: 'primary'\n  }, {\n    label: 'Mark completed',\n    value: 'COMPLETED',\n    tone: 'success'\n  }, {\n    label: 'Mark paid',\n    value: 'PAID',\n    tone: 'success'\n  }, {\n    label: 'Pause',\n    value: 'ON_HOLD',\n    tone: 'warning'\n  }];\n  const inputStyle = {\n    borderWidth: 1,\n    borderColor: palette.border,\n    borderRadius: 12,\n    paddingHorizontal: spacing(1.5),\n    paddingVertical: spacing(1.25),\n    backgroundColor: palette.surfaceMuted,\n    color: palette.text,\n    fontSize: typography.body,\n    marginBottom: spacing(1.5)\n  };\n  const jobTabs = [{\n    key: 'BASICS',\n    label: 'Basics'\n  }, {\n    key: 'CUSTOMER',\n    label: 'Customer'\n  }, {\n    key: 'JOBSITE',\n    label: 'Jobsite'\n  }, {\n    key: 'NOTES',\n    label: 'Notes'\n  }];\n  const renderJobFormFields = () => {\n    if (jobFormTab === 'BASICS') {\n      return _jsxDEV(View, {\n        children: [_jsxDEV(TextInput, {\n          placeholder: \"Job name\",\n          placeholderTextColor: palette.muted,\n          value: newJobName,\n          onChangeText: setNewJobName,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2239,\n          columnNumber: 11\n        }, this), _jsxDEV(DateInputField, {\n          value: newJobStartDate,\n          onChange: setNewJobStartDate,\n          placeholder: \"Start date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2246,\n          columnNumber: 11\n        }, this), _jsxDEV(DateInputField, {\n          value: newJobDueDate,\n          onChange: setNewJobDueDate,\n          placeholder: \"Due date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2251,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            marginTop: spacing(1.5)\n          },\n          children: _jsxDEV(TagInput, {\n            value: newJobTags,\n            onChange: setNewJobTags,\n            placeholder: \"Add tags (e.g. HVAC, Urgent)\",\n            suggestions: jobTagSuggestions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2257,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2256,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2238,\n        columnNumber: 9\n      }, this);\n    }\n    if (jobFormTab === 'CUSTOMER') {\n      return _jsxDEV(View, {\n        children: [_jsxDEV(TextInput, {\n          placeholder: \"Customer name\",\n          placeholderTextColor: palette.muted,\n          value: newCustomerName,\n          onChangeText: setNewCustomerName,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2265,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Phone\",\n          placeholderTextColor: palette.muted,\n          keyboardType: \"phone-pad\",\n          value: newCustomerPhone,\n          onChangeText: setNewCustomerPhone,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2272,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Email\",\n          placeholderTextColor: palette.muted,\n          keyboardType: \"email-address\",\n          autoCapitalize: \"none\",\n          value: newCustomerEmail,\n          onChangeText: setNewCustomerEmail,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2280,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2264,\n        columnNumber: 9\n      }, this);\n    }\n    if (jobFormTab === 'JOBSITE') {\n      return _jsxDEV(View, {\n        children: [_jsxDEV(TextInput, {\n          placeholder: \"Address line 1\",\n          placeholderTextColor: palette.muted,\n          value: newAddressLine1,\n          onChangeText: setNewAddressLine1,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2295,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Address line 2\",\n          placeholderTextColor: palette.muted,\n          value: newAddressLine2,\n          onChangeText: setNewAddressLine2,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2302,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            columnGap: spacing(1.5)\n          },\n          children: [_jsxDEV(View, {\n            style: {\n              flex: 1\n            },\n            children: _jsxDEV(TextInput, {\n              placeholder: \"City\",\n              placeholderTextColor: palette.muted,\n              value: newCity,\n              onChangeText: setNewCity,\n              style: [inputStyle, {\n                marginBottom: 0\n              }]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2311,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2310,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: {\n              width: 80\n            },\n            children: _jsxDEV(TextInput, {\n              placeholder: \"State\",\n              placeholderTextColor: palette.muted,\n              value: newStateCode,\n              onChangeText: setNewStateCode,\n              style: [inputStyle, {\n                marginBottom: 0\n              }]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2320,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2319,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: {\n              width: 100\n            },\n            children: _jsxDEV(TextInput, {\n              placeholder: \"ZIP\",\n              placeholderTextColor: palette.muted,\n              value: newZip,\n              onChangeText: setNewZip,\n              style: [inputStyle, {\n                marginBottom: 0\n              }]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2329,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2328,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2309,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2294,\n        columnNumber: 9\n      }, this);\n    }\n    return _jsxDEV(TextInput, {\n      placeholder: \"Internal notes\",\n      placeholderTextColor: palette.muted,\n      value: newJobNotes,\n      onChangeText: setNewJobNotes,\n      multiline: true,\n      style: [inputStyle, {\n        minHeight: 96,\n        textAlignVertical: 'top'\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2342,\n      columnNumber: 7\n    }, this);\n  };\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(ScrollView, {\n      ref: scrollRef,\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(4)\n      },\n      refreshControl: _jsxDEV(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh,\n        tintColor: palette.primary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2358,\n        columnNumber: 25\n      }, this),\n      children: [_jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3),\n          padding: spacing(2.5)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontSize: typography.h2,\n            fontWeight: '700',\n            marginBottom: spacing(2)\n          },\n          children: \"Create job\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2361,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            columnGap: spacing(1),\n            rowGap: spacing(1.5),\n            marginBottom: spacing(2)\n          },\n          children: jobTabs.map(tab => {\n            const selected = tab.key === jobFormTab;\n            return _jsxDEV(TouchableOpacity, {\n              onPress: () => setJobFormTab(tab.key),\n              activeOpacity: 0.85,\n              style: {\n                paddingHorizontal: spacing(2),\n                paddingVertical: spacing(1),\n                borderRadius: 999,\n                borderWidth: 1,\n                borderColor: selected ? palette.primary : palette.border,\n                backgroundColor: selected ? '#d9f2ed' : palette.surface\n              },\n              children: _jsxDEV(Text, {\n                style: {\n                  color: selected ? palette.primaryStrong : palette.muted,\n                  fontWeight: '600',\n                  fontSize: typography.small\n                },\n                children: tab.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2379,\n                columnNumber: 19\n              }, this)\n            }, tab.key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2366,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2362,\n          columnNumber: 11\n        }, this), renderJobFormFields(), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginTop: spacing(2)\n          },\n          children: [_jsxDEV(QuickAction, {\n            label: \"Reset\",\n            tone: \"muted\",\n            onPress: resetForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2388,\n            columnNumber: 13\n          }, this), _jsxDEV(TouchableOpacity, {\n            onPress: createJob,\n            activeOpacity: 0.85,\n            style: {\n              backgroundColor: palette.primary,\n              paddingHorizontal: spacing(2.5),\n              paddingVertical: spacing(1.5),\n              borderRadius: 12\n            },\n            children: _jsxDEV(Text, {\n              style: {\n                color: '#fff',\n                fontWeight: '700'\n              },\n              children: \"Create job\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2394,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2389,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2387,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2360,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3),\n          padding: spacing(2.5)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontSize: typography.h2,\n            fontWeight: '700',\n            marginBottom: spacing(1.5)\n          },\n          children: \"Filters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2400,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginBottom: spacing(1)\n          },\n          children: \"Urgency\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2401,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            columnGap: spacing(1),\n            rowGap: spacing(1),\n            marginBottom: spacing(1.5)\n          },\n          children: urgencyFilters.map(option => _jsxDEV(QuickAction, {\n            label: option.label,\n            tone: selectedUrgency === option.key ? 'primary' : 'muted',\n            onPress: () => setSelectedUrgency(option.key)\n          }, option.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2404,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2402,\n          columnNumber: 11\n        }, this), availableTags.length ? _jsxDEV(View, {\n          style: {\n            marginBottom: spacing(1.5)\n          },\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginBottom: spacing(1)\n            },\n            children: \"Tags\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2414,\n            columnNumber: 15\n          }, this), _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              flexWrap: 'wrap',\n              columnGap: spacing(1),\n              rowGap: spacing(1)\n            },\n            children: availableTags.map(tag => _jsxDEV(QuickAction, {\n              label: `#${tag}`,\n              tone: selectedTag === tag ? 'primary' : 'muted',\n              onPress: () => setSelectedTag(selectedTag === tag ? null : tag)\n            }, tag, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2417,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2415,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2413,\n          columnNumber: 13\n        }, this) : null, availableCities.length ? _jsxDEV(View, {\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginBottom: spacing(1)\n            },\n            children: \"Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2429,\n            columnNumber: 15\n          }, this), _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              flexWrap: 'wrap',\n              columnGap: spacing(1),\n              rowGap: spacing(1)\n            },\n            children: availableCities.map(city => _jsxDEV(QuickAction, {\n              label: city,\n              tone: selectedCity === city ? 'primary' : 'muted',\n              onPress: () => setSelectedCity(selectedCity === city ? null : city)\n            }, city, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2432,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2430,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2428,\n          columnNumber: 13\n        }, this) : null, selectedTag || selectedCity || selectedUrgency !== 'ALL' ? _jsxDEV(View, {\n          style: {\n            marginTop: spacing(2)\n          },\n          children: _jsxDEV(QuickAction, {\n            label: \"Clear filters\",\n            tone: \"muted\",\n            onPress: clearFilters\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2444,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2443,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2399,\n        columnNumber: 9\n      }, this), loading && !refreshing && jobs.length === 0 ? _jsxDEV(SurfaceCard, {\n        style: {\n          alignItems: 'center',\n          paddingVertical: spacing(6),\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(ActivityIndicator, {\n          color: palette.primary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2451,\n          columnNumber: 13\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(1.5)\n          },\n          children: \"Loading jobs...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2452,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2450,\n        columnNumber: 11\n      }, this) : null, groupedJobs.length === 0 ? _jsxDEV(SurfaceCard, {\n        children: _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: hasFilters ? 'No jobs match the current filters.' : 'No jobs yet. Convert a lead or add a job to get started.'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2458,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2457,\n        columnNumber: 11\n      }, this) : groupedJobs.map(group => _jsxDEV(View, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontWeight: '700',\n            fontSize: typography.small,\n            textTransform: 'uppercase',\n            marginBottom: spacing(1)\n          },\n          children: statusLabel(group.status)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2465,\n          columnNumber: 15\n        }, this), group.jobs.map(job => {\n          const customer = job.Customer || {};\n          const jobsite = job.Jobsite || {};\n          const addressParts = [jobsite.addressLine1, jobsite.addressLine2, [jobsite.city, jobsite.state].filter(Boolean).join(', '), jobsite.zip].filter(Boolean);\n          const address = addressParts.join(', ');\n          const statusKey = (job.status || 'SCHEDULED').toUpperCase();\n          const assignedTech = job.assignedTech;\n          return _jsxDEV(SurfaceCard, {\n            style: {\n              marginBottom: spacing(1.5)\n            },\n            children: [_jsxDEV(View, {\n              style: {\n                flexDirection: 'row',\n                justifyContent: 'space-between',\n                alignItems: 'center'\n              },\n              children: [_jsxDEV(Text, {\n                style: {\n                  color: palette.text,\n                  fontSize: typography.h2,\n                  fontWeight: '600'\n                },\n                children: job.name || `Job #${job.id}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2483,\n                columnNumber: 23\n              }, this), _jsxDEV(StatusPill, {\n                status: statusKey\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2484,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2482,\n              columnNumber: 21\n            }, this), job.startDate || job.endDate ? _jsxDEV(Text, {\n              style: {\n                color: palette.muted,\n                marginTop: spacing(0.75)\n              },\n              children: [job.startDate ? `Start ${formatDate(job.startDate)}` : null, job.endDate ? `Due ${formatDate(job.endDate)}` : null].filter(Boolean).join(' | ')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2487,\n              columnNumber: 23\n            }, this) : null, customer.name ? _jsxDEV(Text, {\n              style: {\n                color: palette.text,\n                fontWeight: '600',\n                marginTop: spacing(1)\n              },\n              children: customer.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2491,\n              columnNumber: 38\n            }, this) : null, customer.phone ? _jsxDEV(Text, {\n              style: {\n                color: palette.muted\n              },\n              children: customer.phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2492,\n              columnNumber: 39\n            }, this) : null, customer.email ? _jsxDEV(Text, {\n              style: {\n                color: palette.muted\n              },\n              children: customer.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2493,\n              columnNumber: 39\n            }, this) : null, address ? _jsxDEV(Text, {\n              style: {\n                color: palette.muted,\n                marginTop: spacing(1)\n              },\n              children: address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2494,\n              columnNumber: 32\n            }, this) : null, assignedTech ? _jsxDEV(Text, {\n              style: {\n                color: palette.muted,\n                marginTop: spacing(0.5)\n              },\n              children: [\"Assigned to \", assignedTech.fullName || assignedTech.email || 'Tech']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2496,\n              columnNumber: 23\n            }, this) : null, job.notes ? _jsxDEV(Text, {\n              style: {\n                color: palette.muted,\n                marginTop: spacing(1)\n              },\n              numberOfLines: 3,\n              children: job.notes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2500,\n              columnNumber: 34\n            }, this) : null, Array.isArray(job.tags) && job.tags.length ? _jsxDEV(View, {\n              style: {\n                flexDirection: 'row',\n                flexWrap: 'wrap',\n                columnGap: spacing(1),\n                rowGap: spacing(1),\n                marginTop: spacing(1)\n              },\n              children: job.tags.map(tag => _jsxDEV(View, {\n                style: {\n                  backgroundColor: '#e0f3f0',\n                  borderRadius: 999,\n                  paddingHorizontal: spacing(1.5),\n                  paddingVertical: spacing(0.5)\n                },\n                children: _jsxDEV(Text, {\n                  style: {\n                    color: palette.primaryStrong,\n                    fontWeight: '600',\n                    fontSize: typography.small\n                  },\n                  children: `#${tag}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2508,\n                  columnNumber: 29\n                }, this)\n              }, `${job.id}-${tag}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2504,\n                columnNumber: 27\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2502,\n              columnNumber: 23\n            }, this) : null, _jsxDEV(View, {\n              style: {\n                flexDirection: 'row',\n                flexWrap: 'wrap',\n                columnGap: spacing(1),\n                rowGap: spacing(1),\n                marginTop: spacing(2)\n              },\n              children: [address ? _jsxDEV(QuickAction, {\n                label: \"Map\",\n                tone: \"muted\",\n                onPress: () => openJobInMaps(job)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2514,\n                columnNumber: 34\n              }, this) : null, _jsxDEV(QuickAction, {\n                label: \"View job\",\n                onPress: () => navigation.navigate('JobDetail', {\n                  jobId: job.id\n                }),\n                tone: \"muted\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2515,\n                columnNumber: 23\n              }, this), quickStatusActions.map(action => action.value === statusKey ? null : _jsxDEV(QuickAction, {\n                label: action.label,\n                tone: action.tone,\n                onPress: () => updateJobStatus(job.id, action.value)\n              }, action.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2518,\n                columnNumber: 27\n              }, this)), _jsxDEV(QuickAction, {\n                label: \"Delete\",\n                tone: \"danger\",\n                onPress: () => removeJob(job.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2526,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2513,\n              columnNumber: 21\n            }, this)]\n          }, job.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2481,\n            columnNumber: 19\n          }, this);\n        })]\n      }, group.status, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2464,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2355,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 2354,\n    columnNumber: 5\n  }, this);\n}\nfunction JobDetailScreen({\n  route,\n  navigation\n}) {\n  const {\n    jobId\n  } = route.params;\n  const {\n    token,\n    user\n  } = useAuth();\n  const [jobName, setJobName] = useState('');\n  const [jobStartDate, setJobStartDate] = useState('');\n  const [jobEndDate, setJobEndDate] = useState('');\n  const [jobNotes, setJobNotes] = useState('');\n  const [jobCustomerName, setJobCustomerName] = useState('');\n  const [jobCustomerPhone, setJobCustomerPhone] = useState('');\n  const [jobCustomerEmail, setJobCustomerEmail] = useState('');\n  const [jobAddressLine1, setJobAddressLine1] = useState('');\n  const [jobAddressLine2, setJobAddressLine2] = useState('');\n  const [jobCity, setJobCity] = useState('');\n  const [jobStateCode, setJobStateCode] = useState('');\n  const [jobZip, setJobZip] = useState('');\n  const [jobTags, setJobTags] = useState([]);\n  const [assignedTechId, setAssignedTechId] = useState(null);\n  const [team, setTeam] = useState([]);\n  const [assignedTechName, setAssignedTechName] = useState('');\n  const [assigningTech, setAssigningTech] = useState(false);\n  const [jobAttachments, setJobAttachments] = useState([]);\n  const [loadingAttachments, setLoadingAttachments] = useState(false);\n  const [uploadingAttachment, setUploadingAttachment] = useState(false);\n  const [jobActivity, setJobActivity] = useState([]);\n  const [newActivityNote, setNewActivityNote] = useState('');\n  const [addingActivity, setAddingActivity] = useState(false);\n  const [changeOrders, setCO] = useState([]);\n  const [title, setTitle] = useState('');\n  const [amountDelta, setAmountDelta] = useState('0');\n  const [tagSuggestions, setTagSuggestions] = useState(defaultTagSeeds);\n  const roleKey = normalizeRole(user?.role);\n  const canManageChangeOrders = ['ADMIN', 'SUPERVISOR', 'ESTIMATOR'].includes(roleKey);\n  const canAssignTech = roleKey === 'ADMIN';\n  const loadCO = useCallback(async () => {\n    setCO(await api(`/change-orders/job/${jobId}`, 'GET', null, token));\n  }, [jobId, token]);\n  const loadJob = useCallback(async () => {\n    try {\n      const j = await api(`/jobs/${jobId}`, 'GET', null, token);\n      setJobName(j.name || '');\n      setJobStartDate(j.startDate || '');\n      setJobEndDate(j.endDate || '');\n      setJobNotes(j.notes || '');\n      const customer = j.Customer || {};\n      const jobsite = j.Jobsite || {};\n      setJobCustomerName(customer.name || '');\n      setJobCustomerPhone(customer.phone || '');\n      setJobCustomerEmail(customer.email || '');\n      setJobAddressLine1(jobsite.addressLine1 || '');\n      setJobAddressLine2(jobsite.addressLine2 || '');\n      setJobCity(jobsite.city || '');\n      setJobStateCode(jobsite.state || '');\n      setJobZip(jobsite.zip || '');\n      setJobTags(Array.isArray(j.tags) ? j.tags : []);\n      setJobActivity(Array.isArray(j.activityLog) ? j.activityLog : []);\n      setAssignedTechId(j.assignedTo ?? j.assignedTech?.id ?? null);\n      const techLabel = j.assignedTech ? j.assignedTech.fullName || j.assignedTech.email || `Tech #${j.assignedTech.id}` : '';\n      setAssignedTechName(techLabel);\n    } catch (e) {\n      if (e?.status === 404) {\n        Alert.alert('Job removed', 'This job no longer exists. Returning to jobs.', [{\n          text: 'OK',\n          onPress: () => navigation.navigate('Tabs', {\n            screen: 'Jobs'\n          })\n        }]);\n        navigation.navigate('Tabs', {\n          screen: 'Jobs'\n        });\n      } else if (e?.message) {\n        Alert.alert('Error', e.message);\n      } else {\n        Alert.alert('Error', 'Unable to load job details.');\n      }\n    }\n  }, [jobId, token, navigation]);\n  const loadTeam = useCallback(async () => {\n    if (!canAssignTech) return;\n    try {\n      const data = await api('/users', 'GET', null, token);\n      setTeam(Array.isArray(data) ? data.filter(member => member.active !== false) : []);\n    } catch (e) {}\n  }, [canAssignTech, token]);\n  const loadAttachments = useCallback(async () => {\n    try {\n      setLoadingAttachments(true);\n      const response = await api(`/attachments?entityType=JOB&entityId=${jobId}`, 'GET', null, token);\n      setJobAttachments(Array.isArray(response) ? response : []);\n    } catch (e) {} finally {\n      setLoadingAttachments(false);\n    }\n  }, [jobId, token]);\n  const loadTagLibrary = useCallback(async () => {\n    try {\n      const [jobsData, leadsData] = await Promise.all([api('/jobs', 'GET', null, token), api('/leads', 'GET', null, token)]);\n      const library = new Set(defaultTagSeeds);\n      if (Array.isArray(jobsData)) {\n        jobsData.forEach(job => {\n          (Array.isArray(job.tags) ? job.tags : []).forEach(tag => library.add(String(tag)));\n        });\n      }\n      if (Array.isArray(leadsData)) {\n        leadsData.forEach(lead => {\n          (Array.isArray(lead.tags) ? lead.tags : []).forEach(tag => library.add(String(tag)));\n        });\n      }\n      setTagSuggestions(Array.from(library));\n    } catch {}\n  }, [token]);\n  useEffect(() => {\n    loadJob();\n    loadCO();\n    loadAttachments();\n    loadTagLibrary();\n    if (canAssignTech) loadTeam();\n  }, [loadJob, loadCO, loadAttachments, loadTagLibrary, loadTeam, canAssignTech]);\n  const addCO = async () => {\n    if (!title.trim()) {\n      Alert.alert('Missing info', 'Add a title for the change order.');\n      return;\n    }\n    await api(`/change-orders/job/${jobId}`, 'POST', {\n      title: title.trim(),\n      amountDelta: parseFloat(amountDelta) || 0\n    }, token);\n    setTitle('');\n    setAmountDelta('0');\n    loadCO();\n  };\n  const saveJobDetails = async () => {\n    try {\n      await api(`/jobs/${jobId}`, 'PATCH', {\n        name: jobName,\n        startDate: jobStartDate || null,\n        endDate: jobEndDate || null,\n        notes: jobNotes,\n        tags: Array.isArray(jobTags) ? jobTags.filter(Boolean) : [],\n        assignedTo: assignedTechId || null,\n        customer: {\n          name: jobCustomerName,\n          phone: jobCustomerPhone,\n          email: jobCustomerEmail,\n          billingAddress: jobAddressLine1 ? `${jobAddressLine1}${jobAddressLine2 ? `\n${jobAddressLine2}` : ''}${jobCity ? `\n${jobCity}, ${jobStateCode} ${jobZip}` : ''}` : null\n        },\n        jobsite: {\n          addressLine1: jobAddressLine1,\n          addressLine2: jobAddressLine2,\n          city: jobCity,\n          state: jobStateCode,\n          zip: jobZip\n        }\n      }, token);\n      Alert.alert('Saved', 'Job details updated.');\n      navigation.navigate('Tabs', {\n        screen: 'Jobs'\n      });\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to save job');\n    }\n  };\n  const deleteJob = () => {\n    Alert.alert('Delete job', `Delete job #${jobId}?`, [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Delete',\n      style: 'destructive',\n      onPress: async () => {\n        try {\n          await api(`/jobs/${jobId}`, 'DELETE', null, token);\n          db.transaction(tx => tx.executeSql('DELETE FROM jobs_cache WHERE id=?', [jobId]));\n          Alert.alert('Deleted', 'Job removed.');\n          navigation.navigate('Tabs', {\n            screen: 'Jobs'\n          });\n        } catch (e) {\n          Alert.alert('Error', e.message || 'Unable to delete job');\n        }\n      }\n    }]);\n  };\n  const handleAssignTech = useCallback(async techId => {\n    if (!canAssignTech) return;\n    setAssigningTech(true);\n    try {\n      await api(`/jobs/${jobId}`, 'PATCH', {\n        assignedTo: techId || null\n      }, token);\n      setAssignedTechId(techId || null);\n      await loadJob();\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to update assignment.');\n    } finally {\n      setAssigningTech(false);\n    }\n  }, [canAssignTech, jobId, token, loadJob]);\n  const scheduleFollowUp = useCallback(async channel => {\n    const scheduledFor = new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString();\n    const payload = {};\n    if (channel === 'EMAIL') {\n      if (!jobCustomerEmail) return false;\n      payload.email = jobCustomerEmail;\n    }\n    if (channel === 'SMS') {\n      if (!jobCustomerPhone) return false;\n      payload.phone = jobCustomerPhone;\n    }\n    try {\n      await api('/reminders', 'POST', {\n        jobId,\n        channel,\n        template: 'FOLLOW_UP',\n        scheduledFor,\n        payload\n      }, token);\n      return true;\n    } catch (error) {\n      console.warn('Failed to schedule follow up', error?.message || error);\n      return false;\n    }\n  }, [jobCustomerEmail, jobCustomerPhone, jobId, token]);\n  const handleCallCustomer = useCallback(async () => {\n    if (!jobCustomerPhone) {\n      Alert.alert('Missing phone', 'Add a phone number to call this customer.');\n      return;\n    }\n    await Linking.openURL(`tel:${jobCustomerPhone}`);\n    const channel = jobCustomerEmail ? 'EMAIL' : 'SMS';\n    const scheduled = await scheduleFollowUp(channel);\n    if (scheduled) {\n      Alert.alert('Reminder scheduled', 'We will send a branded follow-up in 24 hours.');\n    }\n  }, [jobCustomerPhone, jobCustomerEmail, scheduleFollowUp]);\n  const handleTextCustomer = useCallback(async () => {\n    if (!jobCustomerPhone) {\n      Alert.alert('Missing phone', 'Add a phone number to text this customer.');\n      return;\n    }\n    const message = `Reminder: Job #${jobId} is scheduled soon.`;\n    await Linking.openURL(`sms:${jobCustomerPhone}?body=${encodeURIComponent(message)}`);\n    const scheduled = await scheduleFollowUp('SMS');\n    if (scheduled) {\n      Alert.alert('Reminder scheduled', 'We will automatically follow up with a branded text.');\n    }\n  }, [jobCustomerPhone, jobId, scheduleFollowUp]);\n  const handleEmailCustomer = useCallback(async () => {\n    if (!jobCustomerEmail) {\n      Alert.alert('Missing email', 'Add an email to message this customer.');\n      return;\n    }\n    const subject = `Job #${jobId} update`;\n    const body = `Hi ${jobCustomerName || ''},%0D%0A%0D%0AJust a quick update on your project. Let us know if you have any questions.%0D%0A%0D%0AThanks!`;\n    await Linking.openURL(`mailto:${jobCustomerEmail}?subject=${encodeURIComponent(subject)}&body=${body}`);\n    const scheduled = await scheduleFollowUp('EMAIL');\n    if (scheduled) {\n      Alert.alert('Reminder scheduled', 'We will nudge the client with a branded email follow-up.');\n    }\n  }, [jobCustomerEmail, jobCustomerName, jobId, scheduleFollowUp]);\n  const handleOpenJobsiteMap = useCallback(() => {\n    const parts = [jobAddressLine1?.trim(), jobAddressLine2?.trim(), [jobCity?.trim(), jobStateCode?.trim()].filter(Boolean).join(' '), jobZip?.trim()].filter(Boolean);\n    if (!parts.length) {\n      Alert.alert('Missing address', 'Add the jobsite address to open maps.');\n      return;\n    }\n    const address = parts.join(', ');\n    Linking.openURL(`https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(address)}`);\n  }, [jobAddressLine1, jobAddressLine2, jobCity, jobStateCode, jobZip]);\n  const handleUploadAttachment = useCallback(async () => {\n    try {\n      const permission = await ImagePicker.requestMediaLibraryPermissionsAsync();\n      if (permission && permission.granted === false) {\n        Alert.alert('Permission needed', 'Allow photo library access to attach files.');\n        return;\n      }\n      const result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        quality: 0.8,\n        allowsMultipleSelection: false,\n        base64: false\n      });\n      if (result.canceled) return;\n      const asset = result.assets && result.assets[0];\n      if (!asset?.uri) return;\n      setUploadingAttachment(true);\n      const base64 = await FileSystem.readAsStringAsync(asset.uri, {\n        encoding: FileSystem.EncodingType.Base64\n      });\n      const dataUrl = `data:${asset.mimeType || 'image/jpeg'};base64,${base64}`;\n      const uploaded = await api('/upload/image', 'POST', {\n        dataUrl\n      }, token);\n      await api('/attachments', 'POST', {\n        entityType: 'JOB',\n        entityId: jobId,\n        fileUrl: uploaded.url\n      }, token);\n      await loadAttachments();\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to upload attachment.');\n    } finally {\n      setUploadingAttachment(false);\n    }\n  }, [jobId, token, loadAttachments]);\n  const handleDeleteAttachment = useCallback(id => {\n    Alert.alert('Delete attachment', 'Remove this file from the job?', [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Delete',\n      style: 'destructive',\n      onPress: async () => {\n        setJobAttachments(prev => prev.filter(att => Number(att.id) !== Number(id)));\n        try {\n          await api(`/attachments/${id}`, 'DELETE', null, token);\n          await loadAttachments();\n        } catch (e) {\n          await loadAttachments();\n          Alert.alert('Error', e.message || 'Unable to delete attachment.');\n        }\n      }\n    }]);\n  }, [token, loadAttachments]);\n  const addActivityEntry = useCallback(async () => {\n    const trimmed = newActivityNote.trim();\n    if (!trimmed) {\n      Alert.alert('Missing note', 'Add details before posting to the log.');\n      return;\n    }\n    const entry = {\n      note: trimmed,\n      author: user?.fullName || user?.name || user?.email || 'Team',\n      createdAt: new Date().toISOString()\n    };\n    try {\n      setAddingActivity(true);\n      const nextLog = [entry, ...(Array.isArray(jobActivity) ? jobActivity : [])];\n      await api(`/jobs/${jobId}`, 'PATCH', {\n        activityLog: nextLog\n      }, token);\n      setJobActivity(nextLog);\n      setNewActivityNote('');\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to save activity.');\n    } finally {\n      setAddingActivity(false);\n    }\n  }, [newActivityNote, jobActivity, jobId, token, user]);\n  const activityItems = useMemo(() => {\n    const list = Array.isArray(jobActivity) ? jobActivity.slice() : [];\n    return list.sort((a, b) => {\n      const aTime = new Date(a?.createdAt || 0).getTime();\n      const bTime = new Date(b?.createdAt || 0).getTime();\n      return (Number.isNaN(bTime) ? 0 : bTime) - (Number.isNaN(aTime) ? 0 : aTime);\n    });\n  }, [jobActivity]);\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(6)\n      },\n      children: [_jsxDEV(Text, {\n        style: {\n          color: palette.text,\n          fontSize: typography.h1,\n          fontWeight: '700'\n        },\n        children: [\"Job #\", jobId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2883,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: {\n          color: palette.muted,\n          marginTop: spacing(0.5),\n          marginBottom: spacing(3)\n        },\n        children: \"Keep job information up to date so the field team always has the latest context.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2884,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          padding: spacing(2.5),\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontSize: typography.small,\n            fontWeight: '700',\n            textTransform: 'uppercase',\n            marginBottom: spacing(1)\n          },\n          children: \"Basics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2889,\n          columnNumber: 11\n        }, this), _jsxDEV(FormInput, {\n          placeholder: \"Job name\",\n          value: jobName,\n          onChangeText: setJobName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2892,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            columnGap: spacing(1.5)\n          },\n          children: [_jsxDEV(View, {\n            style: {\n              flex: 1\n            },\n            children: _jsxDEV(DateInputField, {\n              value: jobStartDate,\n              onChange: setJobStartDate,\n              placeholder: \"Start date\",\n              style: {\n                marginBottom: 0\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2895,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2894,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: {\n              flex: 1\n            },\n            children: _jsxDEV(DateInputField, {\n              value: jobEndDate,\n              onChange: setJobEndDate,\n              placeholder: \"End date\",\n              style: {\n                marginBottom: 0\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2898,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2897,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2893,\n          columnNumber: 11\n        }, this), _jsxDEV(FormInput, {\n          placeholder: \"Notes / scope\",\n          value: jobNotes,\n          onChangeText: setJobNotes,\n          multiline: true,\n          style: [{\n            minHeight: 112,\n            textAlignVertical: 'top',\n            lineHeight: lineHeightFor(typography.body),\n            marginTop: \"10px\"\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2901,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontWeight: '600',\n            marginTop: spacing(1.5),\n            marginBottom: spacing(0.5)\n          },\n          children: \"Tags\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2908,\n          columnNumber: 11\n        }, this), _jsxDEV(TagInput, {\n          value: jobTags,\n          onChange: setJobTags,\n          placeholder: \"Add job tags (e.g. Roofing, Urgent)\",\n          suggestions: tagSuggestions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2909,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginTop: spacing(2)\n          },\n          children: [_jsxDEV(QuickAction, {\n            label: \"Delete job\",\n            tone: \"danger\",\n            onPress: deleteJob\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2911,\n            columnNumber: 13\n          }, this), _jsxDEV(TouchableOpacity, {\n            onPress: saveJobDetails,\n            activeOpacity: 0.85,\n            style: {\n              backgroundColor: palette.primary,\n              paddingHorizontal: spacing(2.5),\n              paddingVertical: spacing(1.5),\n              borderRadius: 12\n            },\n            children: _jsxDEV(Text, {\n              style: {\n                color: '#fff',\n                fontWeight: '700'\n              },\n              children: \"Save changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2917,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2912,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2910,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2888,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          padding: spacing(2.5),\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontSize: typography.small,\n            fontWeight: '700',\n            textTransform: 'uppercase',\n            marginBottom: spacing(1)\n          },\n          children: \"Customer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2923,\n          columnNumber: 11\n        }, this), _jsxDEV(FormInput, {\n          placeholder: \"Name\",\n          value: jobCustomerName,\n          onChangeText: setJobCustomerName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2926,\n          columnNumber: 11\n        }, this), _jsxDEV(FormInput, {\n          placeholder: \"Phone\",\n          value: jobCustomerPhone,\n          onChangeText: setJobCustomerPhone,\n          keyboardType: \"phone-pad\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2927,\n          columnNumber: 11\n        }, this), _jsxDEV(FormInput, {\n          placeholder: \"Email\",\n          value: jobCustomerEmail,\n          onChangeText: setJobCustomerEmail,\n          keyboardType: \"email-address\",\n          autoCapitalize: \"none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2928,\n          columnNumber: 11\n        }, this), jobCustomerPhone || jobCustomerEmail ? _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            columnGap: spacing(1),\n            rowGap: spacing(1),\n            marginTop: spacing(1.5)\n          },\n          children: [jobCustomerPhone ? _jsxDEV(QuickAction, {\n            label: \"Call\",\n            tone: \"primary\",\n            onPress: handleCallCustomer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2937,\n            columnNumber: 35\n          }, this) : null, jobCustomerPhone ? _jsxDEV(QuickAction, {\n            label: \"Text\",\n            tone: \"primary\",\n            onPress: handleTextCustomer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2938,\n            columnNumber: 35\n          }, this) : null, jobCustomerEmail ? _jsxDEV(QuickAction, {\n            label: \"Email\",\n            tone: \"muted\",\n            onPress: handleEmailCustomer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2939,\n            columnNumber: 35\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2936,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2922,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          padding: spacing(2.5),\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontSize: typography.small,\n            fontWeight: '700',\n            textTransform: 'uppercase',\n            marginBottom: spacing(1)\n          },\n          children: \"Jobsite\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2945,\n          columnNumber: 11\n        }, this), _jsxDEV(FormInput, {\n          placeholder: \"Address line 1\",\n          value: jobAddressLine1,\n          onChangeText: setJobAddressLine1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2948,\n          columnNumber: 11\n        }, this), _jsxDEV(FormInput, {\n          placeholder: \"Address line 2\",\n          value: jobAddressLine2,\n          onChangeText: setJobAddressLine2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2949,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            columnGap: spacing(1.5),\n            rowGap: spacing(1.5)\n          },\n          children: [_jsxDEV(FormInput, {\n            placeholder: \"City\",\n            value: jobCity,\n            onChangeText: setJobCity,\n            style: [{\n              flex: 1,\n              minWidth: '48%',\n              marginBottom: 0\n            }]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2951,\n            columnNumber: 13\n          }, this), _jsxDEV(FormInput, {\n            placeholder: \"State\",\n            value: jobStateCode,\n            onChangeText: setJobStateCode,\n            autoCapitalize: \"characters\",\n            style: [{\n              flexBasis: '20%',\n              minWidth: 80,\n              marginBottom: 0\n            }]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2952,\n            columnNumber: 13\n          }, this), _jsxDEV(FormInput, {\n            placeholder: \"ZIP\",\n            value: jobZip,\n            onChangeText: setJobZip,\n            keyboardType: \"numeric\",\n            style: [{\n              flexBasis: '28%',\n              minWidth: 120,\n              marginBottom: 0\n            }]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2959,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2950,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            marginTop: spacing(1.5)\n          },\n          children: _jsxDEV(QuickAction, {\n            label: \"Open in Maps\",\n            tone: \"primary\",\n            onPress: handleOpenJobsiteMap\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2968,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2967,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2944,\n        columnNumber: 9\n      }, this), canAssignTech || assignedTechId || assignedTechName ? _jsxDEV(SurfaceCard, {\n        style: {\n          padding: spacing(2.5),\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontSize: typography.small,\n            fontWeight: '700',\n            textTransform: 'uppercase',\n            marginBottom: spacing(1)\n          },\n          children: \"Assigned technician\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2974,\n          columnNumber: 11\n        }, this), canAssignTech ? team.length ? _jsxDEV(_Fragment, {\n          children: [_jsxDEV(TechSelector, {\n            team: team,\n            value: assignedTechId,\n            onSelect: handleAssignTech,\n            allowClear: true,\n            label: \"Tap to assign\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2980,\n            columnNumber: 17\n          }, this), assigningTech ? _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(1)\n            },\n            children: \"Updating assignment...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2988,\n            columnNumber: 19\n          }, this) : null]\n        }, void 0, true) : _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: \"Invite teammates from Team Management to assign jobs.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2992,\n          columnNumber: 15\n        }, this) : _jsxDEV(Text, {\n          style: {\n            color: palette.text\n          },\n          children: assignedTechName ? assignedTechName : 'Unassigned'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2997,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2973,\n        columnNumber: 9\n      }, this) : null, _jsxDEV(SurfaceCard, {\n        style: {\n          padding: spacing(2.5),\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontSize: typography.small,\n            fontWeight: '700',\n            textTransform: 'uppercase'\n          },\n          children: \"Attachments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3005,\n          columnNumber: 9\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(0.5)\n          },\n          children: \"Store site photos, permits, and approvals for the crew.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3006,\n          columnNumber: 9\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            columnGap: spacing(1),\n            rowGap: spacing(1),\n            marginTop: spacing(1.5)\n          },\n          children: [_jsxDEV(QuickAction, {\n            label: uploadingAttachment ? 'Uploading...' : 'Add photo',\n            tone: uploadingAttachment ? 'muted' : 'primary',\n            onPress: uploadingAttachment ? undefined : handleUploadAttachment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3008,\n            columnNumber: 11\n          }, this), _jsxDEV(QuickAction, {\n            label: \"Refresh\",\n            tone: \"muted\",\n            onPress: loadAttachments\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3013,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3007,\n          columnNumber: 9\n        }, this), loadingAttachments ? _jsxDEV(View, {\n          style: {\n            alignItems: 'center',\n            paddingVertical: spacing(2)\n          },\n          children: [_jsxDEV(ActivityIndicator, {\n            color: palette.primary\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3017,\n            columnNumber: 15\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(1)\n            },\n            children: \"Syncing attachments...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3018,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3016,\n          columnNumber: 13\n        }, this) : jobAttachments.length === 0 ? _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(1.5)\n          },\n          children: \"No attachments yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3021,\n          columnNumber: 13\n        }, this) : jobAttachments.map(att => {\n          const url = att?.fileUrl || '';\n          const isImage = typeof url === 'string' && /\\.(png|jpe?g|gif|webp)$/i.test(url);\n          return _jsxDEV(View, {\n            style: {\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              marginTop: spacing(1.5),\n              overflow: 'hidden',\n              backgroundColor: palette.surface\n            },\n            children: [isImage && url ? _jsxDEV(TouchableOpacity, {\n              onPress: () => url ? Linking.openURL(url) : null,\n              activeOpacity: 0.85,\n              children: _jsxDEV(Image, {\n                source: {\n                  uri: url\n                },\n                style: {\n                  height: 180,\n                  width: '100%'\n                },\n                resizeMode: \"cover\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3040,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3039,\n              columnNumber: 21\n            }, this) : null, _jsxDEV(View, {\n              style: {\n                padding: spacing(1.5)\n              },\n              children: [_jsxDEV(Text, {\n                style: {\n                  color: palette.text,\n                  fontWeight: '600'\n                },\n                children: att.caption || 'Attachment'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3044,\n                columnNumber: 21\n              }, this), _jsxDEV(Text, {\n                style: {\n                  color: palette.muted,\n                  fontSize: typography.small,\n                  marginTop: spacing(0.5)\n                },\n                children: [att.uploader?.fullName || att.uploader?.email || 'Uploaded', \" \", att.createdAt ? `• ${new Date(att.createdAt).toLocaleString()}` : '']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3045,\n                columnNumber: 21\n              }, this), _jsxDEV(View, {\n                style: {\n                  flexDirection: 'row',\n                  flexWrap: 'wrap',\n                  columnGap: spacing(1),\n                  rowGap: spacing(1),\n                  marginTop: spacing(1.5)\n                },\n                children: [url ? _jsxDEV(QuickAction, {\n                  label: \"Open\",\n                  tone: \"muted\",\n                  onPress: () => Linking.openURL(url)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3049,\n                  columnNumber: 30\n                }, this) : null, _jsxDEV(QuickAction, {\n                  label: \"Delete\",\n                  tone: \"danger\",\n                  onPress: () => handleDeleteAttachment(att.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3050,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3048,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3043,\n              columnNumber: 19\n            }, this)]\n          }, att.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3027,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3004,\n        columnNumber: 7\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          padding: spacing(2.5),\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontSize: typography.small,\n            fontWeight: '700',\n            textTransform: 'uppercase'\n          },\n          children: \"Activity log\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3060,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(0.5),\n            marginBottom: spacing(1.5)\n          },\n          children: \"Capture approvals, client updates, and job milestones.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3061,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          multiline: true,\n          placeholder: \"Add a note for the team\",\n          placeholderTextColor: palette.muted,\n          value: newActivityNote,\n          onChangeText: setNewActivityNote,\n          style: [formInputBaseStyle, {\n            minHeight: 96,\n            textAlignVertical: 'top'\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3062,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            columnGap: spacing(1),\n            rowGap: spacing(1),\n            marginTop: spacing(1)\n          },\n          children: [_jsxDEV(QuickAction, {\n            label: addingActivity ? 'Saving...' : 'Add entry',\n            tone: addingActivity ? 'muted' : 'primary',\n            onPress: addingActivity ? undefined : addActivityEntry\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3071,\n            columnNumber: 13\n          }, this), _jsxDEV(QuickAction, {\n            label: \"Refresh\",\n            tone: \"muted\",\n            onPress: loadJob\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3076,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3070,\n          columnNumber: 11\n        }, this), activityItems.length === 0 ? _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(1.5)\n          },\n          children: \"No log entries yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3079,\n          columnNumber: 13\n        }, this) : activityItems.map((entry, idx) => _jsxDEV(View, {\n          style: {\n            marginTop: spacing(1.5),\n            borderTopWidth: idx === 0 ? 0 : 1,\n            borderTopColor: palette.border,\n            paddingTop: idx === 0 ? 0 : spacing(1.5)\n          },\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.text,\n              fontWeight: '600'\n            },\n            children: entry.note\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3091,\n            columnNumber: 17\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              fontSize: typography.small,\n              marginTop: spacing(0.5)\n            },\n            children: [entry.author || 'Team', \" \", entry.createdAt ? `• ${new Date(entry.createdAt).toLocaleString()}` : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3092,\n            columnNumber: 17\n          }, this)]\n        }, `${entry.createdAt || idx}-${idx}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3082,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3059,\n        columnNumber: 9\n      }, this), canManageChangeOrders ? _jsxDEV(SurfaceCard, {\n        style: {\n          padding: spacing(2.5),\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontSize: typography.small,\n            fontWeight: '700',\n            textTransform: 'uppercase',\n            marginBottom: spacing(1)\n          },\n          children: \"New change order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3102,\n          columnNumber: 13\n        }, this), _jsxDEV(FormInput, {\n          placeholder: \"Title\",\n          value: title,\n          onChangeText: setTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3105,\n          columnNumber: 13\n        }, this), _jsxDEV(FormInput, {\n          placeholder: \"Amount $\",\n          value: amountDelta,\n          onChangeText: setAmountDelta,\n          keyboardType: \"decimal-pad\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3106,\n          columnNumber: 13\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'flex-end',\n            marginTop: spacing(2)\n          },\n          children: _jsxDEV(TouchableOpacity, {\n            onPress: addCO,\n            activeOpacity: 0.85,\n            style: {\n              backgroundColor: palette.primary,\n              paddingHorizontal: spacing(2.5),\n              paddingVertical: spacing(1.5),\n              borderRadius: 12\n            },\n            children: _jsxDEV(Text, {\n              style: {\n                color: '#fff',\n                fontWeight: '700'\n              },\n              children: \"Add change order\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3113,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3108,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3107,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3101,\n        columnNumber: 11\n      }, this) : null, _jsxDEV(View, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontSize: typography.h2,\n            fontWeight: '700',\n            marginBottom: spacing(1.5)\n          },\n          children: \"Change orders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3120,\n          columnNumber: 11\n        }, this), changeOrders.length === 0 ? _jsxDEV(SurfaceCard, {\n          children: _jsxDEV(Text, {\n            style: {\n              color: palette.muted\n            },\n            children: \"No change orders yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3123,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3122,\n          columnNumber: 13\n        }, this) : changeOrders.map(item => {\n          const statusKey = (item.status || 'PENDING').toUpperCase();\n          const statusTone = (() => {\n            if (statusKey === 'APPROVED') return {\n              bg: '#dcfce7',\n              fg: palette.success,\n              label: 'Approved'\n            };\n            if (statusKey === 'REJECTED') return {\n              bg: '#fee2e2',\n              fg: palette.danger,\n              label: 'Rejected'\n            };\n            return {\n              bg: '#e0f3f0',\n              fg: palette.primaryStrong,\n              label: 'Pending'\n            };\n          })();\n          const amountLabel = formatCurrency(item.amountDelta || 0);\n          return _jsxDEV(SurfaceCard, {\n            style: {\n              marginBottom: spacing(1.5),\n              padding: spacing(2.5)\n            },\n            children: [_jsxDEV(View, {\n              style: {\n                flexDirection: 'row',\n                justifyContent: 'space-between',\n                alignItems: 'center'\n              },\n              children: [_jsxDEV(Text, {\n                style: {\n                  color: palette.text,\n                  fontSize: typography.h2,\n                  fontWeight: '600'\n                },\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3136,\n                columnNumber: 19\n              }, this), _jsxDEV(View, {\n                style: {\n                  backgroundColor: statusTone.bg,\n                  borderRadius: 999,\n                  paddingHorizontal: spacing(1.5),\n                  paddingVertical: spacing(0.5)\n                },\n                children: _jsxDEV(Text, {\n                  style: {\n                    color: statusTone.fg,\n                    fontWeight: '600',\n                    fontSize: typography.small\n                  },\n                  children: statusTone.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3138,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3137,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3135,\n              columnNumber: 17\n            }, this), _jsxDEV(Text, {\n              style: {\n                color: palette.muted,\n                marginTop: spacing(0.5)\n              },\n              children: amountLabel\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3141,\n              columnNumber: 17\n            }, this), canManageChangeOrders ? _jsxDEV(View, {\n              style: {\n                flexDirection: 'row',\n                flexWrap: 'wrap',\n                columnGap: spacing(1),\n                rowGap: spacing(1),\n                marginTop: spacing(1.5)\n              },\n              children: [_jsxDEV(QuickAction, {\n                label: \"Approve\",\n                tone: \"success\",\n                onPress: async () => {\n                  await api(`/change-orders/${item.id}`, 'PATCH', {\n                    status: 'APPROVED'\n                  }, token);\n                  loadCO();\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3144,\n                columnNumber: 21\n              }, this), _jsxDEV(QuickAction, {\n                label: \"Reject\",\n                tone: \"danger\",\n                onPress: async () => {\n                  await api(`/change-orders/${item.id}`, 'PATCH', {\n                    status: 'REJECTED'\n                  }, token);\n                  loadCO();\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3149,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3143,\n              columnNumber: 19\n            }, this) : null]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3134,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3119,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: {\n          color: palette.text,\n          fontSize: typography.h2,\n          fontWeight: '700',\n          marginBottom: spacing(1.5)\n        },\n        children: \"Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3161,\n        columnNumber: 9\n      }, this), _jsxDEV(JobTasks, {\n        jobId: jobId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3162,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: {\n          color: palette.text,\n          fontSize: typography.h2,\n          fontWeight: '700',\n          marginTop: spacing(3),\n          marginBottom: spacing(1.5)\n        },\n        children: \"Schedule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3164,\n        columnNumber: 9\n      }, this), _jsxDEV(JobSchedule, {\n        jobId: jobId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2880,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 2879,\n    columnNumber: 5\n  }, this);\n}\nfunction JobTasks({\n  jobId\n}) {\n  const {\n    token\n  } = useAuth();\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState('');\n  const [dueDate, setDueDate] = useState('');\n  const load = async () => {\n    try {\n      const data = await api(`/tasks?jobId=${jobId}`, 'GET', null, token);\n      setTasks(data);\n      db.transaction(tx => {\n        tx.executeSql('DELETE FROM tasks_cache WHERE jobId=?', [jobId]);\n        data.forEach(t => tx.executeSql('INSERT OR REPLACE INTO tasks_cache (id, jobId, title, status, dueDate) VALUES (?,?,?,?,?)', [t.id, jobId, t.title || '', t.status || 'TODO', t.dueDate || '']));\n      });\n    } catch (e) {\n      db.transaction(tx => tx.executeSql('SELECT id, jobId, title, status, dueDate FROM tasks_cache WHERE jobId=?', [jobId], (_, {\n        rows\n      }) => setTasks(rows._array || [])));\n    }\n  };\n  useEffect(() => {\n    load();\n  }, []);\n  const add = async () => {\n    if (!title.trim()) return Alert.alert('Title required');\n    await api('/tasks', 'POST', {\n      title,\n      jobId,\n      dueDate\n    }, token);\n    setTitle('');\n    setDueDate('');\n    load();\n  };\n  const done = async id => {\n    await api(`/tasks/${id}`, 'PATCH', {\n      status: 'DONE'\n    }, token);\n    load();\n  };\n  const remove = id => {\n    Alert.alert('Delete task', 'Remove this task?', [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Delete',\n      style: 'destructive',\n      onPress: async () => {\n        await api(`/tasks/${id}`, 'DELETE', null, token);\n        load();\n      }\n    }]);\n  };\n  return _jsxDEV(View, {\n    children: [_jsxDEV(SurfaceCard, {\n      style: {\n        marginBottom: spacing(2)\n      },\n      children: [_jsxDEV(Text, {\n        style: {\n          color: palette.text,\n          fontSize: typography.h2,\n          fontWeight: '600',\n          marginBottom: spacing(1.5)\n        },\n        children: \"Add task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3204,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        placeholder: \"Task title\",\n        placeholderTextColor: palette.muted,\n        value: title,\n        onChangeText: setTitle,\n        style: {\n          borderWidth: 1,\n          borderColor: palette.border,\n          borderRadius: 12,\n          padding: spacing(2),\n          color: palette.text,\n          backgroundColor: palette.surfaceMuted,\n          marginBottom: spacing(1.5)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3205,\n        columnNumber: 9\n      }, this), _jsxDEV(DateInputField, {\n        value: dueDate,\n        onChange: setDueDate,\n        placeholder: \"Due date (optional)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3220,\n        columnNumber: 9\n      }, this), _jsxDEV(QuickAction, {\n        label: \"Add task\",\n        onPress: add\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3221,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 3203,\n      columnNumber: 7\n    }, this), tasks.length === 0 ? _jsxDEV(SurfaceCard, {\n      children: _jsxDEV(Text, {\n        style: {\n          color: palette.muted\n        },\n        children: \"No tasks yet. Add one to start tracking progress.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3226,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3225,\n      columnNumber: 9\n    }, this) : tasks.map(t => _jsxDEV(SurfaceCard, {\n      style: {\n        marginBottom: spacing(1.5)\n      },\n      children: [_jsxDEV(Text, {\n        style: {\n          color: palette.text,\n          fontWeight: '600',\n          fontSize: typography.h2 - 2\n        },\n        children: t.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3231,\n        columnNumber: 13\n      }, this), _jsxDEV(Text, {\n        style: {\n          color: palette.muted,\n          marginTop: spacing(0.5)\n        },\n        children: [\"Status: \", t.status || 'TODO', t.dueDate ? ` - Due ${formatDate(t.dueDate)}` : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3232,\n        columnNumber: 13\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          columnGap: spacing(1),\n          rowGap: spacing(1),\n          marginTop: spacing(1.5)\n        },\n        children: [!isTaskCompleted(t.status) ? _jsxDEV(QuickAction, {\n          label: \"Mark done\",\n          tone: \"success\",\n          onPress: () => done(t.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3237,\n          columnNumber: 17\n        }, this) : null, _jsxDEV(QuickAction, {\n          label: \"Delete\",\n          tone: \"danger\",\n          onPress: () => remove(t.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3239,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3235,\n        columnNumber: 13\n      }, this)]\n    }, t.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 3230,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 3202,\n    columnNumber: 5\n  }, this);\n}\nfunction JobSchedule({\n  jobId\n}) {\n  const {\n    token\n  } = useAuth();\n  const [events, setEvents] = useState([]);\n  const [title, setTitle] = useState('');\n  const [startAt, setStartAt] = useState('');\n  const [endAt, setEndAt] = useState('');\n  const load = async () => {\n    try {\n      const data = await api(`/calendar?jobId=${jobId}`, 'GET', null, token);\n      setEvents(data);\n      db.transaction(tx => {\n        tx.executeSql('DELETE FROM calendar_cache WHERE jobId=?', [jobId]);\n        data.forEach(ev => tx.executeSql('INSERT OR REPLACE INTO calendar_cache (id, jobId, title, startAt, endAt) VALUES (?,?,?,?,?)', [ev.id, jobId, ev.title || '', ev.startAt || '', ev.endAt || '']));\n      });\n    } catch (e) {\n      db.transaction(tx => tx.executeSql('SELECT id, jobId, title, startAt, endAt FROM calendar_cache WHERE jobId=?', [jobId], (_, {\n        rows\n      }) => setEvents(rows._array || [])));\n    }\n  };\n  useEffect(() => {\n    load();\n  }, []);\n  const add = async () => {\n    if (!title.trim() || !startAt) return Alert.alert('Title and start time required');\n    await api('/calendar', 'POST', {\n      title,\n      jobId,\n      startAt,\n      endAt\n    }, token);\n    setTitle('');\n    setStartAt('');\n    setEndAt('');\n    load();\n  };\n  const remove = id => {\n    Alert.alert('Delete event', 'Remove this schedule item?', [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Delete',\n      style: 'destructive',\n      onPress: async () => {\n        await api(`/calendar/${id}`, 'DELETE', null, token);\n        load();\n      }\n    }]);\n  };\n  return _jsxDEV(View, {\n    children: [_jsxDEV(SurfaceCard, {\n      style: {\n        marginBottom: spacing(2)\n      },\n      children: [_jsxDEV(Text, {\n        style: {\n          color: palette.text,\n          fontSize: typography.h2,\n          fontWeight: '600',\n          marginBottom: spacing(1.5)\n        },\n        children: \"Schedule event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3281,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        placeholder: \"Event title\",\n        placeholderTextColor: palette.muted,\n        value: title,\n        onChangeText: setTitle,\n        style: {\n          borderWidth: 1,\n          borderColor: palette.border,\n          borderRadius: 12,\n          padding: spacing(2),\n          color: palette.text,\n          backgroundColor: palette.surfaceMuted,\n          marginBottom: spacing(1.5)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3282,\n        columnNumber: 9\n      }, this), _jsxDEV(DateInputField, {\n        value: startAt,\n        onChange: date => {\n          const existing = startAt || '';\n          const timePartIndex = existing.indexOf('T');\n          const timePart = timePartIndex > -1 ? existing.substring(timePartIndex) : 'T08:00:00';\n          setStartAt(`${date}${timePart}`);\n        },\n        placeholder: \"Start date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3297,\n        columnNumber: 9\n      }, this), _jsxDEV(DateInputField, {\n        value: endAt,\n        onChange: date => {\n          if (!date) {\n            setEndAt('');\n            return;\n          }\n          const existing = endAt || '';\n          const timePartIndex = existing.indexOf('T');\n          const timePart = timePartIndex > -1 ? existing.substring(timePartIndex) : 'T17:00:00';\n          setEndAt(`${date}${timePart}`);\n        },\n        placeholder: \"End date (optional)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3307,\n        columnNumber: 9\n      }, this), _jsxDEV(QuickAction, {\n        label: \"Add event\",\n        onPress: add\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3321,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 3280,\n      columnNumber: 7\n    }, this), events.length === 0 ? _jsxDEV(SurfaceCard, {\n      children: _jsxDEV(Text, {\n        style: {\n          color: palette.muted\n        },\n        children: \"No schedule entries yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3326,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3325,\n      columnNumber: 9\n    }, this) : events.map(ev => {\n      const startLabel = ev.startAt ? `Starts ${formatDate(ev.startAt)}` : 'No start date';\n      const endLabel = ev.endAt ? ` - Ends ${formatDate(ev.endAt)}` : '';\n      return _jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(1.5)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontWeight: '600',\n            fontSize: typography.h2 - 2\n          },\n          children: ev.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3334,\n          columnNumber: 15\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(0.5)\n          },\n          children: [startLabel, endLabel]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3335,\n          columnNumber: 15\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            columnGap: spacing(1),\n            marginTop: spacing(1.5)\n          },\n          children: _jsxDEV(QuickAction, {\n            label: \"Delete\",\n            tone: \"danger\",\n            onPress: () => remove(ev.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3339,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3338,\n          columnNumber: 15\n        }, this)]\n      }, ev.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3333,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 3279,\n    columnNumber: 5\n  }, this);\n}\nasync function processQueue(token) {\n  return new Promise(resolve => {\n    db.transaction(tx => {\n      tx.executeSql('SELECT * FROM queue', [], async (_, {\n        rows\n      }) => {\n        const items = rows._array || [];\n        for (const q of items) {\n          try {\n            const payload = JSON.parse(q.payload);\n            if (q.type === 'createLead') {\n              await api('/leads', 'POST', payload, token);\n            }\n            if (q.type === 'uploadPhoto') {\n              await api('/upload/image', 'POST', {\n                dataUrl: payload.dataUrl\n              }, token);\n            }\n            db.transaction(txx => txx.executeSql('DELETE FROM queue WHERE id=?', [q.id]));\n          } catch (e) {}\n        }\n        resolve();\n      });\n    });\n  });\n}\nfunction LeadsScreen({\n  navigation\n}) {\n  const {\n    token\n  } = useAuth();\n  const [leads, setLeads] = useState([]);\n  const [refreshing, setRefreshing] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [convertingId, setConvertingId] = useState(null);\n  const fetchLeads = useCallback(async () => {\n    setLoading(true);\n    try {\n      const data = await api('/leads', 'GET', null, token);\n      const filtered = data.filter(item => (item.status || '').toUpperCase() !== 'CONVERTED');\n      setLeads(filtered);\n      db.transaction(tx => {\n        tx.executeSql && tx.executeSql('DELETE FROM leads_cache;');\n        filtered.forEach(l => tx.executeSql && tx.executeSql('INSERT OR REPLACE INTO leads_cache (id, description, status) VALUES (?,?,?)', [l.id, l.description || '', l.status || 'NEW']));\n      });\n    } catch (e) {\n      db.transaction(tx => tx.executeSql && tx.executeSql('SELECT id, description, status FROM leads_cache', [], (_, {\n        rows\n      }) => {\n        const fallback = (rows._array || []).filter(item => (item.status || '').toUpperCase() !== 'CONVERTED');\n        setLeads(fallback);\n      }));\n    } finally {\n      setLoading(false);\n    }\n  }, [token]);\n  useFocusEffect(useCallback(() => {\n    fetchLeads();\n  }, [fetchLeads]));\n  const onRefresh = useCallback(async () => {\n    setRefreshing(true);\n    await fetchLeads();\n    setRefreshing(false);\n  }, [fetchLeads]);\n  const deleteLead = useCallback(lead => {\n    const title = deriveLeadTitle(lead);\n    Alert.alert('Delete lead', `Remove \"${title}\"?`, [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Delete',\n      style: 'destructive',\n      onPress: async () => {\n        try {\n          await api(`/leads/${lead.id}`, 'DELETE', null, token);\n          setLeads(prev => prev.filter(l => Number(l.id) !== Number(lead.id)));\n          db.transaction(tx => tx.executeSql && tx.executeSql('DELETE FROM leads_cache WHERE id=?', [lead.id]));\n          Alert.alert('Deleted', 'Lead removed.');\n          await fetchLeads();\n        } catch (err) {\n          Alert.alert('Error', err.message || 'Unable to delete lead');\n        }\n      }\n    }]);\n  }, [token, fetchLeads]);\n  const convertLead = useCallback(async lead => {\n    if (!lead?.id) return;\n    const leadId = lead.id;\n    setConvertingId(leadId);\n    try {\n      const job = await api(`/leads/${leadId}/convert`, 'POST', null, token);\n      setLeads(prev => prev.filter(item => Number(item.id) !== Number(leadId)));\n      db.transaction(tx => tx.executeSql && tx.executeSql('DELETE FROM leads_cache WHERE id=?', [leadId]));\n      if (job?.id) {\n        navigation.navigate('JobDetail', {\n          jobId: job.id\n        });\n      } else {\n        Alert.alert('Converted', 'Lead converted to a job.');\n        navigation.navigate('Jobs');\n      }\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to convert lead.');\n    } finally {\n      setConvertingId(null);\n    }\n  }, [token, navigation]);\n  const newLeadsCount = leads.filter(l => (l.status || '').toUpperCase() === 'NEW').length;\n  const renderLeadCard = lead => {\n    const customer = lead.Customer || {};\n    const title = deriveLeadTitle(lead);\n    const subtitle = customer.name && customer.name.trim() && customer.name.trim() !== title ? customer.name : null;\n    const jobsite = lead.Jobsite || {};\n    const addressParts = [jobsite.addressLine1, jobsite.addressLine2, [jobsite.city, jobsite.state].filter(Boolean).join(', '), jobsite.zip].filter(Boolean);\n    const address = addressParts.join(', ');\n    const statusKey = (lead.status || 'NEW').toUpperCase();\n    const tags = Array.isArray(lead.tags) ? lead.tags : [];\n    return _jsxDEV(SurfaceCard, {\n      children: [_jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        children: [_jsxDEV(View, {\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.text,\n              fontSize: typography.h2,\n              fontWeight: '600'\n            },\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3477,\n            columnNumber: 13\n          }, this), subtitle ? _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.5)\n            },\n            children: subtitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3478,\n            columnNumber: 25\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3476,\n          columnNumber: 11\n        }, this), _jsxDEV(StatusPill, {\n          status: statusKey\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3480,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3475,\n        columnNumber: 9\n      }, this), customer.phone ? _jsxDEV(Text, {\n        style: {\n          color: palette.muted,\n          marginTop: spacing(0.5)\n        },\n        children: customer.phone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3482,\n        columnNumber: 27\n      }, this) : null, customer.email ? _jsxDEV(Text, {\n        style: {\n          color: palette.muted\n        },\n        children: customer.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3483,\n        columnNumber: 27\n      }, this) : null, address ? _jsxDEV(Text, {\n        style: {\n          color: palette.muted,\n          marginTop: spacing(1)\n        },\n        children: address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3484,\n        columnNumber: 20\n      }, this) : null, _jsxDEV(Text, {\n        numberOfLines: 3,\n        style: {\n          color: palette.text,\n          marginTop: spacing(1.5)\n        },\n        children: lead.description || 'No scope captured yet.'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3485,\n        columnNumber: 9\n      }, this), tags.length ? _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          columnGap: spacing(1),\n          rowGap: spacing(1),\n          marginTop: spacing(1)\n        },\n        children: tags.map(tag => _jsxDEV(View, {\n          style: {\n            backgroundColor: '#e0f3f0',\n            borderRadius: 999,\n            paddingHorizontal: spacing(1.5),\n            paddingVertical: spacing(0.5)\n          },\n          children: _jsxDEV(Text, {\n            style: {\n              color: palette.primaryStrong,\n              fontWeight: '600',\n              fontSize: typography.small\n            },\n            children: `#${tag}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3490,\n            columnNumber: 17\n          }, this)\n        }, `${lead.id}-${tag}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3489,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3487,\n        columnNumber: 11\n      }, this) : null, _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          columnGap: spacing(1),\n          rowGap: spacing(1),\n          marginTop: spacing(2)\n        },\n        children: [_jsxDEV(QuickAction, {\n          label: \"Open\",\n          onPress: () => navigation.navigate('EstimateEditor', {\n            leadId: lead.id\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3496,\n          columnNumber: 11\n        }, this), statusKey !== 'CONVERTED' ? _jsxDEV(QuickAction, {\n          label: convertingId === lead.id ? 'Converting...' : 'Convert',\n          tone: \"success\",\n          onPress: convertingId === lead.id ? undefined : () => convertLead(lead)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3498,\n          columnNumber: 13\n        }, this) : _jsxDEV(QuickAction, {\n          label: \"View job\",\n          tone: \"muted\",\n          onPress: () => navigation.navigate('Jobs')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3504,\n          columnNumber: 13\n        }, this), _jsxDEV(QuickAction, {\n          label: \"Delete\",\n          tone: \"danger\",\n          onPress: () => deleteLead(lead)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3510,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3495,\n        columnNumber: 9\n      }, this)]\n    }, lead.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 3474,\n      columnNumber: 7\n    }, this);\n  };\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(FlatList, {\n      data: leads,\n      keyExtractor: item => String(item.id),\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(4)\n      },\n      refreshControl: _jsxDEV(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh,\n        tintColor: palette.primary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3522,\n        columnNumber: 25\n      }, this),\n      ListHeaderComponent: _jsxDEV(View, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginBottom: spacing(2)\n          },\n          children: [_jsxDEV(View, {\n            children: [_jsxDEV(Text, {\n              style: {\n                color: palette.ink,\n                fontSize: typography.h1,\n                fontWeight: '700'\n              },\n              children: \"Lead pipeline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3527,\n              columnNumber: 17\n            }, this), _jsxDEV(Text, {\n              style: {\n                color: palette.muted,\n                marginTop: spacing(0.5)\n              },\n              children: \"Reliable intake for crews who close every job.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3528,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3526,\n            columnNumber: 15\n          }, this), _jsxDEV(QuickAction, {\n            tone: \"primary\",\n            label: \"New lead\",\n            onPress: () => navigation.navigate('NewLead')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3530,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3525,\n          columnNumber: 13\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            columnGap: spacing(2),\n            rowGap: spacing(2)\n          },\n          children: [_jsxDEV(View, {\n            style: {\n              flexBasis: '48%',\n              minWidth: 160\n            },\n            children: _jsxDEV(SummaryCard, {\n              title: \"Total\",\n              value: leads.length,\n              subtitle: `${newLeadsCount} new`,\n              tone: \"info\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3534,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3533,\n            columnNumber: 15\n          }, this), _jsxDEV(View, {\n            style: {\n              flexBasis: '48%',\n              minWidth: 160\n            },\n            children: _jsxDEV(SummaryCard, {\n              title: \"Outstanding\",\n              value: newLeadsCount,\n              subtitle: \"Require follow up\",\n              tone: \"warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3537,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3536,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3532,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3524,\n        columnNumber: 11\n      }, this),\n      renderItem: ({\n        item\n      }) => renderLeadCard(item),\n      ListEmptyComponent: loading ? _jsxDEV(SurfaceCard, {\n        style: {\n          alignItems: 'center',\n          paddingVertical: spacing(4)\n        },\n        children: [_jsxDEV(ActivityIndicator, {\n          color: palette.primary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3546,\n          columnNumber: 15\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(1)\n          },\n          children: \"Loading leads...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3547,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3545,\n        columnNumber: 13\n      }, this) : _jsxDEV(SurfaceCard, {\n        children: _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: \"No leads yet. Capture a lead to get started.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3551,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3550,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3518,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3517,\n    columnNumber: 5\n  }, this);\n}\nfunction NewLeadScreen({\n  navigation\n}) {\n  const {\n    token\n  } = useAuth();\n  const [description, setDescription] = useState('');\n  const [status, setStatus] = useState('NEW');\n  const [customerName, setCustomerName] = useState('');\n  const [customerPhone, setCustomerPhone] = useState('');\n  const [customerEmail, setCustomerEmail] = useState('');\n  const [addressLine1, setAddressLine1] = useState('');\n  const [addressLine2, setAddressLine2] = useState('');\n  const [city, setCity] = useState('');\n  const [stateCode, setStateCode] = useState('');\n  const [zip, setZip] = useState('');\n  const [leadTags, setLeadTags] = useState([]);\n  const [tagSuggestions, setTagSuggestions] = useState(defaultTagSeeds);\n  const [showCustomerSection, setShowCustomerSection] = useState(false);\n  const [showJobsiteSection, setShowJobsiteSection] = useState(false);\n  const statuses = ['NEW', 'CONTACTED', 'ESTIMATING', 'CONVERTED', 'CLOSED_LOST'];\n  useEffect(() => {\n    (async () => {\n      try {\n        const [leadsData, jobsData] = await Promise.all([api('/leads', 'GET', null, token), api('/jobs', 'GET', null, token)]);\n        const library = new Set(defaultTagSeeds);\n        if (Array.isArray(leadsData)) {\n          leadsData.forEach(lead => {\n            (Array.isArray(lead.tags) ? lead.tags : []).forEach(tag => library.add(String(tag)));\n          });\n        }\n        if (Array.isArray(jobsData)) {\n          jobsData.forEach(job => {\n            (Array.isArray(job.tags) ? job.tags : []).forEach(tag => library.add(String(tag)));\n          });\n        }\n        setTagSuggestions(Array.from(library));\n      } catch {}\n    })();\n  }, [token]);\n  const buildPayload = () => {\n    const customer = [customerName, customerPhone, customerEmail].some(v => v && v.trim()) ? {\n      name: customerName.trim(),\n      phone: customerPhone.trim(),\n      email: customerEmail.trim()\n    } : null;\n    const jobsite = [addressLine1, addressLine2, city, stateCode, zip].some(v => v && v.trim()) ? {\n      addressLine1: addressLine1.trim(),\n      addressLine2: addressLine2.trim(),\n      city: city.trim(),\n      state: stateCode.trim(),\n      zip: zip.trim()\n    } : null;\n    return {\n      description,\n      status,\n      customer,\n      jobsite,\n      tags: Array.isArray(leadTags) ? leadTags.filter(Boolean) : []\n    };\n  };\n  const createLeadOnline = async () => {\n    const payload = buildPayload();\n    const created = await api('/leads', 'POST', payload, token);\n    navigation.replace('EstimateEditor', {\n      leadId: created.id\n    });\n    const title = deriveLeadTitle(created);\n    Alert.alert('Lead created', `\"${title}\" is ready to estimate.`);\n  };\n  const queueLead = () => {\n    const payload = buildPayload();\n    db.transaction(tx => tx.executeSql('INSERT INTO queue (type, payload) VALUES (?,?)', ['createLead', JSON.stringify(payload)]));\n    Alert.alert('Saved offline', 'We will submit this lead when you reconnect.');\n    navigation.goBack();\n  };\n  const submit = async () => {\n    if (!description.trim()) {\n      Alert.alert('Missing scope', 'Please describe the job or scope of work.');\n      return;\n    }\n    try {\n      await createLeadOnline();\n    } catch (e) {\n      queueLead();\n    }\n  };\n  const chipStyle = active => ({\n    paddingHorizontal: spacing(2),\n    paddingVertical: spacing(1),\n    borderRadius: 999,\n    borderWidth: 1,\n    borderColor: active ? palette.primary : palette.border,\n    backgroundColor: active ? '#d9f2ed' : palette.surface\n  });\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(6)\n      },\n      children: [_jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontSize: typography.h1,\n            fontWeight: '700',\n            marginBottom: spacing(2)\n          },\n          children: \"New lead\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3665,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontWeight: '600',\n            marginBottom: spacing(1)\n          },\n          children: \"Scope\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3666,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Describe the job...\",\n          placeholderTextColor: palette.muted,\n          value: description,\n          onChangeText: setDescription,\n          multiline: true,\n          style: {\n            borderWidth: 1,\n            borderColor: palette.border,\n            borderRadius: 12,\n            padding: spacing(2),\n            minHeight: 120,\n            color: palette.text,\n            backgroundColor: palette.surfaceMuted,\n            textAlignVertical: 'top'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3667,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontWeight: '600',\n            marginTop: spacing(2),\n            marginBottom: spacing(1)\n          },\n          children: \"Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3684,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            columnGap: spacing(1),\n            rowGap: spacing(1)\n          },\n          children: statuses.map(s => {\n            const active = status === s;\n            return _jsxDEV(TouchableOpacity, {\n              onPress: () => setStatus(s),\n              activeOpacity: 0.85,\n              style: chipStyle(active),\n              children: _jsxDEV(Text, {\n                style: {\n                  color: active ? palette.primaryStrong : palette.muted,\n                  fontWeight: '600',\n                  fontSize: typography.small\n                },\n                children: s.replace('_', ' ')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3690,\n                columnNumber: 19\n              }, this)\n            }, s, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3689,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3685,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontWeight: '600',\n            marginTop: spacing(2),\n            marginBottom: spacing(0.75)\n          },\n          children: \"Tags\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3695,\n          columnNumber: 11\n        }, this), _jsxDEV(TagInput, {\n          value: leadTags,\n          onChange: setLeadTags,\n          placeholder: \"Add tags (e.g. Roof, Urgent)\",\n          suggestions: tagSuggestions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3696,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginTop: spacing(3)\n          },\n          children: [_jsxDEV(QuickAction, {\n            label: \"Save offline\",\n            tone: \"muted\",\n            onPress: queueLead\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3698,\n            columnNumber: 13\n          }, this), _jsxDEV(TouchableOpacity, {\n            onPress: submit,\n            activeOpacity: 0.85,\n            style: {\n              backgroundColor: palette.primary,\n              paddingHorizontal: spacing(3),\n              paddingVertical: spacing(1.5),\n              borderRadius: 12\n            },\n            children: _jsxDEV(Text, {\n              style: {\n                color: '#fff',\n                fontWeight: '700'\n              },\n              children: \"Create lead\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3704,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3699,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3697,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3664,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(TouchableOpacity, {\n          onPress: () => setShowCustomerSection(v => !v),\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n          },\n          activeOpacity: 0.8,\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.text,\n              fontSize: typography.h2,\n              fontWeight: '600'\n            },\n            children: \"Customer details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3715,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.primary,\n              fontWeight: '600'\n            },\n            children: showCustomerSection ? 'Hide' : 'Add'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3716,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3710,\n          columnNumber: 11\n        }, this), showCustomerSection ? _jsxDEV(View, {\n          style: {\n            marginTop: spacing(2)\n          },\n          children: [_jsxDEV(TextInput, {\n            placeholder: \"Name\",\n            placeholderTextColor: palette.muted,\n            value: customerName,\n            onChangeText: setCustomerName,\n            style: {\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted,\n              marginBottom: spacing(1.5)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3720,\n            columnNumber: 15\n          }, this), _jsxDEV(TextInput, {\n            placeholder: \"Phone\",\n            placeholderTextColor: palette.muted,\n            keyboardType: \"phone-pad\",\n            value: customerPhone,\n            onChangeText: setCustomerPhone,\n            style: {\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted,\n              marginBottom: spacing(1.5)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3735,\n            columnNumber: 15\n          }, this), _jsxDEV(TextInput, {\n            placeholder: \"Email\",\n            placeholderTextColor: palette.muted,\n            keyboardType: \"email-address\",\n            autoCapitalize: \"none\",\n            value: customerEmail,\n            onChangeText: setCustomerEmail,\n            style: {\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3751,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3719,\n          columnNumber: 13\n        }, this) : _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(1.5)\n          },\n          children: \"Add contact details to help follow up faster.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3769,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3709,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        children: [_jsxDEV(TouchableOpacity, {\n          onPress: () => setShowJobsiteSection(v => !v),\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n          },\n          activeOpacity: 0.8,\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.text,\n              fontSize: typography.h2,\n              fontWeight: '600'\n            },\n            children: \"Jobsite address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3779,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.primary,\n              fontWeight: '600'\n            },\n            children: showJobsiteSection ? 'Hide' : 'Add'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3780,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3774,\n          columnNumber: 11\n        }, this), showJobsiteSection ? _jsxDEV(View, {\n          style: {\n            marginTop: spacing(2)\n          },\n          children: [_jsxDEV(TextInput, {\n            placeholder: \"Address line 1\",\n            placeholderTextColor: palette.muted,\n            value: addressLine1,\n            onChangeText: setAddressLine1,\n            style: {\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted,\n              marginBottom: spacing(1.5)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3784,\n            columnNumber: 15\n          }, this), _jsxDEV(TextInput, {\n            placeholder: \"Address line 2\",\n            placeholderTextColor: palette.muted,\n            value: addressLine2,\n            onChangeText: setAddressLine2,\n            style: {\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted,\n              marginBottom: spacing(1.5)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3799,\n            columnNumber: 15\n          }, this), _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              columnGap: spacing(1.5)\n            },\n            children: [_jsxDEV(View, {\n              style: {\n                flex: 1\n              },\n              children: _jsxDEV(TextInput, {\n                placeholder: \"City\",\n                placeholderTextColor: palette.muted,\n                value: city,\n                onChangeText: setCity,\n                style: {\n                  borderWidth: 1,\n                  borderColor: palette.border,\n                  borderRadius: 12,\n                  padding: spacing(2),\n                  color: palette.text,\n                  backgroundColor: palette.surfaceMuted,\n                  marginBottom: spacing(1.5)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3816,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3815,\n              columnNumber: 17\n            }, this), _jsxDEV(View, {\n              style: {\n                width: 80\n              },\n              children: _jsxDEV(TextInput, {\n                placeholder: \"State\",\n                placeholderTextColor: palette.muted,\n                value: stateCode,\n                onChangeText: setStateCode,\n                style: {\n                  borderWidth: 1,\n                  borderColor: palette.border,\n                  borderRadius: 12,\n                  padding: spacing(2),\n                  color: palette.text,\n                  backgroundColor: palette.surfaceMuted,\n                  marginBottom: spacing(1.5)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3833,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3832,\n              columnNumber: 17\n            }, this), _jsxDEV(View, {\n              style: {\n                width: 100\n              },\n              children: _jsxDEV(TextInput, {\n                placeholder: \"ZIP\",\n                placeholderTextColor: palette.muted,\n                value: zip,\n                onChangeText: setZip,\n                style: {\n                  borderWidth: 1,\n                  borderColor: palette.border,\n                  borderRadius: 12,\n                  padding: spacing(2),\n                  color: palette.text,\n                  backgroundColor: palette.surfaceMuted,\n                  marginBottom: spacing(1.5)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3850,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3849,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3814,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3783,\n          columnNumber: 13\n        }, this) : _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(1.5)\n          },\n          children: \"Add a jobsite to keep crews aligned.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3869,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3773,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 3663,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3662,\n    columnNumber: 5\n  }, this);\n}\nfunction EstimateEditorScreen({\n  route,\n  navigation\n}) {\n  const {\n    token,\n    user\n  } = useAuth();\n  const {\n    leadId\n  } = route.params || {};\n  const [estimateId, setEstimateId] = useState(null);\n  const [items, setItems] = useState([]);\n  const [desc, setDesc] = useState('');\n  const [qty, setQty] = useState('1');\n  const [price, setPrice] = useState('0');\n  const [notes, setNotes] = useState('');\n  const [photoUrl, setPhotoUrl] = useState(null);\n  const [subtotal, setSubtotal] = useState(0);\n  const [taxRate, setTaxRate] = useState('7');\n  const [tax, setTax] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [leadDetails, setLeadDetails] = useState(null);\n  const [leadStatus, setLeadStatus] = useState('NEW');\n  const [leadScope, setLeadScope] = useState('');\n  const [leadCustomerName, setLeadCustomerName] = useState('');\n  const [leadCustomerPhone, setLeadCustomerPhone] = useState('');\n  const [leadCustomerEmail, setLeadCustomerEmail] = useState('');\n  const [leadAddressLine1, setLeadAddressLine1] = useState('');\n  const [leadAddressLine2, setLeadAddressLine2] = useState('');\n  const [leadCity, setLeadCity] = useState('');\n  const [leadStateCode, setLeadStateCode] = useState('');\n  const [leadZip, setLeadZip] = useState('');\n  const leadStatuses = ['NEW', 'CONTACTED', 'ESTIMATING', 'CONVERTED', 'CLOSED_LOST'];\n  const loadLead = useCallback(async () => {\n    if (!leadId) return;\n    try {\n      const data = await api(`/leads/${leadId}`, 'GET', null, token);\n      setLeadDetails(data);\n      setLeadStatus(data.status || 'NEW');\n      setLeadScope(data.description || '');\n      const customer = data.Customer || {};\n      const jobsite = data.Jobsite || {};\n      setLeadCustomerName(customer.name || '');\n      setLeadCustomerPhone(customer.phone || '');\n      setLeadCustomerEmail(customer.email || '');\n      setLeadAddressLine1(jobsite.addressLine1 || '');\n      setLeadAddressLine2(jobsite.addressLine2 || '');\n      setLeadCity(jobsite.city || '');\n      setLeadStateCode(jobsite.state || '');\n      setLeadZip(jobsite.zip || '');\n    } catch (e) {}\n  }, [leadId, token]);\n  useEffect(() => {\n    loadLead();\n  }, [loadLead]);\n  const createEstimate = async () => {\n    const est = await api('/estimates', 'POST', {\n      leadId,\n      customerId: leadDetails?.customerId ?? null,\n      jobsiteId: leadDetails?.jobsiteId ?? null,\n      subtotal: 0,\n      taxRate: parseFloat(taxRate) || 0,\n      total: 0\n    }, token);\n    setEstimateId(est.id);\n    return est;\n  };\n  const ensureEstimate = useCallback(async () => {\n    if (estimateId) return estimateId;\n    const created = await createEstimate();\n    setEstimateId(created.id);\n    return created.id;\n  }, [estimateId, createEstimate]);\n  useEffect(() => {\n    const rate = parseFloat(taxRate) || 0;\n    const newSubtotal = items.reduce((sum, item) => sum + parseFloat(item.qty || 0) * parseFloat(item.unitPrice || 0), 0);\n    const newTax = newSubtotal * (rate / 100);\n    setSubtotal(newSubtotal);\n    setTax(newTax);\n    setTotal(newSubtotal + newTax);\n  }, [items, taxRate]);\n  const addItem = async () => {\n    if (!desc.trim()) {\n      Alert.alert('Line item', 'Please add a description.');\n      return;\n    }\n    try {\n      const targetId = await ensureEstimate();\n      const payload = {\n        description: desc.trim(),\n        qty: parseFloat(qty) || 1,\n        unitPrice: parseFloat(price) || 0\n      };\n      const item = await api(`/estimates/${targetId}/items`, 'POST', payload, token);\n      setItems(prev => [item, ...prev]);\n      setDesc('');\n      setQty('1');\n      setPrice('0');\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to add line item');\n    }\n  };\n  const saveLeadDetails = async () => {\n    if (!leadId) return;\n    const customerPayload = [leadCustomerName, leadCustomerPhone, leadCustomerEmail].some(v => v && v.trim()) ? {\n      name: leadCustomerName.trim(),\n      phone: leadCustomerPhone.trim(),\n      email: leadCustomerEmail.trim()\n    } : null;\n    const jobsitePayload = [leadAddressLine1, leadAddressLine2, leadCity, leadStateCode, leadZip].some(v => v && v.trim()) ? {\n      addressLine1: leadAddressLine1.trim(),\n      addressLine2: leadAddressLine2.trim(),\n      city: leadCity.trim(),\n      state: leadStateCode.trim(),\n      zip: leadZip.trim()\n    } : null;\n    try {\n      await api(`/leads/${leadId}`, 'PATCH', {\n        description: leadScope,\n        status: leadStatus,\n        customer: customerPayload,\n        jobsite: jobsitePayload\n      }, token);\n      Alert.alert('Saved', 'Lead details updated.');\n      navigation.navigate('Tabs', {\n        screen: 'Leads'\n      });\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to save lead details');\n    }\n  };\n  const pickPhoto = async () => {\n    const result = await ImagePicker.launchImageLibraryAsync({\n      allowsEditing: false,\n      quality: 0.6\n    });\n    if (!result.canceled && result.assets?.length) {\n      setPhotoUrl(result.assets[0].uri);\n    }\n  };\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(6)\n      },\n      children: [_jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontSize: typography.h2,\n            fontWeight: '700',\n            marginBottom: spacing(1.5)\n          },\n          children: \"Lead summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4020,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            columnGap: spacing(1),\n            rowGap: spacing(1.5),\n            marginBottom: spacing(2)\n          },\n          children: leadStatuses.map(s => {\n            const selected = leadStatus === s;\n            return _jsxDEV(QuickAction, {\n              label: s.replace('_', ' '),\n              tone: selected ? 'primary' : 'muted',\n              onPress: () => setLeadStatus(s)\n            }, s, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4025,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4021,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Scope / project notes\",\n          placeholderTextColor: palette.muted,\n          value: leadScope,\n          onChangeText: setLeadScope,\n          multiline: true,\n          style: {\n            borderWidth: 1,\n            borderColor: palette.border,\n            borderRadius: 12,\n            padding: spacing(2),\n            minHeight: 120,\n            color: palette.text,\n            backgroundColor: palette.surfaceMuted,\n            textAlignVertical: 'top'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4034,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'flex-end',\n            marginTop: spacing(2)\n          },\n          children: _jsxDEV(QuickAction, {\n            label: \"Save lead\",\n            onPress: saveLeadDetails\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4052,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4051,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 4019,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontSize: typography.h2,\n            fontWeight: '700',\n            marginBottom: spacing(1.5)\n          },\n          children: \"Line items\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4057,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Describe the work or material\",\n          placeholderTextColor: palette.muted,\n          value: desc,\n          onChangeText: setDesc,\n          style: {\n            borderWidth: 1,\n            borderColor: palette.border,\n            borderRadius: 12,\n            padding: spacing(2),\n            color: palette.text,\n            backgroundColor: palette.surfaceMuted,\n            marginBottom: spacing(1.5)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4058,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'column',\n            columnGap: spacing(1.5),\n            marginBottom: spacing(1.5)\n          },\n          children: [_jsxDEV(TextInput, {\n            placeholder: \"Qty\",\n            placeholderTextColor: palette.muted,\n            onChangeText: setQty,\n            keyboardType: \"numeric\",\n            style: {\n              flex: 1,\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              marginBottom: spacing(1.5),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4074,\n            columnNumber: 13\n          }, this), _jsxDEV(TextInput, {\n            placeholder: \"Unit price\",\n            placeholderTextColor: palette.muted,\n            onChangeText: setPrice,\n            keyboardType: \"numeric\",\n            style: {\n              flex: 1,\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              marginBottom: spacing(1.5),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4091,\n            columnNumber: 13\n          }, this), _jsxDEV(QuickAction, {\n            label: \"Add\",\n            onPress: addItem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 4073,\n          columnNumber: 11\n        }, this), items.length === 0 ? _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: \"No line items yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4111,\n          columnNumber: 13\n        }, this) : items.map((item, idx) => _jsxDEV(SurfaceCard, {\n          style: {\n            marginBottom: spacing(1.5)\n          },\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.text,\n              fontWeight: '600'\n            },\n            children: item.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4115,\n            columnNumber: 17\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.5)\n            },\n            children: [\"Qty \", item.qty, \" x $\", parseFloat(item.unitPrice || 0).toFixed(2), \" = \", (parseFloat(item.qty || 0) * parseFloat(item.unitPrice || 0)).toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 4116,\n            columnNumber: 17\n          }, this)]\n        }, item.id || idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 4114,\n          columnNumber: 15\n        }, this)), _jsxDEV(View, {\n          style: {\n            marginTop: spacing(2),\n            borderTopWidth: 1,\n            borderTopColor: palette.border,\n            paddingTop: spacing(2)\n          },\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.muted\n            },\n            children: \"Tax rate (%)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4123,\n            columnNumber: 13\n          }, this), _jsxDEV(TextInput, {\n            value: String(taxRate),\n            onChangeText: setTaxRate,\n            keyboardType: \"numeric\",\n            placeholderTextColor: palette.muted,\n            style: {\n              marginTop: spacing(1),\n              borderWidth: 1,\n              borderColor: palette.border,\n              borderRadius: 12,\n              padding: spacing(2),\n              color: palette.text,\n              backgroundColor: palette.surfaceMuted\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4124,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: {\n              marginTop: spacing(2)\n            },\n            children: [_jsxDEV(Text, {\n              style: {\n                color: palette.text\n              },\n              children: [\"Subtotal: $\", subtotal.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 4140,\n              columnNumber: 15\n            }, this), _jsxDEV(Text, {\n              style: {\n                color: palette.text\n              },\n              children: [\"Tax: $\", tax.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 4141,\n              columnNumber: 15\n            }, this), _jsxDEV(Text, {\n              style: {\n                color: palette.text,\n                fontWeight: '700'\n              },\n              children: [\"Total: $\", total.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 4142,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 4139,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 4122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 4056,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontSize: typography.h2,\n            fontWeight: '700',\n            marginBottom: spacing(1.5)\n          },\n          children: \"Attachments & notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4148,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Internal notes\",\n          placeholderTextColor: palette.muted,\n          value: notes,\n          onChangeText: setNotes,\n          multiline: true,\n          style: {\n            borderWidth: 1,\n            borderColor: palette.border,\n            borderRadius: 12,\n            padding: spacing(2),\n            minHeight: 100,\n            color: palette.text,\n            backgroundColor: palette.surfaceMuted,\n            textAlignVertical: 'top'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4149,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            columnGap: spacing(1.5),\n            marginTop: spacing(1.5)\n          },\n          children: _jsxDEV(QuickAction, {\n            label: \"Add photo\",\n            onPress: pickPhoto\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4167,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4166,\n          columnNumber: 11\n        }, this), photoUrl ? _jsxDEV(Image, {\n          source: {\n            uri: photoUrl\n          },\n          style: {\n            height: 160,\n            borderRadius: 12,\n            marginTop: spacing(2)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4170,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 4147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 4018,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4017,\n    columnNumber: 5\n  }, this);\n}\nfunction ScheduleScreen({\n  navigation\n}) {\n  const {\n    token\n  } = useAuth();\n  const [jobs, setJobs] = useState([]);\n  const [filter, setFilter] = useState('ALL');\n  const [queueCount, setQueueCount] = useState(0);\n  const [syncing, setSyncing] = useState(false);\n  const loadQueueCount = useCallback(() => {\n    db.transaction(tx => tx.executeSql('SELECT COUNT(*) as c FROM queue', [], (_, {\n      rows\n    }) => setQueueCount(rows._array?.[0]?.c || 0)));\n  }, []);\n  const load = useCallback(async () => {\n    try {\n      const data = await api('/jobs', 'GET', null, token);\n      setJobs(data);\n      db.transaction(tx => {\n        tx.executeSql('DELETE FROM jobs_cache;');\n        data.forEach(j => tx.executeSql('INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)', [j.id, j.name || '', j.status || 'SCHEDULED', j.startDate || '', j.endDate || '', j.notes || '']));\n      });\n    } catch (e) {\n      db.transaction(tx => tx.executeSql('SELECT id, name, status, startDate, endDate, notes FROM jobs_cache', [], (_, {\n        rows\n      }) => setJobs(rows._array || [])));\n    }\n  }, [token]);\n  useEffect(() => {\n    load();\n    loadQueueCount();\n  }, [load, loadQueueCount]);\n  const filters = [{\n    key: 'ALL',\n    label: 'All'\n  }, {\n    key: 'TODAY',\n    label: 'Today'\n  }, {\n    key: 'WEEK',\n    label: 'This week'\n  }];\n  const inRange = useCallback(dateValue => {\n    if (filter === 'ALL') return true;\n    if (!dateValue) return false;\n    const today = new Date();\n    const dt = new Date(dateValue);\n    if (Number.isNaN(dt.getTime())) return false;\n    if (filter === 'TODAY') {\n      return dt.getFullYear() === today.getFullYear() && dt.getMonth() === today.getMonth() && dt.getDate() === today.getDate();\n    }\n    const start = new Date(today);\n    start.setHours(0, 0, 0, 0);\n    start.setDate(today.getDate() - today.getDay());\n    const end = new Date(start);\n    end.setDate(start.getDate() + 6);\n    return dt >= start && dt <= end;\n  }, [filter]);\n  const filteredJobs = useMemo(() => jobs.filter(job => inRange(job.startDate)).sort((a, b) => new Date(a.startDate || 0) - new Date(b.startDate || 0)), [jobs, inRange]);\n  const openJobInMaps = useCallback(job => {\n    if (!job) return;\n    const jobsite = job.Jobsite || {};\n    const addressParts = [jobsite.addressLine1, jobsite.addressLine2, [jobsite.city, jobsite.state].filter(Boolean).join(' '), jobsite.zip].filter(part => part && String(part).trim());\n    if (!addressParts.length) {\n      Alert.alert('Missing address', 'Add a jobsite address to open navigation.');\n      return;\n    }\n    const address = addressParts.join(', ');\n    Linking.openURL(`https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(address)}`);\n  }, []);\n  const optimizeRoute = useCallback(() => {\n    if (!filteredJobs.length) {\n      Alert.alert('No jobs', 'Apply filters or add jobs before optimizing a route.');\n      return;\n    }\n    const addresses = filteredJobs.map(job => {\n      const site = job.Jobsite || {};\n      const parts = [site.addressLine1, site.addressLine2, [site.city, site.state].filter(Boolean).join(' '), site.zip].filter(part => part && String(part).trim());\n      return parts.length ? parts.join(', ') : null;\n    }).filter(Boolean);\n    if (!addresses.length) {\n      Alert.alert('Missing addresses', 'Add jobsite addresses to build a route.');\n      return;\n    }\n    if (addresses.length === 1) {\n      Linking.openURL(`https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(addresses[0])}`);\n      return;\n    }\n    const origin = addresses[0];\n    const destination = addresses[addresses.length - 1];\n    const waypointsRaw = addresses.slice(1, -1);\n    let url = `https://www.google.com/maps/dir/?api=1&origin=${encodeURIComponent(origin)}&destination=${encodeURIComponent(destination)}`;\n    if (waypointsRaw.length) {\n      url += `&waypoints=${waypointsRaw.map(addr => encodeURIComponent(addr)).join('|')}`;\n    }\n    Linking.openURL(url);\n  }, [filteredJobs]);\n  const techSummary = useMemo(() => {\n    const buckets = {};\n    filteredJobs.forEach(job => {\n      const tech = job?.assignedTech;\n      const key = tech?.fullName || tech?.email || 'Unassigned';\n      buckets[key] = (buckets[key] || 0) + 1;\n    });\n    return Object.entries(buckets);\n  }, [filteredJobs]);\n  const handleSync = useCallback(async () => {\n    setSyncing(true);\n    try {\n      await processQueue(token);\n      await load();\n      loadQueueCount();\n    } finally {\n      setSyncing(false);\n    }\n  }, [token, load, loadQueueCount]);\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(6)\n      },\n      children: [_jsxDEV(Text, {\n        style: {\n          color: palette.text,\n          fontSize: typography.h1,\n          fontWeight: '700',\n          marginBottom: spacing(2)\n        },\n        children: \"Schedule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 4309,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          columnGap: spacing(1),\n          rowGap: spacing(1.5),\n          marginBottom: spacing(2)\n        },\n        children: filters.map(option => _jsxDEV(QuickAction, {\n          label: option.label,\n          tone: filter === option.key ? 'primary' : 'muted',\n          onPress: () => setFilter(option.key)\n        }, option.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4312,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 4310,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3),\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        children: [_jsxDEV(View, {\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.text,\n              fontWeight: '600'\n            },\n            children: \"Offline queue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4322,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.5)\n            },\n            children: [queueCount, \" items waiting to sync\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 4323,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 4321,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            columnGap: spacing(1),\n            rowGap: spacing(1)\n          },\n          children: [_jsxDEV(QuickAction, {\n            label: syncing ? 'Syncing...' : 'Sync now',\n            tone: syncing ? 'muted' : 'primary',\n            onPress: syncing ? undefined : handleSync\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4326,\n            columnNumber: 13\n          }, this), _jsxDEV(QuickAction, {\n            label: \"Optimize route\",\n            tone: \"muted\",\n            onPress: optimizeRoute\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4327,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 4325,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 4320,\n        columnNumber: 9\n      }, this), techSummary.length ? _jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontWeight: '600',\n            marginBottom: spacing(1)\n          },\n          children: \"Technician availability\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4332,\n          columnNumber: 13\n        }, this), techSummary.map(([name, count]) => _jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            marginTop: spacing(0.5)\n          },\n          children: [_jsxDEV(Text, {\n            style: {\n              color: palette.muted\n            },\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4335,\n            columnNumber: 17\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.text\n            },\n            children: [count, \" job\", count === 1 ? '' : 's']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 4336,\n            columnNumber: 17\n          }, this)]\n        }, name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 4334,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 4331,\n        columnNumber: 11\n      }, this) : null, filteredJobs.length === 0 ? _jsxDEV(SurfaceCard, {\n        children: _jsxDEV(Text, {\n          style: {\n            color: palette.muted\n          },\n          children: [\"No jobs \", filter !== 'ALL' ? 'in this range' : 'scheduled yet', \". Convert a lead or create a job to populate your schedule.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 4344,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 4343,\n        columnNumber: 11\n      }, this) : filteredJobs.map(job => {\n        const jobsite = job.Jobsite || {};\n        const addressParts = [jobsite.addressLine1, jobsite.addressLine2, [jobsite.city, jobsite.state].filter(Boolean).join(', '), jobsite.zip].filter(Boolean);\n        const address = addressParts.join(', ');\n        const startLabel = job.startDate ? `Starts ${formatDate(job.startDate)}` : 'No start date';\n        const endLabel = job.endDate ? ` - Due ${formatDate(job.endDate)}` : '';\n        const assignedTech = job.assignedTech;\n        return _jsxDEV(SurfaceCard, {\n          style: {\n            marginBottom: spacing(2)\n          },\n          children: [_jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center'\n            },\n            children: [_jsxDEV(Text, {\n              style: {\n                color: palette.text,\n                fontSize: typography.h2,\n                fontWeight: '600'\n              },\n              children: job.name || `Job #${job.id}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4362,\n              columnNumber: 19\n            }, this), _jsxDEV(StatusPill, {\n              status: job.status || 'SCHEDULED'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4363,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 4361,\n            columnNumber: 17\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.5)\n            },\n            children: [startLabel, endLabel]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 4365,\n            columnNumber: 17\n          }, this), address ? _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(1)\n            },\n            children: address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4368,\n            columnNumber: 28\n          }, this) : null, assignedTech ? _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(0.5)\n            },\n            children: [\"Assigned to \", assignedTech.fullName || assignedTech.email || 'Tech']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 4370,\n            columnNumber: 19\n          }, this) : null, job.notes ? _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              marginTop: spacing(1)\n            },\n            children: job.notes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4374,\n            columnNumber: 30\n          }, this) : null, _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              flexWrap: 'wrap',\n              columnGap: spacing(1),\n              rowGap: spacing(1),\n              marginTop: spacing(2)\n            },\n            children: [address ? _jsxDEV(QuickAction, {\n              label: \"Map\",\n              tone: \"muted\",\n              onPress: () => openJobInMaps(job)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4376,\n              columnNumber: 30\n            }, this) : null, _jsxDEV(QuickAction, {\n              label: \"Open job\",\n              onPress: () => navigation.navigate('JobDetail', {\n                jobId: job.id\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4377,\n              columnNumber: 19\n            }, this), _jsxDEV(QuickAction, {\n              label: \"View tasks\",\n              onPress: () => navigation.navigate('JobDetail', {\n                jobId: job.id,\n                tab: 'tasks'\n              }),\n              tone: \"muted\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4378,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 4375,\n            columnNumber: 17\n          }, this)]\n        }, job.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 4360,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 4308,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4307,\n    columnNumber: 5\n  }, this);\n}\nfunction ProfileScreen({\n  navigation\n}) {\n  const {\n    setToken,\n    user\n  } = useAuth();\n  const isAdmin = (user?.role || '').toUpperCase() === 'ADMIN';\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: {\n        paddingHorizontal: spacing(2),\n        paddingVertical: spacing(2),\n        paddingBottom: spacing(6)\n      },\n      children: [_jsxDEV(View, {\n        style: {\n          marginBottom: spacing(2)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.ink,\n            fontSize: typography.h1,\n            fontWeight: '700'\n          },\n          children: \"Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4395,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(0.5)\n          },\n          children: \"Keep your access secure and your team aligned.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4396,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 4394,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        style: {\n          marginBottom: spacing(3)\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontSize: typography.small,\n            textTransform: 'uppercase',\n            fontWeight: '600'\n          },\n          children: \"Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4399,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.text,\n            fontSize: typography.h2,\n            fontWeight: '700',\n            marginTop: spacing(1)\n          },\n          children: user?.name || user?.fullName || 'Team member'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4400,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(0.5)\n          },\n          children: user?.email || 'No email on file'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4401,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(0.5)\n          },\n          children: [\"Role: \", user?.role || 'TECH']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 4402,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 4398,\n        columnNumber: 9\n      }, this), _jsxDEV(SurfaceCard, {\n        children: [_jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            fontSize: typography.small,\n            textTransform: 'uppercase',\n            fontWeight: '600',\n            marginBottom: spacing(1.5)\n          },\n          children: \"Actions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4406,\n          columnNumber: 11\n        }, this), isAdmin ? _jsxDEV(View, {\n          style: {\n            marginBottom: spacing(1.5)\n          },\n          children: _jsxDEV(QuickAction, {\n            label: \"Manage users\",\n            onPress: () => navigation.navigate('UsersAdmin')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4409,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4408,\n          columnNumber: 13\n        }, this) : null, _jsxDEV(QuickAction, {\n          label: \"Sign out\",\n          tone: \"danger\",\n          onPress: () => setToken(null)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4412,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 4405,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 4393,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4392,\n    columnNumber: 5\n  }, this);\n}\nconst Stack = createNativeStackNavigator();\nconst Tabs = createBottomTabNavigator();\nfunction TabsNav() {\n  const {\n    user\n  } = useAuth();\n  const isAdmin = (user?.role || '').toUpperCase() === 'ADMIN';\n  const {\n    width\n  } = useWindowDimensions();\n  const isCompact = Platform.OS !== 'web' ? true : width < 768;\n  const hideTabs = isCompact;\n  return _jsxDEV(Tabs.Navigator, {\n    screenOptions: {\n      headerShown: false,\n      tabBarActiveTintColor: palette.primary,\n      tabBarStyle: {\n        backgroundColor: palette.surface,\n        display: hideTabs ? 'none' : 'flex'\n      }\n    },\n    children: [_jsxDEV(Tabs.Screen, {\n      name: \"Dashboard\",\n      component: DashboardScreen,\n      options: {\n        title: 'Home'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4435,\n      columnNumber: 7\n    }, this), _jsxDEV(Tabs.Screen, {\n      name: \"Leads\",\n      component: LeadsScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4436,\n      columnNumber: 7\n    }, this), _jsxDEV(Tabs.Screen, {\n      name: \"Jobs\",\n      component: JobsKanbanScreen,\n      options: {\n        title: 'Jobs'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4437,\n      columnNumber: 7\n    }, this), isAdmin ? _jsxDEV(Tabs.Screen, {\n      name: \"Invoices\",\n      component: InvoicesScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4438,\n      columnNumber: 18\n    }, this) : null, _jsxDEV(Tabs.Screen, {\n      name: \"Schedule\",\n      component: ScheduleScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4439,\n      columnNumber: 7\n    }, this), _jsxDEV(Tabs.Screen, {\n      name: \"Profile\",\n      component: ProfileScreen,\n      options: {\n        title: \"Profile\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4440,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 4428,\n    columnNumber: 5\n  }, this);\n}\nfunction MobileHeader({\n  currentRoute,\n  onNavigate,\n  isAdmin\n}) {\n  const [menuVisible, setMenuVisible] = useState(false);\n  const activeRoute = useMemo(() => {\n    if (currentRoute === 'JobDetail') return 'Jobs';\n    return currentRoute;\n  }, [currentRoute]);\n  const menuItems = useMemo(() => {\n    const items = [{\n      label: 'Dashboard',\n      route: 'Dashboard'\n    }, {\n      label: 'Leads',\n      route: 'Leads'\n    }, {\n      label: 'Jobs',\n      route: 'Jobs'\n    }];\n    if (isAdmin) {\n      items.push({\n        label: 'Invoices',\n        route: 'Invoices'\n      });\n    }\n    items.push({\n      label: 'Schedule',\n      route: 'Schedule'\n    }, {\n      label: 'Profile',\n      route: 'Profile'\n    });\n    if (isAdmin) {\n      items.push({\n        label: 'Manage users',\n        route: 'UsersAdmin'\n      });\n    }\n    return items;\n  }, [isAdmin]);\n  const handleSelect = useCallback(route => {\n    setMenuVisible(false);\n    onNavigate(route);\n  }, [onNavigate]);\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(SafeAreaView, {\n      style: {\n        backgroundColor: palette.surface\n      },\n      children: _jsxDEV(View, {\n        style: {\n          paddingHorizontal: spacing(2),\n          paddingVertical: spacing(1.5),\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'space-between'\n        },\n        children: [_jsxDEV(TouchableOpacity, {\n          onPress: () => setMenuVisible(true),\n          accessibilityLabel: \"Open navigation menu\",\n          accessibilityRole: \"button\",\n          style: {\n            padding: spacing(1)\n          },\n          children: [_jsxDEV(View, {\n            style: {\n              width: 24,\n              height: 2,\n              backgroundColor: palette.ink,\n              borderRadius: 999,\n              marginBottom: 4\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4486,\n            columnNumber: 15\n          }, this), _jsxDEV(View, {\n            style: {\n              width: 24,\n              height: 2,\n              backgroundColor: palette.ink,\n              borderRadius: 999,\n              marginBottom: 4\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4487,\n            columnNumber: 15\n          }, this), _jsxDEV(View, {\n            style: {\n              width: 24,\n              height: 2,\n              backgroundColor: palette.ink,\n              borderRadius: 999\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4488,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 4480,\n          columnNumber: 13\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.ink,\n            fontSize: typography.h1,\n            fontWeight: '700'\n          },\n          children: \"Precision Tracker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4490,\n          columnNumber: 13\n        }, this), _jsxDEV(View, {\n          style: {\n            width: 24\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4491,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 4479,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4478,\n      columnNumber: 9\n    }, this), _jsxDEV(Modal, {\n      visible: menuVisible,\n      animationType: \"fade\",\n      transparent: true,\n      onRequestClose: () => setMenuVisible(false),\n      children: _jsxDEV(View, {\n        style: {\n          flex: 1,\n          backgroundColor: 'rgba(15,23,42,0.45)',\n          justifyContent: 'flex-start',\n          padding: spacing(3)\n        },\n        children: _jsxDEV(View, {\n          style: {\n            backgroundColor: palette.surface,\n            borderRadius: 16,\n            padding: spacing(2.5)\n          },\n          children: [_jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              marginBottom: spacing(2)\n            },\n            children: [_jsxDEV(Text, {\n              style: {\n                color: palette.text,\n                fontSize: typography.h2,\n                fontWeight: '700'\n              },\n              children: \"Navigate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4503,\n              columnNumber: 15\n            }, this), _jsxDEV(TouchableOpacity, {\n              onPress: () => setMenuVisible(false),\n              accessibilityRole: \"button\",\n              accessibilityLabel: \"Close menu\",\n              children: _jsxDEV(Text, {\n                style: {\n                  color: palette.muted,\n                  fontWeight: '600'\n                },\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 4505,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4504,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 4502,\n            columnNumber: 13\n          }, this), menuItems.map(item => {\n            const selected = activeRoute === item.route;\n            return _jsxDEV(TouchableOpacity, {\n              onPress: () => handleSelect(item.route),\n              activeOpacity: 0.85,\n              style: {\n                paddingVertical: spacing(1.25),\n                paddingHorizontal: spacing(1.5),\n                borderRadius: 12,\n                backgroundColor: selected ? 'rgba(16,185,129,0.12)' : palette.surfaceMuted,\n                marginBottom: spacing(1)\n              },\n              children: _jsxDEV(Text, {\n                style: {\n                  color: selected ? palette.primaryStrong : palette.text,\n                  fontWeight: '600',\n                  fontSize: typography.body\n                },\n                children: item.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 4523,\n                columnNumber: 19\n              }, this)\n            }, item.route, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4511,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 4501,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 4500,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4494,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\nfunction LoginScreen({\n  navigation\n}) {\n  const [email, setEmail] = useState('admin@example.com');\n  const [password, setPassword] = useState('test123');\n  const [busy, setBusy] = useState(false);\n  const {\n    setToken,\n    setUser\n  } = useAuth();\n  async function login() {\n    try {\n      setBusy(true);\n      const res = await fetch(`${API_URL}/auth/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await res.json();\n      if (!res.ok) throw new Error(data?.message || data?.error || 'Login failed');\n      const tok = data.token || data.accessToken;\n      if (!tok) throw new Error('No token returned from server');\n      const normalizedUser = data.user ? Object.assign({}, data.user, {\n        role: normalizeRole(data.user.role)\n      }) : {\n        email,\n        role: 'ADMIN',\n        name: 'Admin'\n      };\n      setToken(tok);\n      setUser(normalizedUser);\n      try {\n        await SecureStore.setItemAsync('auth_token', tok);\n        await SecureStore.setItemAsync('auth_user', JSON.stringify(normalizedUser));\n      } catch {}\n      Alert.alert('Welcome back', 'Precision in every project.');\n    } catch (e) {\n      Alert.alert('Error', e.message);\n    } finally {\n      setBusy(false);\n    }\n  }\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        padding: spacing(3)\n      },\n      children: _jsxDEV(SurfaceCard, {\n        style: {\n          padding: spacing(3),\n          borderRadius: 20\n        },\n        children: [_jsxDEV(View, {\n          style: {\n            width: spacing(5),\n            height: spacing(5),\n            borderRadius: 14,\n            backgroundColor: palette.ink,\n            alignItems: 'center',\n            justifyContent: 'center',\n            marginBottom: spacing(2)\n          },\n          children: _jsxDEV(Text, {\n            style: {\n              color: '#FFFFFF',\n              fontWeight: '800',\n              fontSize: typography.h2\n            },\n            children: \"PT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4583,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4582,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.ink,\n            fontSize: 30,\n            fontWeight: '800',\n            lineHeight: lineHeightFor(30)\n          },\n          children: \"Precision Tracker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4585,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(1),\n            lineHeight: lineHeightFor(typography.body)\n          },\n          children: \"Precision in every project. Sign in to keep your crews aligned and closing work.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4586,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            marginTop: spacing(3)\n          },\n          children: [_jsxDEV(FormInput, {\n            placeholder: \"Work email\",\n            autoCapitalize: \"none\",\n            autoCorrect: false,\n            keyboardType: \"email-address\",\n            value: email,\n            onChangeText: setEmail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4590,\n            columnNumber: 13\n          }, this), _jsxDEV(FormInput, {\n            placeholder: \"Password\",\n            secureTextEntry: true,\n            value: password,\n            onChangeText: setPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4598,\n            columnNumber: 13\n          }, this), _jsxDEV(TouchableOpacity, {\n            onPress: login,\n            activeOpacity: 0.85,\n            disabled: busy,\n            style: {\n              backgroundColor: palette.primary,\n              paddingVertical: spacing(2),\n              borderRadius: 12,\n              alignItems: 'center',\n              marginTop: spacing(1),\n              opacity: busy ? 0.7 : 1\n            },\n            children: _jsxDEV(Text, {\n              style: {\n                color: '#FFFFFF',\n                fontWeight: '700',\n                fontSize: typography.body\n              },\n              children: busy ? 'Signing in…' : 'Sign in'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4617,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4604,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: {\n              color: palette.muted,\n              fontSize: typography.small,\n              marginTop: spacing(2)\n            },\n            children: \"Built for professionals who don\\u2019t miss details.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4621,\n            columnNumber: 13\n          }, this), _jsxDEV(TouchableOpacity, {\n            onPress: () => navigation.navigate('Register'),\n            accessibilityRole: \"button\",\n            style: {\n              marginTop: spacing(2),\n              alignItems: 'center'\n            },\n            children: _jsxDEV(Text, {\n              style: {\n                color: palette.primaryStrong,\n                fontWeight: '600'\n              },\n              children: \"Need an account? Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4629,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4624,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 4589,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 4581,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4580,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4579,\n    columnNumber: 5\n  }, this);\n}\nfunction RegisterScreen({\n  navigation\n}) {\n  const [fullName, setFullName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirm, setConfirm] = useState('');\n  const [busy, setBusy] = useState(false);\n  const submit = async () => {\n    const trimmedEmail = email.trim().toLowerCase();\n    if (!trimmedEmail) {\n      Alert.alert('Missing email', 'Enter your work email to create an account.');\n      return;\n    }\n    if (!password || password.length < 6) {\n      Alert.alert('Password too short', 'Use at least 6 characters so your account stays secure.');\n      return;\n    }\n    if (password !== confirm) {\n      Alert.alert('Passwords do not match', 'Double-check your password confirmation.');\n      return;\n    }\n    try {\n      setBusy(true);\n      await api('/auth/register', 'POST', {\n        email: trimmedEmail,\n        password,\n        fullName: fullName.trim() || undefined,\n        role: 'ADMIN'\n      });\n      Alert.alert('Account created', 'Sign in with your new credentials.');\n      navigation.goBack();\n    } catch (e) {\n      Alert.alert('Error', e.message || 'Unable to register. Try again or contact support.');\n    } finally {\n      setBusy(false);\n    }\n  };\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: palette.background\n    },\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: {\n        flexGrow: 1,\n        justifyContent: 'center',\n        padding: spacing(3)\n      },\n      children: _jsxDEV(SurfaceCard, {\n        style: {\n          padding: spacing(3),\n          borderRadius: 20\n        },\n        children: [_jsxDEV(View, {\n          style: {\n            width: spacing(5),\n            height: spacing(5),\n            borderRadius: 14,\n            backgroundColor: palette.ink,\n            alignItems: 'center',\n            justifyContent: 'center',\n            marginBottom: spacing(2)\n          },\n          children: _jsxDEV(Text, {\n            style: {\n              color: '#FFFFFF',\n              fontWeight: '800',\n              fontSize: typography.h2\n            },\n            children: \"PT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4681,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4680,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.ink,\n            fontSize: 26,\n            fontWeight: '800',\n            lineHeight: lineHeightFor(26)\n          },\n          children: \"Create your workspace\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4683,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: {\n            color: palette.muted,\n            marginTop: spacing(1),\n            lineHeight: lineHeightFor(typography.body)\n          },\n          children: \"We\\u2019ll set up Precision Tracker so your crew can hit the ground running.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4686,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            marginTop: spacing(3)\n          },\n          children: [_jsxDEV(FormInput, {\n            placeholder: \"Full name\",\n            value: fullName,\n            onChangeText: setFullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4691,\n            columnNumber: 13\n          }, this), _jsxDEV(FormInput, {\n            placeholder: \"Work email\",\n            autoCapitalize: \"none\",\n            autoCorrect: false,\n            keyboardType: \"email-address\",\n            value: email,\n            onChangeText: setEmail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4696,\n            columnNumber: 13\n          }, this), _jsxDEV(FormInput, {\n            placeholder: \"Password (min 6 characters)\",\n            secureTextEntry: true,\n            value: password,\n            onChangeText: setPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4704,\n            columnNumber: 13\n          }, this), _jsxDEV(FormInput, {\n            placeholder: \"Confirm password\",\n            secureTextEntry: true,\n            value: confirm,\n            onChangeText: setConfirm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4710,\n            columnNumber: 13\n          }, this), _jsxDEV(TouchableOpacity, {\n            onPress: submit,\n            activeOpacity: 0.85,\n            disabled: busy,\n            style: {\n              backgroundColor: palette.primary,\n              paddingVertical: spacing(2),\n              borderRadius: 12,\n              alignItems: 'center',\n              marginTop: spacing(1),\n              opacity: busy ? 0.7 : 1\n            },\n            children: _jsxDEV(Text, {\n              style: {\n                color: '#FFFFFF',\n                fontWeight: '700',\n                fontSize: typography.body\n              },\n              children: busy ? 'Creating account…' : 'Register'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4729,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4716,\n            columnNumber: 13\n          }, this), _jsxDEV(TouchableOpacity, {\n            onPress: () => navigation.goBack(),\n            accessibilityRole: \"button\",\n            style: {\n              marginTop: spacing(2),\n              alignItems: 'center'\n            },\n            children: _jsxDEV(Text, {\n              style: {\n                color: palette.muted,\n                fontWeight: '600'\n              },\n              children: \"Back to sign in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4738,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4733,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 4690,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 4679,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4678,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4677,\n    columnNumber: 5\n  }, this);\n}\nexport default function App() {\n  const [token, setToken] = useState(null);\n  const [user, setUser] = useState(null);\n  const [booting, setBooting] = useState(true);\n  const navigationRef = useRef(null);\n  const [currentRoute, setCurrentRoute] = useState('Dashboard');\n  const {\n    width\n  } = useWindowDimensions();\n  const isCompactLayout = Platform.OS !== 'web' ? true : width < 768;\n  useEffect(() => {\n    let mounted = true;\n    (async () => {\n      try {\n        const [tok, usr] = await Promise.all([SecureStore.getItemAsync('auth_token'), SecureStore.getItemAsync('auth_user')]);\n        if (mounted && tok) {\n          setToken(tok);\n          if (usr) {\n            const parsed = JSON.parse(usr);\n            parsed.role = normalizeRole(parsed.role);\n            setUser(parsed);\n          }\n        }\n      } catch {} finally {\n        if (mounted) setBooting(false);\n      }\n    })();\n    return () => {\n      mounted = false;\n    };\n  }, []);\n  const authValue = {\n    token,\n    setToken: t => {\n      setToken(t);\n      if (!t) {\n        try {\n          SecureStore.deleteItemAsync('auth_token');\n          SecureStore.deleteItemAsync('auth_user');\n        } catch {}\n      }\n    },\n    user,\n    setUser\n  };\n  const updateCurrentRoute = useCallback(() => {\n    if (!navigationRef.current) return;\n    const current = navigationRef.current.getCurrentRoute();\n    if (!current) return;\n    let name = current.name;\n    let state = current.state;\n    while (state && typeof state.index === 'number' && state.routes && state.routes[state.index]) {\n      const nested = state.routes[state.index];\n      name = nested.name;\n      state = nested.state;\n    }\n    if (name) setCurrentRoute(name);\n  }, []);\n  const handleNavigate = useCallback(routeName => {\n    if (!navigationRef.current) return;\n    const tabRoutes = ['Dashboard', 'Leads', 'Jobs', 'Invoices', 'Schedule', 'Profile'];\n    if (tabRoutes.includes(routeName)) {\n      navigationRef.current.navigate('Tabs', {\n        screen: routeName\n      });\n    } else {\n      navigationRef.current.navigate(routeName);\n    }\n  }, []);\n  if (booting) {\n    return _jsxDEV(SafeAreaView, {\n      style: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: _jsxDEV(Text, {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 4816,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4815,\n      columnNumber: 7\n    }, this);\n  }\n  return _jsxDEV(AuthContext.Provider, {\n    value: authValue,\n    children: _jsxDEV(View, {\n      style: {\n        flex: 1,\n        backgroundColor: palette.background\n      },\n      children: [isCompactLayout && token ? _jsxDEV(MobileHeader, {\n        currentRoute: currentRoute,\n        onNavigate: handleNavigate,\n        isAdmin: (user?.role || '').toUpperCase() === 'ADMIN'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 4825,\n        columnNumber: 11\n      }, this) : null, _jsxDEV(View, {\n        style: {\n          flex: 1\n        },\n        children: _jsxDEV(NavigationContainer, {\n          ref: navigationRef,\n          onReady: updateCurrentRoute,\n          onStateChange: updateCurrentRoute,\n          children: !token ? _jsxDEV(Stack.Navigator, {\n            children: [_jsxDEV(Stack.Screen, {\n              name: \"Login\",\n              component: LoginScreen,\n              options: {\n                headerShown: false\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4839,\n              columnNumber: 19\n            }, this), _jsxDEV(Stack.Screen, {\n              name: \"Register\",\n              component: RegisterScreen,\n              options: {\n                title: 'Create account'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4840,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 4838,\n            columnNumber: 17\n          }, this) : _jsxDEV(Stack.Navigator, {\n            children: [_jsxDEV(Stack.Screen, {\n              name: \"Tabs\",\n              component: TabsNav,\n              options: {\n                headerShown: false\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4844,\n              columnNumber: 19\n            }, this), _jsxDEV(Stack.Screen, {\n              name: \"NewLead\",\n              component: NewLeadScreen,\n              options: {\n                title: 'New Lead'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4845,\n              columnNumber: 17\n            }, this), _jsxDEV(Stack.Screen, {\n              name: \"EstimateEditor\",\n              component: EstimateEditorScreen,\n              options: {\n                title: 'Estimate'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4846,\n              columnNumber: 17\n            }, this), _jsxDEV(Stack.Screen, {\n              name: \"Signature\",\n              component: SignatureScreen,\n              options: {\n                title: 'Signature'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4847,\n              columnNumber: 17\n            }, this), _jsxDEV(Stack.Screen, {\n              name: \"UsersAdmin\",\n              component: UsersAdminScreen,\n              options: {\n                title: 'Users (Admin)'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4848,\n              columnNumber: 17\n            }, this), _jsxDEV(Stack.Screen, {\n              name: \"JobDetail\",\n              component: JobDetailScreen,\n              options: {\n                title: 'Job'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4849,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 4843,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4832,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 4831,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 4823,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4822,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"names":["React","useEffect","useState","createContext","useContext","useRef","useCallback","useMemo","NavigationContainer","useFocusEffect","createNativeStackNavigator","createBottomTabNavigator","Text","TextInput","FlatList","TouchableOpacity","SafeAreaView","Alert","Image","ScrollView","RefreshControl","ActivityIndicator","Modal","useWindowDimensions","Linking","Share","ImagePicker","FileSystem","Sharing","Print","SQLite","Svg","Path","ViewShot","Platform","View","SecureStore","DateTimePicker","DateTimePickerAndroid","Buffer","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","process","env","EXPO_PUBLIC_API_URL","initOfflineTables","database","transaction","tx","executeSql","e","db","getDb","OS","fn","execAsync","runAsync","openDatabaseSync","dbHandle","normalizeRole","role","r","String","toUpperCase","includes","AuthContext","useAuth","api","path","method","body","token","headers","Object","assign","Authorization","response","fetch","JSON","stringify","undefined","networkError","Error","message","contentType","get","rawBody","text","data","parse","ok","error","status","payload","palette","background","surface","surfaceMuted","border","muted","primary","primaryStrong","success","warning","danger","info","ink","defaultTagSeeds","spacing","step","typography","h1","h2","small","lineHeightFor","fontSize","Math","round","defaultLineHeight","defaultProps","style","lineHeight","fontFamily","select","ios","android","default","color","floatingShadow","shadowColor","shadowOpacity","shadowRadius","shadowOffset","width","height","elevation","pillTone","NEW","fg","bg","label","CONTACTED","ESTIMATING","CONVERTED","CLOSED_LOST","SCHEDULED","IN_PROGRESS","COMPLETED","COMPLETE","DONE","ON_HOLD","CANCELLED","DRAFT","SENT","PART_PAID","PAID","VOID","toneMap","formInputBaseStyle","borderWidth","borderColor","borderRadius","paddingVertical","paddingHorizontal","backgroundColor","marginBottom","FormInput","forwardRef","props","ref","placeholderTextColor","fileName","_jsxFileName","lineNumber","columnNumber","displayName","formatCurrency","value","amount","Number","isNaN","toLocaleString","minimumFractionDigits","maximumFractionDigits","formatDate","d","Date","getTime","toLocaleDateString","month","day","isTaskCompleted","key","SurfaceCard","children","onPress","content","padding","activeOpacity","StatusPill","cfg","fontWeight","SummaryCard","title","subtitle","tone","colors","textTransform","marginTop","StatusCard","description","flexGrow","flexBasis","TagInput","onChange","placeholder","suggestions","draft","setDraft","focused","setFocused","tags","Array","isArray","filter","Boolean","map","tag","cleanTag","input","cleaned","replace","trim","handleChangeText","normalizedSuggestions","library","Set","forEach","seed","add","from","availableSuggestions","suggestion","some","toLowerCase","filteredSuggestions","query","results","slice","shouldShowSuggestions","length","handleAdd","exists","existing","handleSubmit","handleRemove","next","entry","handleSelectSuggestion","handleBlur","setTimeout","flexDirection","flexWrap","columnGap","rowGap","alignItems","marginLeft","onChangeText","onSubmitEditing","flex","autoCapitalize","autoCorrect","onFocus","onBlur","QuickAction","paddingTop","SectionHeader","actionLabel","onAction","justifyContent","toneStyles","textColor","toInputDate","dateValue","yyyy","getFullYear","mm","getMonth","padStart","dd","getDate","parseInputDate","parsed","deriveLeadTitle","lead","customerName","Customer","name","firstLine","split","id","DateInputField","minimumDate","maximumDate","iosPickerVisible","setIosPickerVisible","isWeb","toDateOnly","datePart","normalizedValue","minDateString","maxDateString","displayLabel","applyDate","selectedDate","handleManualChange","openPicker","baseDate","open","mode","event","selected","type","containerStyle","nativeEvent","target","min","max","display","TECH_ASSIGN_ROLES","TechSelector","team","onSelect","allowAllRoles","allowClear","options","normalized","member","renderLabel","fullName","email","shortLabel","DashboardScreen","navigation","user","loading","setLoading","refreshing","setRefreshing","leads","setLeads","jobs","setJobs","tasks","setTasks","invoiceSummary","setInvoiceSummary","lastUpdated","setLastUpdated","isAdmin","jobLookup","job","loadData","isPullRefresh","fetchLeads","filtered","item","l","Promise","resolve","_","rows","fallback","_array","fetchJobs","j","startDate","endDate","notes","fetchTasks","t","jobId","dueDate","fetchInvoiceSummary","all","onRefresh","newLeads","activeJobs","openTasks","outstandingValue","outstanding","collectedValue","collected","overdueCount","overdueTasks","today","setHours","task","due","statusCards","downloadReport","format","endpoint","filename","now","extension","mimeType","blob","Blob","url","URL","createObjectURL","anchor","document","createElement","href","download","click","revokeObjectURL","alert","shareError","cacheDirectory","fileUri","writeAsStringAsync","encoding","EncodingType","UTF8","sharingSupported","isAvailableAsync","shareAsync","dialogTitle","share","topLeads","topJobs","nextTasks","contentContainerStyle","paddingBottom","refreshControl","tintColor","navigate","focus","card","minWidth","idx","startLabel","endLabel","join","numberOfLines","tab","leadId","textAlign","toLocaleTimeString","hour","minute","SignaturePad","onCapturePng","points","setPoints","setPath","shotRef","quality","result","onStartShouldSetResponder","onResponderMove","x","locationX","y","locationY","p","onResponderRelease","base64","current","capture","stroke","strokeWidth","fill","SignatureScreen","route","estimateId","params","sigPng","setSigPng","save","resp","signaturePngUrl","paymentLink","goBack","userRoleOptions","invoiceStatusOptions","UsersAdminScreen","users","setUsers","setEmail","setFullName","setRole","inviting","setInviting","load","resetForm","invite","trimmedEmail","trimmedName","inviteInfo","invitation","tempPassword","temporaryPassword","sent","mock","promote","newRole","remove","renderRolePill","roleCfg","find","option","renderRoleSelector","selectedRole","keyExtractor","u","ListHeaderComponent","keyboardType","disabled","opacity","ListEmptyComponent","renderItem","normalizedRole","InvoicesScreen","summary","setSummary","invoices","setInvoices","setFilter","newInvoiceJobId","setNewInvoiceJobId","newInvoiceAmount","setNewInvoiceAmount","newInvoiceIssuedAt","setNewInvoiceIssuedAt","newInvoiceDueAt","setNewInvoiceDueAt","newInvoiceStatus","setNewInvoiceStatus","creatingInvoice","setCreatingInvoice","isRefresh","summaryData","list","nextInvoiceNumber","maxNumber","reduce","acc","inv","match","number","parseInt","prepareInvoicePdf","invoiceId","uri","cleanup","targetPath","downloadAsync","buffer","arrayBuffer","toString","Base64","shareInvoicePdf","invoice","window","printInvoicePdf","printWindow","onload","print","printAsync","resetInvoiceForm","createInvoice","amountValue","parseFloat","jobIdTrimmed","jobIdValue","issuedAt","dueAt","created","deleteInvoice","filters","filteredInvoices","drafts","draftAmount","totalCount","f","payments","Payments","sum","balance","statusKey","JobsKanbanScreen","newJobName","setNewJobName","newJobStartDate","setNewJobStartDate","newJobDueDate","setNewJobDueDate","newJobNotes","setNewJobNotes","newCustomerName","setNewCustomerName","newCustomerPhone","setNewCustomerPhone","newCustomerEmail","setNewCustomerEmail","newAddressLine1","setNewAddressLine1","newAddressLine2","setNewAddressLine2","newCity","setNewCity","newStateCode","setNewStateCode","newZip","setNewZip","jobFormTab","setJobFormTab","newJobTags","setNewJobTags","statusOrder","scrollRef","selectedTag","setSelectedTag","selectedCity","setSelectedCity","selectedUrgency","setSelectedUrgency","jobTagSuggestions","scrollTo","animated","setParams","availableTags","set","sort","a","b","localeCompare","availableCities","city","Jobsite","urgencyFilters","filteredJobsRaw","hasTag","start","diff","ceil","hasFilters","clearFilters","createJob","hasCustomer","v","hasAddress","customer","phone","billingAddress","jobsite","addressLine1","addressLine2","state","zip","prev","updateJobStatus","updated","removeJob","sortedJobs","normalize","rank","indexOf","parseDateSafe","statusDiff","startA","startB","groupedJobs","groups","currentStatus","push","statusLabel","charAt","quickStatusActions","inputStyle","jobTabs","renderJobFormFields","multiline","minHeight","textAlignVertical","group","addressParts","address","assignedTech","openJobInMaps","action","JobDetailScreen","jobName","setJobName","jobStartDate","setJobStartDate","jobEndDate","setJobEndDate","jobNotes","setJobNotes","jobCustomerName","setJobCustomerName","jobCustomerPhone","setJobCustomerPhone","jobCustomerEmail","setJobCustomerEmail","jobAddressLine1","setJobAddressLine1","jobAddressLine2","setJobAddressLine2","jobCity","setJobCity","jobStateCode","setJobStateCode","jobZip","setJobZip","jobTags","setJobTags","assignedTechId","setAssignedTechId","setTeam","assignedTechName","setAssignedTechName","assigningTech","setAssigningTech","jobAttachments","setJobAttachments","loadingAttachments","setLoadingAttachments","uploadingAttachment","setUploadingAttachment","jobActivity","setJobActivity","newActivityNote","setNewActivityNote","addingActivity","setAddingActivity","changeOrders","setCO","setTitle","amountDelta","setAmountDelta","tagSuggestions","setTagSuggestions","roleKey","canManageChangeOrders","canAssignTech","loadCO","loadJob","activityLog","assignedTo","techLabel","screen","loadTeam","active","loadAttachments","loadTagLibrary","jobsData","leadsData","addCO","saveJobDetails","deleteJob","handleAssignTech","techId","scheduleFollowUp","channel","scheduledFor","toISOString","template","console","warn","handleCallCustomer","openURL","scheduled","handleTextCustomer","encodeURIComponent","handleEmailCustomer","subject","handleOpenJobsiteMap","parts","handleUploadAttachment","permission","requestMediaLibraryPermissionsAsync","granted","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsMultipleSelection","canceled","asset","assets","readAsStringAsync","dataUrl","uploaded","entityType","entityId","fileUrl","handleDeleteAttachment","att","addActivityEntry","trimmed","note","author","createdAt","nextLog","activityItems","aTime","bTime","isImage","test","overflow","source","resizeMode","caption","uploader","borderTopWidth","borderTopColor","statusTone","amountLabel","JobTasks","JobSchedule","setDueDate","done","events","setEvents","startAt","setStartAt","endAt","setEndAt","ev","date","timePartIndex","timePart","substring","processQueue","items","q","txx","LeadsScreen","convertingId","setConvertingId","deleteLead","err","convertLead","newLeadsCount","renderLeadCard","NewLeadScreen","setDescription","setStatus","setCustomerName","customerPhone","setCustomerPhone","customerEmail","setCustomerEmail","setAddressLine1","setAddressLine2","setCity","stateCode","setStateCode","setZip","leadTags","setLeadTags","showCustomerSection","setShowCustomerSection","showJobsiteSection","setShowJobsiteSection","statuses","buildPayload","createLeadOnline","queueLead","submit","chipStyle","s","EstimateEditorScreen","setEstimateId","setItems","desc","setDesc","qty","setQty","price","setPrice","setNotes","photoUrl","setPhotoUrl","subtotal","setSubtotal","taxRate","setTaxRate","tax","setTax","total","setTotal","leadDetails","setLeadDetails","leadStatus","setLeadStatus","leadScope","setLeadScope","leadCustomerName","setLeadCustomerName","leadCustomerPhone","setLeadCustomerPhone","leadCustomerEmail","setLeadCustomerEmail","leadAddressLine1","setLeadAddressLine1","leadAddressLine2","setLeadAddressLine2","leadCity","setLeadCity","leadStateCode","setLeadStateCode","leadZip","setLeadZip","leadStatuses","loadLead","createEstimate","est","customerId","jobsiteId","ensureEstimate","rate","newSubtotal","unitPrice","newTax","addItem","targetId","saveLeadDetails","customerPayload","jobsitePayload","pickPhoto","allowsEditing","toFixed","ScheduleScreen","queueCount","setQueueCount","syncing","setSyncing","loadQueueCount","c","inRange","dt","setDate","getDay","end","filteredJobs","part","optimizeRoute","addresses","site","origin","destination","waypointsRaw","addr","techSummary","buckets","tech","entries","handleSync","count","ProfileScreen","setToken","Stack","Tabs","TabsNav","isCompact","hideTabs","Navigator","screenOptions","headerShown","tabBarActiveTintColor","tabBarStyle","Screen","component","MobileHeader","currentRoute","onNavigate","menuVisible","setMenuVisible","activeRoute","menuItems","handleSelect","accessibilityLabel","accessibilityRole","visible","animationType","transparent","onRequestClose","LoginScreen","password","setPassword","busy","setBusy","setUser","login","res","json","tok","accessToken","normalizedUser","setItemAsync","secureTextEntry","RegisterScreen","confirm","setConfirm","App","booting","setBooting","navigationRef","setCurrentRoute","isCompactLayout","mounted","usr","getItemAsync","authValue","deleteItemAsync","updateCurrentRoute","getCurrentRoute","index","routes","nested","handleNavigate","routeName","tabRoutes","Provider","onReady","onStateChange"],"sources":["C:/Users/Tyler/Downloads/PrecisionTracker-v4-wired/PrecisionTracker/mobile/App.js"],"sourcesContent":["\r\nimport React, { useEffect, useState, createContext, useContext, useRef, useCallback, useMemo } from 'react';\r\nimport { NavigationContainer, useFocusEffect } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport {Text, TextInput, FlatList, TouchableOpacity, SafeAreaView, Alert, Image, ScrollView, RefreshControl, ActivityIndicator, Modal, useWindowDimensions, Linking, Share } from 'react-native';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport * as FileSystem from 'expo-file-system';\r\nimport * as Sharing from 'expo-sharing';\r\nimport * as Print from 'expo-print';\r\nimport * as SQLite from 'expo-sqlite';\r\nimport Svg, { Path } from 'react-native-svg';\r\nimport ViewShot from 'react-native-view-shot';\r\nimport { Platform, View } from 'react-native';\r\nimport * as SecureStore from 'expo-secure-store';\r\nimport DateTimePicker, { DateTimePickerAndroid } from '@react-native-community/datetimepicker';\r\nimport { Buffer } from 'buffer';\r\n// import * as SQLite from 'expo-sqlite';\r\n\r\n\r\nconst API_URL = process.env.EXPO_PUBLIC_API_URL || 'http://localhost:4000';\r\n// const db = SQLite.openDatabase('offline.db');\r\n\r\n// function initDB(){\r\n//   db.transaction(tx => {\r\n//     tx.executeSql('CREATE TABLE IF NOT EXISTS queue (id INTEGER PRIMARY KEY AUTOINCREMENT, type TEXT, payload TEXT);');\r\n//     tx.executeSql('CREATE TABLE IF NOT EXISTS uploads (id INTEGER PRIMARY KEY AUTOINCREMENT, dataUrl TEXT);');\r\n//     tx.executeSql('CREATE TABLE IF NOT EXISTS leads_cache (id INTEGER PRIMARY KEY, description TEXT, status TEXT);');\r\n//   });\r\n// }\r\n\r\nfunction initOfflineTables(database){\r\n  try {\r\n    if (!database || typeof database.transaction !== 'function') return;\r\n    database.transaction(tx => {\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS queue (id INTEGER PRIMARY KEY AUTOINCREMENT, type TEXT, payload TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS uploads (id INTEGER PRIMARY KEY AUTOINCREMENT, dataUrl TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS leads_cache (id INTEGER PRIMARY KEY, description TEXT, status TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS jobs_cache (id INTEGER PRIMARY KEY, name TEXT, status TEXT, startDate TEXT, endDate TEXT, notes TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS tasks_cache (id INTEGER PRIMARY KEY, jobId INTEGER, title TEXT, status TEXT, dueDate TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS calendar_cache (id INTEGER PRIMARY KEY, jobId INTEGER, title TEXT, startAt TEXT, endAt TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS estimates_cache (id INTEGER PRIMARY KEY, leadId INTEGER, subtotal REAL, taxRate REAL, total REAL, status TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS estimate_items_cache (id INTEGER PRIMARY KEY, estimateId INTEGER, description TEXT, qty REAL, unitPrice REAL);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS change_orders_cache (id INTEGER PRIMARY KEY, jobId INTEGER, title TEXT, amountDelta REAL, status TEXT);');\r\n      tx.executeSql && tx.executeSql('CREATE TABLE IF NOT EXISTS users_cache (id INTEGER PRIMARY KEY, email TEXT, fullName TEXT, role TEXT);');\r\n    });\r\n  } catch (e) {\r\n    // best-effort; avoid noisy alerts in offline mode\r\n  }\r\n}\r\n\r\nlet db;\r\nexport function getDb() {\r\n  if (db) return db;\r\n\r\n  // Web: safe no-op DB\r\n  if (Platform.OS === 'web') {\r\n    db = {\r\n      transaction: (fn) => fn({ executeSql: () => {} }),\r\n      execAsync: async () => {},\r\n      runAsync: async () => {},\r\n    };\r\n    return db;\r\n  }\r\n\r\n  // SDK 51+: prefer sync, then async; DO NOT reference openDatabase (removed)\r\n  if ('openDatabaseSync' in SQLite) {\r\n    db = SQLite.openDatabaseSync('offline.db');\r\n    return db;\r\n  }\r\n\r\n  if ('openDatabaseAsync' in SQLite) {\r\n    // Minimal adapter so existing code won't crash; refactor later if needed\r\n    db = {\r\n      transaction: (fn) => fn({ executeSql: () => {} }),\r\n      execAsync: async () => {},\r\n      runAsync: async () => {},\r\n    };\r\n    return db;\r\n  }\r\n\r\n  // Safety fallback\r\n  db = {\r\n    transaction: (fn) => fn({ executeSql: () => {} }),\r\n    execAsync: async () => {},\r\n    runAsync: async () => {},\r\n  };\r\n  return db;\r\n}\r\n\r\n// DB handle\r\nconst dbHandle = getDb();\r\ninitOfflineTables(dbHandle);\r\n\r\n// ---------- Helpers ----------\r\nconst normalizeRole = (role) => {\r\n  if (!role) return 'TECH';\r\n  const r = String(role).toUpperCase();\r\n  if (['ADMIN','ESTIMATOR','SUPERVISOR','TECH'].includes(r)) return r;\r\n  if (r === 'STANDARD' || r === 'USER') return 'TECH';\r\n  return r;\r\n};\r\n\r\nconst AuthContext = createContext(null);\r\nfunction useAuth(){ return useContext(AuthContext); }\r\nasync function api(path, method='GET', body, token){\n  const headers = {\n    ...(token ? { Authorization: `Bearer ${token}` } : {}),\n    ...(body ? { 'Content-Type': 'application/json' } : {}),\n  };\n  let response;\r\n  try {\r\n    response = await fetch(`${API_URL}${path}`, {\r\n      method,\r\n      headers,\r\n      body: body ? JSON.stringify(body) : undefined,\r\n    });\r\n  } catch (networkError) {\r\n    throw new Error(networkError?.message || 'Network request failed');\r\n  }\r\n\r\n  const contentType = response.headers.get('content-type') || '';\r\n  const rawBody = await response.text();\r\n  let data = null;\r\n\r\n  if (rawBody) {\r\n    if (contentType.includes('application/json')) {\r\n      try {\r\n        data = JSON.parse(rawBody);\r\n      } catch {\r\n        data = rawBody;\r\n      }\r\n    } else {\r\n      data = rawBody;\r\n    }\r\n  }\r\n\r\n  if (!response.ok) {\n    const message =\n      (data && typeof data === 'object' && (data.error || data.message)) ||\n      (typeof data === 'string' ? data : 'Request failed');\n    const error = new Error(message);\n    error.status = response.status;\n    error.payload = data;\n    error.body = rawBody;\n    error.path = path;\n    throw error;\n  }\n\n  return data;\n}\r\n\r\n// ---------- Design tokens ----------\r\nconst palette = {\r\n  background: '#F1F5F9',\r\n  surface: '#FFFFFF',\r\n  surfaceMuted: '#E2E8F0',\r\n  border: '#CBD5E1',\r\n  text: '#0F172A',\r\n  muted: '#475569',\r\n  primary: '#10B981',\r\n  primaryStrong: '#047857',\r\n  success: '#10B981',\r\n  warning: '#FACC15',\r\n  danger: '#EF4444',\r\n  info: '#0EA5E9',\r\n  ink: '#0F172A',\r\n};\r\n\r\nconst defaultTagSeeds = ['Urgent', 'Follow-up', 'Inspection', 'Warranty', 'Priority', 'Safety', 'Internal'];\r\n\r\nconst spacing = (step = 1) => step * 8;\r\n\r\nconst typography = {\r\n  h1: 24,\r\n  h2: 18,\r\n  body: 15,\r\n  small: 12,\r\n};\r\n\r\nconst lineHeightFor = (fontSize) => Math.round(fontSize * 1.5);\r\nconst defaultLineHeight = lineHeightFor(typography.body);\r\nif (!Text.defaultProps) Text.defaultProps = {};\r\nText.defaultProps.style = {\r\n  ...(Text.defaultProps.style || {}),\r\n  lineHeight: defaultLineHeight,\r\n  fontFamily: Platform.select({ ios: 'Inter', android: 'Inter', default: 'Inter' }),\r\n  color: palette.text,\r\n};\r\n\r\nconst floatingShadow = Platform.select({\r\n  ios: { shadowColor: palette.ink, shadowOpacity: 0.08, shadowRadius: 14, shadowOffset: { width: 0, height: 6 } },\r\n  android: { elevation: 2 },\r\n  default: {},\r\n});\r\n\r\nconst pillTone = {\r\n  NEW: { fg: palette.info, bg: '#E0F2FE', label: 'New' },\r\n  CONTACTED: { fg: palette.primaryStrong, bg: '#DCFCE7', label: 'Contacted' },\r\n  ESTIMATING: { fg: '#92400E', bg: '#FEF3C7', label: 'Estimating' },\r\n  CONVERTED: { fg: palette.success, bg: '#DCFCE7', label: 'Converted' },\r\n  CLOSED_LOST: { fg: palette.muted, bg: '#E2E8F0', label: 'Lost' },\r\n  SCHEDULED: { fg: palette.primaryStrong, bg: '#D1FAE5', label: 'Scheduled' },\r\n  IN_PROGRESS: { fg: palette.info, bg: '#E0F2FE', label: 'In progress' },\r\n  COMPLETED: { fg: palette.success, bg: '#DCFCE7', label: 'Completed' },\r\n  COMPLETE: { fg: palette.success, bg: '#DCFCE7', label: 'Complete' },\r\n  DONE: { fg: palette.success, bg: '#DCFCE7', label: 'Complete' },\r\n  ON_HOLD: { fg: '#92400E', bg: '#FEF3C7', label: 'On hold' },\r\n  CANCELLED: { fg: palette.muted, bg: '#E2E8F0', label: 'Cancelled' },\r\n  DRAFT: { fg: palette.muted, bg: '#E2E8F0', label: 'Draft' },\r\n  SENT: { fg: palette.info, bg: '#E0F2FE', label: 'Sent' },\r\n  PART_PAID: { fg: '#92400E', bg: '#FEF3C7', label: 'Part paid' },\r\n  PAID: { fg: palette.success, bg: '#DCFCE7', label: 'Paid' },\r\n  VOID: { fg: palette.muted, bg: '#F8FAFC', label: 'Void' },\r\n};\r\n\r\nconst toneMap = {\r\n  primary: { fg: palette.primaryStrong, bg: '#ECFDF5' },\r\n  success: { fg: palette.success, bg: '#DCFCE7' },\r\n  warning: { fg: '#92400E', bg: '#FEF3C7' },\r\n  danger: { fg: palette.danger, bg: '#FEE2E2' },\r\n  info: { fg: palette.info, bg: '#E0F2FE' },\r\n};\r\n\r\nconst formInputBaseStyle = {\r\n  borderWidth: 1,\r\n  borderColor: palette.border,\r\n  borderRadius: 12,\r\n  paddingVertical: spacing(1.5),\r\n  paddingHorizontal: spacing(2),\r\n  color: palette.text,\r\n  backgroundColor: palette.surfaceMuted,\r\n  fontSize: typography.body,\r\n  marginBottom: spacing(1.5),\r\n};\r\n\r\nconst FormInput = React.forwardRef((props, ref) => (\r\n  <TextInput\r\n    ref={ref}\r\n    placeholderTextColor={palette.muted}\r\n    {...props}\r\n    style={[formInputBaseStyle, props.style]}\r\n  />\r\n));\r\nFormInput.displayName = 'FormInput';\r\n\r\nconst formatCurrency = (value) => {\r\n  const amount = Number(value || 0);\r\n  if (Number.isNaN(amount)) return '$0';\r\n  return `$${amount.toLocaleString(undefined, { minimumFractionDigits: amount % 1 ? 2 : 0, maximumFractionDigits: 2 })}`;\r\n};\r\n\r\nconst formatDate = (value) => {\r\n  if (!value) return null;\r\n  const d = new Date(value);\r\n  if (Number.isNaN(d.getTime())) return value;\r\n  return d.toLocaleDateString(undefined, { month: 'short', day: 'numeric' });\r\n};\r\n\r\nconst isTaskCompleted = (status) => {\r\n  if (!status) return false;\r\n  const key = String(status).toUpperCase();\r\n  return key === 'DONE' || key === 'COMPLETE';\r\n};\r\n\r\nfunction SurfaceCard({ children, style, onPress }) {\r\n  const content = (\r\n    <View\r\n      style={[\r\n        { backgroundColor: palette.surface, borderRadius: 16, borderWidth: 1, borderColor: palette.border, padding: spacing(2) },\r\n        floatingShadow,\r\n        style,\r\n      ]}\r\n    >\r\n      {children}\r\n    </View>\r\n  );\r\n  if (!onPress) return content;\r\n  return (\r\n    <TouchableOpacity activeOpacity={0.85} onPress={onPress}>\r\n      {content}\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n\r\nfunction StatusPill({ status }) {\r\n  if (!status) return null;\r\n  const key = String(status).toUpperCase();\r\n  const cfg = pillTone[key] || { fg: palette.muted, bg: '#e2e8f0', label: status };\r\n  return (\r\n    <View style={{ backgroundColor: cfg.bg, borderRadius: 999, paddingHorizontal: spacing(1.5), paddingVertical: spacing(0.5) }}>\r\n      <Text style={{ color: cfg.fg, fontSize: typography.small, fontWeight: '600' }}>{cfg.label}</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction SummaryCard({ title, value, subtitle, tone = 'primary', onPress }) {\r\n  const colors = toneMap[tone] || toneMap.primary;\r\n  return (\r\n    <SurfaceCard\r\n      onPress={onPress}\r\n      style={{ backgroundColor: colors.bg, borderColor: 'transparent', padding: spacing(2.5) }}\r\n    >\r\n      <Text style={{ color: palette.muted, fontSize: typography.small, textTransform: 'uppercase', fontWeight: '700', lineHeight: lineHeightFor(typography.small) }}>{title}</Text>\r\n      <Text style={{ color: colors.fg, fontSize: 28, fontWeight: '800', marginTop: spacing(0.5), lineHeight: lineHeightFor(28) }}>{value}</Text>\r\n      {subtitle ? <Text style={{ color: palette.muted, fontSize: typography.small, marginTop: spacing(0.5), lineHeight: lineHeightFor(typography.small) }}>{subtitle}</Text> : null}\r\n    </SurfaceCard>\r\n  );\r\n}\r\n\r\nfunction StatusCard({ label, value, description, tone = 'primary' }) {\r\n  const colors = toneMap[tone] || toneMap.primary;\r\n  return (\r\n    <SurfaceCard\r\n      style={{\r\n        backgroundColor: colors.bg,\r\n        borderColor: 'transparent',\r\n        borderWidth: 1,\r\n        paddingVertical: spacing(2),\r\n        paddingHorizontal: spacing(2.5),\r\n        flexGrow: 1,\r\n        flexBasis: '48%',\r\n      }}\r\n    >\r\n      <Text style={{ color: colors.fg, fontSize: typography.small, fontWeight: '700', textTransform: 'uppercase', lineHeight: lineHeightFor(typography.small) }}>{label}</Text>\r\n      <Text style={{ color: palette.text, fontSize: 24, fontWeight: '700', marginTop: spacing(0.5), lineHeight: lineHeightFor(24) }}>{value}</Text>\r\n      {description ? <Text style={{ color: palette.muted, fontSize: typography.small, marginTop: spacing(0.5), lineHeight: lineHeightFor(typography.small) }}>{description}</Text> : null}\r\n    </SurfaceCard>\r\n  );\r\n}\r\n\r\nfunction TagInput({ value = [], onChange, placeholder = 'Add tag', suggestions = [] }) {\r\n  const [draft, setDraft] = useState('');\r\n  const [focused, setFocused] = useState(false);\r\n  const tags = useMemo(() => {\r\n    if (!Array.isArray(value)) return [];\r\n    return value.filter(Boolean).map(tag => String(tag));\r\n  }, [value]);\r\n  const cleanTag = useCallback((input) => {\r\n    if (!input) return null;\r\n    const cleaned = String(input).replace(/[#]/g, '').trim();\r\n    if (!cleaned) return null;\r\n    return cleaned.replace(/\\s+/g, ' ');\r\n  }, []);\r\n  const handleChangeText = useCallback((text) => {\r\n    setDraft(text);\r\n    setFocused(true);\r\n  }, []);\r\n  const normalizedSuggestions = useMemo(() => {\r\nconst library = new Set();\r\n    (Array.isArray(suggestions) ? suggestions : []).forEach(seed => {\r\n      const cleaned = cleanTag(seed);\r\n      if (cleaned) library.add(cleaned);\r\n    });\r\n    tags.forEach(tag => library.add(String(tag)));\r\n    return Array.from(library);\r\n  }, [suggestions, tags, cleanTag]);\r\n  const availableSuggestions = useMemo(\r\n    () =>\r\n      normalizedSuggestions.filter(\r\n        suggestion => !tags.some(tag => tag.toLowerCase() === suggestion.toLowerCase())\r\n      ),\r\n    [normalizedSuggestions, tags]\r\n  );\r\n  const filteredSuggestions = useMemo(() => {\r\n    const query = draft.trim().toLowerCase();\r\n    const results = query\r\n      ? availableSuggestions.filter(suggestion =>\r\n          suggestion.toLowerCase().includes(query)\r\n        )\r\n      : availableSuggestions;\r\n    return results.slice(0, 6);\r\n  }, [availableSuggestions, draft]);\r\n  const shouldShowSuggestions = focused && filteredSuggestions.length > 0;\r\n  const handleAdd = useCallback(() => {\r\n    const cleaned = cleanTag(draft);\r\n    if (!cleaned) return;\r\n    const exists = tags.some(existing => existing.toLowerCase() === cleaned.toLowerCase());\r\n    if (exists) {\r\n      setDraft('');\r\n      return;\r\n    }\r\n    onChange && onChange([...tags, cleaned]);\r\n    setDraft('');\r\n    setFocused(false);\r\n  }, [draft, tags, cleanTag, onChange]);\r\n  const handleSubmit = useCallback(() => {\r\n    handleAdd();\r\n  }, [handleAdd]);\r\n  const handleRemove = useCallback((tag) => {\r\n    const next = tags.filter(entry => entry !== tag);\r\n    onChange && onChange(next);\r\n  }, [tags, onChange]);\r\n  const handleSelectSuggestion = useCallback((tag) => {\r\n    const cleaned = cleanTag(tag);\r\n    if (!cleaned) return;\r\n    const exists = tags.some(existing => existing.toLowerCase() === cleaned.toLowerCase());\r\n    if (!exists) {\r\n      onChange && onChange([...tags, cleaned]);\r\n    }\r\n    setDraft('');\r\n    setFocused(false);\r\n  }, [tags, onChange, cleanTag]);\r\n  const handleBlur = useCallback(() => {\r\n    setTimeout(() => setFocused(false), 120);\r\n  }, []);\r\n  return (\r\n    <View>\r\n      {tags.length ? (\r\n        <View style={{ flexDirection: 'row', flexWrap: 'wrap', columnGap: spacing(1), rowGap: spacing(1), marginBottom: spacing(1) }}>\r\n          {tags.map(tag => (\r\n            <TouchableOpacity\r\n              key={tag}\r\n              onPress={() => handleRemove(tag)}\r\n              activeOpacity={0.8}\r\n              style={{\r\n                flexDirection: 'row',\r\n                alignItems: 'center',\r\n                backgroundColor: '#d9f2ed',\r\n                borderRadius: 999,\r\n                paddingHorizontal: spacing(1.5),\r\n                paddingVertical: spacing(0.5),\r\n              }}\r\n            >\r\n              <Text style={{ color: palette.primaryStrong, fontWeight: '600', fontSize: typography.small }}>{`#${tag}`}</Text>\r\n              <Text style={{ color: palette.primaryStrong, marginLeft: spacing(0.5), fontSize: typography.small }}>×</Text>\r\n            </TouchableOpacity>\r\n          ))}\r\n        </View>\r\n      ) : null}\r\n      <View style={{ flexDirection: 'row', alignItems: 'center', columnGap: spacing(1) }}>\r\n        <TextInput\r\n          value={draft}\r\n          onChangeText={handleChangeText}\r\n          onSubmitEditing={handleSubmit}\r\n          placeholder={placeholder}\r\n          placeholderTextColor={palette.muted}\r\n          style={[formInputBaseStyle, { flex: 1, marginBottom: 0 }]}\r\n          autoCapitalize=\"none\"\r\n          autoCorrect={false}\r\n          onFocus={() => setFocused(true)}\r\n          onBlur={handleBlur}\r\n        />\r\n        <QuickAction label=\"Add\" onPress={handleAdd} tone=\"primary\" />\r\n      </View>\r\n      {shouldShowSuggestions ? (\r\n        <View style={{ marginTop: spacing(1), borderWidth: 1, borderColor: palette.border, borderRadius: 12, backgroundColor: palette.surface }}>\r\n          <Text style={{ color: palette.muted, fontSize: typography.small, fontWeight: '600', paddingHorizontal: spacing(1.5), paddingTop: spacing(1.25) }}>Suggestions</Text>\r\n          {filteredSuggestions.map(suggestion => (\r\n            <TouchableOpacity\r\n              key={suggestion}\r\n              onPress={() => handleSelectSuggestion(suggestion)}\r\n              activeOpacity={0.85}\r\n              style={{ paddingVertical: spacing(1.1), paddingHorizontal: spacing(1.5) }}\r\n            >\r\n              <Text style={{ color: palette.primaryStrong, fontWeight: '600' }}>{`#${suggestion}`}</Text>\r\n            </TouchableOpacity>\r\n          ))}\r\n        </View>\r\n      ) : null}\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction SectionHeader({ title, actionLabel, onAction }) {\r\n  return (\r\n    <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', marginBottom: spacing(1.5) }}>\r\n      <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight: '700', lineHeight: lineHeightFor(typography.h2) }}>{title}</Text>\r\n      {actionLabel && onAction ? (\r\n        <TouchableOpacity onPress={onAction} style={{ paddingHorizontal: spacing(1), paddingVertical: spacing(0.5) }}>\r\n          <Text style={{ color: palette.primary, fontWeight: '600', fontSize: typography.small, lineHeight: lineHeightFor(typography.small) }}>{actionLabel}</Text>\r\n        </TouchableOpacity>\r\n      ) : null}\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction QuickAction({ label, onPress, tone = 'primary' }) {\r\n  const toneStyles = (() => {\r\n    switch (tone) {\r\n      case 'danger':\r\n        return { borderColor: '#FECACA', backgroundColor: '#FEE2E2', textColor: palette.danger };\r\n      case 'success':\r\n        return { borderColor: '#A7F3D0', backgroundColor: '#DCFCE7', textColor: palette.success };\r\n      case 'warning':\r\n        return { borderColor: '#FDE68A', backgroundColor: '#FEF9C3', textColor: '#92400E' };\r\n      case 'muted':\r\n        return { borderColor: palette.border, backgroundColor: palette.surface, textColor: palette.muted };\r\n      default:\r\n        return { borderColor: palette.primary, backgroundColor: '#ECFDF5', textColor: palette.primaryStrong };\r\n    }\r\n  })();\r\n  return (\r\n    <TouchableOpacity\r\n      onPress={onPress}\r\n      activeOpacity={0.85}\r\n      style={{\r\n        borderRadius: 10,\r\n        paddingHorizontal: spacing(1.5),\r\n        paddingVertical: spacing(0.75),\r\n        borderWidth: 1,\r\n        borderColor: toneStyles.borderColor,\r\n        backgroundColor: toneStyles.backgroundColor,\r\n      }}\r\n    >\r\n      <Text style={{ color: toneStyles.textColor, fontWeight: '600', fontSize: typography.small, lineHeight: lineHeightFor(typography.small) }}>{label}</Text>\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n\r\nconst toInputDate = (dateValue) => {\r\n  const d = dateValue instanceof Date ? dateValue : new Date(dateValue);\r\n  if (Number.isNaN(d.getTime())) return '';\r\n  const yyyy = d.getFullYear();\r\n  const mm = String(d.getMonth() + 1).padStart(2, '0');\r\n  const dd = String(d.getDate()).padStart(2, '0');\r\n  return `${yyyy}-${mm}-${dd}`;\r\n};\r\n\r\nconst parseInputDate = (value) => {\r\n  if (!value) return null;\r\n  const parsed = new Date(value);\r\n  if (Number.isNaN(parsed.getTime())) return null;\r\n  return parsed;\r\n};\r\n\r\nconst deriveLeadTitle = (lead) => {\r\n  if (!lead) return 'Untitled lead';\r\n  const customerName = lead.Customer?.name;\r\n  if (customerName && customerName.trim()) return customerName.trim();\r\n  if (lead.description && lead.description.trim()) {\r\n    const firstLine = lead.description.trim().split('\\n')[0];\r\n    return firstLine.length > 60 ? `${firstLine.slice(0, 57)}...` : firstLine;\r\n  }\r\n  return `Lead ${lead.id}`;\r\n};\r\n\r\nfunction DateInputField({ value, onChange, placeholder = 'Select date', minimumDate, maximumDate, style }) {\r\n  const [iosPickerVisible, setIosPickerVisible] = useState(false);\r\n  const isWeb = Platform.OS === 'web';\r\n\r\n  const toDateOnly = (input) => {\r\n    if (!input) return '';\r\n    if (input instanceof Date) return toInputDate(input);\r\n    if (typeof input === 'string') {\r\n      const [datePart] = input.split('T');\r\n      return datePart;\r\n    }\r\n    return '';\r\n  };\r\n\r\n  const normalizedValue = toDateOnly(value);\r\n  const minDateString = minimumDate ? toDateOnly(minimumDate) : undefined;\r\n  const maxDateString = maximumDate ? toDateOnly(maximumDate) : undefined;\r\n  const parsed = parseInputDate(normalizedValue) || new Date();\r\n  const displayLabel = value ? (formatDate(value) || normalizedValue) : '';\r\n\r\n  const applyDate = (selectedDate) => {\r\n    if (!selectedDate) return;\r\n    onChange(toInputDate(selectedDate));\r\n  };\r\n\r\n  const handleManualChange = (text) => {\r\n    if (!text) {\r\n      onChange('');\r\n      return;\r\n    }\r\n    onChange(text);\r\n  };\r\n\r\n  const openPicker = () => {\r\n    if (isWeb) return;\r\n    const baseDate = parseInputDate(normalizedValue) || new Date();\r\n    if (Platform.OS === 'android') {\r\n      DateTimePickerAndroid.open({\r\n        value: baseDate,\r\n        mode: 'date',\r\n        minimumDate: minimumDate ? parseInputDate(minimumDate) || undefined : undefined,\r\n        maximumDate: maximumDate ? parseInputDate(maximumDate) || undefined : undefined,\r\n        onChange: (event, selected) => {\r\n          if (event.type === 'set' && selected) applyDate(selected);\r\n        },\r\n      });\r\n    } else {\r\n      setIosPickerVisible(true);\r\n    }\r\n  };\r\n\r\n  const containerStyle = [\r\n    { marginBottom: spacing(1.5) },\r\n    style,\r\n  ];\r\n\r\n  if (isWeb) {\r\n    return (\r\n      <View style={containerStyle}>\r\n        <TextInput\r\n          value={normalizedValue}\r\n          placeholder={placeholder}\r\n          placeholderTextColor={palette.muted}\r\n          onChangeText={handleManualChange}\r\n          onChange={event => handleManualChange(event?.nativeEvent?.text ?? event?.target?.value ?? '')}\r\n          style={[formInputBaseStyle, { marginBottom: 0 }]}\r\n          type=\"date\"\r\n          min={minDateString}\r\n          max={maxDateString}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <View style={containerStyle}>\r\n      <TouchableOpacity\r\n        onPress={openPicker}\r\n        activeOpacity={0.85}\r\n        style={{\r\n          borderWidth: 1,\r\n          borderColor: palette.border,\r\n          borderRadius: 12,\r\n          backgroundColor: palette.surfaceMuted,\r\n          flexDirection: 'row',\r\n          alignItems: 'center',\r\n          paddingHorizontal: spacing(2),\r\n          paddingVertical: spacing(1.5),\r\n        }}\r\n      >\r\n        <Text style={{ flex: 1, color: displayLabel ? palette.text : palette.muted, fontSize: typography.body }}>\r\n          {displayLabel || placeholder}\r\n        </Text>\r\n        <Text style={{ fontSize: typography.h2 - 6, color: palette.muted }}>CAL</Text>\r\n      </TouchableOpacity>\r\n      {Platform.OS === 'ios' && iosPickerVisible ? (\r\n        <DateTimePicker\r\n          value={parsed}\r\n          mode=\"date\"\r\n          display=\"inline\"\r\n          onChange={(event, selected) => {\r\n            if (event.type === 'set' && selected) {\r\n              applyDate(selected);\r\n            }\r\n            if (event.type === 'dismissed') {\r\n              setIosPickerVisible(false);\r\n              return;\r\n            }\r\n            setIosPickerVisible(false);\r\n          }}\r\n          style={{ marginTop: spacing(1) }}\r\n          minimumDate={minimumDate ? parseInputDate(minimumDate) || undefined : undefined}\r\n          maximumDate={maximumDate ? parseInputDate(maximumDate) || undefined : undefined}\r\n        />\r\n      ) : null}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst TECH_ASSIGN_ROLES = ['TECH','SUPERVISOR','ESTIMATOR'];\r\n\r\nfunction TechSelector({ team = [], value, onSelect, label, allowAllRoles, allowClear }) {\r\n  const options = useMemo(() => {\r\n    const normalized = team.map(member => ({\r\n      ...member,\r\n      role: normalizeRole(member.role),\r\n    }));\r\n    if (allowAllRoles) return normalized;\r\n    return normalized.filter(member => TECH_ASSIGN_ROLES.includes(member.role));\r\n  }, [team, allowAllRoles]);\r\n\r\n  if (!options.length) return null;\r\n\r\n  const renderLabel = label ? (\r\n    <Text style={{ color: palette.muted, fontSize: typography.small, marginBottom: spacing(1) }}>{label}</Text>\r\n  ) : null;\r\n\r\n  return (\r\n    <View style={{ marginTop: spacing(1.5) }}>\r\n      {renderLabel}\r\n      <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1) }}>\r\n        {options.map(member => {\r\n          const selected = member.id === value;\r\n          const displayName = member.fullName || member.email;\r\n          const shortLabel = displayName.length > 22 ? `${displayName.slice(0, 21)}...` : displayName;\r\n          return (\r\n            <QuickAction\r\n              key={member.id}\r\n              label={shortLabel}\r\n              tone={selected ? 'primary' : 'muted'}\r\n              onPress={() => onSelect(member.id)}\r\n            />\r\n          );\r\n        })}\r\n        {allowClear ? <QuickAction label=\"Clear\" tone=\"muted\" onPress={() => onSelect(null)} /> : null}\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction DashboardScreen({ navigation }) {\r\n  const { token, user } = useAuth();\r\n  const [loading, setLoading] = useState(true);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [leads, setLeads] = useState([]);\r\n  const [jobs, setJobs] = useState([]);\r\n  const [tasks, setTasks] = useState([]);\r\n  const [invoiceSummary, setInvoiceSummary] = useState(null);\r\n  const [lastUpdated, setLastUpdated] = useState(null);\r\n  const isAdmin = (user?.role || '').toUpperCase() === 'ADMIN';\r\n\r\n  const jobLookup = useMemo(() => {\r\n    const map = {};\r\n    for (const job of jobs) {\r\n      if (job?.id != null) {\r\n        map[job.id] = job;\r\n      }\r\n    }\r\n    return map;\r\n  }, [jobs]);\r\n\r\n  const loadData = useCallback(async (isPullRefresh = false) => {\r\n    if (!token) return;\r\n    isPullRefresh ? setRefreshing(true) : setLoading(true);\r\n\r\n    const fetchLeads = async () => {\r\n      try {\r\n        const data = await api('/leads', 'GET', null, token);\r\n        const filtered = data.filter(item => (item.status || '').toUpperCase() !== 'CONVERTED');\r\n        setLeads(filtered);\r\n        db.transaction(tx => {\r\n          tx.executeSql && tx.executeSql('DELETE FROM leads_cache;');\r\n          filtered.forEach(l =>\r\n            tx.executeSql && tx.executeSql(\r\n              'INSERT OR REPLACE INTO leads_cache (id, description, status) VALUES (?,?,?)',\r\n              [l.id, l.description || '', l.status || 'NEW']\r\n            )\r\n          );\r\n        });\r\n        return data;\r\n      } catch (e) {\r\n        return await new Promise(resolve => {\r\n          db.transaction(tx =>\r\n            tx.executeSql && tx.executeSql(\r\n              'SELECT id, description, status FROM leads_cache',\r\n              [],\r\n              (_, { rows }) => {\r\n                const fallback = (rows?._array || []).filter(item => (item.status || '').toUpperCase() !== 'CONVERTED');\r\n                setLeads(fallback);\r\n                resolve(fallback);\r\n              }\r\n            )\r\n          );\r\n        });\r\n      }\r\n    };\r\n\r\n    const fetchJobs = async () => {\r\n      try {\r\n        const data = await api('/jobs', 'GET', null, token);\r\n        setJobs(data);\r\n        db.transaction(tx => {\r\n          tx.executeSql && tx.executeSql('DELETE FROM jobs_cache;');\r\n          data.forEach(j =>\r\n            tx.executeSql && tx.executeSql(\r\n              'INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)',\r\n              [j.id, j.name || '', j.status || 'SCHEDULED', j.startDate || '', j.endDate || '', j.notes || '']\r\n            )\r\n          );\r\n        });\r\n        return data;\r\n      } catch (e) {\r\n        return await new Promise(resolve => {\r\n          db.transaction(tx =>\r\n            tx.executeSql && tx.executeSql(\r\n              'SELECT id, name, status, startDate, endDate, notes FROM jobs_cache',\r\n              [],\r\n              (_, { rows }) => {\r\n                const fallback = rows?._array || [];\r\n                setJobs(fallback);\r\n                resolve(fallback);\r\n              }\r\n            )\r\n          );\r\n        });\r\n      }\r\n    };\r\n\r\n    const fetchTasks = async () => {\r\n      try {\r\n        const data = await api('/tasks', 'GET', null, token);\r\n        setTasks(data);\r\n        db.transaction(tx => {\r\n          data.forEach(t =>\r\n            tx.executeSql && tx.executeSql(\r\n              'INSERT OR REPLACE INTO tasks_cache (id, jobId, title, status, dueDate) VALUES (?,?,?,?,?)',\r\n              [t.id, t.jobId || null, t.title || '', t.status || 'TODO', t.dueDate || '']\r\n            )\r\n          );\r\n        });\r\n        return data;\r\n      } catch (e) {\r\n        return await new Promise(resolve => {\r\n          db.transaction(tx =>\r\n            tx.executeSql && tx.executeSql(\r\n              'SELECT id, jobId, title, status, dueDate FROM tasks_cache ORDER BY id DESC',\r\n              [],\r\n              (_, { rows }) => {\r\n                const fallback = rows?._array || [];\r\n                setTasks(fallback);\r\n                resolve(fallback);\r\n              }\r\n            )\r\n          );\r\n        });\r\n      }\r\n    };\r\n\r\n    const fetchInvoiceSummary = async () => {\r\n      try {\r\n        const data = await api('/invoices/summary', 'GET', null, token);\r\n        setInvoiceSummary(data);\r\n        return data;\r\n      } catch (e) {\r\n        return null;\r\n      }\r\n    };\r\n\r\n    try {\r\n      await Promise.all([fetchLeads(), fetchJobs(), fetchTasks(), fetchInvoiceSummary()]);\r\n      setLastUpdated(new Date());\r\n    } finally {\r\n      isPullRefresh ? setRefreshing(false) : setLoading(false);\r\n    }\r\n  }, [token]);\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      loadData(false);\r\n    }, [loadData])\r\n  );\r\n\r\n  const onRefresh = useCallback(() => loadData(true), [loadData]);\r\n\r\n  const newLeads = leads.filter(l => (l.status || '').toUpperCase() === 'NEW').length;\r\n  const activeJobs = jobs.filter(j => ['SCHEDULED', 'IN_PROGRESS'].includes((j.status || '').toUpperCase())).length;\r\n  const openTasks = tasks.filter(t => !isTaskCompleted(t.status)).length;\r\n  const outstandingValue = invoiceSummary?.outstanding || 0;\r\n  const collectedValue = invoiceSummary?.collected || 0;\r\n  const overdueCount = invoiceSummary?.overdueCount || 0;\r\n  const overdueTasks = useMemo(() => {\r\n    const today = new Date();\r\n    today.setHours(0, 0, 0, 0);\r\n    return tasks.filter(task => {\r\n      if (!task?.dueDate || isTaskCompleted(task.status)) return false;\r\n      const due = new Date(task.dueDate);\r\n      if (Number.isNaN(due.getTime())) return false;\r\n      return due < today;\r\n    }).length;\r\n  }, [tasks]);\r\n  const statusCards = useMemo(() => [\r\n    {\r\n      label: 'Active',\r\n      value: String(activeJobs),\r\n      description: 'Jobs in progress or scheduled',\r\n      tone: 'primary',\r\n    },\r\n    {\r\n      label: 'Pending',\r\n      value: formatCurrency(outstandingValue),\r\n      description: 'Unpaid invoices',\r\n      tone: 'warning',\r\n    },\r\n    {\r\n      label: 'Paid',\r\n      value: formatCurrency(collectedValue),\r\n      description: 'Collected to date',\r\n      tone: 'success',\r\n    },\r\n    {\r\n      label: 'Overdue',\r\n      value: String(overdueTasks),\r\n      description: `Tasks overdue; ${overdueCount} invoices late`,\r\n      tone: 'danger',\r\n    },\r\n  ], [activeJobs, outstandingValue, collectedValue, overdueTasks, overdueCount]);\r\n  const downloadReport = useCallback(async (format = 'csv') => {\r\n    const endpoint = format === 'quickbooks' ? '/invoices/export/quickbooks' : '/invoices/export/csv';\r\n    const filename = `precision-report-${Date.now()}.${format === 'quickbooks' ? 'iif' : 'csv'}`;\r\n    try {\r\n      const response = await fetch(`${API_URL}${endpoint}`, {\r\n        method: 'GET',\r\n        headers: token ? { Authorization: `Bearer ${token}` } : undefined,\r\n      });\r\n      const text = await response.text();\r\n      if (!response.ok) throw new Error(text || 'Unable to download report.');\r\n      const extension = format === 'quickbooks' ? 'iif' : 'csv';\r\n      const mimeType = format === 'quickbooks' ? 'text/plain' : 'text/csv';\r\n\r\n      if (Platform.OS === 'web' && typeof window !== 'undefined') {\r\n        try {\r\n          const blob = new Blob([text], { type: mimeType });\r\n          const url = URL.createObjectURL(blob);\r\n          const anchor = document.createElement('a');\r\n          anchor.href = url;\r\n          anchor.download = filename;\r\n          anchor.click();\r\n          setTimeout(() => URL.revokeObjectURL(url), 4000);\r\n          Alert.alert('Download started', `Look for ${filename} in your browser downloads.`);\r\n        } catch (shareError) {\r\n          Alert.alert('Download ready', `Save this file manually: ${filename}`);\r\n        }\r\n        return;\r\n      }\r\n\r\n      if (!FileSystem?.cacheDirectory) throw new Error('Storage unavailable');\r\n      const fileUri = `${FileSystem.cacheDirectory}${filename}`;\r\n      await FileSystem.writeAsStringAsync(fileUri, text, { encoding: FileSystem.EncodingType.UTF8 });\r\n      const sharingSupported = Sharing?.isAvailableAsync ? await Sharing.isAvailableAsync() : false;\r\n      if (sharingSupported) {\r\n        await Sharing.shareAsync(fileUri, { mimeType, dialogTitle: filename });\r\n      } else {\r\n        try {\r\n          await Share.share({\r\n            message: `Precision Tracker report ready: ${filename}`,\r\n            url: fileUri,\r\n            title: filename,\r\n          });\r\n        } catch {\r\n          Alert.alert('Report saved', `File stored at ${fileUri}.`);\r\n          return;\r\n        }\r\n        Alert.alert('Report saved', `If you skipped sharing, find it at ${fileUri}.`);\r\n      }\r\n    } catch (error) {\r\n      Alert.alert('Download failed', error?.message || 'Unable to download report.');\r\n    }\r\n  }, [token]);\r\n\r\n  const topLeads = leads.slice(0, 3);\r\n  const topJobs = jobs.slice(0, 3);\r\n  const nextTasks = tasks.filter(t => !isTaskCompleted(t.status)).slice(0, 3);\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex: 1, backgroundColor: palette.background }}>\r\n      <ScrollView\r\n        contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(5) }}\r\n        refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} tintColor={palette.primary} />}\r\n      >\r\n        <View style={{ marginBottom: spacing(3) }}>\r\n          <View style={{ width: spacing(5), height: spacing(5), borderRadius: 14, backgroundColor: palette.ink, alignItems: 'center', justifyContent: 'center', marginBottom: spacing(1.5) }}>\r\n            <Text style={{ color: '#FFFFFF', fontWeight: '800', fontSize: typography.h2 }}>PT</Text>\r\n          </View>\r\n          <Text style={{ color: palette.ink, fontSize: 30, fontWeight: '800', lineHeight: lineHeightFor(30) }}>Precision Tracker</Text>\r\n          <Text style={{ color: palette.muted, fontSize: typography.body, marginTop: spacing(0.5), lineHeight: lineHeightFor(typography.body) }}>\r\n            Built for crews who don’t miss details.\r\n          </Text>\r\n          <Text style={{ color: palette.muted, fontSize: typography.body, marginTop: spacing(0.5), lineHeight: lineHeightFor(typography.body) }}>\r\n            Stay on track, every job.\r\n          </Text>\r\n        </View>\r\n\r\n        <View style={{ flexDirection: 'row', flexWrap: 'wrap', columnGap: spacing(1.5), rowGap: spacing(1.5), marginBottom: spacing(3) }}>\r\n          <QuickAction label=\"New job\" onPress={() => navigation.navigate('Jobs', { focus: 'create-job' })} />\r\n          <QuickAction label=\"New lead\" onPress={() => navigation.navigate('NewLead')} />\r\n          {isAdmin ? (\r\n            <>\r\n              <QuickAction label=\"Create invoice\" tone=\"success\" onPress={() => navigation.navigate('Invoices')} />\r\n              <QuickAction tone=\"muted\" label=\"Export CSV\" onPress={() => downloadReport('csv')} />\r\n              <QuickAction tone=\"muted\" label=\"QuickBooks export\" onPress={() => downloadReport('quickbooks')} />\r\n            </>\r\n          ) : null}\r\n        </View>\r\n\r\n        <View style={{ marginBottom: spacing(3) }}>\r\n          <Text style={{ color: palette.muted, fontSize: typography.small, fontWeight: '600', marginBottom: spacing(0.5), lineHeight: lineHeightFor(typography.small) }}>\r\n            Executive pulse\r\n          </Text>\r\n          <Text style={{ color: palette.muted, fontSize: typography.body, marginBottom: spacing(1.5), lineHeight: lineHeightFor(typography.body) }}>\r\n            Know what’s running smoothly and what needs attention before wheels come off.\r\n          </Text>\r\n          <View style={{ flexDirection: 'row', flexWrap: 'wrap', columnGap: spacing(1.5), rowGap: spacing(1.5) }}>\r\n            {statusCards.map(card => (\r\n              <StatusCard\r\n                key={card.label}\r\n                label={card.label}\r\n                value={card.value}\r\n                description={card.description}\r\n                tone={card.tone}\r\n              />\r\n            ))}\r\n          </View>\r\n        </View>\r\n\r\n        <View style={{ marginBottom: spacing(3) }}>\r\n          <Text style={{ color: palette.muted, fontSize: typography.small, fontWeight: '600', marginBottom: spacing(0.5), lineHeight: lineHeightFor(typography.small) }}>\r\n            Pipeline snapshot\r\n          </Text>\r\n          <Text style={{ color: palette.muted, fontSize: typography.body, marginBottom: spacing(1.5), lineHeight: lineHeightFor(typography.body) }}>\r\n            Stay ahead of demand by keeping leads, jobs, tasks, and invoices moving.\r\n          </Text>\r\n          <View style={{ flexDirection: 'row', flexWrap: 'wrap', columnGap: spacing(1.5), rowGap: spacing(1.5) }}>\r\n            <View style={{ flexBasis: '48%', minWidth: 160 }}>\r\n              <SummaryCard\r\n                title=\"Leads\"\r\n                value={leads.length}\r\n                subtitle={`${newLeads} new to triage`}\r\n                tone=\"info\"\r\n                onPress={() => navigation.navigate('Leads')}\r\n              />\r\n            </View>\r\n            <View style={{ flexBasis: '48%', minWidth: 160 }}>\r\n              <SummaryCard\r\n                title=\"Jobs\"\r\n                value={jobs.length}\r\n                subtitle={`${activeJobs} active`}\r\n                tone=\"primary\"\r\n                onPress={() => navigation.navigate('Jobs')}\r\n              />\r\n            </View>\r\n            <View style={{ flexBasis: '48%', minWidth: 160 }}>\r\n              <SummaryCard\r\n                title=\"Tasks\"\r\n                value={openTasks}\r\n                subtitle={`${overdueTasks} overdue • ${tasks.length} total`}\r\n                tone=\"warning\"\r\n                onPress={() => navigation.navigate('Jobs')}\r\n              />\r\n            </View>\r\n            <View style={{ flexBasis: '48%', minWidth: 160 }}>\r\n              <SummaryCard\r\n                title=\"Invoices\"\r\n                value={formatCurrency(outstandingValue)}\r\n                subtitle={`${overdueCount} overdue | ${formatCurrency(collectedValue)} collected`}\r\n                tone=\"success\"\r\n                onPress={() => navigation.navigate('Invoices')}\r\n              />\r\n            </View>\r\n          </View>\r\n        </View>\r\n\r\n        {loading && !refreshing ? (\r\n          <SurfaceCard style={{ alignItems: 'center', justifyContent: 'center', paddingVertical: spacing(6) }}>\r\n            <ActivityIndicator color={palette.primary} />\r\n            <Text style={{ color: palette.muted, marginTop: spacing(1.5) }}>Loading summary...</Text>\r\n          </SurfaceCard>\r\n        ) : null}\r\n\r\n        <SectionHeader title=\"Next Jobs\" actionLabel=\"View all\" onAction={() => navigation.navigate('Jobs')} />\r\n        <SurfaceCard style={{ marginBottom: spacing(3) }}>\r\n          {topJobs.length === 0 ? (\r\n            <Text style={{ color: palette.muted }}>No jobs yet. Create one from the Jobs tab.</Text>\r\n          ) : (\r\n            topJobs.map((job, idx) => {\r\n              const startLabel = job.startDate ? `Start ${formatDate(job.startDate)}` : null;\r\n              const endLabel = job.endDate ? `Due ${formatDate(job.endDate)}` : null;\r\n              return (\r\n                <View key={job.id || idx} style={{ marginBottom: idx === topJobs.length - 1 ? 0 : spacing(2.5) }}>\r\n                  <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                    <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight: '600' }}>{job.name || `Job #${job.id}`}</Text>\r\n                    <StatusPill status={job.status || 'SCHEDULED'} />\r\n                  </View>\r\n                  {startLabel || endLabel ? (\r\n                    <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>\r\n                      {[startLabel, endLabel].filter(Boolean).join(' - ')}\r\n                    </Text>\r\n                  ) : null}\r\n                  {job.notes ? (\r\n                    <Text style={{ color: palette.muted, marginTop: spacing(1) }} numberOfLines={2}>{job.notes}</Text>\r\n                  ) : null}\r\n                  <View style={{ flexDirection: 'row', columnGap: spacing(1.5), marginTop: spacing(1.5) }}>\r\n                    <QuickAction label=\"Open job\" onPress={() => navigation.navigate('JobDetail', { jobId: job.id })} />\r\n                    <QuickAction label=\"Tasks\" onPress={() => navigation.navigate('JobDetail', { jobId: job.id, tab: 'tasks' })} />\r\n                  </View>\r\n                </View>\r\n              );\r\n            })\r\n          )}\r\n        </SurfaceCard>\r\n\r\n        <SectionHeader title=\"Hot Leads\" actionLabel=\"Leads\" onAction={() => navigation.navigate('Leads')} />\r\n        <SurfaceCard style={{ marginBottom: spacing(3) }}>\r\n          {topLeads.length === 0 ? (\r\n            <Text style={{ color: palette.muted }}>No leads yet. Capture leads to keep the funnel full.</Text>\r\n        ) : (\r\n          topLeads.map((lead, idx) => (\r\n            <View key={lead.id || idx} style={{ marginBottom: idx === topLeads.length - 1 ? 0 : spacing(2) }}>\r\n              <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                <Text style={{ color: palette.text, fontWeight: '600', fontSize: typography.h2 }}>{deriveLeadTitle(lead)}</Text>\r\n                <StatusPill status={lead.status || 'NEW'} />\r\n              </View>\r\n              <Text style={{ color: palette.muted, marginTop: spacing(0.5) }} numberOfLines={3}>\r\n                {lead.description || 'No scope captured yet.'}\r\n              </Text>\r\n                <View style={{ flexDirection: 'row', columnGap: spacing(1.5), marginTop: spacing(1.5) }}>\r\n                  <QuickAction label=\"Follow up\" onPress={() => navigation.navigate('EstimateEditor', { leadId: lead.id })} />\r\n                  <QuickAction label=\"Open lead\" tone=\"muted\" onPress={() => navigation.navigate('Leads')} />\r\n                </View>\r\n              </View>\r\n            ))\r\n          )}\r\n        </SurfaceCard>\r\n\r\n        <SectionHeader title=\"Open Tasks\" actionLabel=\"Jobs\" onAction={() => navigation.navigate('Jobs')} />\r\n        <SurfaceCard>\r\n          {nextTasks.length === 0 ? (\r\n            <Text style={{ color: palette.muted }}>All clear. Add tasks from a job to keep crews aligned.</Text>\r\n          ) : (\r\n            nextTasks.map((task, idx) => (\r\n              <View key={task.id || idx} style={{ marginBottom: idx === nextTasks.length - 1 ? 0 : spacing(2) }}>\r\n                <Text style={{ color: palette.text, fontWeight: '600' }}>{task.title || 'Task'}</Text>\r\n                {task.jobId ? (\r\n                  <Text style={{ color: palette.muted, marginTop: spacing(0.25) }}>\r\n                    {jobLookup[task.jobId]?.name || `Job #${task.jobId}`}\r\n                  </Text>\r\n                ) : (\r\n                  <Text style={{ color: palette.muted, marginTop: spacing(0.25) }}>Unassigned job</Text>\r\n                )}\r\n                <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>\r\n                  {task.dueDate ? `Due ${formatDate(task.dueDate)}` : 'No due date'}\r\n                </Text>\r\n                <View style={{ flexDirection: 'row', columnGap: spacing(1.5), marginTop: spacing(1.5) }}>\r\n                  <QuickAction\r\n                    label=\"Mark done\"\r\n                    onPress={() => navigation.navigate('JobDetail', { jobId: task.jobId })}\r\n                  />\r\n                  <QuickAction\r\n                    label=\"View job\"\r\n                    onPress={() => navigation.navigate('JobDetail', { jobId: task.jobId })}\r\n                  />\r\n                </View>\r\n              </View>\r\n            ))\r\n          )}\r\n        </SurfaceCard>\r\n\r\n        {lastUpdated ? (\r\n          <Text style={{ color: palette.muted, fontSize: typography.small, marginTop: spacing(2), textAlign: 'center' }}>\r\n            Updated {lastUpdated.toLocaleTimeString([], { hour: 'numeric', minute: '2-digit' })}\r\n          </Text>\r\n        ) : null}\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\n// ---------- Signature Pad to PNG ----------\r\nfunction SignaturePad({ onCapturePng }){\r\n  const [points, setPoints] = useState([]);\r\n  const [path, setPath] = useState('');\r\n  const shotRef = useRef(null);\r\n  return (\r\n    <ViewShot ref={shotRef} options={{ format: 'png', quality: 0.9, result: 'base64' }} style={{ height:220, borderWidth:1, backgroundColor:'#fff' }}>\r\n      <View\r\n        onStartShouldSetResponder={()=>true}\r\n        onResponderMove={(e)=>{\r\n          const x = e.nativeEvent.locationX, y = e.nativeEvent.locationY;\r\n          setPath(p => p + (p ? ` L ${x} ${y}` : ` M ${x} ${y}`));\r\n        }}\r\n        onResponderRelease={async ()=>{\r\n          const base64 = await shotRef.current.capture();\r\n          onCapturePng && onCapturePng('data:image/png;base64,' + base64);\r\n        }}\r\n        style={{ flex:1 }}\r\n      >\r\n        <Svg height=\"100%\" width=\"100%\"><Path d={path} stroke=\"black\" strokeWidth=\"2\" fill=\"none\" /></Svg>\r\n      </View>\r\n    </ViewShot>\r\n  );\r\n}\r\n\r\nfunction SignatureScreen({ route, navigation }){\r\n  const { token } = useAuth();\r\n  const { estimateId } = route.params;\r\n  const [sigPng, setSigPng] = useState(null);\r\n  const save = async () => {\r\n    if(!sigPng){ Alert.alert('Please sign first'); return; }\r\n    const resp = await api(`/estimates/${estimateId}/approve`, 'POST', { signaturePngUrl: sigPng }, token);\r\n    Alert.alert('Approved', `Payment link:\r\n${(resp && resp.paymentLink) ? resp.paymentLink : 'Unavailable'}`); navigation.goBack();\r\n  };\r\n  return (\r\n    <SafeAreaView style={{ padding:16 }}>\r\n      <Text style={{ fontSize:18, marginBottom:8 }}>Sign Estimate #{estimateId}</Text>\r\n      <SignaturePad onCapturePng={setSigPng} />\r\n      <View style={{ height:12 }} />\r\n      <TouchableOpacity\r\n        onPress={save}\r\n        activeOpacity={0.85}\r\n        style={{ backgroundColor: palette.primary, paddingVertical: spacing(1.5), borderRadius: 12, alignItems: 'center' }}\r\n      >\r\n        <Text style={{ color:'#FFFFFF', fontWeight:'700' }}>Save signature</Text>\r\n      </TouchableOpacity>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\n// ---------- Admin: Users ----------\r\nconst userRoleOptions = [\r\n  { label: 'Admin', value: 'ADMIN' },\r\n  { label: 'Estimator', value: 'ESTIMATOR' },\r\n  { label: 'Supervisor', value: 'SUPERVISOR' },\r\n  { label: 'Tech', value: 'TECH' },\r\n];\r\n\r\nconst invoiceStatusOptions = [\r\n  { value: 'DRAFT', label: 'Draft' },\r\n  { value: 'SENT', label: 'Sent' },\r\n  { value: 'PART_PAID', label: 'Part paid' },\r\n  { value: 'PAID', label: 'Paid' },\r\n  { value: 'VOID', label: 'Void' },\r\n];\r\n\r\nfunction UsersAdminScreen(){\r\n  const { token } = useAuth();\r\n  const [users, setUsers] = useState([]);\r\n  const [email, setEmail] = useState('');\r\n  const [fullName, setFullName] = useState('');\r\n  const [role, setRole] = useState('TECH');\r\n  const [inviting, setInviting] = useState(false);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n\r\n  const load = useCallback(async () => {\r\n    try {\r\n      const response = await api('/users','GET',null,token);\r\n      setUsers(Array.isArray(response) ? response : []);\r\n    } catch (e) {\r\n      Alert.alert('Error', e.message || 'Unable to load users.');\r\n    }\r\n  }, [token]);\r\n\r\n  useEffect(() => { load(); }, [load]);\r\n\r\n  const resetForm = () => {\r\n    setEmail('');\r\n    setFullName('');\r\n    setRole('TECH');\r\n  };\r\n\r\n  const invite = async ()=>{\r\n    const trimmedEmail = email.trim().toLowerCase();\r\n    const trimmedName = fullName.trim();\r\n    if (!trimmedEmail) {\r\n      Alert.alert('Missing email', 'Enter an email address to invite a user.');\r\n      return;\r\n    }\r\n    try {\r\n      setInviting(true);\r\n      const result = await api('/users','POST', { email: trimmedEmail, fullName: trimmedName || undefined, role: normalizeRole(role) }, token);\r\n      resetForm();\r\n      await load();\r\n      const inviteInfo = result?.invitation;\r\n      const tempPassword = result?.temporaryPassword;\r\n      if (inviteInfo?.sent) {\r\n        Alert.alert('Invite sent', `${trimmedEmail} will receive login instructions shortly.`);\r\n      } else if (inviteInfo?.mock) {\r\n        Alert.alert(\r\n          'Invite ready',\r\n          `Email delivery is disabled in this environment. Share this temporary password: ${tempPassword || 'Set via admin'}.`\r\n        );\r\n      } else if (tempPassword) {\r\n        Alert.alert('Invite created', `Share this temporary password with ${trimmedEmail}: ${tempPassword}`);\r\n      } else {\r\n        Alert.alert('Invite created', `${trimmedEmail} is ready to sign in.`);\r\n      }\r\n    } catch (e) {\r\n      Alert.alert('Error', e.message || 'Unable to send invite.');\r\n    } finally {\r\n      setInviting(false);\r\n    }\r\n  };\r\n\r\n  const promote = async (id, newRole)=>{\r\n    try {\r\n      await api(`/users/${id}`,'PATCH',{ role: normalizeRole(newRole) }, token);\r\n      await load();\r\n    } catch (e) {\r\n      Alert.alert('Error', e.message || 'Unable to update role.');\r\n    }\r\n  };\r\n\r\n  const remove = (id) => {\r\n    Alert.alert('Remove user', 'Are you sure you want to remove this person?', [\r\n      { text: 'Cancel', style: 'cancel' },\r\n        {\r\n          text: 'Remove',\r\n          style: 'destructive',\r\n          onPress: async () => {\r\n            try {\r\n              await api(`/users/${id}`,'DELETE',null,token);\r\n              await load();\r\n              Alert.alert('Removed', 'User access revoked.');\r\n            } catch (e) {\r\n              Alert.alert('Error', e.message || 'Unable to delete user.');\r\n            }\r\n          }\r\n        }\r\n    ]);\r\n  };\r\n\r\n  const onRefresh = useCallback(async () => {\r\n    setRefreshing(true);\r\n    try {\r\n      await load();\r\n    } finally {\r\n      setRefreshing(false);\r\n    }\r\n  }, [load]);\r\n\r\n  const renderRolePill = (value) => {\r\n    const roleCfg = userRoleOptions.find(option => option.value === normalizeRole(value));\r\n    const label = roleCfg ? roleCfg.label : normalizeRole(value);\r\n    return (\r\n      <View style={{ backgroundColor: '#e0f3f0', paddingHorizontal: spacing(1.5), paddingVertical: spacing(0.5), borderRadius: 999 }}>\r\n        <Text style={{ color: palette.primaryStrong, fontWeight:'600', fontSize: typography.small }}>{label}</Text>\r\n      </View>\r\n    );\r\n  };\r\n\r\n  const renderRoleSelector = (selectedRole, onSelect) => (\r\n    <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1) }}>\r\n      {userRoleOptions.map(option => {\r\n        const selected = selectedRole === option.value;\r\n        return (\r\n          <TouchableOpacity\r\n            key={option.value}\r\n            onPress={() => onSelect(option.value)}\r\n            activeOpacity={0.85}\r\n            style={{\r\n              paddingHorizontal: spacing(2),\r\n              paddingVertical: spacing(1),\r\n              borderRadius: 999,\r\n              borderWidth: 1,\r\n              borderColor: selected ? palette.primary : palette.border,\r\n              backgroundColor: selected ? '#d9f2ed' : palette.surface,\r\n            }}\r\n          >\r\n            <Text style={{ color: selected ? palette.primaryStrong : palette.muted, fontWeight:'600', fontSize: typography.small }}>\r\n              {option.label}\r\n            </Text>\r\n          </TouchableOpacity>\r\n        );\r\n      })}\r\n    </View>\r\n  );\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\r\n      <FlatList\r\n        data={users}\r\n        keyExtractor={u=>String(u.id)}\r\n        contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(6) }}\r\n        refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} tintColor={palette.primary} />}\r\n        ListHeaderComponent={(\r\n          <View>\r\n            <Text style={{ color: palette.text, fontSize: typography.h1, fontWeight:'700', marginBottom: spacing(2) }}>Team management</Text>\r\n            <SurfaceCard style={{ padding: spacing(2.5), marginBottom: spacing(3) }}>\r\n              <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700' }}>Invite teammate</Text>\r\n              <Text style={{ color: palette.muted, marginTop: spacing(0.5), marginBottom: spacing(2) }}>\r\n                Send an invite email and choose what they can access.\r\n              </Text>\r\n              <FormInput\r\n                placeholder=\"Full name (optional)\"\r\n                value={fullName}\r\n                onChangeText={setFullName}\r\n              />\r\n              <FormInput\r\n                placeholder=\"Work email\"\r\n                autoCapitalize=\"none\"\r\n                keyboardType=\"email-address\"\r\n                value={email}\r\n                onChangeText={setEmail}\r\n              />\r\n              <Text style={{ color: palette.muted, fontWeight:'600', fontSize: typography.small, textTransform:'uppercase', marginBottom: spacing(1) }}>Role</Text>\r\n              {renderRoleSelector(role, setRole)}\r\n              <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center', marginTop: spacing(2) }}>\r\n                <QuickAction label=\"Clear\" tone=\"muted\" onPress={resetForm} />\r\n                <TouchableOpacity\r\n                  onPress={invite}\r\n                  activeOpacity={0.85}\r\n                  disabled={inviting}\r\n                  style={{\r\n                    backgroundColor: palette.primary,\r\n                    paddingHorizontal: spacing(2.5),\r\n                    paddingVertical: spacing(1.5),\r\n                    borderRadius: 12,\r\n                    opacity: inviting ? 0.6 : 1,\r\n                  }}\r\n                >\r\n                  <Text style={{ color:'#fff', fontWeight:'700' }}>{inviting ? 'Sending...' : 'Send invite'}</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </SurfaceCard>\r\n          </View>\r\n        )}\r\n        ListEmptyComponent={(\r\n          <SurfaceCard>\r\n            <Text style={{ color: palette.muted }}>Invite your first teammate to collaborate on jobs.</Text>\r\n          </SurfaceCard>\r\n        )}\r\n        renderItem={({item}) => {\r\n          const normalizedRole = normalizeRole(item.role);\r\n          return (\r\n            <SurfaceCard style={{ marginBottom: spacing(2), padding: spacing(2.5) }}>\r\n              <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center', marginBottom: spacing(1.5) }}>\r\n                <View>\r\n                  <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600' }}>{item.fullName || item.email}</Text>\r\n                  <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>{item.email}</Text>\r\n                </View>\r\n                {renderRolePill(normalizedRole)}\r\n              </View>\r\n              <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1) }}>\r\n                {userRoleOptions.map(option => {\r\n                  const selected = normalizedRole === option.value;\r\n                  return (\r\n                    <TouchableOpacity\r\n                      key={option.value}\r\n                      onPress={() => promote(item.id, option.value)}\r\n                      disabled={selected}\r\n                      activeOpacity={0.85}\r\n                      style={{\r\n                        paddingHorizontal: spacing(1.75),\r\n                        paddingVertical: spacing(0.75),\r\n                        borderRadius: 999,\r\n                        borderWidth: 1,\r\n                        borderColor: selected ? palette.primary : palette.border,\r\n                        backgroundColor: selected ? '#d9f2ed' : palette.surface,\r\n                        opacity: selected ? 0.7 : 1,\r\n                      }}\r\n                    >\r\n                      <Text style={{ color: selected ? palette.primaryStrong : palette.muted, fontWeight:'600', fontSize: typography.small }}>\r\n                        {option.label}\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  );\r\n                })}\r\n                <TouchableOpacity\r\n                  onPress={() => remove(item.id)}\r\n                  activeOpacity={0.85}\r\n                  style={{\r\n                    paddingHorizontal: spacing(1.75),\r\n                    paddingVertical: spacing(0.75),\r\n                    borderRadius: 999,\r\n                    borderWidth: 1,\r\n                    borderColor: '#fecdd3',\r\n                    backgroundColor: '#fee2e2',\r\n                  }}\r\n                >\r\n                  <Text style={{ color: palette.danger, fontWeight:'600', fontSize: typography.small }}>Remove</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </SurfaceCard>\r\n          );\r\n        }}\r\n      />\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\n// ---------- Jobs Kanban + Change Orders ----------\r\nfunction InvoicesScreen({ navigation }){\r\n  const { token, user } = useAuth();\r\n  const [loading, setLoading] = useState(true);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [summary, setSummary] = useState(null);\r\n  const [invoices, setInvoices] = useState([]);\r\n  const [filter, setFilter] = useState('ALL');\r\n  const [newInvoiceJobId, setNewInvoiceJobId] = useState('');\r\n  const [newInvoiceAmount, setNewInvoiceAmount] = useState('');\r\n  const [newInvoiceIssuedAt, setNewInvoiceIssuedAt] = useState('');\r\n  const [newInvoiceDueAt, setNewInvoiceDueAt] = useState('');\r\n  const [newInvoiceStatus, setNewInvoiceStatus] = useState('DRAFT');\r\n  const [creatingInvoice, setCreatingInvoice] = useState(false);\r\n\r\n  const load = useCallback(async (isRefresh = false) => {\r\n    if (!token) return;\r\n    isRefresh ? setRefreshing(true) : setLoading(true);\r\n    try {\r\n      const [summaryData, list] = await Promise.all([\r\n        api('/invoices/summary', 'GET', null, token),\r\n        api('/invoices', 'GET', null, token),\r\n      ]);\r\n      setSummary(summaryData);\r\n      setInvoices(list);\r\n    } catch (e) {\r\n      // keep prior data on failure\r\n    } finally {\r\n      isRefresh ? setRefreshing(false) : setLoading(false);\r\n    }\r\n  }, [token]);\r\n\r\n  useFocusEffect(useCallback(() => {\r\n    if (user?.role === 'ADMIN') {\r\n      load(false);\r\n    }\r\n  }, [load, user?.role]));\r\n\r\n  const onRefresh = useCallback(() => load(true), [load]);\r\n  const nextInvoiceNumber = useMemo(() => {\r\n    if (!Array.isArray(invoices) || invoices.length === 0) {\r\n      return 'INV-0001';\r\n    }\r\n    const maxNumber = invoices.reduce((acc, inv) => {\r\n      const match = String(inv.number || '').match(/(\\d+)$/);\r\n      if (match) {\r\n        return Math.max(acc, parseInt(match[1], 10));\r\n      }\r\n      if (inv.id) {\r\n        return Math.max(acc, Number(inv.id));\r\n      }\r\n      return acc;\r\n    }, 0);\r\n    const next = maxNumber + 1;\r\n    return `INV-${String(next).padStart(4, '0')}`;\r\n  }, [invoices]);\r\n  const downloadReport = useCallback(async (format = 'csv') => {\r\n    const endpoint = format === 'quickbooks' ? '/invoices/export/quickbooks' : '/invoices/export/csv';\r\n    const filename = `precision-report-${Date.now()}.${format === 'quickbooks' ? 'iif' : 'csv'}`;\r\n    try {\r\n      const response = await fetch(`${API_URL}${endpoint}`, {\r\n        method: 'GET',\r\n        headers: token ? { Authorization: `Bearer ${token}` } : undefined,\r\n      });\r\n      const text = await response.text();\r\n      if (!response.ok) throw new Error(text || 'Unable to download report.');\r\n      const extension = format === 'quickbooks' ? 'iif' : 'csv';\r\n      const mimeType = format === 'quickbooks' ? 'text/plain' : 'text/csv';\r\n\r\n      if (Platform.OS === 'web' && typeof window !== 'undefined') {\r\n        try {\r\n          const blob = new Blob([text], { type: mimeType });\r\n          const url = URL.createObjectURL(blob);\r\n          const anchor = document.createElement('a');\r\n          anchor.href = url;\r\n          anchor.download = filename;\r\n          anchor.click();\r\n          setTimeout(() => URL.revokeObjectURL(url), 4000);\r\n          Alert.alert('Download started', `Look for ${filename} in your browser downloads.`);\r\n        } catch (shareError) {\r\n          Alert.alert('Download ready', `Save this file manually: ${filename}`);\r\n        }\r\n        return;\r\n      }\r\n\r\n      if (!FileSystem?.cacheDirectory) throw new Error('Storage unavailable');\r\n      const fileUri = `${FileSystem.cacheDirectory}${filename}`;\r\n      await FileSystem.writeAsStringAsync(fileUri, text, { encoding: FileSystem.EncodingType.UTF8 });\r\n      const sharingSupported = Sharing?.isAvailableAsync ? await Sharing.isAvailableAsync() : false;\r\n      if (sharingSupported) {\r\n        await Sharing.shareAsync(fileUri, { mimeType, dialogTitle: filename });\r\n      } else {\r\n        try {\r\n          await Share.share({\r\n            message: `Precision Tracker report ready: ${filename}`,\r\n            url: fileUri,\r\n            title: filename,\r\n          });\r\n        } catch {\r\n          Alert.alert('Report saved', `File stored at ${fileUri}.`);\r\n          return;\r\n        }\r\n        Alert.alert('Report saved', `If you skipped sharing, find it at ${fileUri}.`);\r\n      }\r\n    } catch (error) {\r\n      Alert.alert('Download failed', error?.message || 'Unable to download report.');\r\n    }\r\n  }, [token]);\r\n  const prepareInvoicePdf = useCallback(async (invoiceId) => {\r\n    const headers = token ? { Authorization: `Bearer ${token}` } : undefined;\r\n    const endpoint = `${API_URL}/pdf/invoice/${invoiceId}`;\r\n\r\n    if (Platform.OS === 'web' && typeof window !== 'undefined') {\r\n      const response = await fetch(endpoint, { method: 'GET', headers });\r\n      const ok = response.ok;\r\n      const blob = await response.blob();\r\n      if (!ok) throw new Error('Unable to download invoice PDF.');\r\n      const url = URL.createObjectURL(blob);\r\n      return {\r\n        uri: url,\r\n        cleanup: () => setTimeout(() => URL.revokeObjectURL(url), 4000),\r\n      };\r\n    }\r\n\r\n    if (!FileSystem?.cacheDirectory) throw new Error('Storage unavailable');\r\n    const targetPath = `${FileSystem.cacheDirectory}invoice-${invoiceId}-${Date.now()}.pdf`;\r\n\r\n    if (typeof FileSystem.downloadAsync === 'function') {\r\n      const result = await FileSystem.downloadAsync(endpoint, targetPath, { headers });\r\n      if (result?.status && result.status >= 400) {\r\n        throw new Error('Unable to download invoice PDF.');\r\n      }\r\n      return {\r\n        uri: result.uri,\r\n        cleanup: () => {},\r\n      };\r\n    }\r\n\r\n    const response = await fetch(endpoint, { method: 'GET', headers });\r\n    const buffer = await response.arrayBuffer();\r\n    if (!response.ok) throw new Error('Unable to download invoice PDF.');\r\n    const base64 = Buffer.from(buffer).toString('base64');\r\n    await FileSystem.writeAsStringAsync(targetPath, base64, { encoding: FileSystem.EncodingType.Base64 });\r\n    return {\r\n      uri: targetPath,\r\n      cleanup: () => {},\r\n    };\r\n  }, [token]);\r\n\r\n  const shareInvoicePdf = useCallback(async (invoice) => {\r\n    try {\r\n      const payload = await prepareInvoicePdf(invoice.id);\r\n      try {\r\n        if (Platform.OS === 'web' && typeof window !== 'undefined') {\r\n          window.open(payload.uri, '_blank', 'noopener,noreferrer');\r\n          Alert.alert('PDF opened', 'A new browser tab should display the invoice.');\r\n        } else {\r\n          const sharingSupported = Sharing?.isAvailableAsync ? await Sharing.isAvailableAsync() : false;\r\n          if (sharingSupported) {\r\n            await Sharing.shareAsync(payload.uri, {\r\n              mimeType: 'application/pdf',\r\n              dialogTitle: `Invoice ${invoice.number || invoice.id}`,\r\n            });\r\n          } else {\r\n            try {\r\n              await Share.share({\r\n                title: `Invoice ${invoice.number || invoice.id}`,\r\n                message: `Invoice ${invoice.number || invoice.id} ready.`,\r\n                url: payload.uri,\r\n              });\r\n            } catch {\r\n              Alert.alert('PDF saved', `Invoice stored at ${payload.uri}.`);\r\n            }\r\n          }\r\n        }\r\n      } finally {\r\n        payload.cleanup?.();\r\n      }\r\n    } catch (error) {\r\n      Alert.alert('PDF unavailable', error?.message || 'Unable to prepare invoice PDF.');\r\n    }\r\n  }, [prepareInvoicePdf]);\r\n\r\n  const printInvoicePdf = useCallback(async (invoice) => {\r\n    try {\r\n      const payload = await prepareInvoicePdf(invoice.id);\r\n      try {\r\n        if (Platform.OS === 'web' && typeof window !== 'undefined') {\r\n          const printWindow = window.open(payload.uri, '_blank', 'noopener,noreferrer');\r\n          if (printWindow) {\r\n            printWindow.onload = () => {\r\n              printWindow.focus();\r\n              printWindow.print();\r\n            };\r\n          } else {\r\n            Alert.alert('Print blocked', 'Allow pop-ups to print this invoice.');\r\n          }\r\n        } else if (Print?.printAsync) {\r\n          await Print.printAsync({ uri: payload.uri });\r\n        } else {\r\n          Alert.alert('Print unavailable', 'Printing is not supported in this environment.');\r\n        }\r\n      } finally {\r\n        payload.cleanup?.();\r\n      }\r\n    } catch (error) {\r\n      Alert.alert('Print failed', error?.message || 'Unable to send invoice to printer.');\r\n    }\r\n  }, [prepareInvoicePdf]);\r\n\r\n  const resetInvoiceForm = useCallback(() => {\r\n    setNewInvoiceJobId('');\r\n    setNewInvoiceAmount('');\r\n    setNewInvoiceIssuedAt('');\r\n    setNewInvoiceDueAt('');\r\n    setNewInvoiceStatus('DRAFT');\r\n  }, []);\r\n\r\n  const createInvoice = useCallback(async () => {\r\n    const amountValue = parseFloat(newInvoiceAmount);\r\n    if (Number.isNaN(amountValue) || amountValue <= 0) {\r\n      Alert.alert('Missing amount', 'Enter a valid invoice amount.');\r\n      return;\r\n    }\r\n    const jobIdTrimmed = newInvoiceJobId.trim();\r\n    const jobIdValue = jobIdTrimmed ? parseInt(jobIdTrimmed, 10) : null;\r\n    if (jobIdTrimmed && Number.isNaN(jobIdValue)) {\r\n      Alert.alert('Invalid job', 'Job ID must be a number.');\r\n      return;\r\n    }\r\n    const payload = {\r\n      amount: amountValue,\r\n      status: newInvoiceStatus,\r\n      number: nextInvoiceNumber || undefined,\r\n      jobId: jobIdValue || undefined,\r\n      issuedAt: newInvoiceIssuedAt || null,\r\n      dueAt: newInvoiceDueAt || null,\r\n    };\r\n    try {\r\n      setCreatingInvoice(true);\r\n      const created = await api('/invoices', 'POST', payload, token);\r\n      resetInvoiceForm();\r\n      await load(false);\r\n      Alert.alert('Invoice created', `${created?.number || payload.number || 'Invoice'} saved.`);\r\n    } catch (e) {\r\n      Alert.alert('Error', e.message || 'Unable to create invoice.');\r\n    } finally {\r\n      setCreatingInvoice(false);\r\n    }\r\n  }, [\r\n    newInvoiceAmount,\r\n    newInvoiceStatus,\r\n    newInvoiceJobId,\r\n    newInvoiceIssuedAt,\r\n    newInvoiceDueAt,\r\n    token,\r\n    load,\r\n    resetInvoiceForm,\r\n    nextInvoiceNumber,\r\n  ]);\r\n\r\n  const deleteInvoice = useCallback((invoice) => {\r\n    Alert.alert('Delete invoice', `Delete invoice #${invoice.number || invoice.id}?`, [\r\n      { text:'Cancel', style:'cancel' },\r\n        {\r\n          text:'Delete',\r\n          style:'destructive',\r\n          onPress: async () => {\r\n            try {\r\n              await api(`/invoices/${invoice.id}`, 'DELETE', null, token);\r\n              await load(false);\r\n              Alert.alert('Deleted', 'Invoice removed.');\r\n            } catch (e) {\r\n              Alert.alert('Error', e.message || 'Unable to delete invoice.');\r\n            }\r\n          }\r\n        }\r\n    ]);\r\n  }, [token, load]);\r\n\r\n  if (user?.role !== 'ADMIN') {\r\n    return (\r\n      <SafeAreaView style={{ flex:1, alignItems:'center', justifyContent:'center', backgroundColor: palette.background }}>\r\n        <Text style={{ color: palette.muted }}>Invoices are only available to admin users.</Text>\r\n      </SafeAreaView>\r\n    );\r\n  }\r\n\r\n  const filters = [\r\n    { key:'ALL', label:'All' },\r\n    { key:'OUTSTANDING', label:'Outstanding' },\r\n    { key:'PAID', label:'Paid' },\r\n  ];\r\n\r\n  const filteredInvoices = invoices.filter(inv => {\r\n    if (filter === 'ALL') return true;\r\n    const status = (inv.status || 'DRAFT').toUpperCase();\r\n    if (filter === 'PAID') return status === 'PAID';\r\n    return !['PAID','VOID'].includes(status);\r\n  });\r\n\r\n  const outstanding = formatCurrency(summary?.outstanding || 0);\r\n  const collected = formatCurrency(summary?.collected || 0);\r\n  const drafts = formatCurrency(summary?.draftAmount || 0);\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\r\n      <ScrollView\r\n        contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(6) }}\r\n        refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} tintColor={palette.primary} />}\r\n      >\r\n        <Text style={{ color: palette.text, fontSize: typography.h1, fontWeight:'700', marginBottom: spacing(2) }}>Invoices</Text>\r\n        <Text style={{ color: palette.muted, marginBottom: spacing(2) }}>Track billing health and spot overdue balances.</Text>\r\n        <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginBottom: spacing(2) }}>\r\n          <QuickAction tone=\"muted\" label=\"Export CSV\" onPress={() => downloadReport('csv')} />\r\n          <QuickAction tone=\"muted\" label=\"QuickBooks export\" onPress={() => downloadReport('quickbooks')} />\r\n        </View>\r\n        <SurfaceCard style={{ padding: spacing(2.5), marginBottom: spacing(3) }}>\r\n          <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700' }}>Create invoice</Text>\r\n          <Text style={{ color: palette.muted, marginTop: spacing(0.5), marginBottom: spacing(2) }}>\r\n            Capture billing details and keep your accounts current.\r\n          </Text>\r\n          <View style={{ marginBottom: spacing(1.5) }}>\r\n            <Text style={{ color: palette.muted, fontSize: typography.small, fontWeight:'700', textTransform:'uppercase' }}>Invoice number</Text>\r\n            <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700', marginTop: spacing(0.5) }}>{nextInvoiceNumber}</Text>\r\n          </View>\r\n          <FormInput\r\n            placeholder=\"Job ID (optional)\"\r\n            value={newInvoiceJobId}\r\n            onChangeText={setNewInvoiceJobId}\r\n            keyboardType=\"number-pad\"\r\n          />\r\n          <FormInput\r\n            placeholder=\"Amount $\"\r\n            value={newInvoiceAmount}\r\n            onChangeText={setNewInvoiceAmount}\r\n            keyboardType=\"decimal-pad\"\r\n          />\r\n          <View style={{ flexDirection:'row', columnGap: spacing(1.5) }}>\r\n            <View style={{ flex:1 }}>\r\n              <DateInputField value={newInvoiceIssuedAt} onChange={setNewInvoiceIssuedAt} placeholder=\"Issued date\" style={{ marginBottom: 0 }} />\r\n            </View>\r\n            <View style={{ flex:1 }}>\r\n              <DateInputField value={newInvoiceDueAt} onChange={setNewInvoiceDueAt} placeholder=\"Due date (optional)\" style={{ marginBottom: 0 }} />\r\n            </View>\r\n          </View>\r\n          <Text style={{ color: palette.muted, fontSize: typography.small, fontWeight:'700', textTransform:'uppercase', marginTop: spacing(2), marginBottom: spacing(1) }}>Status</Text>\r\n          <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1) }}>\r\n            {invoiceStatusOptions.map(option => {\r\n              const selected = option.value === newInvoiceStatus;\r\n              return (\r\n                <TouchableOpacity\r\n                  key={option.value}\r\n                  onPress={() => setNewInvoiceStatus(option.value)}\r\n                  activeOpacity={0.85}\r\n                  style={{\r\n                    paddingHorizontal: spacing(2),\r\n                    paddingVertical: spacing(1),\r\n                    borderRadius: 999,\r\n                    borderWidth: 1,\r\n                    borderColor: selected ? palette.primary : palette.border,\r\n                    backgroundColor: selected ? '#d9f2ed' : palette.surface,\r\n                  }}\r\n                >\r\n                  <Text style={{ color: selected ? palette.primaryStrong : palette.muted, fontWeight:'600', fontSize: typography.small }}>\r\n                    {option.label}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              );\r\n            })}\r\n          </View>\r\n          <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center', marginTop: spacing(2) }}>\r\n            <QuickAction label=\"Reset\" tone=\"muted\" onPress={resetInvoiceForm} />\r\n            <TouchableOpacity\r\n              onPress={createInvoice}\r\n              activeOpacity={0.85}\r\n              disabled={creatingInvoice}\r\n              style={{\r\n                backgroundColor: palette.primary,\r\n                paddingHorizontal: spacing(2.5),\r\n                paddingVertical: spacing(1.5),\r\n                borderRadius: 12,\r\n                opacity: creatingInvoice ? 0.6 : 1,\r\n              }}\r\n            >\r\n              <Text style={{ color:'#fff', fontWeight:'700' }}>{creatingInvoice ? 'Saving...' : 'Create invoice'}</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </SurfaceCard>\r\n\r\n        <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(2), rowGap: spacing(2), marginBottom: spacing(3) }}>\r\n          <View style={{ flexBasis:'48%', minWidth: 160 }}>\r\n            <SummaryCard title=\"Outstanding\" value={outstanding} subtitle={`${summary?.overdueCount || 0} overdue`} tone=\"warning\" />\r\n          </View>\r\n          <View style={{ flexBasis:'48%', minWidth: 160 }}>\r\n            <SummaryCard title=\"Collected\" value={collected} subtitle=\"All payments to date\" tone=\"success\" />\r\n          </View>\r\n          <View style={{ flexBasis:'48%', minWidth: 160 }}>\r\n            <SummaryCard title=\"Drafts\" value={drafts} subtitle={`${summary?.totalCount || 0} total invoices`} tone=\"info\" />\r\n          </View>\r\n        </View>\r\n\r\n        <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginBottom: spacing(2) }}>\r\n          {filters.map(f => {\r\n            const selected = f.key === filter;\r\n            return (\r\n              <TouchableOpacity\r\n                key={f.key}\r\n                onPress={() => setFilter(f.key)}\r\n                activeOpacity={0.85}\r\n                style={{\r\n                  paddingHorizontal: spacing(2),\r\n                  paddingVertical: spacing(1),\r\n                  borderRadius: 999,\r\n                  borderWidth: 1,\r\n                  borderColor: selected ? palette.primary : palette.border,\r\n                  backgroundColor: selected ? '#d9f2ed' : palette.surface,\r\n                }}\r\n              >\r\n                <Text style={{ color: selected ? palette.primaryStrong : palette.muted, fontWeight:'600', fontSize: typography.small }}>{f.label}</Text>\r\n              </TouchableOpacity>\r\n            );\r\n          })}\r\n        </View>\r\n\r\n        {loading ? (\r\n          <SurfaceCard style={{ alignItems:'center', paddingVertical: spacing(6) }}>\r\n            <ActivityIndicator color={palette.primary} />\r\n            <Text style={{ color: palette.muted, marginTop: spacing(1.5) }}>Loading invoices...</Text>\r\n          </SurfaceCard>\r\n        ) : filteredInvoices.length === 0 ? (\r\n          <SurfaceCard>\r\n            <Text style={{ color: palette.muted }}>No invoices match this filter.</Text>\r\n          </SurfaceCard>\r\n        ) : (\r\n          filteredInvoices.map(inv => {\r\n            const payments = (inv.Payments || []).reduce((sum, p) => sum + Number(p.amount || 0), 0);\r\n            const amount = Number(inv.amount || 0);\r\n            const balance = Math.max(amount - payments, 0);\r\n            const statusKey = (inv.status || 'DRAFT').toUpperCase();\r\n            return (\r\n              <SurfaceCard key={inv.id}>\r\n                <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center' }}>\r\n                  <View>\r\n                    <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600' }}>Invoice #{inv.number || inv.id}</Text>\r\n                    <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>Issued {inv.issuedAt ? formatDate(inv.issuedAt) : 'TBD'}</Text>\r\n                  </View>\r\n                  <StatusPill status={statusKey} />\r\n                </View>\r\n                <View style={{ flexDirection:'row', justifyContent:'space-between', marginTop: spacing(1.5) }}>\r\n                  <View>\r\n                    <Text style={{ color: palette.muted, fontSize: typography.small }}>Amount</Text>\r\n                    <Text style={{ color: palette.text, fontWeight:'600' }}>{formatCurrency(amount)}</Text>\r\n                  </View>\r\n                  <View>\r\n                    <Text style={{ color: palette.muted, fontSize: typography.small }}>Collected</Text>\r\n                    <Text style={{ color: palette.text }}>{formatCurrency(payments)}</Text>\r\n                  </View>\r\n                  <View>\r\n                    <Text style={{ color: palette.muted, fontSize: typography.small }}>Balance</Text>\r\n                    <Text style={{ color: balance > 0 ? palette.primaryStrong : palette.muted, fontWeight:'600' }}>{formatCurrency(balance)}</Text>\r\n                  </View>\r\n                </View>\r\n                {inv.dueAt ? (\r\n                  <Text style={{ color: palette.muted, marginTop: spacing(1) }}>Due {formatDate(inv.dueAt)}</Text>\r\n                ) : null}\r\n                <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginTop: spacing(2) }}>\r\n                  <QuickAction tone=\"muted\" label=\"Share PDF\" onPress={() => shareInvoicePdf(inv)} />\r\n                  <QuickAction tone=\"muted\" label=\"Print\" onPress={() => printInvoicePdf(inv)} />\r\n                  {inv.jobId ? <QuickAction label=\"View job\" onPress={() => navigation.navigate('JobDetail', { jobId: inv.jobId })} tone=\"muted\" /> : null}\r\n                  <QuickAction label=\"Record payment\" tone=\"success\" onPress={() => Alert.alert('Coming soon', 'Payment logging will land shortly.')} />\r\n                  <QuickAction label=\"Delete\" tone=\"danger\" onPress={() => deleteInvoice(inv)} />\r\n                </View>\r\n              </SurfaceCard>\r\n            );\r\n          })\r\n        )}\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\nfunction JobsKanbanScreen({ navigation, route }){\r\n  const { token } = useAuth();\r\n  const [jobs, setJobs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [newJobName, setNewJobName] = useState('');\r\n  const [newJobStartDate, setNewJobStartDate] = useState('');\r\n  const [newJobDueDate, setNewJobDueDate] = useState('');\r\n  const [newJobNotes, setNewJobNotes] = useState('');\r\n  const [newCustomerName, setNewCustomerName] = useState('');\r\n  const [newCustomerPhone, setNewCustomerPhone] = useState('');\r\n  const [newCustomerEmail, setNewCustomerEmail] = useState('');\r\n  const [newAddressLine1, setNewAddressLine1] = useState('');\r\n  const [newAddressLine2, setNewAddressLine2] = useState('');\r\n  const [newCity, setNewCity] = useState('');\r\n  const [newStateCode, setNewStateCode] = useState('');\r\n  const [newZip, setNewZip] = useState('');\r\n  const [jobFormTab, setJobFormTab] = useState('BASICS');\r\n  const [newJobTags, setNewJobTags] = useState([]);\r\n  const statusOrder = ['NEW','SCHEDULED','IN_PROGRESS','ON_HOLD','COMPLETED','DONE','PAID','CANCELLED','CLOSED'];\r\n  const scrollRef = useRef(null);\r\n  const [selectedTag, setSelectedTag] = useState(null);\r\n  const [selectedCity, setSelectedCity] = useState(null);\r\n  const [selectedUrgency, setSelectedUrgency] = useState('ALL');\r\n  const jobTagSuggestions = useMemo(() => {\r\n    const library = new Set(defaultTagSeeds);\r\n    jobs.forEach(job => {\r\n      (Array.isArray(job.tags) ? job.tags : []).forEach(tag => library.add(String(tag)));\r\n    });\r\n    return Array.from(library);\r\n  }, [jobs]);\r\n\r\n  const load = useCallback(async (isRefresh = false) => {\r\n    isRefresh ? setRefreshing(true) : setLoading(true);\r\n    try {\r\n      const data = await api('/jobs','GET',null,token);\r\n      setJobs(data);\r\n      db.transaction(tx => {\r\n        tx.executeSql && tx.executeSql('DELETE FROM jobs_cache;');\r\n        data.forEach(j => tx.executeSql && tx.executeSql(\r\n          'INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)',\r\n          [j.id, j.name||'', j.status||'SCHEDULED', j.startDate||'', j.endDate||'', j.notes||'']\r\n        ));\r\n      });\r\n    } catch(e) {\r\n      db.transaction(tx =>\r\n        tx.executeSql && tx.executeSql(\r\n          'SELECT id, name, status, startDate, endDate, notes FROM jobs_cache',\r\n          [],\r\n          (_, { rows }) => setJobs(rows._array || [])\r\n        )\r\n      );\r\n    } finally {\r\n      isRefresh ? setRefreshing(false) : setLoading(false);\r\n    }\r\n  }, [token]);\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      load(false);\r\n    }, [load])\r\n  );\r\n  useEffect(() => {\r\n    if (route?.params?.focus === 'create-job') {\r\n      scrollRef.current?.scrollTo({ y: 0, animated: true });\r\n      setJobFormTab('BASICS');\r\n      if (navigation && typeof navigation.setParams === 'function') {\r\n        navigation.setParams({ focus: undefined });\r\n      }\r\n    }\r\n  }, [route?.params?.focus, navigation]);\r\n  const availableTags = useMemo(() => {\r\n    const set = new Set();\r\n    jobs.forEach(job => {\r\n      const tags = Array.isArray(job.tags) ? job.tags : [];\r\n      tags.forEach(tag => {\r\n        if (tag) set.add(String(tag));\r\n      });\r\n    });\r\n    return Array.from(set).sort((a, b) => a.toLowerCase().localeCompare(b.toLowerCase()));\r\n  }, [jobs]);\r\n  const availableCities = useMemo(() => {\r\n    const set = new Set();\r\n    jobs.forEach(job => {\r\n      const city = job?.Jobsite?.city;\r\n      if (city) set.add(String(city).trim());\r\n    });\r\n    return Array.from(set).sort((a, b) => a.toLowerCase().localeCompare(b.toLowerCase()));\r\n  }, [jobs]);\r\n  const urgencyFilters = useMemo(() => ([\r\n    { key: 'ALL', label: 'All' },\r\n    { key: 'UPCOMING', label: 'Starting soon' },\r\n    { key: 'OVERDUE', label: 'Past due' },\r\n  ]), []);\r\n  const filteredJobsRaw = useMemo(() => {\r\n    const today = new Date();\r\n    today.setHours(0, 0, 0, 0);\r\n    return jobs.filter(job => {\r\n      if (selectedTag) {\r\n        const tags = Array.isArray(job.tags) ? job.tags : [];\r\n        const hasTag = tags.some(tag => String(tag).toLowerCase() === selectedTag.toLowerCase());\r\n        if (!hasTag) return false;\r\n      }\r\n      if (selectedCity) {\r\n        const city = job?.Jobsite?.city ? String(job.Jobsite.city) : '';\r\n        if (city.toLowerCase() !== selectedCity.toLowerCase()) return false;\r\n      }\r\n      if (selectedUrgency === 'UPCOMING') {\r\n        if (!job.startDate) return false;\r\n        const start = new Date(job.startDate);\r\n        if (Number.isNaN(start.getTime())) return false;\r\n        const diff = Math.ceil((start - today) / (1000 * 60 * 60 * 24));\r\n        if (diff < 0 || diff > 3) return false;\r\n      } else if (selectedUrgency === 'OVERDUE') {\r\n        if (!job.endDate) return false;\r\n        const due = new Date(job.endDate);\r\n        if (Number.isNaN(due.getTime())) return false;\r\n        if (due >= today) return false;\r\n      }\r\n      return true;\r\n    });\r\n  }, [jobs, selectedTag, selectedCity, selectedUrgency]);\r\n  const hasFilters = useMemo(() => Boolean(selectedTag || selectedCity || selectedUrgency !== 'ALL'), [selectedTag, selectedCity, selectedUrgency]);\r\n  const clearFilters = useCallback(() => {\r\n    setSelectedTag(null);\r\n    setSelectedCity(null);\r\n    setSelectedUrgency('ALL');\r\n  }, []);\r\n\r\n  const onRefresh = useCallback(() => load(true), [load]);\r\n\r\n  const resetForm = () => {\r\n    setNewJobName('');\r\n    setNewJobStartDate('');\r\n    setNewJobDueDate('');\r\n    setNewJobNotes('');\r\n    setNewCustomerName('');\r\n    setNewCustomerPhone('');\r\n    setNewCustomerEmail('');\r\n    setNewAddressLine1('');\r\n    setNewAddressLine2('');\r\n    setNewCity('');\r\n    setNewStateCode('');\r\n    setNewZip('');\r\n    setNewJobTags([]);\r\n    setJobFormTab('BASICS');\r\n  };\r\n\r\n  const createJob = async () => {\r\n    if(!newJobName.trim()){\r\n      Alert.alert('Missing info', 'Please add a job name.');\r\n      setJobFormTab('BASICS');\r\n      return;\r\n    }\r\n    const hasCustomer = [newCustomerName, newCustomerPhone, newCustomerEmail].some(v => v && v.trim());\r\n    const hasAddress = [newAddressLine1, newCity, newStateCode, newZip].some(v => v && v.trim());\r\n    const payload = {\r\n      name: newJobName.trim(),\r\n      status: 'NEW',\r\n      startDate: newJobStartDate || null,\r\n      endDate: newJobDueDate || null,\r\n      notes: newJobNotes.trim() || null,\r\n      tags: newJobTags.filter(Boolean),\r\n    };\r\n    if (hasCustomer) {\r\n      payload.customer = {\r\n        name: newCustomerName.trim(),\r\n        phone: newCustomerPhone.trim(),\r\n        email: newCustomerEmail.trim(),\r\n        billingAddress: newAddressLine1\r\n          ? `${newAddressLine1}${newAddressLine2 ? `\r\n${newAddressLine2}` : ''}${newCity ? `\r\n${newCity}, ${newStateCode} ${newZip}` : ''}`\r\n          : null,\r\n      };\r\n    }\r\n    if (hasAddress) {\r\n      payload.jobsite = {\r\n        addressLine1: newAddressLine1.trim(),\r\n        addressLine2: newAddressLine2.trim(),\r\n        city: newCity.trim(),\r\n        state: newStateCode.trim(),\r\n        zip: newZip.trim(),\r\n      };\r\n    }\r\n    try {\r\n      const created = await api('/jobs','POST', payload, token);\r\n      setJobs(prev => [created, ...prev]);\r\n      db.transaction(tx =>\r\n        tx.executeSql && tx.executeSql(\r\n          'INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)',\r\n          [created.id, created.name||'', created.status||'SCHEDULED', created.startDate||'', created.endDate||'', created.notes||'']\r\n        )\r\n      );\r\n      resetForm();\r\n      Alert.alert('Job created', `Job #${created.id} ready to schedule.`);\r\n    } catch(e) {\r\n      Alert.alert('Error', e.message || 'Unable to create job');\r\n    }\r\n  };\r\n\r\n  const updateJobStatus = async (id, status) => {\r\n    try {\r\n      const updated = await api(`/jobs/${id}`,'PATCH',{ status }, token);\r\n      setJobs(prev => prev.map(job => job.id === id ? updated : job));\r\n    } catch(e) {\r\n      Alert.alert('Error', e.message || 'Unable to update job status');\r\n    }\r\n  };\r\n\r\n  const removeJob = useCallback((id) => {\r\n    Alert.alert('Delete Job', `Delete job #${id}?`, [\r\n      { text:'Cancel', style:'cancel' },\r\n      { text:'Delete', style:'destructive', onPress: async () => {\r\n        try {\r\n          await api(`/jobs/${id}`,'DELETE',null,token);\r\n          setJobs(prev => prev.filter(job => Number(job.id) !== Number(id)));\r\n          db.transaction(tx => tx.executeSql && tx.executeSql('DELETE FROM jobs_cache WHERE id=?', [id]));\r\n          Alert.alert('Deleted', 'Job removed.');\r\n          await load(false);\r\n        } catch(e) {\r\n          Alert.alert('Error', e.message || 'Unable to delete job');\r\n        }\r\n      } }\r\n    ]);\r\n  }, [token, load]);\r\n\r\n  const sortedJobs = useMemo(() => {\r\n    const normalize = (status) => (status || 'SCHEDULED').toUpperCase();\r\n    const rank = (status) => {\r\n      const key = normalize(status);\r\n      const idx = statusOrder.indexOf(key);\r\n      return idx === -1 ? statusOrder.length : idx;\r\n    };\r\n    const parseDateSafe = (value) => {\r\n      if (!value) return null;\r\n      const d = new Date(value);\r\n      return Number.isNaN(d.getTime()) ? null : d;\r\n    };\r\n    return [...filteredJobsRaw].sort((a, b) => {\r\n      const statusDiff = rank(a.status) - rank(b.status);\r\n      if (statusDiff !== 0) return statusDiff;\r\n      const startA = parseDateSafe(a.startDate);\r\n      const startB = parseDateSafe(b.startDate);\r\n      if (startA && startB) return startA - startB;\r\n      if (startA) return -1;\r\n      if (startB) return 1;\r\n      return (b.id || 0) - (a.id || 0);\r\n    });\r\n  }, [filteredJobsRaw, statusOrder]);\r\n\r\n  const groupedJobs = useMemo(() => {\r\n    const groups = [];\r\n    let currentStatus = null;\r\n    sortedJobs.forEach(job => {\r\n      const statusKey = (job.status || 'SCHEDULED').toUpperCase();\r\n      if (statusKey !== currentStatus) {\r\n        groups.push({ status: statusKey, jobs: [job] });\r\n        currentStatus = statusKey;\r\n      } else {\r\n        groups[groups.length - 1].jobs.push(job);\r\n      }\r\n    });\r\n    return groups;\r\n  }, [sortedJobs]);\r\n\r\n  const statusLabel = (status) => {\r\n    const key = (status || 'SCHEDULED').toUpperCase();\r\n    return pillTone[key]?.label || key.charAt(0) + key.slice(1).toLowerCase();\r\n  };\r\n\r\n  const quickStatusActions = [\r\n    { label:'Start job', value:'IN_PROGRESS', tone:'primary' },\r\n    { label:'Mark completed', value:'COMPLETED', tone:'success' },\r\n    { label:'Mark paid', value:'PAID', tone:'success' },\r\n    { label:'Pause', value:'ON_HOLD', tone:'warning' },\r\n  ];\r\n\r\n  const inputStyle = {\r\n    borderWidth: 1,\r\n    borderColor: palette.border,\r\n    borderRadius: 12,\r\n    paddingHorizontal: spacing(1.5),\r\n    paddingVertical: spacing(1.25),\r\n    backgroundColor: palette.surfaceMuted,\r\n    color: palette.text,\r\n    fontSize: typography.body,\r\n    marginBottom: spacing(1.5),\r\n  };\r\n\r\n  const jobTabs = [\r\n    { key:'BASICS', label:'Basics' },\r\n    { key:'CUSTOMER', label:'Customer' },\r\n    { key:'JOBSITE', label:'Jobsite' },\r\n    { key:'NOTES', label:'Notes' },\r\n  ];\r\n\r\n  const renderJobFormFields = () => {\r\n    if (jobFormTab === 'BASICS') {\r\n      return (\r\n        <View>\r\n          <TextInput\r\n            placeholder=\"Job name\"\r\n            placeholderTextColor={palette.muted}\r\n            value={newJobName}\r\n            onChangeText={setNewJobName}\r\n            style={inputStyle}\r\n          />\r\n          <DateInputField\r\n            value={newJobStartDate}\r\n            onChange={setNewJobStartDate}\r\n            placeholder=\"Start date\"\r\n          />\r\n          <DateInputField\r\n            value={newJobDueDate}\r\n            onChange={setNewJobDueDate}\r\n            placeholder=\"Due date\"\r\n          />\r\n          <View style={{ marginTop: spacing(1.5) }}>\r\n            <TagInput value={newJobTags} onChange={setNewJobTags} placeholder=\"Add tags (e.g. HVAC, Urgent)\" suggestions={jobTagSuggestions} />\r\n          </View>\r\n        </View>\r\n      );\r\n    }\r\n    if (jobFormTab === 'CUSTOMER') {\r\n      return (\r\n        <View>\r\n          <TextInput\r\n            placeholder=\"Customer name\"\r\n            placeholderTextColor={palette.muted}\r\n            value={newCustomerName}\r\n            onChangeText={setNewCustomerName}\r\n            style={inputStyle}\r\n          />\r\n          <TextInput\r\n            placeholder=\"Phone\"\r\n            placeholderTextColor={palette.muted}\r\n            keyboardType=\"phone-pad\"\r\n            value={newCustomerPhone}\r\n            onChangeText={setNewCustomerPhone}\r\n            style={inputStyle}\r\n          />\r\n          <TextInput\r\n            placeholder=\"Email\"\r\n            placeholderTextColor={palette.muted}\r\n            keyboardType=\"email-address\"\r\n            autoCapitalize=\"none\"\r\n            value={newCustomerEmail}\r\n            onChangeText={setNewCustomerEmail}\r\n            style={inputStyle}\r\n          />\r\n        </View>\r\n      );\r\n    }\r\n    if (jobFormTab === 'JOBSITE') {\r\n      return (\r\n        <View>\r\n          <TextInput\r\n            placeholder=\"Address line 1\"\r\n            placeholderTextColor={palette.muted}\r\n            value={newAddressLine1}\r\n            onChangeText={setNewAddressLine1}\r\n            style={inputStyle}\r\n          />\r\n          <TextInput\r\n            placeholder=\"Address line 2\"\r\n            placeholderTextColor={palette.muted}\r\n            value={newAddressLine2}\r\n            onChangeText={setNewAddressLine2}\r\n            style={inputStyle}\r\n          />\r\n          <View style={{ flexDirection:'row', columnGap: spacing(1.5) }}>\r\n            <View style={{ flex:1 }}>\r\n              <TextInput\r\n                placeholder=\"City\"\r\n                placeholderTextColor={palette.muted}\r\n                value={newCity}\r\n                onChangeText={setNewCity}\r\n                style={[inputStyle, { marginBottom: 0 }]}\r\n              />\r\n            </View>\r\n            <View style={{ width: 80 }}>\r\n              <TextInput\r\n                placeholder=\"State\"\r\n                placeholderTextColor={palette.muted}\r\n                value={newStateCode}\r\n                onChangeText={setNewStateCode}\r\n                style={[inputStyle, { marginBottom: 0 }]}\r\n              />\r\n            </View>\r\n            <View style={{ width: 100 }}>\r\n              <TextInput\r\n                placeholder=\"ZIP\"\r\n                placeholderTextColor={palette.muted}\r\n                value={newZip}\r\n                onChangeText={setNewZip}\r\n                style={[inputStyle, { marginBottom: 0 }]}\r\n              />\r\n            </View>\r\n          </View>\r\n        </View>\r\n      );\r\n    }\r\n    return (\r\n      <TextInput\r\n        placeholder=\"Internal notes\"\r\n        placeholderTextColor={palette.muted}\r\n        value={newJobNotes}\r\n        onChangeText={setNewJobNotes}\r\n        multiline\r\n        style={[inputStyle, { minHeight: 96, textAlignVertical: 'top' }]}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\r\n      <ScrollView\r\n        ref={scrollRef}\r\n        contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(4) }}\r\n        refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} tintColor={palette.primary} />}\r\n      >\r\n        <SurfaceCard style={{ marginBottom: spacing(3), padding: spacing(2.5) }}>\r\n          <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700', marginBottom: spacing(2) }}>Create job</Text>\r\n          <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1.5), marginBottom: spacing(2) }}>\r\n            {jobTabs.map(tab => {\r\n              const selected = tab.key === jobFormTab;\r\n              return (\r\n                <TouchableOpacity\r\n                  key={tab.key}\r\n                  onPress={() => setJobFormTab(tab.key)}\r\n                  activeOpacity={0.85}\r\n                  style={{\r\n                    paddingHorizontal: spacing(2),\r\n                    paddingVertical: spacing(1),\r\n                    borderRadius: 999,\r\n                    borderWidth: 1,\r\n                    borderColor: selected ? palette.primary : palette.border,\r\n                    backgroundColor: selected ? '#d9f2ed' : palette.surface,\r\n                  }}\r\n                >\r\n                  <Text style={{ color: selected ? palette.primaryStrong : palette.muted, fontWeight:'600', fontSize: typography.small }}>\r\n                    {tab.label}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              );\r\n            })}\r\n          </View>\r\n          {renderJobFormFields()}\r\n          <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center', marginTop: spacing(2) }}>\r\n            <QuickAction label=\"Reset\" tone=\"muted\" onPress={resetForm} />\r\n            <TouchableOpacity\r\n              onPress={createJob}\r\n              activeOpacity={0.85}\r\n              style={{ backgroundColor: palette.primary, paddingHorizontal: spacing(2.5), paddingVertical: spacing(1.5), borderRadius: 12 }}\r\n            >\r\n              <Text style={{ color:'#fff', fontWeight:'700' }}>Create job</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </SurfaceCard>\r\n\r\n        <SurfaceCard style={{ marginBottom: spacing(3), padding: spacing(2.5) }}>\r\n          <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700', marginBottom: spacing(1.5) }}>Filters</Text>\r\n          <Text style={{ color: palette.muted, marginBottom: spacing(1) }}>Urgency</Text>\r\n          <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginBottom: spacing(1.5) }}>\r\n            {urgencyFilters.map(option => (\r\n              <QuickAction\r\n                key={option.key}\r\n                label={option.label}\r\n                tone={selectedUrgency === option.key ? 'primary' : 'muted'}\r\n                onPress={() => setSelectedUrgency(option.key)}\r\n              />\r\n            ))}\r\n          </View>\r\n          {availableTags.length ? (\r\n            <View style={{ marginBottom: spacing(1.5) }}>\r\n              <Text style={{ color: palette.muted, marginBottom: spacing(1) }}>Tags</Text>\r\n              <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1) }}>\r\n                {availableTags.map(tag => (\r\n                  <QuickAction\r\n                    key={tag}\r\n                    label={`#${tag}`}\r\n                    tone={selectedTag === tag ? 'primary' : 'muted'}\r\n                    onPress={() => setSelectedTag(selectedTag === tag ? null : tag)}\r\n                  />\r\n                ))}\r\n              </View>\r\n            </View>\r\n          ) : null}\r\n          {availableCities.length ? (\r\n            <View>\r\n              <Text style={{ color: palette.muted, marginBottom: spacing(1) }}>Location</Text>\r\n              <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1) }}>\r\n                {availableCities.map(city => (\r\n                  <QuickAction\r\n                    key={city}\r\n                    label={city}\r\n                    tone={selectedCity === city ? 'primary' : 'muted'}\r\n                    onPress={() => setSelectedCity(selectedCity === city ? null : city)}\r\n                  />\r\n                ))}\r\n              </View>\r\n            </View>\r\n          ) : null}\r\n          {(selectedTag || selectedCity || selectedUrgency !== 'ALL') ? (\r\n            <View style={{ marginTop: spacing(2) }}>\r\n              <QuickAction label=\"Clear filters\" tone=\"muted\" onPress={clearFilters} />\r\n            </View>\r\n          ) : null}\r\n        </SurfaceCard>\r\n\r\n        {loading && !refreshing && jobs.length === 0 ? (\r\n          <SurfaceCard style={{ alignItems:'center', paddingVertical: spacing(6), marginBottom: spacing(3) }}>\r\n            <ActivityIndicator color={palette.primary} />\r\n            <Text style={{ color: palette.muted, marginTop: spacing(1.5) }}>Loading jobs...</Text>\r\n          </SurfaceCard>\r\n        ) : null}\r\n\r\n        {groupedJobs.length === 0 ? (\r\n          <SurfaceCard>\r\n            <Text style={{ color: palette.muted }}>\r\n              {hasFilters ? 'No jobs match the current filters.' : 'No jobs yet. Convert a lead or add a job to get started.'}\r\n            </Text>\r\n          </SurfaceCard>\r\n        ) : (\r\n          groupedJobs.map(group => (\r\n            <View key={group.status} style={{ marginBottom: spacing(3) }}>\r\n              <Text style={{ color: palette.muted, fontWeight:'700', fontSize: typography.small, textTransform:'uppercase', marginBottom: spacing(1) }}>\r\n                {statusLabel(group.status)}\r\n              </Text>\r\n              {group.jobs.map(job => {\r\n                const customer = job.Customer || {};\r\n                const jobsite = job.Jobsite || {};\r\n                const addressParts = [\r\n                  jobsite.addressLine1,\r\n                  jobsite.addressLine2,\r\n                  [jobsite.city, jobsite.state].filter(Boolean).join(', '),\r\n                  jobsite.zip\r\n                ].filter(Boolean);\r\n                const address = addressParts.join(', ');\r\n                const statusKey = (job.status || 'SCHEDULED').toUpperCase();\r\n                const assignedTech = job.assignedTech;\r\n                return (\r\n                  <SurfaceCard key={job.id} style={{ marginBottom: spacing(1.5) }}>\r\n                    <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center' }}>\r\n                      <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600' }}>{job.name || `Job #${job.id}`}</Text>\r\n                      <StatusPill status={statusKey} />\r\n                    </View>\r\n                    {(job.startDate || job.endDate) ? (\r\n                      <Text style={{ color: palette.muted, marginTop: spacing(0.75) }}>\r\n                        {[job.startDate ? `Start ${formatDate(job.startDate)}` : null, job.endDate ? `Due ${formatDate(job.endDate)}` : null].filter(Boolean).join(' | ')}\r\n                      </Text>\r\n                    ) : null}\r\n                    {customer.name ? <Text style={{ color: palette.text, fontWeight:'600', marginTop: spacing(1) }}>{customer.name}</Text> : null}\r\n                    {customer.phone ? <Text style={{ color: palette.muted }}>{customer.phone}</Text> : null}\r\n                    {customer.email ? <Text style={{ color: palette.muted }}>{customer.email}</Text> : null}\r\n                    {address ? <Text style={{ color: palette.muted, marginTop: spacing(1) }}>{address}</Text> : null}\r\n                    {assignedTech ? (\r\n                      <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>\r\n                        Assigned to {assignedTech.fullName || assignedTech.email || 'Tech'}\r\n                      </Text>\r\n                    ) : null}\r\n                    {job.notes ? <Text style={{ color: palette.muted, marginTop: spacing(1) }} numberOfLines={3}>{job.notes}</Text> : null}\r\n                    {Array.isArray(job.tags) && job.tags.length ? (\r\n                      <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginTop: spacing(1) }}>\r\n                        {job.tags.map(tag => (\r\n                          <View\r\n                            key={`${job.id}-${tag}`}\r\n                            style={{ backgroundColor: '#e0f3f0', borderRadius: 999, paddingHorizontal: spacing(1.5), paddingVertical: spacing(0.5) }}\r\n                          >\r\n                            <Text style={{ color: palette.primaryStrong, fontWeight:'600', fontSize: typography.small }}>{`#${tag}`}</Text>\r\n                          </View>\r\n                        ))}\r\n                      </View>\r\n                    ) : null}\r\n                    <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginTop: spacing(2) }}>\r\n                      {address ? <QuickAction label=\"Map\" tone=\"muted\" onPress={() => openJobInMaps(job)} /> : null}\r\n                      <QuickAction label=\"View job\" onPress={() => navigation.navigate('JobDetail', { jobId: job.id })} tone=\"muted\" />\r\n                      {quickStatusActions.map(action => (\r\n                        action.value === statusKey ? null : (\r\n                          <QuickAction\r\n                            key={action.value}\r\n                            label={action.label}\r\n                            tone={action.tone}\r\n                            onPress={() => updateJobStatus(job.id, action.value)}\r\n                          />\r\n                        )\r\n                      ))}\r\n                      <QuickAction label=\"Delete\" tone=\"danger\" onPress={() => removeJob(job.id)} />\r\n                    </View>\r\n                  </SurfaceCard>\r\n                );\r\n              })}\r\n            </View>\r\n          ))\r\n        )}\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\nfunction JobDetailScreen({ route, navigation }){\r\n  const { jobId } = route.params;\r\n  const { token, user } = useAuth();\r\n  const [jobName, setJobName] = useState('');\r\n  const [jobStartDate, setJobStartDate] = useState('');\r\n  const [jobEndDate, setJobEndDate] = useState('');\r\n  const [jobNotes, setJobNotes] = useState('');\r\n  const [jobCustomerName, setJobCustomerName] = useState('');\r\n  const [jobCustomerPhone, setJobCustomerPhone] = useState('');\r\n  const [jobCustomerEmail, setJobCustomerEmail] = useState('');\r\n  const [jobAddressLine1, setJobAddressLine1] = useState('');\r\n  const [jobAddressLine2, setJobAddressLine2] = useState('');\r\n  const [jobCity, setJobCity] = useState('');\r\n  const [jobStateCode, setJobStateCode] = useState('');\r\n  const [jobZip, setJobZip] = useState('');\r\n  const [jobTags, setJobTags] = useState([]);\r\n  const [assignedTechId, setAssignedTechId] = useState(null);\r\n  const [team, setTeam] = useState([]);\r\n  const [assignedTechName, setAssignedTechName] = useState('');\r\n  const [assigningTech, setAssigningTech] = useState(false);\r\n  const [jobAttachments, setJobAttachments] = useState([]);\r\n  const [loadingAttachments, setLoadingAttachments] = useState(false);\r\n  const [uploadingAttachment, setUploadingAttachment] = useState(false);\r\n  const [jobActivity, setJobActivity] = useState([]);\r\n  const [newActivityNote, setNewActivityNote] = useState('');\r\n  const [addingActivity, setAddingActivity] = useState(false);\r\n  const [changeOrders, setCO] = useState([]);\r\n  const [title, setTitle] = useState('');\r\n  const [amountDelta, setAmountDelta] = useState('0');\r\n  const [tagSuggestions, setTagSuggestions] = useState(defaultTagSeeds);\r\n  const roleKey = normalizeRole(user?.role);\r\n  const canManageChangeOrders = ['ADMIN','SUPERVISOR','ESTIMATOR'].includes(roleKey);\r\n  const canAssignTech = roleKey === 'ADMIN';\r\n  const loadCO = useCallback(async () => {\r\n    setCO(await api(`/change-orders/job/${jobId}`,'GET',null,token));\r\n  }, [jobId, token]);\r\n  const loadJob = useCallback(async () => {\n    try {\n      const j = await api(`/jobs/${jobId}`,'GET',null,token);\n      setJobName(j.name||'');\n      setJobStartDate(j.startDate||'');\n      setJobEndDate(j.endDate||'');\n      setJobNotes(j.notes||'');\n      const customer = j.Customer || {};\n      const jobsite = j.Jobsite || {};\n      setJobCustomerName(customer.name || '');\n      setJobCustomerPhone(customer.phone || '');\n      setJobCustomerEmail(customer.email || '');\n      setJobAddressLine1(jobsite.addressLine1 || '');\n      setJobAddressLine2(jobsite.addressLine2 || '');\n      setJobCity(jobsite.city || '');\n      setJobStateCode(jobsite.state || '');\n      setJobZip(jobsite.zip || '');\n      setJobTags(Array.isArray(j.tags) ? j.tags : []);\n      setJobActivity(Array.isArray(j.activityLog) ? j.activityLog : []);\n      setAssignedTechId(j.assignedTo ?? j.assignedTech?.id ?? null);\n      const techLabel = j.assignedTech ? (j.assignedTech.fullName || j.assignedTech.email || `Tech #${j.assignedTech.id}`) : '';\n      setAssignedTechName(techLabel);\n    } catch(e) {\n      if (e?.status === 404) {\n        Alert.alert('Job removed', 'This job no longer exists. Returning to jobs.', [\n          {\n            text: 'OK',\n            onPress: () => navigation.navigate('Tabs', { screen: 'Jobs' }),\n          },\n        ]);\n        navigation.navigate('Tabs', { screen: 'Jobs' });\n      } else if (e?.message) {\n        Alert.alert('Error', e.message);\n      } else {\n        Alert.alert('Error', 'Unable to load job details.');\n      }\n    }\n  }, [jobId, token, navigation]);\n  const loadTeam = useCallback(async () => {\r\n    if (!canAssignTech) return;\r\n    try {\r\n      const data = await api('/users','GET',null,token);\r\n      setTeam(Array.isArray(data) ? data.filter(member => member.active !== false) : []);\r\n    } catch (e) {\r\n      // ignore; admin-only feature\r\n    }\r\n  }, [canAssignTech, token]);\r\nconst loadAttachments = useCallback(async () => {\r\n  try {\r\n    setLoadingAttachments(true);\r\n    const response = await api(`/attachments?entityType=JOB&entityId=${jobId}`,'GET',null,token);\r\n    setJobAttachments(Array.isArray(response) ? response : []);\r\n  } catch (e) {\r\n    // ignore best effort offline\r\n  } finally {\r\n    setLoadingAttachments(false);\r\n  }\r\n}, [jobId, token]);\r\nconst loadTagLibrary = useCallback(async () => {\r\n  try {\r\n    const [jobsData, leadsData] = await Promise.all([\r\n      api('/jobs','GET',null,token),\r\n      api('/leads','GET',null,token),\r\n    ]);\r\n    const library = new Set(defaultTagSeeds);\r\n    if (Array.isArray(jobsData)) {\r\n      jobsData.forEach(job => {\r\n        (Array.isArray(job.tags) ? job.tags : []).forEach(tag => library.add(String(tag)));\r\n      });\r\n    }\r\n    if (Array.isArray(leadsData)) {\r\n      leadsData.forEach(lead => {\r\n        (Array.isArray(lead.tags) ? lead.tags : []).forEach(tag => library.add(String(tag)));\r\n      });\r\n    }\r\n    setTagSuggestions(Array.from(library));\r\n  } catch {}\r\n}, [token]);\r\nuseEffect(()=>{ loadJob(); loadCO(); loadAttachments(); loadTagLibrary(); if (canAssignTech) loadTeam(); },[loadJob, loadCO, loadAttachments, loadTagLibrary, loadTeam, canAssignTech]);\r\n  const addCO = async ()=>{\r\n    if(!title.trim()){\r\n      Alert.alert('Missing info', 'Add a title for the change order.');\r\n      return;\r\n    }\r\n    await api(`/change-orders/job/${jobId}`,'POST',{ title: title.trim(), amountDelta: parseFloat(amountDelta) || 0 }, token);\r\n    setTitle(''); setAmountDelta('0'); loadCO();\r\n  };\r\n  const saveJobDetails = async () => {\r\n    try {\r\n      await api(`/jobs/${jobId}`,'PATCH',{\r\n        name: jobName,\r\n        startDate: jobStartDate || null,\r\n        endDate: jobEndDate || null,\r\n        notes: jobNotes,\r\n        tags: Array.isArray(jobTags) ? jobTags.filter(Boolean) : [],\r\n        assignedTo: assignedTechId || null,\r\n        customer: {\r\n          name: jobCustomerName,\r\n          phone: jobCustomerPhone,\r\n          email: jobCustomerEmail,\r\n          billingAddress: jobAddressLine1 ? `${jobAddressLine1}${jobAddressLine2 ? `\r\n${jobAddressLine2}` : ''}${jobCity ? `\r\n${jobCity}, ${jobStateCode} ${jobZip}` : ''}` : null,\r\n        },\r\n        jobsite: {\r\n          addressLine1: jobAddressLine1,\r\n          addressLine2: jobAddressLine2,\r\n          city: jobCity,\r\n          state: jobStateCode,\r\n        zip: jobZip,\r\n      },\r\n    }, token);\r\n      Alert.alert('Saved', 'Job details updated.');\r\n      navigation.navigate('Tabs', { screen: 'Jobs' });\r\n    } catch(e) {\r\n      Alert.alert('Error', e.message || 'Unable to save job');\r\n    }\r\n  };\r\n  const deleteJob = () => {\r\n    Alert.alert('Delete job', `Delete job #${jobId}?`, [\r\n      { text:'Cancel', style:'cancel' },\r\n      { text:'Delete', style:'destructive', onPress: async ()=>{\r\n        try{\r\n          await api(`/jobs/${jobId}`,'DELETE',null,token);\r\n          db.transaction(tx => tx.executeSql('DELETE FROM jobs_cache WHERE id=?', [jobId]));\r\n          Alert.alert('Deleted', 'Job removed.');\r\n          navigation.navigate('Tabs', { screen:'Jobs' });\r\n        }catch(e){\r\n          Alert.alert('Error', e.message || 'Unable to delete job');\r\n        }\r\n      }}\r\n    ]);\r\n  };\r\n  const handleAssignTech = useCallback(async (techId) => {\r\n    if (!canAssignTech) return;\r\n    setAssigningTech(true);\r\n    try {\r\n      await api(`/jobs/${jobId}`,'PATCH',{ assignedTo: techId || null }, token);\r\n      setAssignedTechId(techId || null);\r\n      await loadJob();\r\n    } catch (e) {\r\n      Alert.alert('Error', e.message || 'Unable to update assignment.');\r\n    } finally {\r\n      setAssigningTech(false);\r\n    }\r\n  }, [canAssignTech, jobId, token, loadJob]);\r\n  const scheduleFollowUp = useCallback(async (channel) => {\r\n    const scheduledFor = new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString();\r\n    const payload = {};\r\n    if (channel === 'EMAIL') {\r\n      if (!jobCustomerEmail) return false;\r\n      payload.email = jobCustomerEmail;\r\n    }\r\n    if (channel === 'SMS') {\r\n      if (!jobCustomerPhone) return false;\r\n      payload.phone = jobCustomerPhone;\r\n    }\r\n    try {\r\n      await api('/reminders', 'POST', {\r\n        jobId,\r\n        channel,\r\n        template: 'FOLLOW_UP',\r\n        scheduledFor,\r\n        payload,\r\n      }, token);\r\n      return true;\r\n    } catch (error) {\r\n      console.warn('Failed to schedule follow up', error?.message || error);\r\n      return false;\r\n    }\r\n  }, [jobCustomerEmail, jobCustomerPhone, jobId, token]);\r\n  const handleCallCustomer = useCallback(async () => {\r\n    if (!jobCustomerPhone) {\r\n      Alert.alert('Missing phone', 'Add a phone number to call this customer.');\r\n      return;\r\n    }\r\n    await Linking.openURL(`tel:${jobCustomerPhone}`);\r\n    const channel = jobCustomerEmail ? 'EMAIL' : 'SMS';\r\n    const scheduled = await scheduleFollowUp(channel);\r\n    if (scheduled) {\r\n      Alert.alert('Reminder scheduled', 'We will send a branded follow-up in 24 hours.');\r\n    }\r\n  }, [jobCustomerPhone, jobCustomerEmail, scheduleFollowUp]);\r\n  const handleTextCustomer = useCallback(async () => {\r\n    if (!jobCustomerPhone) {\r\n      Alert.alert('Missing phone', 'Add a phone number to text this customer.');\r\n      return;\r\n    }\r\n    const message = `Reminder: Job #${jobId} is scheduled soon.`;\r\n    await Linking.openURL(`sms:${jobCustomerPhone}?body=${encodeURIComponent(message)}`);\r\n    const scheduled = await scheduleFollowUp('SMS');\r\n    if (scheduled) {\r\n      Alert.alert('Reminder scheduled', 'We will automatically follow up with a branded text.');\r\n    }\r\n  }, [jobCustomerPhone, jobId, scheduleFollowUp]);\r\n  const handleEmailCustomer = useCallback(async () => {\r\n    if (!jobCustomerEmail) {\r\n      Alert.alert('Missing email', 'Add an email to message this customer.');\r\n      return;\r\n    }\r\n    const subject = `Job #${jobId} update`;\r\n    const body = `Hi ${jobCustomerName || ''},%0D%0A%0D%0AJust a quick update on your project. Let us know if you have any questions.%0D%0A%0D%0AThanks!`;\r\n    await Linking.openURL(`mailto:${jobCustomerEmail}?subject=${encodeURIComponent(subject)}&body=${body}`);\r\n    const scheduled = await scheduleFollowUp('EMAIL');\r\n    if (scheduled) {\r\n      Alert.alert('Reminder scheduled', 'We will nudge the client with a branded email follow-up.');\r\n    }\r\n  }, [jobCustomerEmail, jobCustomerName, jobId, scheduleFollowUp]);\r\n  const handleOpenJobsiteMap = useCallback(() => {\r\n    const parts = [\r\n      jobAddressLine1?.trim(),\r\n      jobAddressLine2?.trim(),\r\n      [jobCity?.trim(), jobStateCode?.trim()].filter(Boolean).join(' '),\r\n      jobZip?.trim(),\r\n    ].filter(Boolean);\r\n    if (!parts.length) {\r\n      Alert.alert('Missing address', 'Add the jobsite address to open maps.');\r\n      return;\r\n    }\r\n    const address = parts.join(', ');\r\n    Linking.openURL(`https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(address)}`);\r\n  }, [jobAddressLine1, jobAddressLine2, jobCity, jobStateCode, jobZip]);\r\n  const handleUploadAttachment = useCallback(async () => {\r\n    try {\r\n      const permission = await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n      if (permission && permission.granted === false) {\r\n        Alert.alert('Permission needed', 'Allow photo library access to attach files.');\r\n        return;\r\n      }\r\n      const result = await ImagePicker.launchImageLibraryAsync({\r\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n        quality: 0.8,\r\n        allowsMultipleSelection: false,\r\n        base64: false,\r\n      });\r\n      if (result.canceled) return;\r\n      const asset = result.assets && result.assets[0];\r\n      if (!asset?.uri) return;\r\n      setUploadingAttachment(true);\r\n      const base64 = await FileSystem.readAsStringAsync(asset.uri, { encoding: FileSystem.EncodingType.Base64 });\r\n      const dataUrl = `data:${asset.mimeType || 'image/jpeg'};base64,${base64}`;\r\n      const uploaded = await api('/upload/image','POST',{ dataUrl }, token);\r\n      await api('/attachments','POST',{\r\n        entityType: 'JOB',\r\n        entityId: jobId,\r\n        fileUrl: uploaded.url,\r\n      }, token);\r\n      await loadAttachments();\r\n    } catch (e) {\r\n      Alert.alert('Error', e.message || 'Unable to upload attachment.');\r\n    } finally {\r\n      setUploadingAttachment(false);\r\n    }\r\n  }, [jobId, token, loadAttachments]);\r\n  const handleDeleteAttachment = useCallback((id) => {\r\n    Alert.alert('Delete attachment', 'Remove this file from the job?', [\r\n      { text:'Cancel', style:'cancel' },\r\n      {\r\n        text:'Delete',\r\n        style:'destructive',\r\n        onPress: async () => {\r\n          setJobAttachments(prev => prev.filter(att => Number(att.id) !== Number(id)));\r\n          try {\r\n            await api(`/attachments/${id}`,'DELETE',null,token);\r\n            await loadAttachments();\r\n          } catch (e) {\r\n            await loadAttachments();\r\n            Alert.alert('Error', e.message || 'Unable to delete attachment.');\r\n          }\r\n        }\r\n      }\r\n    ]);\r\n  }, [token, loadAttachments]);\r\n  const addActivityEntry = useCallback(async () => {\r\n    const trimmed = newActivityNote.trim();\r\n    if (!trimmed) {\r\n      Alert.alert('Missing note', 'Add details before posting to the log.');\r\n      return;\r\n    }\r\n    const entry = {\r\n      note: trimmed,\r\n      author: user?.fullName || user?.name || user?.email || 'Team',\r\n      createdAt: new Date().toISOString(),\r\n    };\r\n    try {\r\n      setAddingActivity(true);\r\n      const nextLog = [entry, ...(Array.isArray(jobActivity) ? jobActivity : [])];\r\n      await api(`/jobs/${jobId}`,'PATCH',{ activityLog: nextLog }, token);\r\n      setJobActivity(nextLog);\r\n      setNewActivityNote('');\r\n    } catch (e) {\r\n      Alert.alert('Error', e.message || 'Unable to save activity.');\r\n    } finally {\r\n      setAddingActivity(false);\r\n    }\r\n  }, [newActivityNote, jobActivity, jobId, token, user]);\r\n  const activityItems = useMemo(() => {\r\n    const list = Array.isArray(jobActivity) ? jobActivity.slice() : [];\r\n    return list.sort((a, b) => {\r\n      const aTime = new Date(a?.createdAt || 0).getTime();\r\n      const bTime = new Date(b?.createdAt || 0).getTime();\r\n      return (Number.isNaN(bTime) ? 0 : bTime) - (Number.isNaN(aTime) ? 0 : aTime);\r\n    });\r\n  }, [jobActivity]);\r\n  return (\r\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\r\n      <ScrollView\r\n        contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(6) }}\r\n      >\r\n        <Text style={{ color: palette.text, fontSize: typography.h1, fontWeight:'700' }}>Job #{jobId}</Text>\r\n        <Text style={{ color: palette.muted, marginTop: spacing(0.5), marginBottom: spacing(3) }}>\r\n          Keep job information up to date so the field team always has the latest context.\r\n        </Text>\r\n\r\n        <SurfaceCard style={{ padding: spacing(2.5), marginBottom: spacing(3) }}>\r\n          <Text style={{ color: palette.muted, fontSize: typography.small, fontWeight:'700', textTransform:'uppercase', marginBottom: spacing(1) }}>\r\n            Basics\r\n          </Text>\r\n          <FormInput placeholder=\"Job name\" value={jobName} onChangeText={setJobName} />\r\n          <View style={{ flexDirection:'row', columnGap: spacing(1.5) }}>\r\n            <View style={{ flex:1 }}>\r\n              <DateInputField value={jobStartDate} onChange={setJobStartDate} placeholder=\"Start date\" style={{ marginBottom: 0 }} />\r\n            </View>\r\n            <View style={{ flex:1 }}>\r\n              <DateInputField value={jobEndDate} onChange={setJobEndDate} placeholder=\"End date\" style={{ marginBottom: 0 }} />\r\n            </View>\r\n          </View>\r\n          <FormInput\r\n            placeholder=\"Notes / scope\"\r\n            value={jobNotes}\r\n            onChangeText={setJobNotes}\r\n            multiline\r\n            style={[{ minHeight: 112, textAlignVertical: 'top', lineHeight: lineHeightFor(typography.body), marginTop: \"10px\" }]}\r\n          />\r\n          <Text style={{ color: palette.muted, fontWeight:'600', marginTop: spacing(1.5), marginBottom: spacing(0.5) }}>Tags</Text>\r\n          <TagInput value={jobTags} onChange={setJobTags} placeholder=\"Add job tags (e.g. Roofing, Urgent)\" suggestions={tagSuggestions} />\r\n          <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center', marginTop: spacing(2) }}>\r\n            <QuickAction label=\"Delete job\" tone=\"danger\" onPress={deleteJob} />\r\n            <TouchableOpacity\r\n              onPress={saveJobDetails}\r\n              activeOpacity={0.85}\r\n              style={{ backgroundColor: palette.primary, paddingHorizontal: spacing(2.5), paddingVertical: spacing(1.5), borderRadius: 12 }}\r\n            >\r\n              <Text style={{ color:'#fff', fontWeight:'700' }}>Save changes</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </SurfaceCard>\r\n\r\n        <SurfaceCard style={{ padding: spacing(2.5), marginBottom: spacing(3) }}>\r\n          <Text style={{ color: palette.muted, fontSize: typography.small, fontWeight:'700', textTransform:'uppercase', marginBottom: spacing(1) }}>\r\n            Customer\r\n          </Text>\r\n          <FormInput placeholder=\"Name\" value={jobCustomerName} onChangeText={setJobCustomerName} />\r\n          <FormInput placeholder=\"Phone\" value={jobCustomerPhone} onChangeText={setJobCustomerPhone} keyboardType=\"phone-pad\" />\r\n          <FormInput\r\n            placeholder=\"Email\"\r\n            value={jobCustomerEmail}\r\n            onChangeText={setJobCustomerEmail}\r\n            keyboardType=\"email-address\"\r\n            autoCapitalize=\"none\"\r\n          />\r\n          {(jobCustomerPhone || jobCustomerEmail) ? (\r\n            <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginTop: spacing(1.5) }}>\r\n              {jobCustomerPhone ? <QuickAction label=\"Call\" tone=\"primary\" onPress={handleCallCustomer} /> : null}\r\n              {jobCustomerPhone ? <QuickAction label=\"Text\" tone=\"primary\" onPress={handleTextCustomer} /> : null}\r\n              {jobCustomerEmail ? <QuickAction label=\"Email\" tone=\"muted\" onPress={handleEmailCustomer} /> : null}\r\n            </View>\r\n          ) : null}\r\n        </SurfaceCard>\r\n\r\n        <SurfaceCard style={{ padding: spacing(2.5), marginBottom: spacing(3) }}>\r\n          <Text style={{ color: palette.muted, fontSize: typography.small, fontWeight:'700', textTransform:'uppercase', marginBottom: spacing(1) }}>\r\n            Jobsite\r\n          </Text>\r\n          <FormInput placeholder=\"Address line 1\" value={jobAddressLine1} onChangeText={setJobAddressLine1} />\r\n          <FormInput placeholder=\"Address line 2\" value={jobAddressLine2} onChangeText={setJobAddressLine2} />\r\n          <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1.5), rowGap: spacing(1.5) }}>\r\n            <FormInput placeholder=\"City\" value={jobCity} onChangeText={setJobCity} style={[{ flex:1, minWidth: '48%', marginBottom: 0 }]} />\r\n            <FormInput\r\n              placeholder=\"State\"\r\n              value={jobStateCode}\r\n              onChangeText={setJobStateCode}\r\n              autoCapitalize=\"characters\"\r\n              style={[{ flexBasis: '20%', minWidth: 80, marginBottom: 0 }]}\r\n            />\r\n            <FormInput\r\n              placeholder=\"ZIP\"\r\n              value={jobZip}\r\n              onChangeText={setJobZip}\r\n              keyboardType=\"numeric\"\r\n              style={[{ flexBasis: '28%', minWidth: 120, marginBottom: 0 }]}\r\n            />\r\n          </View>\r\n        <View style={{ marginTop: spacing(1.5) }}>\r\n          <QuickAction label=\"Open in Maps\" tone=\"primary\" onPress={handleOpenJobsiteMap} />\r\n        </View>\r\n      </SurfaceCard>\r\n\r\n      {(canAssignTech || assignedTechId || assignedTechName) ? (\r\n        <SurfaceCard style={{ padding: spacing(2.5), marginBottom: spacing(3) }}>\r\n          <Text style={{ color: palette.muted, fontSize: typography.small, fontWeight:'700', textTransform:'uppercase', marginBottom: spacing(1) }}>\r\n            Assigned technician\r\n          </Text>\r\n          {canAssignTech ? (\r\n            team.length ? (\r\n              <>\r\n                <TechSelector\r\n                  team={team}\r\n                  value={assignedTechId}\r\n                  onSelect={handleAssignTech}\r\n                  allowClear\r\n                  label=\"Tap to assign\"\r\n                />\r\n                {assigningTech ? (\r\n                  <Text style={{ color: palette.muted, marginTop: spacing(1) }}>Updating assignment...</Text>\r\n                ) : null}\r\n              </>\r\n            ) : (\r\n              <Text style={{ color: palette.muted }}>\r\n                Invite teammates from Team Management to assign jobs.\r\n              </Text>\r\n            )\r\n          ) : (\r\n            <Text style={{ color: palette.text }}>\r\n              {assignedTechName ? assignedTechName : 'Unassigned'}\r\n            </Text>\r\n          )}\r\n        </SurfaceCard>\r\n      ) : null}\r\n\r\n      <SurfaceCard style={{ padding: spacing(2.5), marginBottom: spacing(3) }}>\r\n        <Text style={{ color: palette.muted, fontSize: typography.small, fontWeight:'700', textTransform:'uppercase' }}>Attachments</Text>\r\n        <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>Store site photos, permits, and approvals for the crew.</Text>\r\n        <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginTop: spacing(1.5) }}>\r\n          <QuickAction\r\n              label={uploadingAttachment ? 'Uploading...' : 'Add photo'}\r\n              tone={uploadingAttachment ? 'muted' : 'primary'}\r\n              onPress={uploadingAttachment ? undefined : handleUploadAttachment}\r\n            />\r\n            <QuickAction label=\"Refresh\" tone=\"muted\" onPress={loadAttachments} />\r\n          </View>\r\n          {loadingAttachments ? (\r\n            <View style={{ alignItems:'center', paddingVertical: spacing(2) }}>\r\n              <ActivityIndicator color={palette.primary} />\r\n              <Text style={{ color: palette.muted, marginTop: spacing(1) }}>Syncing attachments...</Text>\r\n            </View>\r\n          ) : jobAttachments.length === 0 ? (\r\n            <Text style={{ color: palette.muted, marginTop: spacing(1.5) }}>No attachments yet.</Text>\r\n          ) : (\r\n            jobAttachments.map(att => {\r\n              const url = att?.fileUrl || '';\r\n              const isImage = typeof url === 'string' && /\\.(png|jpe?g|gif|webp)$/i.test(url);\r\n              return (\r\n                <View\r\n                  key={att.id}\r\n                  style={{\r\n                    borderWidth: 1,\r\n                    borderColor: palette.border,\r\n                    borderRadius: 12,\r\n                    marginTop: spacing(1.5),\r\n                    overflow: 'hidden',\r\n                    backgroundColor: palette.surface,\r\n                  }}\r\n                >\r\n                  {isImage && url ? (\r\n                    <TouchableOpacity onPress={() => url ? Linking.openURL(url) : null} activeOpacity={0.85}>\r\n                      <Image source={{ uri: url }} style={{ height: 180, width: '100%' }} resizeMode=\"cover\" />\r\n                    </TouchableOpacity>\r\n                  ) : null}\r\n                  <View style={{ padding: spacing(1.5) }}>\r\n                    <Text style={{ color: palette.text, fontWeight:'600' }}>{att.caption || 'Attachment'}</Text>\r\n                    <Text style={{ color: palette.muted, fontSize: typography.small, marginTop: spacing(0.5) }}>\r\n                      {(att.uploader?.fullName || att.uploader?.email || 'Uploaded')} {att.createdAt ? `• ${new Date(att.createdAt).toLocaleString()}` : ''}\r\n                    </Text>\r\n                    <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginTop: spacing(1.5) }}>\r\n                      {url ? <QuickAction label=\"Open\" tone=\"muted\" onPress={() => Linking.openURL(url)} /> : null}\r\n                      <QuickAction label=\"Delete\" tone=\"danger\" onPress={() => handleDeleteAttachment(att.id)} />\r\n                    </View>\r\n                  </View>\r\n                </View>\r\n              );\r\n            })\r\n          )}\r\n        </SurfaceCard>\r\n\r\n        <SurfaceCard style={{ padding: spacing(2.5), marginBottom: spacing(3) }}>\r\n          <Text style={{ color: palette.muted, fontSize: typography.small, fontWeight:'700', textTransform:'uppercase' }}>Activity log</Text>\r\n          <Text style={{ color: palette.muted, marginTop: spacing(0.5), marginBottom: spacing(1.5) }}>Capture approvals, client updates, and job milestones.</Text>\r\n          <TextInput\r\n            multiline\r\n            placeholder=\"Add a note for the team\"\r\n            placeholderTextColor={palette.muted}\r\n            value={newActivityNote}\r\n            onChangeText={setNewActivityNote}\r\n            style={[formInputBaseStyle, { minHeight: 96, textAlignVertical: 'top' }]}\r\n          />\r\n          <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginTop: spacing(1) }}>\r\n            <QuickAction\r\n              label={addingActivity ? 'Saving...' : 'Add entry'}\r\n              tone={addingActivity ? 'muted' : 'primary'}\r\n              onPress={addingActivity ? undefined : addActivityEntry}\r\n            />\r\n            <QuickAction label=\"Refresh\" tone=\"muted\" onPress={loadJob} />\r\n          </View>\r\n          {activityItems.length === 0 ? (\r\n            <Text style={{ color: palette.muted, marginTop: spacing(1.5) }}>No log entries yet.</Text>\r\n          ) : (\r\n            activityItems.map((entry, idx) => (\r\n              <View\r\n                key={`${entry.createdAt || idx}-${idx}`}\r\n                style={{\r\n                  marginTop: spacing(1.5),\r\n                  borderTopWidth: idx === 0 ? 0 : 1,\r\n                  borderTopColor: palette.border,\r\n                  paddingTop: idx === 0 ? 0 : spacing(1.5),\r\n                }}\r\n              >\r\n                <Text style={{ color: palette.text, fontWeight:'600' }}>{entry.note}</Text>\r\n                <Text style={{ color: palette.muted, fontSize: typography.small, marginTop: spacing(0.5) }}>\r\n                  {(entry.author || 'Team')} {entry.createdAt ? `• ${new Date(entry.createdAt).toLocaleString()}` : ''}\r\n                </Text>\r\n              </View>\r\n            ))\r\n          )}\r\n        </SurfaceCard>\r\n\r\n        {canManageChangeOrders ? (\r\n          <SurfaceCard style={{ padding: spacing(2.5), marginBottom: spacing(3) }}>\r\n            <Text style={{ color: palette.muted, fontSize: typography.small, fontWeight:'700', textTransform:'uppercase', marginBottom: spacing(1) }}>\r\n              New change order\r\n            </Text>\r\n            <FormInput placeholder=\"Title\" value={title} onChangeText={setTitle} />\r\n            <FormInput placeholder=\"Amount $\" value={amountDelta} onChangeText={setAmountDelta} keyboardType=\"decimal-pad\" />\r\n            <View style={{ flexDirection:'row', justifyContent:'flex-end', marginTop: spacing(2) }}>\r\n              <TouchableOpacity\r\n                onPress={addCO}\r\n                activeOpacity={0.85}\r\n                style={{ backgroundColor: palette.primary, paddingHorizontal: spacing(2.5), paddingVertical: spacing(1.5), borderRadius: 12 }}\r\n              >\r\n                <Text style={{ color:'#fff', fontWeight:'700' }}>Add change order</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </SurfaceCard>\r\n        ) : null}\r\n\r\n        <View style={{ marginBottom: spacing(3) }}>\r\n          <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700', marginBottom: spacing(1.5) }}>Change orders</Text>\r\n          {changeOrders.length === 0 ? (\r\n            <SurfaceCard>\r\n              <Text style={{ color: palette.muted }}>No change orders yet.</Text>\r\n            </SurfaceCard>\r\n          ) : changeOrders.map(item => {\r\n            const statusKey = (item.status || 'PENDING').toUpperCase();\r\n            const statusTone = (() => {\r\n              if (statusKey === 'APPROVED') return { bg: '#dcfce7', fg: palette.success, label: 'Approved' };\r\n              if (statusKey === 'REJECTED') return { bg: '#fee2e2', fg: palette.danger, label: 'Rejected' };\r\n              return { bg: '#e0f3f0', fg: palette.primaryStrong, label: 'Pending' };\r\n            })();\r\n            const amountLabel = formatCurrency(item.amountDelta || 0);\r\n            return (\r\n              <SurfaceCard key={item.id} style={{ marginBottom: spacing(1.5), padding: spacing(2.5) }}>\r\n                <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center' }}>\r\n                  <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600' }}>{item.title}</Text>\r\n                  <View style={{ backgroundColor: statusTone.bg, borderRadius: 999, paddingHorizontal: spacing(1.5), paddingVertical: spacing(0.5) }}>\r\n                    <Text style={{ color: statusTone.fg, fontWeight:'600', fontSize: typography.small }}>{statusTone.label}</Text>\r\n                  </View>\r\n                </View>\r\n                <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>{amountLabel}</Text>\r\n                {canManageChangeOrders ? (\r\n                  <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginTop: spacing(1.5) }}>\r\n                    <QuickAction\r\n                      label=\"Approve\"\r\n                      tone=\"success\"\r\n                      onPress={async ()=>{ await api(`/change-orders/${item.id}`,'PATCH',{ status:'APPROVED' }, token); loadCO(); }}\r\n                    />\r\n                    <QuickAction\r\n                      label=\"Reject\"\r\n                      tone=\"danger\"\r\n                      onPress={async ()=>{ await api(`/change-orders/${item.id}`,'PATCH',{ status:'REJECTED' }, token); loadCO(); }}\r\n                    />\r\n                  </View>\r\n                ) : null}\r\n              </SurfaceCard>\r\n            );\r\n          })}\r\n        </View>\r\n\r\n        <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700', marginBottom: spacing(1.5) }}>Tasks</Text>\r\n        <JobTasks jobId={jobId} />\r\n\r\n        <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700', marginTop: spacing(3), marginBottom: spacing(1.5) }}>Schedule</Text>\r\n        <JobSchedule jobId={jobId} />\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nfunction JobTasks({ jobId }){\r\n  const { token } = useAuth();\r\n  const [tasks, setTasks] = useState([]);\r\n  const [title, setTitle] = useState('');\r\n  const [dueDate, setDueDate] = useState('');\r\n  const load = async()=> {\r\n    try {\r\n      const data = await api(`/tasks?jobId=${jobId}`,'GET',null,token);\r\n      setTasks(data);\r\n      db.transaction(tx => {\r\n        tx.executeSql('DELETE FROM tasks_cache WHERE jobId=?', [jobId]);\r\n        data.forEach(t => tx.executeSql('INSERT OR REPLACE INTO tasks_cache (id, jobId, title, status, dueDate) VALUES (?,?,?,?,?)', [t.id, jobId, t.title||'', t.status||'TODO', t.dueDate||'']));\r\n      });\r\n    } catch(e) {\r\n      db.transaction(tx => tx.executeSql('SELECT id, jobId, title, status, dueDate FROM tasks_cache WHERE jobId=?', [jobId], (_, { rows }) => setTasks(rows._array || [])));\r\n    }\r\n  };\r\n  useEffect(()=>{ load(); },[]);\r\n  const add = async()=>{\r\n    if(!title.trim()) return Alert.alert('Title required');\r\n    await api('/tasks','POST',{ title, jobId, dueDate }, token);\r\n    setTitle(''); setDueDate(''); load();\r\n  };\r\n  const done = async(id)=>{ await api(`/tasks/${id}`,'PATCH',{ status:'DONE' }, token); load(); };\r\n  const remove = (id)=>{\r\n    Alert.alert('Delete task', 'Remove this task?', [\r\n      { text:'Cancel', style:'cancel' },\r\n      { text:'Delete', style:'destructive', onPress: async ()=>{ await api(`/tasks/${id}`,'DELETE',null,token); load(); } },\r\n    ]);\r\n  };\r\n  return (\r\n    <View>\r\n      <SurfaceCard style={{ marginBottom: spacing(2) }}>\r\n        <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600', marginBottom: spacing(1.5) }}>Add task</Text>\r\n        <TextInput\r\n          placeholder=\"Task title\"\r\n          placeholderTextColor={palette.muted}\r\n          value={title}\r\n          onChangeText={setTitle}\r\n          style={{\r\n            borderWidth:1,\r\n            borderColor: palette.border,\r\n            borderRadius: 12,\r\n            padding: spacing(2),\r\n            color: palette.text,\r\n            backgroundColor: palette.surfaceMuted,\r\n            marginBottom: spacing(1.5),\r\n          }}\r\n        />\r\n        <DateInputField value={dueDate} onChange={setDueDate} placeholder=\"Due date (optional)\" />\r\n        <QuickAction label=\"Add task\" onPress={add} />\r\n      </SurfaceCard>\r\n\r\n      {tasks.length === 0 ? (\r\n        <SurfaceCard>\r\n          <Text style={{ color: palette.muted }}>No tasks yet. Add one to start tracking progress.</Text>\r\n        </SurfaceCard>\r\n      ) : (\r\n        tasks.map(t => (\r\n          <SurfaceCard key={t.id} style={{ marginBottom: spacing(1.5) }}>\r\n            <Text style={{ color: palette.text, fontWeight:'600', fontSize: typography.h2 - 2 }}>{t.title}</Text>\r\n            <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>\r\n              Status: {t.status || 'TODO'}{t.dueDate ? ` - Due ${formatDate(t.dueDate)}` : ''}\r\n            </Text>\r\n            <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginTop: spacing(1.5) }}>\r\n              {!isTaskCompleted(t.status) ? (\r\n                <QuickAction label=\"Mark done\" tone=\"success\" onPress={() => done(t.id)} />\r\n              ) : null}\r\n              <QuickAction label=\"Delete\" tone=\"danger\" onPress={() => remove(t.id)} />\r\n            </View>\r\n          </SurfaceCard>\r\n        ))\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction JobSchedule({ jobId }){\r\n  const { token } = useAuth();\r\n  const [events, setEvents] = useState([]);\r\n  const [title, setTitle] = useState('');\r\n  const [startAt, setStartAt] = useState('');\r\n  const [endAt, setEndAt] = useState('');\r\n  const load = async()=> {\r\n    try {\r\n      const data = await api(`/calendar?jobId=${jobId}`,'GET',null,token);\r\n      setEvents(data);\r\n      db.transaction(tx => {\r\n        tx.executeSql('DELETE FROM calendar_cache WHERE jobId=?', [jobId]);\r\n        data.forEach(ev => tx.executeSql('INSERT OR REPLACE INTO calendar_cache (id, jobId, title, startAt, endAt) VALUES (?,?,?,?,?)', [ev.id, jobId, ev.title||'', ev.startAt||'', ev.endAt||'']));\r\n      });\r\n    } catch(e) {\r\n      db.transaction(tx => tx.executeSql('SELECT id, jobId, title, startAt, endAt FROM calendar_cache WHERE jobId=?', [jobId], (_, { rows }) => setEvents(rows._array || [])));\r\n    }\r\n  };\r\n  useEffect(()=>{ load(); },[]);\r\n  const add = async()=>{\r\n    if(!title.trim() || !startAt) return Alert.alert('Title and start time required');\r\n    await api('/calendar','POST',{ title, jobId, startAt, endAt }, token);\r\n    setTitle(''); setStartAt(''); setEndAt(''); load();\r\n  };\r\n  const remove = (id)=>{\r\n    Alert.alert('Delete event', 'Remove this schedule item?', [\r\n      { text:'Cancel', style:'cancel' },\r\n      { text:'Delete', style:'destructive', onPress: async ()=>{ await api(`/calendar/${id}`,'DELETE',null,token); load(); } },\r\n    ]);\r\n  };\r\n  return (\r\n    <View>\r\n      <SurfaceCard style={{ marginBottom: spacing(2) }}>\r\n        <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600', marginBottom: spacing(1.5) }}>Schedule event</Text>\r\n        <TextInput\r\n          placeholder=\"Event title\"\r\n          placeholderTextColor={palette.muted}\r\n          value={title}\r\n          onChangeText={setTitle}\r\n          style={{\r\n            borderWidth:1,\r\n            borderColor: palette.border,\r\n            borderRadius: 12,\r\n            padding: spacing(2),\r\n            color: palette.text,\r\n            backgroundColor: palette.surfaceMuted,\r\n            marginBottom: spacing(1.5),\r\n          }}\r\n        />\r\n        <DateInputField\r\n          value={startAt}\r\n          onChange={(date) => {\r\n            const existing = startAt || '';\r\n            const timePartIndex = existing.indexOf('T');\r\n            const timePart = timePartIndex > -1 ? existing.substring(timePartIndex) : 'T08:00:00';\r\n            setStartAt(`${date}${timePart}`);\r\n          }}\r\n          placeholder=\"Start date\"\r\n        />\r\n        <DateInputField\r\n          value={endAt}\r\n          onChange={(date) => {\r\n            if (!date) {\r\n              setEndAt('');\r\n              return;\r\n            }\r\n            const existing = endAt || '';\r\n            const timePartIndex = existing.indexOf('T');\r\n            const timePart = timePartIndex > -1 ? existing.substring(timePartIndex) : 'T17:00:00';\r\n            setEndAt(`${date}${timePart}`);\r\n          }}\r\n          placeholder=\"End date (optional)\"\r\n        />\r\n        <QuickAction label=\"Add event\" onPress={add} />\r\n      </SurfaceCard>\r\n\r\n      {events.length === 0 ? (\r\n        <SurfaceCard>\r\n          <Text style={{ color: palette.muted }}>No schedule entries yet.</Text>\r\n        </SurfaceCard>\r\n      ) : (\r\n        events.map(ev => {\r\n          const startLabel = ev.startAt ? `Starts ${formatDate(ev.startAt)}` : 'No start date';\r\n          const endLabel = ev.endAt ? ` - Ends ${formatDate(ev.endAt)}` : '';\r\n          return (\r\n            <SurfaceCard key={ev.id} style={{ marginBottom: spacing(1.5) }}>\r\n              <Text style={{ color: palette.text, fontWeight:'600', fontSize: typography.h2 - 2 }}>{ev.title}</Text>\r\n              <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>\r\n                {startLabel}{endLabel}\r\n              </Text>\r\n              <View style={{ flexDirection:'row', columnGap: spacing(1), marginTop: spacing(1.5) }}>\r\n                <QuickAction label=\"Delete\" tone=\"danger\" onPress={()=>remove(ev.id)} />\r\n              </View>\r\n            </SurfaceCard>\r\n          );\r\n        })\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n\r\n// ---------- Leads / Estimates (with photo queue) ----------\r\nasync function processQueue(token){\r\n  return new Promise(resolve => {\r\n    db.transaction(tx => {\r\n      tx.executeSql('SELECT * FROM queue', [], async (_, { rows }) => {\r\n        const items = rows._array || [];\r\n        for(const q of items){\r\n          try{\r\n            const payload = JSON.parse(q.payload);\r\n            if(q.type === 'createLead'){ await api('/leads', 'POST', payload, token); }\r\n            if(q.type === 'uploadPhoto'){ await api('/upload/image', 'POST', { dataUrl: payload.dataUrl }, token); }\r\n            db.transaction(txx => txx.executeSql('DELETE FROM queue WHERE id=?', [q.id]));\r\n          }catch(e){ /* keep for later */ }\r\n        }\r\n        resolve();\r\n      });\r\n    });\r\n  });\r\n}\r\n\r\nfunction LeadsScreen({ navigation }){\r\n  const { token } = useAuth();\r\n  const [leads, setLeads] = useState([]);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [convertingId, setConvertingId] = useState(null);\r\n\r\n  const fetchLeads = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n      const data = await api('/leads', 'GET', null, token);\r\n      const filtered = data.filter(item => (item.status || '').toUpperCase() !== 'CONVERTED');\r\n      setLeads(filtered);\r\n      db.transaction(tx => {\r\n        tx.executeSql && tx.executeSql('DELETE FROM leads_cache;');\r\n        filtered.forEach(l => tx.executeSql && tx.executeSql(\r\n          'INSERT OR REPLACE INTO leads_cache (id, description, status) VALUES (?,?,?)',\r\n          [l.id, l.description || '', l.status || 'NEW']\r\n        ));\r\n      });\r\n    } catch(e){\r\n      db.transaction(tx =>\r\n        tx.executeSql && tx.executeSql(\r\n          'SELECT id, description, status FROM leads_cache',\r\n          [],\r\n          (_, { rows }) => {\r\n            const fallback = (rows._array || []).filter(item => (item.status || '').toUpperCase() !== 'CONVERTED');\r\n            setLeads(fallback);\r\n          }\r\n        )\r\n      );\r\n    }\r\n    finally {\r\n      setLoading(false);\r\n    }\r\n  }, [token]);\r\n\r\n  useFocusEffect(useCallback(() => {\r\n    fetchLeads();\r\n  }, [fetchLeads]));\r\n\r\n  const onRefresh = useCallback(async () => {\r\n    setRefreshing(true);\r\n    await fetchLeads();\r\n    setRefreshing(false);\r\n  }, [fetchLeads]);\r\n\r\n  const deleteLead = useCallback((lead) => {\r\n    const title = deriveLeadTitle(lead);\r\n    Alert.alert('Delete lead', `Remove \"${title}\"?`, [\r\n      { text:'Cancel', style:'cancel' },\r\n      { text:'Delete', style:'destructive', onPress: async () => {\r\n        try {\r\n          await api(`/leads/${lead.id}`,'DELETE',null,token);\r\n          setLeads(prev => prev.filter(l => Number(l.id) !== Number(lead.id)));\r\n          db.transaction(tx => tx.executeSql && tx.executeSql('DELETE FROM leads_cache WHERE id=?', [lead.id]));\r\n          Alert.alert('Deleted', 'Lead removed.');\r\n          await fetchLeads();\r\n        } catch(err) {\r\n          Alert.alert('Error', err.message || 'Unable to delete lead');\r\n        }\r\n      }}\r\n    ]);\r\n  }, [token, fetchLeads]);\r\n\r\n  const convertLead = useCallback(async (lead) => {\r\n    if (!lead?.id) return;\r\n    const leadId = lead.id;\r\n    setConvertingId(leadId);\r\n    try {\r\n      const job = await api(`/leads/${leadId}/convert`, 'POST', null, token);\r\n      setLeads(prev => prev.filter(item => Number(item.id) !== Number(leadId)));\r\n      db.transaction(tx =>\r\n        tx.executeSql && tx.executeSql('DELETE FROM leads_cache WHERE id=?', [leadId])\r\n      );\r\n      if (job?.id) {\r\n        navigation.navigate('JobDetail', { jobId: job.id });\r\n      } else {\r\n        Alert.alert('Converted', 'Lead converted to a job.');\r\n        navigation.navigate('Jobs');\r\n      }\r\n    } catch (e) {\r\n      Alert.alert('Error', e.message || 'Unable to convert lead.');\r\n    } finally {\r\n      setConvertingId(null);\r\n    }\r\n  }, [token, navigation]);\r\n\r\n  const newLeadsCount = leads.filter(l => (l.status || '').toUpperCase() === 'NEW').length;\r\n\r\n  const renderLeadCard = (lead) => {\r\n    const customer = lead.Customer || {};\r\n    const title = deriveLeadTitle(lead);\r\n    const subtitle = customer.name && customer.name.trim() && customer.name.trim() !== title ? customer.name : null;\r\n    const jobsite = lead.Jobsite || {};\r\n    const addressParts = [\r\n      jobsite.addressLine1,\r\n      jobsite.addressLine2,\r\n      [jobsite.city, jobsite.state].filter(Boolean).join(', '),\r\n      jobsite.zip\r\n    ].filter(Boolean);\r\n    const address = addressParts.join(', ');\r\n    const statusKey = (lead.status || 'NEW').toUpperCase();\r\n    const tags = Array.isArray(lead.tags) ? lead.tags : [];\r\n    return (\r\n      <SurfaceCard key={lead.id}>\r\n        <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center' }}>\r\n          <View>\r\n            <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600' }}>{title}</Text>\r\n            {subtitle ? <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>{subtitle}</Text> : null}\r\n          </View>\r\n          <StatusPill status={statusKey} />\r\n        </View>\r\n        {customer.phone ? <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>{customer.phone}</Text> : null}\r\n        {customer.email ? <Text style={{ color: palette.muted }}>{customer.email}</Text> : null}\r\n        {address ? <Text style={{ color: palette.muted, marginTop: spacing(1) }}>{address}</Text> : null}\r\n        <Text numberOfLines={3} style={{ color: palette.text, marginTop: spacing(1.5) }}>{lead.description || 'No scope captured yet.'}</Text>\r\n        {tags.length ? (\r\n          <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginTop: spacing(1) }}>\r\n            {tags.map(tag => (\r\n              <View key={`${lead.id}-${tag}`} style={{ backgroundColor: '#e0f3f0', borderRadius: 999, paddingHorizontal: spacing(1.5), paddingVertical: spacing(0.5) }}>\r\n                <Text style={{ color: palette.primaryStrong, fontWeight:'600', fontSize: typography.small }}>{`#${tag}`}</Text>\r\n              </View>\r\n            ))}\r\n          </View>\r\n        ) : null}\r\n        <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginTop: spacing(2) }}>\r\n          <QuickAction label=\"Open\" onPress={() => navigation.navigate('EstimateEditor', { leadId: lead.id })} />\r\n          {(statusKey !== 'CONVERTED') ? (\r\n            <QuickAction\r\n              label={convertingId === lead.id ? 'Converting...' : 'Convert'}\r\n              tone=\"success\"\r\n              onPress={convertingId === lead.id ? undefined : () => convertLead(lead)}\r\n            />\r\n          ) : (\r\n            <QuickAction\r\n              label=\"View job\"\r\n              tone=\"muted\"\r\n              onPress={() => navigation.navigate('Jobs')}\r\n            />\r\n          )}\r\n          <QuickAction label=\"Delete\" tone=\"danger\" onPress={() => deleteLead(lead)} />\r\n        </View>\r\n      </SurfaceCard>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\r\n      <FlatList\r\n        data={leads}\r\n        keyExtractor={item => String(item.id)}\r\n        contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(4) }}\r\n        refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} tintColor={palette.primary} />}\r\n        ListHeaderComponent={\r\n          <View style={{ marginBottom: spacing(3) }}>\r\n            <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center', marginBottom: spacing(2) }}>\r\n              <View>\r\n                <Text style={{ color: palette.ink, fontSize: typography.h1, fontWeight:'700' }}>Lead pipeline</Text>\r\n                <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>Reliable intake for crews who close every job.</Text>\r\n              </View>\r\n              <QuickAction tone=\"primary\" label=\"New lead\" onPress={() => navigation.navigate('NewLead')} />\r\n            </View>\r\n            <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(2), rowGap: spacing(2) }}>\r\n              <View style={{ flexBasis:'48%', minWidth: 160 }}>\r\n                <SummaryCard title=\"Total\" value={leads.length} subtitle={`${newLeadsCount} new`} tone=\"info\" />\r\n              </View>\r\n              <View style={{ flexBasis:'48%', minWidth: 160 }}>\r\n                <SummaryCard title=\"Outstanding\" value={newLeadsCount} subtitle=\"Require follow up\" tone=\"warning\" />\r\n              </View>\r\n            </View>\r\n          </View>\r\n        }\r\n        renderItem={({ item }) => renderLeadCard(item)}\r\n        ListEmptyComponent={\r\n          loading ? (\r\n            <SurfaceCard style={{ alignItems:'center', paddingVertical: spacing(4) }}>\r\n              <ActivityIndicator color={palette.primary} />\r\n              <Text style={{ color: palette.muted, marginTop: spacing(1) }}>Loading leads...</Text>\r\n            </SurfaceCard>\r\n          ) : (\r\n            <SurfaceCard>\r\n              <Text style={{ color: palette.muted }}>No leads yet. Capture a lead to get started.</Text>\r\n            </SurfaceCard>\r\n          )\r\n        }\r\n      />\r\n    </SafeAreaView>\r\n  );\r\n}\r\nfunction NewLeadScreen({ navigation }){\r\n  const { token } = useAuth();\r\n  const [description, setDescription] = useState('');\r\n  const [status, setStatus] = useState('NEW');\r\n  const [customerName, setCustomerName] = useState('');\r\n  const [customerPhone, setCustomerPhone] = useState('');\r\n  const [customerEmail, setCustomerEmail] = useState('');\r\n  const [addressLine1, setAddressLine1] = useState('');\r\n  const [addressLine2, setAddressLine2] = useState('');\r\n  const [city, setCity] = useState('');\r\n  const [stateCode, setStateCode] = useState('');\r\n  const [zip, setZip] = useState('');\r\n  const [leadTags, setLeadTags] = useState([]);\r\n  const [tagSuggestions, setTagSuggestions] = useState(defaultTagSeeds);\r\n  const [showCustomerSection, setShowCustomerSection] = useState(false);\r\n  const [showJobsiteSection, setShowJobsiteSection] = useState(false);\r\n  const statuses = ['NEW','CONTACTED','ESTIMATING','CONVERTED','CLOSED_LOST'];\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const [leadsData, jobsData] = await Promise.all([\r\n          api('/leads','GET',null,token),\r\n          api('/jobs','GET',null,token),\r\n        ]);\r\n        const library = new Set(defaultTagSeeds);\r\n        if (Array.isArray(leadsData)) {\r\n          leadsData.forEach(lead => {\r\n            (Array.isArray(lead.tags) ? lead.tags : []).forEach(tag => library.add(String(tag)));\r\n          });\r\n        }\r\n        if (Array.isArray(jobsData)) {\r\n          jobsData.forEach(job => {\r\n            (Array.isArray(job.tags) ? job.tags : []).forEach(tag => library.add(String(tag)));\r\n          });\r\n        }\r\n        setTagSuggestions(Array.from(library));\r\n      } catch {}\r\n    })();\r\n  }, [token]);\r\n\r\n  const buildPayload = () => {\r\n    const customer = [customerName, customerPhone, customerEmail].some(v => v && v.trim())\r\n      ? {\r\n          name: customerName.trim(),\r\n          phone: customerPhone.trim(),\r\n          email: customerEmail.trim(),\r\n        }\r\n      : null;\r\n    const jobsite = [addressLine1, addressLine2, city, stateCode, zip].some(v => v && v.trim())\r\n      ? {\r\n          addressLine1: addressLine1.trim(),\r\n          addressLine2: addressLine2.trim(),\r\n          city: city.trim(),\r\n          state: stateCode.trim(),\r\n          zip: zip.trim(),\r\n        }\r\n      : null;\r\n    return {\r\n      description,\r\n      status,\r\n      customer,\r\n      jobsite,\r\n      tags: Array.isArray(leadTags) ? leadTags.filter(Boolean) : [],\r\n    };\r\n  };\r\n\r\n  const createLeadOnline = async () => {\r\n    const payload = buildPayload();\r\n    const created = await api('/leads', 'POST', payload, token);\r\n    navigation.replace('EstimateEditor', { leadId: created.id });\r\n    const title = deriveLeadTitle(created);\r\n    Alert.alert('Lead created', `\"${title}\" is ready to estimate.`);\r\n  };\r\n\r\n  const queueLead = () => {\r\n    const payload = buildPayload();\r\n    db.transaction(tx => tx.executeSql('INSERT INTO queue (type, payload) VALUES (?,?)', ['createLead', JSON.stringify(payload)]));\r\n    Alert.alert('Saved offline', 'We will submit this lead when you reconnect.');\r\n    navigation.goBack();\r\n  };\r\n\r\n  const submit = async () => {\r\n    if(!description.trim()){\r\n      Alert.alert('Missing scope', 'Please describe the job or scope of work.');\r\n      return;\r\n    }\r\n    try {\r\n      await createLeadOnline();\r\n    } catch(e){\r\n      queueLead();\r\n    }\r\n  };\r\n\r\n  const chipStyle = (active) => ({\r\n    paddingHorizontal: spacing(2),\r\n    paddingVertical: spacing(1),\r\n    borderRadius: 999,\r\n    borderWidth: 1,\r\n    borderColor: active ? palette.primary : palette.border,\r\n    backgroundColor: active ? '#d9f2ed' : palette.surface,\r\n  });\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\r\n      <ScrollView contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(6) }}>\r\n        <SurfaceCard style={{ marginBottom: spacing(3) }}>\r\n          <Text style={{ color: palette.text, fontSize: typography.h1, fontWeight:'700', marginBottom: spacing(2) }}>New lead</Text>\r\n          <Text style={{ color: palette.muted, fontWeight:'600', marginBottom: spacing(1) }}>Scope</Text>\r\n          <TextInput\r\n            placeholder=\"Describe the job...\"\r\n            placeholderTextColor={palette.muted}\r\n            value={description}\r\n            onChangeText={setDescription}\r\n            multiline\r\n            style={{\r\n              borderWidth: 1,\r\n              borderColor: palette.border,\r\n              borderRadius: 12,\r\n              padding: spacing(2),\r\n              minHeight: 120,\r\n              color: palette.text,\r\n              backgroundColor: palette.surfaceMuted,\r\n              textAlignVertical: 'top',\r\n            }}\r\n          />\r\n          <Text style={{ color: palette.muted, fontWeight:'600', marginTop: spacing(2), marginBottom: spacing(1) }}>Status</Text>\r\n          <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1) }}>\r\n            {statuses.map(s => {\r\n              const active = status === s;\r\n              return (\r\n                <TouchableOpacity key={s} onPress={() => setStatus(s)} activeOpacity={0.85} style={chipStyle(active)}>\r\n                  <Text style={{ color: active ? palette.primaryStrong : palette.muted, fontWeight:'600', fontSize: typography.small }}>{s.replace('_',' ')}</Text>\r\n                </TouchableOpacity>\r\n              );\r\n            })}\r\n          </View>\r\n          <Text style={{ color: palette.muted, fontWeight:'600', marginTop: spacing(2), marginBottom: spacing(0.75) }}>Tags</Text>\r\n          <TagInput value={leadTags} onChange={setLeadTags} placeholder=\"Add tags (e.g. Roof, Urgent)\" suggestions={tagSuggestions} />\r\n          <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center', marginTop: spacing(3) }}>\r\n            <QuickAction label=\"Save offline\" tone=\"muted\" onPress={queueLead} />\r\n            <TouchableOpacity\r\n              onPress={submit}\r\n              activeOpacity={0.85}\r\n              style={{ backgroundColor: palette.primary, paddingHorizontal: spacing(3), paddingVertical: spacing(1.5), borderRadius: 12 }}\r\n            >\r\n              <Text style={{ color:'#fff', fontWeight:'700' }}>Create lead</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </SurfaceCard>\r\n\r\n        <SurfaceCard style={{ marginBottom: spacing(3) }}>\r\n          <TouchableOpacity\r\n            onPress={() => setShowCustomerSection(v => !v)}\r\n            style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center' }}\r\n            activeOpacity={0.8}\r\n          >\r\n            <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600' }}>Customer details</Text>\r\n            <Text style={{ color: palette.primary, fontWeight:'600' }}>{showCustomerSection ? 'Hide' : 'Add'}</Text>\r\n          </TouchableOpacity>\r\n          {showCustomerSection ? (\r\n            <View style={{ marginTop: spacing(2) }}>\r\n              <TextInput\r\n                placeholder=\"Name\"\r\n                placeholderTextColor={palette.muted}\r\n                value={customerName}\r\n                onChangeText={setCustomerName}\r\n                style={{\r\n                  borderWidth: 1,\r\n                  borderColor: palette.border,\r\n                  borderRadius: 12,\r\n                  padding: spacing(2),\r\n                  color: palette.text,\r\n                  backgroundColor: palette.surfaceMuted,\r\n                  marginBottom: spacing(1.5),\r\n                }}\r\n              />\r\n              <TextInput\r\n                placeholder=\"Phone\"\r\n                placeholderTextColor={palette.muted}\r\n                keyboardType=\"phone-pad\"\r\n                value={customerPhone}\r\n                onChangeText={setCustomerPhone}\r\n                style={{\r\n                  borderWidth: 1,\r\n                  borderColor: palette.border,\r\n                  borderRadius: 12,\r\n                  padding: spacing(2),\r\n                  color: palette.text,\r\n                  backgroundColor: palette.surfaceMuted,\r\n                  marginBottom: spacing(1.5),\r\n                }}\r\n              />\r\n              <TextInput\r\n                placeholder=\"Email\"\r\n                placeholderTextColor={palette.muted}\r\n                keyboardType=\"email-address\"\r\n                autoCapitalize=\"none\"\r\n                value={customerEmail}\r\n                onChangeText={setCustomerEmail}\r\n                style={{\r\n                  borderWidth: 1,\r\n                  borderColor: palette.border,\r\n                  borderRadius: 12,\r\n                  padding: spacing(2),\r\n                  color: palette.text,\r\n                  backgroundColor: palette.surfaceMuted,\r\n                }}\r\n              />\r\n            </View>\r\n          ) : (\r\n            <Text style={{ color: palette.muted, marginTop: spacing(1.5) }}>Add contact details to help follow up faster.</Text>\r\n          )}\r\n        </SurfaceCard>\r\n\r\n        <SurfaceCard>\r\n          <TouchableOpacity\r\n            onPress={() => setShowJobsiteSection(v => !v)}\r\n            style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center' }}\r\n            activeOpacity={0.8}\r\n          >\r\n            <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600' }}>Jobsite address</Text>\r\n            <Text style={{ color: palette.primary, fontWeight:'600' }}>{showJobsiteSection ? 'Hide' : 'Add'}</Text>\r\n          </TouchableOpacity>\r\n          {showJobsiteSection ? (\r\n            <View style={{ marginTop: spacing(2) }}>\r\n              <TextInput\r\n                placeholder=\"Address line 1\"\r\n                placeholderTextColor={palette.muted}\r\n                value={addressLine1}\r\n                onChangeText={setAddressLine1}\r\n                style={{\r\n                  borderWidth: 1,\r\n                  borderColor: palette.border,\r\n                  borderRadius: 12,\r\n                  padding: spacing(2),\r\n                  color: palette.text,\r\n                  backgroundColor: palette.surfaceMuted,\r\n                  marginBottom: spacing(1.5),\r\n                }}\r\n              />\r\n              <TextInput\r\n                placeholder=\"Address line 2\"\r\n                placeholderTextColor={palette.muted}\r\n                value={addressLine2}\r\n                onChangeText={setAddressLine2}\r\n                style={{\r\n                  borderWidth: 1,\r\n                  borderColor: palette.border,\r\n                  borderRadius: 12,\r\n                  padding: spacing(2),\r\n                  color: palette.text,\r\n                  backgroundColor: palette.surfaceMuted,\r\n                  marginBottom: spacing(1.5),\r\n                }}\r\n              />\r\n              <View style={{ flexDirection:'row', columnGap: spacing(1.5) }}>\r\n                <View style={{ flex:1 }}>\r\n                  <TextInput\r\n                    placeholder=\"City\"\r\n                    placeholderTextColor={palette.muted}\r\n                    value={city}\r\n                    onChangeText={setCity}\r\n                    style={{\r\n                      borderWidth: 1,\r\n                      borderColor: palette.border,\r\n                      borderRadius: 12,\r\n                      padding: spacing(2),\r\n                      color: palette.text,\r\n                      backgroundColor: palette.surfaceMuted,\r\n                      marginBottom: spacing(1.5),\r\n                    }}\r\n                  />\r\n                </View>\r\n                <View style={{ width: 80 }}>\r\n                  <TextInput\r\n                    placeholder=\"State\"\r\n                    placeholderTextColor={palette.muted}\r\n                    value={stateCode}\r\n                    onChangeText={setStateCode}\r\n                    style={{\r\n                      borderWidth: 1,\r\n                      borderColor: palette.border,\r\n                      borderRadius: 12,\r\n                      padding: spacing(2),\r\n                      color: palette.text,\r\n                      backgroundColor: palette.surfaceMuted,\r\n                      marginBottom: spacing(1.5),\r\n                    }}\r\n                  />\r\n                </View>\r\n                <View style={{ width: 100 }}>\r\n                  <TextInput\r\n                    placeholder=\"ZIP\"\r\n                    placeholderTextColor={palette.muted}\r\n                    value={zip}\r\n                    onChangeText={setZip}\r\n                    style={{\r\n                      borderWidth: 1,\r\n                      borderColor: palette.border,\r\n                      borderRadius: 12,\r\n                      padding: spacing(2),\r\n                      color: palette.text,\r\n                      backgroundColor: palette.surfaceMuted,\r\n                      marginBottom: spacing(1.5),\r\n                    }}\r\n                  />\r\n                </View>\r\n              </View>\r\n            </View>\r\n          ) : (\r\n            <Text style={{ color: palette.muted, marginTop: spacing(1.5) }}>Add a jobsite to keep crews aligned.</Text>\r\n          )}\r\n        </SurfaceCard>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\nfunction EstimateEditorScreen({ route, navigation }){\r\n  const { token, user } = useAuth();\r\n  const { leadId } = route.params || {};\r\n  const [estimateId, setEstimateId] = useState(null);\r\n  const [items, setItems] = useState([]);\r\n  const [desc, setDesc] = useState('');\r\n  const [qty, setQty] = useState('1');\r\n  const [price, setPrice] = useState('0');\r\n  const [notes, setNotes] = useState('');\r\n  const [photoUrl, setPhotoUrl] = useState(null);\r\n  const [subtotal, setSubtotal] = useState(0);\r\n  const [taxRate, setTaxRate] = useState('7');\r\n  const [tax, setTax] = useState(0);\r\n  const [total, setTotal] = useState(0);\r\n  const [leadDetails, setLeadDetails] = useState(null);\r\n  const [leadStatus, setLeadStatus] = useState('NEW');\r\n  const [leadScope, setLeadScope] = useState('');\r\n  const [leadCustomerName, setLeadCustomerName] = useState('');\r\n  const [leadCustomerPhone, setLeadCustomerPhone] = useState('');\r\n  const [leadCustomerEmail, setLeadCustomerEmail] = useState('');\r\n  const [leadAddressLine1, setLeadAddressLine1] = useState('');\r\n  const [leadAddressLine2, setLeadAddressLine2] = useState('');\r\n  const [leadCity, setLeadCity] = useState('');\r\n  const [leadStateCode, setLeadStateCode] = useState('');\r\n  const [leadZip, setLeadZip] = useState('');\r\n  const leadStatuses = ['NEW','CONTACTED','ESTIMATING','CONVERTED','CLOSED_LOST'];\r\n\r\n  const loadLead = useCallback(async () => {\r\n    if (!leadId) return;\r\n    try {\r\n      const data = await api(`/leads/${leadId}`,'GET',null,token);\r\n      setLeadDetails(data);\r\n      setLeadStatus(data.status || 'NEW');\r\n      setLeadScope(data.description || '');\r\n      const customer = data.Customer || {};\r\n      const jobsite = data.Jobsite || {};\r\n      setLeadCustomerName(customer.name || '');\r\n      setLeadCustomerPhone(customer.phone || '');\r\n      setLeadCustomerEmail(customer.email || '');\r\n      setLeadAddressLine1(jobsite.addressLine1 || '');\r\n      setLeadAddressLine2(jobsite.addressLine2 || '');\r\n      setLeadCity(jobsite.city || '');\r\n      setLeadStateCode(jobsite.state || '');\r\n      setLeadZip(jobsite.zip || '');\r\n    } catch(e) { }\r\n  }, [leadId, token]);\r\n\r\n  useEffect(() => {\r\n    loadLead();\r\n  }, [loadLead]);\r\n\r\n  const createEstimate = async () => {\r\n    const est = await api('/estimates', 'POST', {\r\n      leadId,\r\n      customerId: leadDetails?.customerId ?? null,\r\n      jobsiteId: leadDetails?.jobsiteId ?? null,\r\n      subtotal: 0,\r\n      taxRate: parseFloat(taxRate) || 0,\r\n      total: 0\r\n    }, token);\r\n    setEstimateId(est.id);\r\n    return est;\r\n  };\r\n\r\n  const ensureEstimate = useCallback(async () => {\r\n    if (estimateId) return estimateId;\r\n    const created = await createEstimate();\r\n    setEstimateId(created.id);\r\n    return created.id;\r\n  }, [estimateId, createEstimate]);\r\n\r\n  useEffect(() => {\r\n    const rate = parseFloat(taxRate) || 0;\r\n    const newSubtotal = items.reduce((sum, item) => sum + (parseFloat(item.qty || 0) * parseFloat(item.unitPrice || 0)), 0);\r\n    const newTax = newSubtotal * (rate / 100);\r\n    setSubtotal(newSubtotal);\r\n    setTax(newTax);\r\n    setTotal(newSubtotal + newTax);\r\n  }, [items, taxRate]);\r\n\r\n  const addItem = async () => {\r\n    if (!desc.trim()) {\r\n      Alert.alert('Line item', 'Please add a description.');\r\n      return;\r\n    }\r\n    try {\r\n      const targetId = await ensureEstimate();\r\n      const payload = {\r\n        description: desc.trim(),\r\n        qty: parseFloat(qty) || 1,\r\n        unitPrice: parseFloat(price) || 0,\r\n      };\r\n      const item = await api(`/estimates/${targetId}/items`, 'POST', payload, token);\r\n      setItems(prev => [item, ...prev]);\r\n      setDesc('');\r\n      setQty('1');\r\n      setPrice('0');\r\n    } catch (e) {\r\n      Alert.alert('Error', e.message || 'Unable to add line item');\r\n    }\r\n  };\r\n\r\n  const saveLeadDetails = async () => {\r\n    if (!leadId) return;\r\n    const customerPayload = [leadCustomerName, leadCustomerPhone, leadCustomerEmail].some(v => v && v.trim()) ? {\r\n      name: leadCustomerName.trim(),\r\n      phone: leadCustomerPhone.trim(),\r\n      email: leadCustomerEmail.trim(),\r\n    } : null;\r\n    const jobsitePayload = [leadAddressLine1, leadAddressLine2, leadCity, leadStateCode, leadZip].some(v => v && v.trim()) ? {\r\n      addressLine1: leadAddressLine1.trim(),\r\n      addressLine2: leadAddressLine2.trim(),\r\n      city: leadCity.trim(),\r\n      state: leadStateCode.trim(),\r\n      zip: leadZip.trim(),\r\n    } : null;\r\n    try {\r\n      await api(`/leads/${leadId}`,'PATCH',{\r\n        description: leadScope,\r\n        status: leadStatus,\r\n        customer: customerPayload,\r\n        jobsite: jobsitePayload,\r\n      }, token);\r\n      Alert.alert('Saved', 'Lead details updated.');\r\n      navigation.navigate('Tabs', { screen: 'Leads' });\r\n    } catch (e) {\r\n      Alert.alert('Error', e.message || 'Unable to save lead details');\r\n    }\r\n  };\r\n\r\n  const pickPhoto = async () => {\r\n    const result = await ImagePicker.launchImageLibraryAsync({\r\n      allowsEditing: false,\r\n      quality: 0.6,\r\n    });\r\n    if (!result.canceled && result.assets?.length) {\r\n      setPhotoUrl(result.assets[0].uri);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\r\n      <ScrollView contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(6) }}>\r\n        <SurfaceCard style={{ marginBottom: spacing(3) }}>\r\n          <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700', marginBottom: spacing(1.5) }}>Lead summary</Text>\r\n          <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1.5), marginBottom: spacing(2) }}>\r\n            {leadStatuses.map(s => {\r\n              const selected = leadStatus === s;\r\n              return (\r\n                <QuickAction\r\n                  key={s}\r\n                  label={s.replace('_',' ')}\r\n                  tone={selected ? 'primary' : 'muted'}\r\n                  onPress={() => setLeadStatus(s)}\r\n                />\r\n              );\r\n            })}\r\n          </View>\r\n          <TextInput\r\n            placeholder=\"Scope / project notes\"\r\n            placeholderTextColor={palette.muted}\r\n            value={leadScope}\r\n            onChangeText={setLeadScope}\r\n            multiline\r\n            style={{\r\n              borderWidth:1,\r\n              borderColor: palette.border,\r\n              borderRadius: 12,\r\n              padding: spacing(2),\r\n              minHeight: 120,\r\n              color: palette.text,\r\n              backgroundColor: palette.surfaceMuted,\r\n              textAlignVertical: 'top',\r\n            }}\r\n          />\r\n          <View style={{ flexDirection:'row', justifyContent:'flex-end', marginTop: spacing(2) }}>\r\n            <QuickAction label=\"Save lead\" onPress={saveLeadDetails} />\r\n          </View>\r\n        </SurfaceCard>\r\n\r\n        <SurfaceCard style={{ marginBottom: spacing(3) }}>\r\n          <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700', marginBottom: spacing(1.5) }}>Line items</Text>\r\n          <TextInput\r\n            placeholder=\"Describe the work or material\"\r\n            placeholderTextColor={palette.muted}\r\n            value={desc}\r\n            onChangeText={setDesc}\r\n            style={{\r\n              borderWidth:1,\r\n              borderColor: palette.border,\r\n              borderRadius: 12,\r\n              padding: spacing(2),\r\n              color: palette.text,\r\n              backgroundColor: palette.surfaceMuted,\r\n              marginBottom: spacing(1.5),\r\n            }}\r\n          />\r\n          <View style={{ flexDirection:'column', columnGap: spacing(1.5), marginBottom: spacing(1.5) }}>\r\n            <TextInput\r\n              placeholder=\"Qty\"\r\n              placeholderTextColor={palette.muted}\r\n              // value={qty}\r\n              onChangeText={setQty}\r\n              keyboardType=\"numeric\"\r\n              style={{\r\n                flex:1,\r\n                borderWidth:1,\r\n                borderColor: palette.border,\r\n                borderRadius: 12,\r\n                padding: spacing(2),\r\n                marginBottom: spacing(1.5),\r\n                color: palette.text,\r\n                backgroundColor: palette.surfaceMuted,\r\n              }}\r\n            />\r\n            <TextInput\r\n              placeholder=\"Unit price\"\r\n              placeholderTextColor={palette.muted}\r\n              // value={price}\r\n              onChangeText={setPrice}\r\n              keyboardType=\"numeric\"\r\n              style={{\r\n                flex:1,\r\n                borderWidth:1,\r\n                borderColor: palette.border,\r\n                borderRadius: 12,\r\n                padding: spacing(2),\r\n                marginBottom: spacing(1.5),\r\n                color: palette.text,\r\n                backgroundColor: palette.surfaceMuted,\r\n              }}\r\n            />\r\n            <QuickAction label=\"Add\" onPress={addItem} />\r\n          </View>\r\n          {items.length === 0 ? (\r\n            <Text style={{ color: palette.muted }}>No line items yet.</Text>\r\n          ) : (\r\n            items.map((item, idx) => (\r\n              <SurfaceCard key={item.id || idx} style={{ marginBottom: spacing(1.5) }}>\r\n                <Text style={{ color: palette.text, fontWeight:'600' }}>{item.description}</Text>\r\n                <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>\r\n                  Qty {item.qty} x ${parseFloat(item.unitPrice || 0).toFixed(2)} = {(parseFloat(item.qty || 0) * parseFloat(item.unitPrice || 0)).toFixed(2)}\r\n                </Text>\r\n              </SurfaceCard>\r\n            ))\r\n          )}\r\n          <View style={{ marginTop: spacing(2), borderTopWidth:1, borderTopColor: palette.border, paddingTop: spacing(2) }}>\r\n            <Text style={{ color: palette.muted }}>Tax rate (%)</Text>\r\n            <TextInput\r\n              value={String(taxRate)}\r\n              onChangeText={setTaxRate}\r\n              keyboardType=\"numeric\"\r\n              placeholderTextColor={palette.muted}\r\n              style={{\r\n                marginTop: spacing(1),\r\n                borderWidth:1,\r\n                borderColor: palette.border,\r\n                borderRadius: 12,\r\n                padding: spacing(2),\r\n                color: palette.text,\r\n                backgroundColor: palette.surfaceMuted,\r\n              }}\r\n            />\r\n            <View style={{ marginTop: spacing(2) }}>\r\n              <Text style={{ color: palette.text }}>Subtotal: ${subtotal.toFixed(2)}</Text>\r\n              <Text style={{ color: palette.text }}>Tax: ${tax.toFixed(2)}</Text>\r\n              <Text style={{ color: palette.text, fontWeight:'700' }}>Total: ${total.toFixed(2)}</Text>\r\n            </View>\r\n          </View>\r\n        </SurfaceCard>\r\n\r\n        <SurfaceCard>\r\n          <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700', marginBottom: spacing(1.5) }}>Attachments & notes</Text>\r\n          <TextInput\r\n            placeholder=\"Internal notes\"\r\n            placeholderTextColor={palette.muted}\r\n            value={notes}\r\n            onChangeText={setNotes}\r\n            multiline\r\n            style={{\r\n              borderWidth:1,\r\n              borderColor: palette.border,\r\n              borderRadius: 12,\r\n              padding: spacing(2),\r\n              minHeight: 100,\r\n              color: palette.text,\r\n              backgroundColor: palette.surfaceMuted,\r\n              textAlignVertical: 'top',\r\n            }}\r\n          />\r\n          <View style={{ flexDirection:'row', columnGap: spacing(1.5), marginTop: spacing(1.5) }}>\r\n            <QuickAction label=\"Add photo\" onPress={pickPhoto} />\r\n          </View>\r\n          {photoUrl ? (\r\n            <Image source={{ uri: photoUrl }} style={{ height: 160, borderRadius: 12, marginTop: spacing(2) }} />\r\n          ) : null}\r\n        </SurfaceCard>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nfunction ScheduleScreen({ navigation }){\r\n  const { token } = useAuth();\r\n  const [jobs, setJobs] = useState([]);\r\n  const [filter, setFilter] = useState('ALL');\r\n  const [queueCount, setQueueCount] = useState(0);\r\n  const [syncing, setSyncing] = useState(false);\r\n\r\n  const loadQueueCount = useCallback(() => {\r\n    db.transaction(tx => tx.executeSql('SELECT COUNT(*) as c FROM queue', [], (_, { rows }) => setQueueCount((rows._array?.[0]?.c)||0)));\r\n  }, []);\r\n\r\n  const load = useCallback(async () => {\r\n    try {\r\n      const data = await api('/jobs','GET',null,token);\r\n      setJobs(data);\r\n      db.transaction(tx => {\r\n        tx.executeSql('DELETE FROM jobs_cache;');\r\n        data.forEach(j => tx.executeSql('INSERT OR REPLACE INTO jobs_cache (id, name, status, startDate, endDate, notes) VALUES (?,?,?,?,?,?)', [j.id, j.name||'', j.status||'SCHEDULED', j.startDate||'', j.endDate||'', j.notes||'']));\r\n      });\r\n    } catch(e) {\r\n      db.transaction(tx => tx.executeSql('SELECT id, name, status, startDate, endDate, notes FROM jobs_cache', [], (_, { rows }) => setJobs(rows._array || [])));\r\n    }\r\n  }, [token]);\r\n\r\n  useEffect(() => {\r\n    load();\r\n    loadQueueCount();\r\n  }, [load, loadQueueCount]);\r\n\r\n  const filters = [\r\n    { key:'ALL', label:'All' },\r\n    { key:'TODAY', label:'Today' },\r\n    { key:'WEEK', label:'This week' },\r\n  ];\r\n\r\n  const inRange = useCallback((dateValue) => {\r\n    if (filter === 'ALL') return true;\r\n    if (!dateValue) return false;\r\n    const today = new Date();\r\n    const dt = new Date(dateValue);\r\n    if (Number.isNaN(dt.getTime())) return false;\r\n    if (filter === 'TODAY') {\r\n      return dt.getFullYear() === today.getFullYear() && dt.getMonth() === today.getMonth() && dt.getDate() === today.getDate();\r\n    }\r\n    const start = new Date(today);\r\n    start.setHours(0, 0, 0, 0);\r\n    start.setDate(today.getDate() - today.getDay());\r\n    const end = new Date(start);\r\n    end.setDate(start.getDate() + 6);\r\n    return dt >= start && dt <= end;\r\n  }, [filter]);\r\n\r\n  const filteredJobs = useMemo(() => (\r\n    jobs\r\n      .filter(job => inRange(job.startDate))\r\n      .sort((a, b) => new Date(a.startDate || 0) - new Date(b.startDate || 0))\r\n  ), [jobs, inRange]);\r\n  const openJobInMaps = useCallback((job) => {\r\n    if (!job) return;\r\n    const jobsite = job.Jobsite || {};\r\n    const addressParts = [\r\n      jobsite.addressLine1,\r\n      jobsite.addressLine2,\r\n      [jobsite.city, jobsite.state].filter(Boolean).join(' '),\r\n      jobsite.zip,\r\n    ].filter(part => part && String(part).trim());\r\n    if (!addressParts.length) {\r\n      Alert.alert('Missing address', 'Add a jobsite address to open navigation.');\r\n      return;\r\n    }\r\n    const address = addressParts.join(', ');\r\n    Linking.openURL(`https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(address)}`);\r\n  }, []);\r\n  const optimizeRoute = useCallback(() => {\r\n    if (!filteredJobs.length) {\r\n      Alert.alert('No jobs', 'Apply filters or add jobs before optimizing a route.');\r\n      return;\r\n    }\r\n    const addresses = filteredJobs\r\n      .map(job => {\r\n        const site = job.Jobsite || {};\r\n        const parts = [\r\n          site.addressLine1,\r\n          site.addressLine2,\r\n          [site.city, site.state].filter(Boolean).join(' '),\r\n          site.zip,\r\n        ].filter(part => part && String(part).trim());\r\n        return parts.length ? parts.join(', ') : null;\r\n      })\r\n      .filter(Boolean);\r\n    if (!addresses.length) {\r\n      Alert.alert('Missing addresses', 'Add jobsite addresses to build a route.');\r\n      return;\r\n    }\r\n    if (addresses.length === 1) {\r\n      Linking.openURL(`https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(addresses[0])}`);\r\n      return;\r\n    }\r\n    const origin = addresses[0];\r\n    const destination = addresses[addresses.length - 1];\r\n    const waypointsRaw = addresses.slice(1, -1);\r\n    let url = `https://www.google.com/maps/dir/?api=1&origin=${encodeURIComponent(origin)}&destination=${encodeURIComponent(destination)}`;\r\n    if (waypointsRaw.length) {\r\n      url += `&waypoints=${waypointsRaw.map(addr => encodeURIComponent(addr)).join('|')}`;\r\n    }\r\n    Linking.openURL(url);\r\n  }, [filteredJobs]);\r\n  const techSummary = useMemo(() => {\r\n    const buckets = {};\r\n    filteredJobs.forEach(job => {\r\n      const tech = job?.assignedTech;\r\n      const key = tech?.fullName || tech?.email || 'Unassigned';\r\n      buckets[key] = (buckets[key] || 0) + 1;\r\n    });\r\n    return Object.entries(buckets);\r\n  }, [filteredJobs]);\r\n\r\n  const handleSync = useCallback(async () => {\r\n    setSyncing(true);\r\n    try {\r\n      await processQueue(token);\r\n      await load();\r\n      loadQueueCount();\r\n    } finally {\r\n      setSyncing(false);\r\n    }\r\n  }, [token, load, loadQueueCount]);\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\r\n      <ScrollView contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(6) }}>\r\n        <Text style={{ color: palette.text, fontSize: typography.h1, fontWeight:'700', marginBottom: spacing(2) }}>Schedule</Text>\r\n        <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1.5), marginBottom: spacing(2) }}>\r\n          {filters.map(option => (\r\n            <QuickAction\r\n              key={option.key}\r\n              label={option.label}\r\n              tone={filter === option.key ? 'primary' : 'muted'}\r\n              onPress={() => setFilter(option.key)}\r\n            />\r\n          ))}\r\n        </View>\r\n        <SurfaceCard style={{ marginBottom: spacing(3), flexDirection:'row', justifyContent:'space-between', alignItems:'center' }}>\r\n          <View>\r\n            <Text style={{ color: palette.text, fontWeight:'600' }}>Offline queue</Text>\r\n            <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>{queueCount} items waiting to sync</Text>\r\n          </View>\r\n          <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1) }}>\r\n            <QuickAction label={syncing ? 'Syncing...' : 'Sync now'} tone={syncing ? 'muted' : 'primary'} onPress={syncing ? undefined : handleSync} />\r\n            <QuickAction label=\"Optimize route\" tone=\"muted\" onPress={optimizeRoute} />\r\n          </View>\r\n        </SurfaceCard>\r\n        {techSummary.length ? (\r\n          <SurfaceCard style={{ marginBottom: spacing(3) }}>\r\n            <Text style={{ color: palette.text, fontWeight:'600', marginBottom: spacing(1) }}>Technician availability</Text>\r\n            {techSummary.map(([name, count]) => (\r\n              <View key={name} style={{ flexDirection:'row', justifyContent:'space-between', marginTop: spacing(0.5) }}>\r\n                <Text style={{ color: palette.muted }}>{name}</Text>\r\n                <Text style={{ color: palette.text }}>{count} job{count === 1 ? '' : 's'}</Text>\r\n              </View>\r\n            ))}\r\n          </SurfaceCard>\r\n        ) : null}\r\n\r\n        {filteredJobs.length === 0 ? (\r\n          <SurfaceCard>\r\n            <Text style={{ color: palette.muted }}>No jobs {filter !== 'ALL' ? 'in this range' : 'scheduled yet'}. Convert a lead or create a job to populate your schedule.</Text>\r\n          </SurfaceCard>\r\n        ) : (\r\n          filteredJobs.map(job => {\r\n            const jobsite = job.Jobsite || {};\r\n            const addressParts = [\r\n              jobsite.addressLine1,\r\n              jobsite.addressLine2,\r\n              [jobsite.city, jobsite.state].filter(Boolean).join(', '),\r\n              jobsite.zip,\r\n            ].filter(Boolean);\r\n            const address = addressParts.join(', ');\r\n            const startLabel = job.startDate ? `Starts ${formatDate(job.startDate)}` : 'No start date';\r\n            const endLabel = job.endDate ? ` - Due ${formatDate(job.endDate)}` : '';\r\n            const assignedTech = job.assignedTech;\r\n            return (\r\n              <SurfaceCard key={job.id} style={{ marginBottom: spacing(2) }}>\r\n                <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center' }}>\r\n                  <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'600' }}>{job.name || `Job #${job.id}`}</Text>\r\n                  <StatusPill status={job.status || 'SCHEDULED'} />\r\n                </View>\r\n                <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>\r\n                  {startLabel}{endLabel}\r\n                </Text>\r\n                {address ? <Text style={{ color: palette.muted, marginTop: spacing(1) }}>{address}</Text> : null}\r\n                {assignedTech ? (\r\n                  <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>\r\n                    Assigned to {assignedTech.fullName || assignedTech.email || 'Tech'}\r\n                  </Text>\r\n                ) : null}\r\n                {job.notes ? <Text style={{ color: palette.muted, marginTop: spacing(1) }}>{job.notes}</Text> : null}\r\n                <View style={{ flexDirection:'row', flexWrap:'wrap', columnGap: spacing(1), rowGap: spacing(1), marginTop: spacing(2) }}>\r\n                  {address ? <QuickAction label=\"Map\" tone=\"muted\" onPress={() => openJobInMaps(job)} /> : null}\r\n                  <QuickAction label=\"Open job\" onPress={() => navigation.navigate('JobDetail', { jobId: job.id })} />\r\n                  <QuickAction label=\"View tasks\" onPress={() => navigation.navigate('JobDetail', { jobId: job.id, tab: 'tasks' })} tone=\"muted\" />\r\n                </View>\r\n              </SurfaceCard>\r\n            );\r\n          })\r\n        )}\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\nfunction ProfileScreen({ navigation }){\r\n  const { setToken, user } = useAuth();\r\n  const isAdmin = (user?.role || '').toUpperCase() === 'ADMIN';\r\n  return (\r\n    <SafeAreaView style={{ flex:1, backgroundColor: palette.background }}>\r\n      <ScrollView contentContainerStyle={{ paddingHorizontal: spacing(2), paddingVertical: spacing(2), paddingBottom: spacing(6) }}>\r\n        <View style={{ marginBottom: spacing(2) }}>\r\n          <Text style={{ color: palette.ink, fontSize: typography.h1, fontWeight:'700' }}>Profile</Text>\r\n          <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>Keep your access secure and your team aligned.</Text>\r\n        </View>\r\n        <SurfaceCard style={{ marginBottom: spacing(3) }}>\r\n          <Text style={{ color: palette.muted, fontSize: typography.small, textTransform:'uppercase', fontWeight:'600' }}>Account</Text>\r\n          <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700', marginTop: spacing(1) }}>{user?.name || user?.fullName || 'Team member'}</Text>\r\n          <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>{user?.email || 'No email on file'}</Text>\r\n          <Text style={{ color: palette.muted, marginTop: spacing(0.5) }}>Role: {user?.role || 'TECH'}</Text>\r\n        </SurfaceCard>\r\n\r\n        <SurfaceCard>\r\n          <Text style={{ color: palette.muted, fontSize: typography.small, textTransform:'uppercase', fontWeight:'600', marginBottom: spacing(1.5) }}>Actions</Text>\r\n          {isAdmin ? (\r\n            <View style={{ marginBottom: spacing(1.5) }}>\r\n              <QuickAction label=\"Manage users\" onPress={() => navigation.navigate('UsersAdmin')} />\r\n            </View>\r\n          ) : null}\r\n          <QuickAction label=\"Sign out\" tone=\"danger\" onPress={() => setToken(null)} />\r\n        </SurfaceCard>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\nconst Stack = createNativeStackNavigator();\r\nconst Tabs = createBottomTabNavigator();\r\n\r\nfunction TabsNav(){\r\n  const { user } = useAuth();\r\n  const isAdmin = (user?.role || '').toUpperCase() === 'ADMIN';\r\n  const { width } = useWindowDimensions();\r\n  const isCompact = Platform.OS !== 'web' ? true : width < 768;\r\n  const hideTabs = isCompact;\r\n  return (\r\n    <Tabs.Navigator\r\n      screenOptions={{\r\n        headerShown: false,\r\n        tabBarActiveTintColor: palette.primary,\r\n        tabBarStyle: { backgroundColor: palette.surface, display: hideTabs ? 'none' : 'flex' },\r\n      }}\r\n    >\r\n      <Tabs.Screen name=\"Dashboard\" component={DashboardScreen} options={{ title: 'Home' }} />\r\n      <Tabs.Screen name=\"Leads\" component={LeadsScreen} />\r\n      <Tabs.Screen name=\"Jobs\" component={JobsKanbanScreen} options={{ title:'Jobs' }} />\r\n      {isAdmin ? <Tabs.Screen name=\"Invoices\" component={InvoicesScreen} /> : null}\r\n      <Tabs.Screen name=\"Schedule\" component={ScheduleScreen} />\r\n      <Tabs.Screen name=\"Profile\" component={ProfileScreen} options={{ title:\"Profile\" }} />\r\n    </Tabs.Navigator>\r\n  );\r\n}\r\n\r\nfunction MobileHeader({ currentRoute, onNavigate, isAdmin }){\r\n  const [menuVisible, setMenuVisible] = useState(false);\r\n  const activeRoute = useMemo(() => {\r\n    if (currentRoute === 'JobDetail') return 'Jobs';\r\n    return currentRoute;\r\n  }, [currentRoute]);\r\n\r\n  const menuItems = useMemo(() => {\r\n    const items = [\r\n      { label: 'Dashboard', route: 'Dashboard' },\r\n      { label: 'Leads', route: 'Leads' },\r\n      { label: 'Jobs', route: 'Jobs' },\r\n    ];\r\n    if (isAdmin) {\r\n      items.push({ label: 'Invoices', route: 'Invoices' });\r\n    }\r\n    items.push(\r\n      { label: 'Schedule', route: 'Schedule' },\r\n      { label: 'Profile', route: 'Profile' },\r\n    );\r\n    if (isAdmin) {\r\n      items.push({ label: 'Manage users', route: 'UsersAdmin' });\r\n    }\r\n    return items;\r\n  }, [isAdmin]);\r\n\r\n  const handleSelect = useCallback((route) => {\r\n    setMenuVisible(false);\r\n    onNavigate(route);\r\n  }, [onNavigate]);\r\n\r\n  return (\r\n    <>\r\n        <SafeAreaView style={{ backgroundColor: palette.surface }}>\r\n          <View style={{ paddingHorizontal: spacing(2), paddingVertical: spacing(1.5), flexDirection:'row', alignItems:'center', justifyContent:'space-between' }}>\r\n            <TouchableOpacity\r\n              onPress={() => setMenuVisible(true)}\r\n              accessibilityLabel=\"Open navigation menu\"\r\n              accessibilityRole=\"button\"\r\n              style={{ padding: spacing(1) }}\r\n            >\r\n              <View style={{ width: 24, height: 2, backgroundColor: palette.ink, borderRadius: 999, marginBottom: 4 }} />\r\n              <View style={{ width: 24, height: 2, backgroundColor: palette.ink, borderRadius: 999, marginBottom: 4 }} />\r\n              <View style={{ width: 24, height: 2, backgroundColor: palette.ink, borderRadius: 999 }} />\r\n            </TouchableOpacity>\r\n            <Text style={{ color: palette.ink, fontSize: typography.h1, fontWeight:'700' }}>Precision Tracker</Text>\r\n            <View style={{ width: 24 }} />\r\n          </View>\r\n        </SafeAreaView>\r\n      <Modal\r\n        visible={menuVisible}\r\n        animationType=\"fade\"\r\n        transparent\r\n        onRequestClose={() => setMenuVisible(false)}\r\n      >\r\n        <View style={{ flex:1, backgroundColor:'rgba(15,23,42,0.45)', justifyContent:'flex-start', padding: spacing(3) }}>\r\n          <View style={{ backgroundColor: palette.surface, borderRadius: 16, padding: spacing(2.5) }}>\r\n            <View style={{ flexDirection:'row', justifyContent:'space-between', alignItems:'center', marginBottom: spacing(2) }}>\r\n              <Text style={{ color: palette.text, fontSize: typography.h2, fontWeight:'700' }}>Navigate</Text>\r\n              <TouchableOpacity onPress={() => setMenuVisible(false)} accessibilityRole=\"button\" accessibilityLabel=\"Close menu\">\r\n                <Text style={{ color: palette.muted, fontWeight:'600' }}>Close</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n            {menuItems.map(item => {\r\n              const selected = activeRoute === item.route;\r\n              return (\r\n                <TouchableOpacity\r\n                  key={item.route}\r\n                  onPress={() => handleSelect(item.route)}\r\n                  activeOpacity={0.85}\r\n                  style={{\r\n                    paddingVertical: spacing(1.25),\r\n                    paddingHorizontal: spacing(1.5),\r\n                    borderRadius: 12,\r\n                    backgroundColor: selected ? 'rgba(16,185,129,0.12)' : palette.surfaceMuted,\r\n                    marginBottom: spacing(1),\r\n                  }}\r\n                >\r\n                  <Text style={{ color: selected ? palette.primaryStrong : palette.text, fontWeight:'600', fontSize: typography.body }}>\r\n                    {item.label}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              );\r\n            })}\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction LoginScreen({ navigation }) {\r\n  const [email, setEmail] = useState('admin@example.com');\r\n  // If you kept the hardcoded backend login, default to test123:\r\n  const [password, setPassword] = useState('test123');\r\n  const [busy, setBusy] = useState(false);\r\n\r\n  // <-- use the auth context to flip the app into \"logged-in\" mode\r\n  const { setToken, setUser } = useAuth();\r\n\r\n  async function login() {\r\n    try {\r\n      setBusy(true);\r\n      const res = await fetch(`${API_URL}/auth/login`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n      const data = await res.json();\r\n      if (!res.ok) throw new Error(data?.message || data?.error || 'Login failed');\r\n\r\n      // Accept dev or real payload shape\r\n      const tok = data.token || data.accessToken;\r\n      if (!tok) throw new Error('No token returned from server');\r\n\r\n      // Store token/user in global auth state + persist\r\n      const normalizedUser = data.user ? { ...data.user, role: normalizeRole(data.user.role) } : { email, role: 'ADMIN', name: 'Admin' };\r\n      setToken(tok);\r\n      setUser(normalizedUser);\r\n      try {\r\n        await SecureStore.setItemAsync('auth_token', tok);\r\n        await SecureStore.setItemAsync('auth_user', JSON.stringify(normalizedUser));\r\n      } catch {}\r\n\r\n      // Optional: toast\r\n        Alert.alert('Welcome back', 'Precision in every project.');\r\n    } catch (e) {\r\n      Alert.alert('Error', e.message);\r\n    } finally {\r\n      setBusy(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex: 1, backgroundColor: palette.background }}>\r\n      <View style={{ flex: 1, justifyContent: 'center', padding: spacing(3) }}>\r\n        <SurfaceCard style={{ padding: spacing(3), borderRadius: 20 }}>\r\n          <View style={{ width: spacing(5), height: spacing(5), borderRadius: 14, backgroundColor: palette.ink, alignItems: 'center', justifyContent: 'center', marginBottom: spacing(2) }}>\r\n            <Text style={{ color: '#FFFFFF', fontWeight: '800', fontSize: typography.h2 }}>PT</Text>\r\n          </View>\r\n          <Text style={{ color: palette.ink, fontSize: 30, fontWeight: '800', lineHeight: lineHeightFor(30) }}>Precision Tracker</Text>\r\n          <Text style={{ color: palette.muted, marginTop: spacing(1), lineHeight: lineHeightFor(typography.body) }}>\r\n            Precision in every project. Sign in to keep your crews aligned and closing work.\r\n          </Text>\r\n          <View style={{ marginTop: spacing(3) }}>\r\n            <FormInput\r\n              placeholder=\"Work email\"\r\n              autoCapitalize=\"none\"\r\n              autoCorrect={false}\r\n              keyboardType=\"email-address\"\r\n              value={email}\r\n              onChangeText={setEmail}\r\n            />\r\n            <FormInput\r\n              placeholder=\"Password\"\r\n              secureTextEntry\r\n              value={password}\r\n              onChangeText={setPassword}\r\n            />\r\n            <TouchableOpacity\r\n              onPress={login}\r\n              activeOpacity={0.85}\r\n              disabled={busy}\r\n              style={{\r\n                backgroundColor: palette.primary,\r\n                paddingVertical: spacing(2),\r\n                borderRadius: 12,\r\n                alignItems: 'center',\r\n                marginTop: spacing(1),\r\n                opacity: busy ? 0.7 : 1,\r\n              }}\r\n            >\r\n              <Text style={{ color: '#FFFFFF', fontWeight: '700', fontSize: typography.body }}>\r\n                {busy ? 'Signing in…' : 'Sign in'}\r\n              </Text>\r\n            </TouchableOpacity>\r\n            <Text style={{ color: palette.muted, fontSize: typography.small, marginTop: spacing(2) }}>\r\n              Built for professionals who don’t miss details.\r\n            </Text>\r\n            <TouchableOpacity\r\n              onPress={() => navigation.navigate('Register')}\r\n              accessibilityRole=\"button\"\r\n              style={{ marginTop: spacing(2), alignItems: 'center' }}\r\n            >\r\n              <Text style={{ color: palette.primaryStrong, fontWeight: '600' }}>Need an account? Register</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </SurfaceCard>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nfunction RegisterScreen({ navigation }) {\r\n  const [fullName, setFullName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirm, setConfirm] = useState('');\r\n  const [busy, setBusy] = useState(false);\r\n\r\n  const submit = async () => {\r\n    const trimmedEmail = email.trim().toLowerCase();\r\n    if (!trimmedEmail) {\r\n      Alert.alert('Missing email', 'Enter your work email to create an account.');\r\n      return;\r\n    }\r\n    if (!password || password.length < 6) {\r\n      Alert.alert('Password too short', 'Use at least 6 characters so your account stays secure.');\r\n      return;\r\n    }\r\n    if (password !== confirm) {\r\n      Alert.alert('Passwords do not match', 'Double-check your password confirmation.');\r\n      return;\r\n    }\r\n    try {\r\n      setBusy(true);\r\n      await api('/auth/register', 'POST', {\r\n        email: trimmedEmail,\r\n        password,\r\n        fullName: fullName.trim() || undefined,\r\n        role: 'ADMIN',\r\n      });\r\n      Alert.alert('Account created', 'Sign in with your new credentials.');\r\n      navigation.goBack();\r\n    } catch (e) {\r\n      Alert.alert('Error', e.message || 'Unable to register. Try again or contact support.');\r\n    } finally {\r\n      setBusy(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex: 1, backgroundColor: palette.background }}>\r\n      <ScrollView contentContainerStyle={{ flexGrow: 1, justifyContent: 'center', padding: spacing(3) }}>\r\n        <SurfaceCard style={{ padding: spacing(3), borderRadius: 20 }}>\r\n          <View style={{ width: spacing(5), height: spacing(5), borderRadius: 14, backgroundColor: palette.ink, alignItems: 'center', justifyContent: 'center', marginBottom: spacing(2) }}>\r\n            <Text style={{ color: '#FFFFFF', fontWeight: '800', fontSize: typography.h2 }}>PT</Text>\r\n          </View>\r\n          <Text style={{ color: palette.ink, fontSize: 26, fontWeight: '800', lineHeight: lineHeightFor(26) }}>\r\n            Create your workspace\r\n          </Text>\r\n          <Text style={{ color: palette.muted, marginTop: spacing(1), lineHeight: lineHeightFor(typography.body) }}>\r\n            We’ll set up Precision Tracker so your crew can hit the ground running.\r\n          </Text>\r\n\r\n          <View style={{ marginTop: spacing(3) }}>\r\n            <FormInput\r\n              placeholder=\"Full name\"\r\n              value={fullName}\r\n              onChangeText={setFullName}\r\n            />\r\n            <FormInput\r\n              placeholder=\"Work email\"\r\n              autoCapitalize=\"none\"\r\n              autoCorrect={false}\r\n              keyboardType=\"email-address\"\r\n              value={email}\r\n              onChangeText={setEmail}\r\n            />\r\n            <FormInput\r\n              placeholder=\"Password (min 6 characters)\"\r\n              secureTextEntry\r\n              value={password}\r\n              onChangeText={setPassword}\r\n            />\r\n            <FormInput\r\n              placeholder=\"Confirm password\"\r\n              secureTextEntry\r\n              value={confirm}\r\n              onChangeText={setConfirm}\r\n            />\r\n            <TouchableOpacity\r\n              onPress={submit}\r\n              activeOpacity={0.85}\r\n              disabled={busy}\r\n              style={{\r\n                backgroundColor: palette.primary,\r\n                paddingVertical: spacing(2),\r\n                borderRadius: 12,\r\n                alignItems: 'center',\r\n                marginTop: spacing(1),\r\n                opacity: busy ? 0.7 : 1,\r\n              }}\r\n            >\r\n              <Text style={{ color: '#FFFFFF', fontWeight: '700', fontSize: typography.body }}>\r\n                {busy ? 'Creating account…' : 'Register'}\r\n              </Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n              onPress={() => navigation.goBack()}\r\n              accessibilityRole=\"button\"\r\n              style={{ marginTop: spacing(2), alignItems: 'center' }}\r\n            >\r\n              <Text style={{ color: palette.muted, fontWeight: '600' }}>Back to sign in</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </SurfaceCard>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\n\r\nexport default function App(){\r\n  const [token, setToken] = useState(null);\r\n  const [user, setUser] = useState(null);\r\n  const [booting, setBooting] = useState(true);\r\n  const navigationRef = useRef(null);\r\n  const [currentRoute, setCurrentRoute] = useState('Dashboard');\r\n  const { width } = useWindowDimensions();\r\n  const isCompactLayout = Platform.OS !== 'web' ? true : width < 768;\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    (async () => {\r\n      try {\r\n          const [tok, usr] = await Promise.all([\r\n            SecureStore.getItemAsync('auth_token'),\r\n            SecureStore.getItemAsync('auth_user')\r\n        ]);\r\n        if (mounted && tok) {\r\n          setToken(tok);\r\n          if (usr) {\r\n            const parsed = JSON.parse(usr);\r\n            parsed.role = normalizeRole(parsed.role);\r\n            setUser(parsed);\r\n          }\r\n        }\r\n      } catch {}\r\n      finally { if (mounted) setBooting(false); }\r\n    })();\r\n    return () => { mounted = false; };\r\n  }, []);\r\n\r\n  const authValue = {\r\n    token,\r\n    setToken: (t) => {\r\n      setToken(t);\r\n      if (!t) { try { SecureStore.deleteItemAsync('auth_token'); SecureStore.deleteItemAsync('auth_user'); } catch {} }\r\n    },\r\n    user,\r\n    setUser\r\n  };\r\n\r\n  const updateCurrentRoute = useCallback(() => {\r\n    if (!navigationRef.current) return;\r\n    const current = navigationRef.current.getCurrentRoute();\r\n    if (!current) return;\r\n    let name = current.name;\r\n    let state = current.state;\r\n    while (state && typeof state.index === 'number' && state.routes && state.routes[state.index]) {\r\n      const nested = state.routes[state.index];\r\n      name = nested.name;\r\n      state = nested.state;\r\n    }\r\n    if (name) setCurrentRoute(name);\r\n  }, []);\r\n\r\n  const handleNavigate = useCallback((routeName) => {\r\n    if (!navigationRef.current) return;\r\n    const tabRoutes = ['Dashboard','Leads','Jobs','Invoices','Schedule','Profile'];\r\n    if (tabRoutes.includes(routeName)) {\r\n      navigationRef.current.navigate('Tabs', { screen: routeName });\r\n    } else {\r\n      navigationRef.current.navigate(routeName);\r\n    }\r\n  }, []);\r\n\r\n  if (booting) {\r\n    return (\r\n      <SafeAreaView style={{ flex:1, alignItems:'center', justifyContent:'center' }}>\r\n        <Text>Loading...</Text>\r\n      </SafeAreaView>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={authValue}>\r\n      <View style={{ flex:1, backgroundColor: palette.background }}>\r\n        {isCompactLayout && token ? (\r\n          <MobileHeader\r\n            currentRoute={currentRoute}\r\n            onNavigate={handleNavigate}\r\n            isAdmin={(user?.role || '').toUpperCase() === 'ADMIN'}\r\n          />\r\n        ) : null}\r\n        <View style={{ flex:1 }}>\r\n            <NavigationContainer\r\n              ref={navigationRef}\r\n              onReady={updateCurrentRoute}\r\n              onStateChange={updateCurrentRoute}\r\n            >\r\n              {!token ? (\r\n                <Stack.Navigator>\r\n                  <Stack.Screen name=\"Login\" component={LoginScreen} options={{ headerShown: false }} />\r\n                  <Stack.Screen name=\"Register\" component={RegisterScreen} options={{ title: 'Create account' }} />\r\n                </Stack.Navigator>\r\n              ) : (\r\n                <Stack.Navigator>\r\n                  <Stack.Screen name=\"Tabs\" component={TabsNav} options={{ headerShown:false }} />\r\n                <Stack.Screen name=\"NewLead\" component={NewLeadScreen} options={{ title:'New Lead' }} />\r\n                <Stack.Screen name=\"EstimateEditor\" component={EstimateEditorScreen} options={{ title:'Estimate' }} />\r\n                <Stack.Screen name=\"Signature\" component={SignatureScreen} options={{ title:'Signature' }} />\r\n                <Stack.Screen name=\"UsersAdmin\" component={UsersAdminScreen} options={{ title:'Users (Admin)' }} />\r\n                <Stack.Screen name=\"JobDetail\" component={JobDetailScreen} options={{ title:'Job' }} />\r\n              </Stack.Navigator>\r\n            )}\r\n          </NavigationContainer>\r\n        </View>\r\n      </View>\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}